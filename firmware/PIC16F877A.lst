

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu May 26 02:21:02 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text22_split_1,local,class=CODE,merge=1,delta=2
    54                           	psect	text22_split_2,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0088                     	;# 
   396  0089                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  008E                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0098                     	;# 
   405  0099                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  009F                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  010F                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000E                     	;# 
   432  000F                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0014                     	;# 
   438  0015                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001D                     	;# 
   449  001E                     	;# 
   450  001F                     	;# 
   451  0081                     	;# 
   452  0085                     	;# 
   453  0086                     	;# 
   454  0087                     	;# 
   455  0088                     	;# 
   456  0089                     	;# 
   457  008C                     	;# 
   458  008D                     	;# 
   459  008E                     	;# 
   460  0091                     	;# 
   461  0092                     	;# 
   462  0093                     	;# 
   463  0094                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  009F                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  0000                     	;# 
   477  0001                     	;# 
   478  0002                     	;# 
   479  0003                     	;# 
   480  0004                     	;# 
   481  0005                     	;# 
   482  0006                     	;# 
   483  0007                     	;# 
   484  0008                     	;# 
   485  0009                     	;# 
   486  000A                     	;# 
   487  000B                     	;# 
   488  000C                     	;# 
   489  000D                     	;# 
   490  000E                     	;# 
   491  000E                     	;# 
   492  000F                     	;# 
   493  0010                     	;# 
   494  0011                     	;# 
   495  0012                     	;# 
   496  0013                     	;# 
   497  0014                     	;# 
   498  0015                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0017                     	;# 
   502  0018                     	;# 
   503  0019                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001D                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  0081                     	;# 
   512  0085                     	;# 
   513  0086                     	;# 
   514  0087                     	;# 
   515  0088                     	;# 
   516  0089                     	;# 
   517  008C                     	;# 
   518  008D                     	;# 
   519  008E                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0094                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  018C                     	;# 
   535  018D                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  000E                     	;# 
   552  000F                     	;# 
   553  0010                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0015                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001B                     	;# 
   567  001C                     	;# 
   568  001D                     	;# 
   569  001E                     	;# 
   570  001F                     	;# 
   571  0081                     	;# 
   572  0085                     	;# 
   573  0086                     	;# 
   574  0087                     	;# 
   575  0088                     	;# 
   576  0089                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009C                     	;# 
   587  009D                     	;# 
   588  009E                     	;# 
   589  009F                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  010F                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596                           
   597                           	psect	idataBANK2
   598  1F2B                     __pidataBANK2:	
   599                           
   600                           ;initializer for _ligado
   601  1F2B  3401               	retlw	1
   602  1F2C  3400               	retlw	0
   603                           
   604                           ;initializer for _setpoint
   605  1F2D  34EC               	retlw	236
   606  1F2E  340C               	retlw	12
   607                           
   608                           	psect	strings
   609  1000                     __pstrings:	
   610  1000                     stringtab:	
   611  1000                     __stringtab:	
   612                           
   613                           ;	String table - string pointers are 1 byte each
   614  1000  1BFF               	btfsc	btemp+1,7
   615  1001  280A               	ljmp	stringcode
   616  1002  1383               	bcf	3,7
   617  1003  187F               	btfsc	btemp+1,0
   618  1004  1783               	bsf	3,7
   619  1005  0800               	movf	0,w
   620  1006  0A84               	incf	4,f
   621  1007  1903               	skipnz
   622  1008  0AFF               	incf	btemp+1,f
   623  1009  0008               	return
   624  100A                     stringcode:	
   625  100A                     stringdir:	
   626  100A  3010               	movlw	high stringdir
   627  100B  008A               	movwf	10
   628  100C  0804               	movf	4,w
   629  100D  0A84               	incf	4,f
   630  100E  0782               	addwf	2,f
   631  100F                     __stringbase:	
   632  100F  3400               	retlw	0
   633  1010                     __end_of__stringtab:	
   634  1010                     _dpowers:	
   635  1010  3401               	retlw	1
   636  1011  3400               	retlw	0
   637  1012  340A               	retlw	10
   638  1013  3400               	retlw	0
   639  1014  3464               	retlw	100
   640  1015  3400               	retlw	0
   641  1016  34E8               	retlw	232
   642  1017  3403               	retlw	3
   643  1018  3410               	retlw	16
   644  1019  3427               	retlw	39
   645  101A                     __end_of_dpowers:	
   646  000E                     _TMR1	set	14
   647  001F                     _ADCON0bits	set	31
   648  001E                     _ADRESH	set	30
   649  0017                     _CCP1CON	set	23
   650  0017                     _CCP1CONbits	set	23
   651  001D                     _CCP2CON	set	29
   652  001D                     _CCP2CONbits	set	29
   653  0015                     _CCPR1L	set	21
   654  001B                     _CCPR2L	set	27
   655  000B                     _INTCONbits	set	11
   656  000C                     _PIR1bits	set	12
   657  000D                     _PIR2bits	set	13
   658  0005                     _PORTA	set	5
   659  0006                     _PORTB	set	6
   660  0006                     _PORTBbits	set	6
   661  0007                     _PORTC	set	7
   662  0008                     _PORTD	set	8
   663  0009                     _PORTE	set	9
   664  0009                     _PORTEbits	set	9
   665  001A                     _RCREG	set	26
   666  0018                     _RCSTAbits	set	24
   667  0013                     _SSPBUF	set	19
   668  0014                     _SSPCONbits	set	20
   669  0010                     _T1CON	set	16
   670  0010                     _T1CONbits	set	16
   671  0012                     _T2CONbits	set	18
   672  0001                     _TMR0	set	1
   673  000F                     _TMR1H	set	15
   674  000E                     _TMR1L	set	14
   675  0019                     _TXREG	set	25
   676  00C1                     _OERR	set	193
   677  009F                     _ADCON1bits	set	159
   678  009E                     _ADRESL	set	158
   679  0081                     _OPTION_REGbits	set	129
   680  008C                     _PIE1bits	set	140
   681  008D                     _PIE2bits	set	141
   682  0092                     _PR2	set	146
   683  0099                     _SPBRG	set	153
   684  0093                     _SSPADD	set	147
   685  0091                     _SSPCON2	set	145
   686  0091                     _SSPCON2bits	set	145
   687  0094                     _SSPSTATbits	set	148
   688  0085                     _TRISA	set	133
   689  0086                     _TRISB	set	134
   690  0087                     _TRISC	set	135
   691  0088                     _TRISD	set	136
   692  0089                     _TRISE	set	137
   693  0098                     _TXSTAbits	set	152
   694  010D                     _EEADR	set	269
   695  010C                     _EEDATA	set	268
   696  018C                     _EECON1bits	set	396
   697  018D                     _EECON2	set	397
   698  101A                     __stringdata:	
   699  101A                     STR_4:	
   700  101A  340A               	retlw	10
   701  101B  340D               	retlw	13
   702  101C  3420               	retlw	32	;' '
   703  101D  342D               	retlw	45	;'-'
   704  101E  342D               	retlw	45	;'-'
   705  101F  342D               	retlw	45	;'-'
   706  1020  342D               	retlw	45	;'-'
   707  1021  342D               	retlw	45	;'-'
   708  1022  342D               	retlw	45	;'-'
   709  1023  342D               	retlw	45	;'-'
   710  1024  3420               	retlw	32	;' '
   711  1025  3445               	retlw	69	;'E'
   712  1026  3453               	retlw	83	;'S'
   713  1027  3454               	retlw	84	;'T'
   714  1028  344F               	retlw	79	;'O'
   715  1029  3455               	retlw	85	;'U'
   716  102A  3452               	retlw	82	;'R'
   717  102B  344F               	retlw	79	;'O'
   718  102C  3420               	retlw	32	;' '
   719  102D  3444               	retlw	68	;'D'
   720  102E  3445               	retlw	69	;'E'
   721  102F  3420               	retlw	32	;' '
   722  1030  3450               	retlw	80	;'P'
   723  1031  3449               	retlw	73	;'I'
   724  1032  344C               	retlw	76	;'L'
   725  1033  3448               	retlw	72	;'H'
   726  1034  3441               	retlw	65	;'A'
   727  1035  3420               	retlw	32	;' '
   728  1036  342D               	retlw	45	;'-'
   729  1037  342D               	retlw	45	;'-'
   730  1038  342D               	retlw	45	;'-'
   731  1039  342D               	retlw	45	;'-'
   732  103A  342D               	retlw	45	;'-'
   733  103B  342D               	retlw	45	;'-'
   734  103C  342D               	retlw	45	;'-'
   735  103D  3420               	retlw	32	;' '
   736  103E  340A               	retlw	10
   737  103F  340D               	retlw	13
   738  1040  3420               	retlw	32	;' '
   739  1041  3400               	retlw	0
   740  1042                     STR_1:	
   741  1042  3449               	retlw	73	;'I'
   742  1043  346E               	retlw	110	;'n'
   743  1044  3469               	retlw	105	;'i'
   744  1045  3463               	retlw	99	;'c'
   745  1046  3469               	retlw	105	;'i'
   746  1047  3461               	retlw	97	;'a'
   747  1048  346C               	retlw	108	;'l'
   748  1049  3469               	retlw	105	;'i'
   749  104A  347A               	retlw	122	;'z'
   750  104B  3461               	retlw	97	;'a'
   751  104C  346E               	retlw	110	;'n'
   752  104D  3464               	retlw	100	;'d'
   753  104E  346F               	retlw	111	;'o'
   754  104F  342E               	retlw	46	;'.'
   755  1050  342E               	retlw	46	;'.'
   756  1051  342E               	retlw	46	;'.'
   757  1052  3400               	retlw	0
   758  1053                     STR_3:	
   759  1053  3452               	retlw	82	;'R'
   760  1054  3450               	retlw	80	;'P'
   761  1055  344D               	retlw	77	;'M'
   762  1056  343A               	retlw	58	;':'
   763  1057  3420               	retlw	32	;' '
   764  1058  3400               	retlw	0
   765  1059                     STR_2:	
   766  1059  3425               	retlw	37	;'%'
   767  105A  3430               	retlw	48	;'0'
   768  105B  3434               	retlw	52	;'4'
   769  105C  3464               	retlw	100	;'d'
   770  105D  3400               	retlw	0
   771  105E                     __end_of__stringdata:	
   772                           
   773                           ; #config settings
   774  0000                     
   775                           	psect	cinit
   776  0019                     start_initialization:	
   777  0019                     __initialization:	
   778                           
   779                           ; Clear objects allocated to BANK0
   780  0019  01EE               	clrf	__pbssBANK0& (0+127)
   781  001A  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   782                           
   783                           ; Clear objects allocated to BANK1
   784  001B  1683               	bsf	3,5	;RP0=1, select bank1
   785  001C  1303               	bcf	3,6	;RP1=0, select bank1
   786  001D  01EE               	clrf	__pbssBANK1& (0+127)
   787  001E  01EF               	clrf	(__pbssBANK1+1)& (0+127)
   788                           
   789                           ; Clear objects allocated to BANK2
   790  001F  1783               	bsf	3,7	;select IRP bank2
   791  0020  3038               	movlw	low __pbssBANK2
   792  0021  0084               	movwf	4
   793  0022  3053               	movlw	low (__pbssBANK2+27)
   794  0023  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   795                           
   796                           ; Initialize objects allocated to BANK2
   797  0028  1283               	bcf	3,5	;RP0=0, select bank2
   798  0029  1703               	bsf	3,6	;RP1=1, select bank2
   799  002A  160A  158A  272B  120A  118A  	fcall	__pidataBANK2	;fetch initializer
   800  002F  00D3               	movwf	__pdataBANK2& (0+127)
   801  0030  160A  158A  272C  120A  118A  	fcall	__pidataBANK2+1	;fetch initializer
   802  0035  00D4               	movwf	(__pdataBANK2+1)& (0+127)
   803  0036  160A  158A  272D  120A  118A  	fcall	__pidataBANK2+2	;fetch initializer
   804  003B  00D5               	movwf	(__pdataBANK2+2)& (0+127)
   805  003C  160A  158A  272E   	fcall	__pidataBANK2+3	;fetch initializer
   806  003F  00D6               	movwf	(__pdataBANK2+3)& (0+127)
   807  0040                     end_of_initialization:	
   808                           ;End of C runtime variable initialization code
   809                           
   810  0040                     __end_of__initialization:	
   811  0040  0183               	clrf	3
   812  0041  160A  118A  2E11   	ljmp	_main	;jump to C main() function
   813                           
   814                           	psect	bssBANK0
   815  006E                     __pbssBANK0:	
   816  006E                     _erro_atual:	
   817  006E                     	ds	2
   818                           
   819                           	psect	bssBANK1
   820  00EE                     __pbssBANK1:	
   821  00EE                     _rpm:	
   822  00EE                     	ds	2
   823                           
   824                           	psect	bssBANK2
   825  0138                     __pbssBANK2:	
   826  0138                     _temp_lida:	
   827  0138                     	ds	3
   828  013B                     _ADCResult:	
   829  013B                     	ds	2
   830  013D                     _contador_rb6:	
   831  013D                     	ds	2
   832  013F                     _contagens_tm0:	
   833  013F                     	ds	2
   834  0141                     _pulsos:	
   835  0141                     	ds	2
   836  0143                     _receiveIndex:	
   837  0143                     	ds	2
   838  0145                     _status:	
   839  0145                     	ds	2
   840  0147                     _tempo_rb6:	
   841  0147                     	ds	2
   842  0149                     _display:	
   843  0149                     	ds	10
   844                           
   845                           	psect	dataBANK2
   846  0153                     __pdataBANK2:	
   847  0153                     _ligado:	
   848  0153                     	ds	2
   849  0155                     _setpoint:	
   850  0155                     	ds	2
   851                           
   852                           	psect	clrtext
   853  07F8                     clear_ram0:	
   854                           ;	Called with FSR containing the base address, and
   855                           ;	W with the last address+1
   856                           
   857  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   858  07F9                     clrloop0:	
   859  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   860  07FA  0A84               	incf	4,f	;increment pointer
   861  07FB  0604               	xorwf	4,w	;XOR with final address
   862  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   863  07FD  3400               	retlw	0	;all done for this memory range, return
   864  07FE  0604               	xorwf	4,w	;XOR again to restore value
   865  07FF  2FF9               	goto	clrloop0	;do the next byte
   866                           
   867                           	psect	cstackBANK3
   868  0190                     __pcstackBANK3:	
   869  0190                     _fuzzy$237:	
   870                           
   871                           ; 3 bytes @ 0x0
   872  0190                     	ds	3
   873  0193                     _fuzzy$238:	
   874                           
   875                           ; 3 bytes @ 0x3
   876  0193                     	ds	3
   877  0196                     _fuzzy$239:	
   878                           
   879                           ; 3 bytes @ 0x6
   880  0196                     	ds	3
   881  0199                     _fuzzy$240:	
   882                           
   883                           ; 3 bytes @ 0x9
   884  0199                     	ds	3
   885  019C                     _fuzzy$241:	
   886                           
   887                           ; 3 bytes @ 0xC
   888  019C                     	ds	3
   889  019F                     _fuzzy$242:	
   890                           
   891                           ; 3 bytes @ 0xF
   892  019F                     	ds	3
   893  01A2                     _fuzzy$243:	
   894                           
   895                           ; 3 bytes @ 0x12
   896  01A2                     	ds	3
   897  01A5                     _fuzzy$244:	
   898                           
   899                           ; 3 bytes @ 0x15
   900  01A5                     	ds	3
   901  01A8                     _fuzzy$245:	
   902                           
   903                           ; 3 bytes @ 0x18
   904  01A8                     	ds	3
   905  01AB                     _fuzzy$246:	
   906                           
   907                           ; 3 bytes @ 0x1B
   908  01AB                     	ds	3
   909  01AE                     _fuzzy$247:	
   910                           
   911                           ; 3 bytes @ 0x1E
   912  01AE                     	ds	3
   913  01B1                     _fuzzy$248:	
   914                           
   915                           ; 3 bytes @ 0x21
   916  01B1                     	ds	3
   917  01B4                     _fuzzy$249:	
   918                           
   919                           ; 3 bytes @ 0x24
   920  01B4                     	ds	3
   921  01B7                     _fuzzy$250:	
   922                           
   923                           ; 3 bytes @ 0x27
   924  01B7                     	ds	3
   925  01BA                     _fuzzy$251:	
   926                           
   927                           ; 3 bytes @ 0x2A
   928  01BA                     	ds	3
   929  01BD                     _fuzzy$252:	
   930                           
   931                           ; 3 bytes @ 0x2D
   932  01BD                     	ds	3
   933  01C0                     _fuzzy$253:	
   934                           
   935                           ; 3 bytes @ 0x30
   936  01C0                     	ds	3
   937  01C3                     _fuzzy$254:	
   938                           
   939                           ; 3 bytes @ 0x33
   940  01C3                     	ds	3
   941  01C6                     _fuzzy$255:	
   942                           
   943                           ; 3 bytes @ 0x36
   944  01C6                     	ds	3
   945  01C9                     _fuzzy$256:	
   946                           
   947                           ; 3 bytes @ 0x39
   948  01C9                     	ds	3
   949  01CC                     _fuzzy$257:	
   950                           
   951                           ; 3 bytes @ 0x3C
   952  01CC                     	ds	3
   953  01CF                     _fuzzy$258:	
   954                           
   955                           ; 3 bytes @ 0x3F
   956  01CF                     	ds	3
   957  01D2                     _fuzzy$259:	
   958                           
   959                           ; 3 bytes @ 0x42
   960  01D2                     	ds	3
   961  01D5                     _fuzzy$260:	
   962                           
   963                           ; 3 bytes @ 0x45
   964  01D5                     	ds	3
   965  01D8                     _fuzzy$261:	
   966                           
   967                           ; 3 bytes @ 0x48
   968  01D8                     	ds	3
   969  01DB                     _fuzzy$262:	
   970                           
   971                           ; 3 bytes @ 0x4B
   972  01DB                     	ds	3
   973  01DE                     _fuzzy$263:	
   974                           
   975                           ; 3 bytes @ 0x4E
   976  01DE                     	ds	3
   977  01E1                     fuzzy@aceleraM:	
   978                           
   979                           ; 3 bytes @ 0x51
   980  01E1                     	ds	3
   981  01E4                     fuzzy@acelera:	
   982                           
   983                           ; 3 bytes @ 0x54
   984  01E4                     	ds	3
   985  01E7                     fuzzy@mantem:	
   986                           
   987                           ; 3 bytes @ 0x57
   988  01E7                     	ds	3
   989  01EA                     fuzzy@freia:	
   990                           
   991                           ; 3 bytes @ 0x5A
   992  01EA                     	ds	3
   993  01ED                     fuzzy@freiaM:	
   994                           
   995                           ; 3 bytes @ 0x5D
   996  01ED                     	ds	3
   997                           
   998                           	psect	cstackBANK2
   999  0110                     __pcstackBANK2:	
  1000  0110                     ??_ISR:	
  1001                           
  1002                           ; 0 bytes @ 0x0
  1003  0110                     	ds	6
  1004  0116                     ?_PWM_DutyCycle2:	
  1005  0116                     ??_TIMER0_Set:	
  1006                           ; 0 bytes @ 0x6
  1007                           
  1008  0116                     ??_TIMER0_Init:	
  1009                           ; 0 bytes @ 0x6
  1010                           
  1011  0116                     ??_ADC_Init:	
  1012                           ; 0 bytes @ 0x6
  1013                           
  1014  0116                     ??_PWM_Init:	
  1015                           ; 0 bytes @ 0x6
  1016                           
  1017  0116                     ?_LCD_Cursor:	
  1018                           ; 0 bytes @ 0x6
  1019                           
  1020  0116                     ?_PWM_DutyCycle1:	
  1021                           ; 0 bytes @ 0x6
  1022                           
  1023  0116                     ??_isdigit:	
  1024                           ; 0 bytes @ 0x6
  1025                           
  1026  0116                     ??_LCD_WriteCmd:	
  1027                           ; 0 bytes @ 0x6
  1028                           
  1029  0116                     ??_LCD_WriteData:	
  1030                           ; 0 bytes @ 0x6
  1031                           
  1032  0116                     ?___wmul:	
  1033                           ; 0 bytes @ 0x6
  1034                           
  1035  0116                     ?___lwdiv:	
  1036                           ; 2 bytes @ 0x6
  1037                           
  1038  0116                     ?___aldiv:	
  1039                           ; 2 bytes @ 0x6
  1040                           
  1041  0116                     TIMER0_Set@contagens:	
  1042                           ; 4 bytes @ 0x6
  1043                           
  1044  0116                     LCD_Cursor@Col:	
  1045                           ; 1 bytes @ 0x6
  1046                           
  1047  0116                     _isdigit$1463:	
  1048                           ; 1 bytes @ 0x6
  1049                           
  1050  0116                     PWM_DutyCycle1@valor:	
  1051                           ; 1 bytes @ 0x6
  1052                           
  1053  0116                     PWM_DutyCycle2@valor:	
  1054                           ; 2 bytes @ 0x6
  1055                           
  1056  0116                     ___wmul@multiplier:	
  1057                           ; 2 bytes @ 0x6
  1058                           
  1059  0116                     ___lwdiv@divisor:	
  1060                           ; 2 bytes @ 0x6
  1061                           
  1062  0116                     ___aldiv@divisor:	
  1063                           ; 2 bytes @ 0x6
  1064                           
  1065                           
  1066                           ; 4 bytes @ 0x6
  1067  0116                     	ds	1
  1068  0117                     ??_LCD_Cursor:	
  1069  0117                     LCD_WriteCmd@Byte:	
  1070                           ; 0 bytes @ 0x7
  1071                           
  1072  0117                     LCD_WriteData@Byte:	
  1073                           ; 1 bytes @ 0x7
  1074                           
  1075  0117                     isdigit@c:	
  1076                           ; 1 bytes @ 0x7
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x7
  1080  0117                     	ds	1
  1081  0118                     ??_PWM_DutyCycle2:	
  1082  0118                     ??_LCD_Init:	
  1083                           ; 0 bytes @ 0x8
  1084                           
  1085  0118                     ?_LCD_WriteString:	
  1086                           ; 0 bytes @ 0x8
  1087                           
  1088  0118                     ??_PWM_DutyCycle1:	
  1089                           ; 0 bytes @ 0x8
  1090                           
  1091  0118                     ??_LCD_Clear:	
  1092                           ; 0 bytes @ 0x8
  1093                           
  1094  0118                     LCD_Cursor@Row:	
  1095                           ; 0 bytes @ 0x8
  1096                           
  1097  0118                     LCD_WriteString@Str:	
  1098                           ; 1 bytes @ 0x8
  1099                           
  1100  0118                     ___wmul@multiplicand:	
  1101                           ; 2 bytes @ 0x8
  1102                           
  1103  0118                     ___lwdiv@dividend:	
  1104                           ; 2 bytes @ 0x8
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0x8
  1108  0118                     	ds	2
  1109  011A                     ??_LCD_WriteString:	
  1110  011A                     ??___wmul:	
  1111                           ; 0 bytes @ 0xA
  1112                           
  1113  011A                     ??___lwdiv:	
  1114                           ; 0 bytes @ 0xA
  1115                           
  1116  011A                     ___wmul@product:	
  1117                           ; 0 bytes @ 0xA
  1118                           
  1119  011A                     ___aldiv@dividend:	
  1120                           ; 2 bytes @ 0xA
  1121                           
  1122                           
  1123                           ; 4 bytes @ 0xA
  1124  011A                     	ds	1
  1125  011B                     ___lwdiv@quotient:	
  1126                           
  1127                           ; 2 bytes @ 0xB
  1128  011B                     	ds	2
  1129  011D                     ___lwdiv@counter:	
  1130                           
  1131                           ; 1 bytes @ 0xD
  1132  011D                     	ds	1
  1133  011E                     ??___aldiv:	
  1134  011E                     ?___lwmod:	
  1135                           ; 0 bytes @ 0xE
  1136                           
  1137  011E                     ___lwmod@divisor:	
  1138                           ; 2 bytes @ 0xE
  1139                           
  1140                           
  1141                           ; 2 bytes @ 0xE
  1142  011E                     	ds	1
  1143  011F                     ___aldiv@counter:	
  1144                           
  1145                           ; 1 bytes @ 0xF
  1146  011F                     	ds	1
  1147  0120                     ___aldiv@sign:	
  1148  0120                     ___lwmod@dividend:	
  1149                           ; 1 bytes @ 0x10
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0x10
  1153  0120                     	ds	1
  1154  0121                     ___aldiv@quotient:	
  1155                           
  1156                           ; 4 bytes @ 0x11
  1157  0121                     	ds	1
  1158  0122                     ??___lwmod:	
  1159                           
  1160                           ; 0 bytes @ 0x12
  1161  0122                     	ds	1
  1162  0123                     ___lwmod@counter:	
  1163                           
  1164                           ; 1 bytes @ 0x13
  1165  0123                     	ds	1
  1166  0124                     ?_sprintf:	
  1167  0124                     sprintf@f:	
  1168                           ; 2 bytes @ 0x14
  1169                           
  1170                           
  1171                           ; 1 bytes @ 0x14
  1172  0124                     	ds	1
  1173  0125                     ?_USART_Init:	
  1174  0125                     USART_Init@BaudRate:	
  1175                           ; 0 bytes @ 0x15
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x15
  1179  0125                     	ds	2
  1180  0127                     ??_sprintf:	
  1181                           
  1182                           ; 0 bytes @ 0x17
  1183  0127                     	ds	2
  1184  0129                     ??_USART_Init:	
  1185                           
  1186                           ; 0 bytes @ 0x19
  1187  0129                     	ds	1
  1188  012A                     sprintf@ap:	
  1189                           
  1190                           ; 1 bytes @ 0x1A
  1191  012A                     	ds	1
  1192  012B                     sprintf@prec:	
  1193                           
  1194                           ; 1 bytes @ 0x1B
  1195  012B                     	ds	1
  1196  012C                     sprintf@_val:	
  1197                           
  1198                           ; 4 bytes @ 0x1C
  1199  012C                     	ds	4
  1200  0130                     sprintf@flag:	
  1201                           
  1202                           ; 1 bytes @ 0x20
  1203  0130                     	ds	1
  1204  0131                     sprintf@width:	
  1205                           
  1206                           ; 2 bytes @ 0x21
  1207  0131                     	ds	2
  1208  0133                     sprintf@sp:	
  1209                           
  1210                           ; 1 bytes @ 0x23
  1211  0133                     	ds	1
  1212  0134                     sprintf@c:	
  1213                           
  1214                           ; 1 bytes @ 0x24
  1215  0134                     	ds	1
  1216  0135                     ??_main:	
  1217                           
  1218                           ; 0 bytes @ 0x25
  1219  0135                     	ds	3
  1220                           
  1221                           	psect	cstackBANK1
  1222  00A0                     __pcstackBANK1:	
  1223  00A0                     _fuzzy$211:	
  1224                           
  1225                           ; 3 bytes @ 0x0
  1226  00A0                     	ds	3
  1227  00A3                     _fuzzy$212:	
  1228                           
  1229                           ; 3 bytes @ 0x3
  1230  00A3                     	ds	3
  1231  00A6                     _fuzzy$213:	
  1232                           
  1233                           ; 3 bytes @ 0x6
  1234  00A6                     	ds	3
  1235  00A9                     _fuzzy$214:	
  1236                           
  1237                           ; 3 bytes @ 0x9
  1238  00A9                     	ds	3
  1239  00AC                     _fuzzy$215:	
  1240                           
  1241                           ; 3 bytes @ 0xC
  1242  00AC                     	ds	3
  1243  00AF                     _fuzzy$216:	
  1244                           
  1245                           ; 3 bytes @ 0xF
  1246  00AF                     	ds	3
  1247  00B2                     _fuzzy$217:	
  1248                           
  1249                           ; 3 bytes @ 0x12
  1250  00B2                     	ds	3
  1251  00B5                     _fuzzy$218:	
  1252                           
  1253                           ; 3 bytes @ 0x15
  1254  00B5                     	ds	3
  1255  00B8                     _fuzzy$219:	
  1256                           
  1257                           ; 3 bytes @ 0x18
  1258  00B8                     	ds	3
  1259  00BB                     _fuzzy$220:	
  1260                           
  1261                           ; 3 bytes @ 0x1B
  1262  00BB                     	ds	3
  1263  00BE                     _fuzzy$221:	
  1264                           
  1265                           ; 3 bytes @ 0x1E
  1266  00BE                     	ds	3
  1267  00C1                     _fuzzy$222:	
  1268                           
  1269                           ; 3 bytes @ 0x21
  1270  00C1                     	ds	3
  1271  00C4                     _fuzzy$223:	
  1272                           
  1273                           ; 3 bytes @ 0x24
  1274  00C4                     	ds	3
  1275  00C7                     _fuzzy$224:	
  1276                           
  1277                           ; 3 bytes @ 0x27
  1278  00C7                     	ds	3
  1279  00CA                     _fuzzy$225:	
  1280                           
  1281                           ; 3 bytes @ 0x2A
  1282  00CA                     	ds	3
  1283  00CD                     _fuzzy$226:	
  1284                           
  1285                           ; 3 bytes @ 0x2D
  1286  00CD                     	ds	3
  1287  00D0                     _fuzzy$227:	
  1288                           
  1289                           ; 3 bytes @ 0x30
  1290  00D0                     	ds	3
  1291  00D3                     _fuzzy$228:	
  1292                           
  1293                           ; 3 bytes @ 0x33
  1294  00D3                     	ds	3
  1295  00D6                     _fuzzy$229:	
  1296                           
  1297                           ; 3 bytes @ 0x36
  1298  00D6                     	ds	3
  1299  00D9                     _fuzzy$230:	
  1300                           
  1301                           ; 3 bytes @ 0x39
  1302  00D9                     	ds	3
  1303  00DC                     _fuzzy$231:	
  1304                           
  1305                           ; 3 bytes @ 0x3C
  1306  00DC                     	ds	3
  1307  00DF                     _fuzzy$232:	
  1308                           
  1309                           ; 3 bytes @ 0x3F
  1310  00DF                     	ds	3
  1311  00E2                     _fuzzy$233:	
  1312                           
  1313                           ; 3 bytes @ 0x42
  1314  00E2                     	ds	3
  1315  00E5                     _fuzzy$234:	
  1316                           
  1317                           ; 3 bytes @ 0x45
  1318  00E5                     	ds	3
  1319  00E8                     _fuzzy$235:	
  1320                           
  1321                           ; 3 bytes @ 0x48
  1322  00E8                     	ds	3
  1323  00EB                     _fuzzy$236:	
  1324                           
  1325                           ; 3 bytes @ 0x4B
  1326  00EB                     	ds	3
  1327                           
  1328                           	psect	cstackCOMMON
  1329  0070                     __pcstackCOMMON:	
  1330  0070                     ?_TIMER0_Set:	
  1331  0070                     ?_TIMER0_Init:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_ADC_Init:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_PWM_Init:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_LCD_Init:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ?_LCD_Clear:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?_isdigit:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ?_fuzzy:	
  1350                           ; 1 bit 
  1351                           
  1352  0070                     ?_ISR:	
  1353                           ; 0 bytes @ 0x0
  1354                           
  1355  0070                     ?_main:	
  1356                           ; 0 bytes @ 0x0
  1357                           
  1358  0070                     ?_LCD_WriteCmd:	
  1359                           ; 0 bytes @ 0x0
  1360                           
  1361  0070                     ?_LCD_WriteData:	
  1362                           ; 0 bytes @ 0x0
  1363                           
  1364  0070                     ?___ftge:	
  1365                           ; 0 bytes @ 0x0
  1366                           
  1367  0070                     ?i1_TIMER0_Set:	
  1368                           ; 1 bit 
  1369                           
  1370  0070                     ??i1_TIMER0_Set:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0070                     ?___ftpack:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376  0070                     ?___ftneg:	
  1377                           ; 3 bytes @ 0x0
  1378                           
  1379  0070                     i1TIMER0_Set@contagens:	
  1380                           ; 3 bytes @ 0x0
  1381                           
  1382  0070                     ___ftpack@arg:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ___ftge@ff1:	
  1386                           ; 3 bytes @ 0x0
  1387                           
  1388  0070                     ___ftneg@f1:	
  1389                           ; 3 bytes @ 0x0
  1390                           
  1391                           
  1392                           ; 3 bytes @ 0x0
  1393  0070                     	ds	3
  1394  0073                     ??___ftneg:	
  1395  0073                     ___ftpack@exp:	
  1396                           ; 0 bytes @ 0x3
  1397                           
  1398  0073                     ___ftge@ff2:	
  1399                           ; 1 bytes @ 0x3
  1400                           
  1401                           
  1402                           ; 3 bytes @ 0x3
  1403  0073                     	ds	1
  1404  0074                     ___ftpack@sign:	
  1405                           
  1406                           ; 1 bytes @ 0x4
  1407  0074                     	ds	1
  1408  0075                     ??___ftpack:	
  1409                           
  1410                           ; 0 bytes @ 0x5
  1411  0075                     	ds	1
  1412  0076                     ??___ftge:	
  1413                           
  1414                           ; 0 bytes @ 0x6
  1415  0076                     	ds	2
  1416  0078                     ?___awtoft:	
  1417  0078                     ?___ftadd:	
  1418                           ; 3 bytes @ 0x8
  1419                           
  1420  0078                     ?___lwtoft:	
  1421                           ; 3 bytes @ 0x8
  1422                           
  1423  0078                     ___awtoft@c:	
  1424                           ; 3 bytes @ 0x8
  1425                           
  1426  0078                     ___lwtoft@c:	
  1427                           ; 2 bytes @ 0x8
  1428                           
  1429  0078                     ___ftadd@f1:	
  1430                           ; 2 bytes @ 0x8
  1431                           
  1432                           
  1433                           ; 3 bytes @ 0x8
  1434  0078                     	ds	3
  1435  007B                     ??___awtoft:	
  1436  007B                     ??___lwtoft:	
  1437                           ; 0 bytes @ 0xB
  1438                           
  1439  007B                     ___ftadd@f2:	
  1440                           ; 0 bytes @ 0xB
  1441                           
  1442                           
  1443                           ; 3 bytes @ 0xB
  1444  007B                     	ds	2
  1445  007D                     ___awtoft@sign:	
  1446                           
  1447                           ; 1 bytes @ 0xD
  1448  007D                     	ds	1
  1449  007E                     ??_triangular:	
  1450  007E                     ??_trapezoidal:	
  1451                           ; 0 bytes @ 0xE
  1452                           
  1453  007E                     ??_fuzzy:	
  1454                           ; 0 bytes @ 0xE
  1455                           
  1456                           
  1457                           	psect	cstackBANK0
  1458  0020                     __pcstackBANK0:	
  1459                           ; 0 bytes @ 0xE
  1460                           
  1461  0020                     ??___ftadd:	
  1462                           
  1463                           ; 0 bytes @ 0x0
  1464  0020                     	ds	4
  1465  0024                     ___ftadd@sign:	
  1466                           
  1467                           ; 1 bytes @ 0x4
  1468  0024                     	ds	1
  1469  0025                     ___ftadd@exp2:	
  1470                           
  1471                           ; 1 bytes @ 0x5
  1472  0025                     	ds	1
  1473  0026                     ___ftadd@exp1:	
  1474                           
  1475                           ; 1 bytes @ 0x6
  1476  0026                     	ds	1
  1477  0027                     ?___ftdiv:	
  1478  0027                     ___ftdiv@f2:	
  1479                           ; 3 bytes @ 0x7
  1480                           
  1481                           
  1482                           ; 3 bytes @ 0x7
  1483  0027                     	ds	3
  1484  002A                     ___ftdiv@f1:	
  1485                           
  1486                           ; 3 bytes @ 0xA
  1487  002A                     	ds	3
  1488  002D                     ??___ftdiv:	
  1489                           
  1490                           ; 0 bytes @ 0xD
  1491  002D                     	ds	4
  1492  0031                     ___ftdiv@cntr:	
  1493                           
  1494                           ; 1 bytes @ 0x11
  1495  0031                     	ds	1
  1496  0032                     ___ftdiv@f3:	
  1497                           
  1498                           ; 3 bytes @ 0x12
  1499  0032                     	ds	3
  1500  0035                     ___ftdiv@exp:	
  1501                           
  1502                           ; 1 bytes @ 0x15
  1503  0035                     	ds	1
  1504  0036                     ___ftdiv@sign:	
  1505                           
  1506                           ; 1 bytes @ 0x16
  1507  0036                     	ds	1
  1508  0037                     ?_triangular:	
  1509  0037                     ?_trapezoidal:	
  1510                           ; 3 bytes @ 0x17
  1511                           
  1512  0037                     ?___ftmul:	
  1513                           ; 3 bytes @ 0x17
  1514                           
  1515  0037                     triangular@x:	
  1516                           ; 3 bytes @ 0x17
  1517                           
  1518  0037                     trapezoidal@x:	
  1519                           ; 3 bytes @ 0x17
  1520                           
  1521  0037                     ___ftmul@f1:	
  1522                           ; 3 bytes @ 0x17
  1523                           
  1524                           
  1525                           ; 3 bytes @ 0x17
  1526  0037                     	ds	3
  1527  003A                     triangular@a:	
  1528  003A                     trapezoidal@a:	
  1529                           ; 3 bytes @ 0x1A
  1530                           
  1531  003A                     ___ftmul@f2:	
  1532                           ; 3 bytes @ 0x1A
  1533                           
  1534                           
  1535                           ; 3 bytes @ 0x1A
  1536  003A                     	ds	3
  1537  003D                     ??___ftmul:	
  1538  003D                     triangular@b:	
  1539                           ; 0 bytes @ 0x1D
  1540                           
  1541  003D                     trapezoidal@b:	
  1542                           ; 3 bytes @ 0x1D
  1543                           
  1544                           
  1545                           ; 3 bytes @ 0x1D
  1546  003D                     	ds	3
  1547  0040                     triangular@c:	
  1548  0040                     trapezoidal@c:	
  1549                           ; 3 bytes @ 0x20
  1550                           
  1551                           
  1552                           ; 3 bytes @ 0x20
  1553  0040                     	ds	1
  1554  0041                     ___ftmul@exp:	
  1555                           
  1556                           ; 1 bytes @ 0x21
  1557  0041                     	ds	1
  1558  0042                     ___ftmul@f3_as_product:	
  1559                           
  1560                           ; 3 bytes @ 0x22
  1561  0042                     	ds	1
  1562  0043                     triangular@ua:	
  1563  0043                     trapezoidal@d:	
  1564                           ; 3 bytes @ 0x23
  1565                           
  1566                           
  1567                           ; 3 bytes @ 0x23
  1568  0043                     	ds	2
  1569  0045                     ___ftmul@cntr:	
  1570                           
  1571                           ; 1 bytes @ 0x25
  1572  0045                     	ds	1
  1573  0046                     ___ftmul@sign:	
  1574  0046                     trapezoidal@ua:	
  1575                           ; 1 bytes @ 0x26
  1576                           
  1577                           
  1578                           ; 3 bytes @ 0x26
  1579  0046                     	ds	1
  1580  0047                     ?___fttol:	
  1581  0047                     ___fttol@f1:	
  1582                           ; 4 bytes @ 0x27
  1583                           
  1584                           
  1585                           ; 3 bytes @ 0x27
  1586  0047                     	ds	4
  1587  004B                     ??___fttol:	
  1588                           
  1589                           ; 0 bytes @ 0x2B
  1590  004B                     	ds	4
  1591  004F                     ___fttol@sign1:	
  1592                           
  1593                           ; 1 bytes @ 0x2F
  1594  004F                     	ds	1
  1595  0050                     ___fttol@lval:	
  1596                           
  1597                           ; 4 bytes @ 0x30
  1598  0050                     	ds	4
  1599  0054                     ___fttol@exp1:	
  1600                           
  1601                           ; 1 bytes @ 0x34
  1602  0054                     	ds	1
  1603  0055                     ?i1_PWM_DutyCycle2:	
  1604  0055                     i1PWM_DutyCycle2@valor:	
  1605                           ; 0 bytes @ 0x35
  1606                           
  1607                           
  1608                           ; 2 bytes @ 0x35
  1609  0055                     	ds	2
  1610  0057                     ??i1_PWM_DutyCycle2:	
  1611                           
  1612                           ; 0 bytes @ 0x37
  1613  0057                     	ds	2
  1614  0059                     fuzzy@maior:	
  1615                           
  1616                           ; 3 bytes @ 0x39
  1617  0059                     	ds	3
  1618  005C                     _fuzzy$205:	
  1619                           
  1620                           ; 3 bytes @ 0x3C
  1621  005C                     	ds	3
  1622  005F                     _fuzzy$206:	
  1623                           
  1624                           ; 3 bytes @ 0x3F
  1625  005F                     	ds	3
  1626  0062                     _fuzzy$207:	
  1627                           
  1628                           ; 3 bytes @ 0x42
  1629  0062                     	ds	3
  1630  0065                     _fuzzy$208:	
  1631                           
  1632                           ; 3 bytes @ 0x45
  1633  0065                     	ds	3
  1634  0068                     _fuzzy$209:	
  1635                           
  1636                           ; 3 bytes @ 0x48
  1637  0068                     	ds	3
  1638  006B                     _fuzzy$210:	
  1639                           
  1640                           ; 3 bytes @ 0x4B
  1641  006B                     	ds	3
  1642                           
  1643                           	psect	maintext
  1644  1611                     __pmaintext:	
  1645 ;;
  1646 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1647 ;;
  1648 ;; *************** function _main *****************
  1649 ;; Defined at:
  1650 ;;		line 213 in file "C:\Users\filip\programs\FuzzySI\firmware\main.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;		None               void
  1657 ;; Registers used:
  1658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 17F/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       3
  1667 ;;      Totals:         0       0       0       0       3
  1668 ;;Total ram usage:        3 bytes
  1669 ;; Hardware stack levels required when called:    7
  1670 ;; This function calls:
  1671 ;;		_ADC_Init
  1672 ;;		_LCD_Clear
  1673 ;;		_LCD_Cursor
  1674 ;;		_LCD_Init
  1675 ;;		_LCD_WriteString
  1676 ;;		_PWM_DutyCycle1
  1677 ;;		_PWM_DutyCycle2
  1678 ;;		_PWM_Init
  1679 ;;		_TIMER0_Init
  1680 ;;		_TIMER0_Set
  1681 ;;		_USART_Init
  1682 ;;		_sprintf
  1683 ;; This function is called by:
  1684 ;;		Startup code after reset
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _main
  1690  1611                     _main:	
  1691                           
  1692                           ;main.c: 215: TRISA = 0b00000001;
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1696  1611  3001               	movlw	1
  1697  1612  1683               	bsf	3,5	;RP0=1, select bank1
  1698  1613  1303               	bcf	3,6	;RP1=0, select bank1
  1699  1614  0085               	movwf	5	;volatile
  1700                           
  1701                           ;main.c: 216: PORTA = 0b00000001;
  1702  1615  3001               	movlw	1
  1703  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1704  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1705  1618  0085               	movwf	5	;volatile
  1706                           
  1707                           ;main.c: 217: TRISB = 0b00000000;
  1708  1619  1683               	bsf	3,5	;RP0=1, select bank1
  1709  161A  1303               	bcf	3,6	;RP1=0, select bank1
  1710  161B  0186               	clrf	6	;volatile
  1711                           
  1712                           ;main.c: 218: PORTB = 0b00000000;
  1713  161C  1283               	bcf	3,5	;RP0=0, select bank0
  1714  161D  1303               	bcf	3,6	;RP1=0, select bank0
  1715  161E  0186               	clrf	6	;volatile
  1716                           
  1717                           ;main.c: 219: TRISC = 0b10000001;
  1718  161F  3081               	movlw	129
  1719  1620  1683               	bsf	3,5	;RP0=1, select bank1
  1720  1621  1303               	bcf	3,6	;RP1=0, select bank1
  1721  1622  0087               	movwf	7	;volatile
  1722                           
  1723                           ;main.c: 220: PORTC = 0b11000000;
  1724  1623  30C0               	movlw	192
  1725  1624  1283               	bcf	3,5	;RP0=0, select bank0
  1726  1625  1303               	bcf	3,6	;RP1=0, select bank0
  1727  1626  0087               	movwf	7	;volatile
  1728                           
  1729                           ;main.c: 221: TRISD = 0b00000000;
  1730  1627  1683               	bsf	3,5	;RP0=1, select bank1
  1731  1628  1303               	bcf	3,6	;RP1=0, select bank1
  1732  1629  0188               	clrf	8	;volatile
  1733                           
  1734                           ;main.c: 222: PORTD = 0b00000000;
  1735  162A  1283               	bcf	3,5	;RP0=0, select bank0
  1736  162B  1303               	bcf	3,6	;RP1=0, select bank0
  1737  162C  0188               	clrf	8	;volatile
  1738                           
  1739                           ;main.c: 223: TRISE = 0b00000000;
  1740  162D  1683               	bsf	3,5	;RP0=1, select bank1
  1741  162E  1303               	bcf	3,6	;RP1=0, select bank1
  1742  162F  0189               	clrf	9	;volatile
  1743                           
  1744                           ;main.c: 224: PORTE = 0b00000000;
  1745  1630  1283               	bcf	3,5	;RP0=0, select bank0
  1746  1631  1303               	bcf	3,6	;RP1=0, select bank0
  1747  1632  0189               	clrf	9	;volatile
  1748                           
  1749                           ;main.c: 227: T1CON = 0x03;
  1750  1633  3003               	movlw	3
  1751  1634  0090               	movwf	16	;volatile
  1752                           
  1753                           ;main.c: 228: TMR1L = 0x00;
  1754  1635  018E               	clrf	14	;volatile
  1755                           
  1756                           ;main.c: 229: TMR1H = 0x00;
  1757  1636  018F               	clrf	15	;volatile
  1758                           
  1759                           ;main.c: 232: USART_Init(115200);
  1760  1637  3000               	movlw	0
  1761  1638  1283               	bcf	3,5	;RP0=0, select bank2
  1762  1639  1703               	bsf	3,6	;RP1=1, select bank2
  1763  163A  00A8               	movwf	(USART_Init@BaudRate+3)^(0+256)
  1764  163B  3001               	movlw	1
  1765  163C  00A7               	movwf	(USART_Init@BaudRate+2)^(0+256)
  1766  163D  30C2               	movlw	194
  1767  163E  00A6               	movwf	(USART_Init@BaudRate+1)^(0+256)
  1768  163F  3000               	movlw	0
  1769  1640  00A5               	movwf	USART_Init@BaudRate^(0+256)
  1770  1641  160A  118A  21C1  160A  118A  	fcall	_USART_Init
  1771                           
  1772                           ;main.c: 233: TIMER0_Init();
  1773  1646  160A  158A  2735  160A  118A  	fcall	_TIMER0_Init
  1774                           
  1775                           ;main.c: 234: ADC_Init();
  1776  164B  160A  158A  2750  160A  118A  	fcall	_ADC_Init
  1777                           
  1778                           ;main.c: 235: PWM_Init();
  1779  1650  160A  118A  20A8  160A  118A  	fcall	_PWM_Init
  1780                           
  1781                           ;main.c: 236: LCD_Init();
  1782  1655  160A  118A  22D1  160A  118A  	fcall	_LCD_Init
  1783                           
  1784                           ;main.c: 239: INTCONbits.PEIE = 1;
  1785  165A  170B               	bsf	11,6	;volatile
  1786                           
  1787                           ;main.c: 240: INTCONbits.GIE = 1;
  1788  165B  178B               	bsf	11,7	;volatile
  1789                           
  1790                           ;main.c: 247: LCD_Init();
  1791  165C  160A  118A  22D1  160A  118A  	fcall	_LCD_Init
  1792                           
  1793                           ;main.c: 248: LCD_Cursor(0, 0);
  1794  1661  1283               	bcf	3,5	;RP0=0, select bank2
  1795  1662  1703               	bsf	3,6	;RP1=1, select bank2
  1796  1663  0196               	clrf	LCD_Cursor@Col^(0+256)
  1797  1664  3000               	movlw	0
  1798  1665  160A  158A  27BF  160A  118A  	fcall	_LCD_Cursor
  1799                           
  1800                           ;main.c: 249: LCD_WriteString("Inicializando...");
  1801  166A  3033               	movlw	low (STR_1-__stringbase)
  1802  166B  1283               	bcf	3,5	;RP0=0, select bank2
  1803  166C  1703               	bsf	3,6	;RP1=1, select bank2
  1804  166D  0098               	movwf	LCD_WriteString@Str^(0+256)
  1805  166E  3080               	movlw	128
  1806  166F  0099               	movwf	(LCD_WriteString@Str+1)^(0+256)
  1807  1670  160A  118A  211A  160A  118A  	fcall	_LCD_WriteString
  1808                           
  1809                           ;main.c: 252: PWM_DutyCycle1(0);
  1810  1675  3000               	movlw	0
  1811  1676  1283               	bcf	3,5	;RP0=0, select bank2
  1812  1677  1703               	bsf	3,6	;RP1=1, select bank2
  1813  1678  0096               	movwf	PWM_DutyCycle1@valor^(0+256)
  1814  1679  3000               	movlw	0
  1815  167A  0097               	movwf	(PWM_DutyCycle1@valor^(0+256)+1)
  1816  167B  160A  118A  2066  160A  118A  	fcall	_PWM_DutyCycle1
  1817                           
  1818                           ;main.c: 253: PWM_DutyCycle2(0);
  1819  1680  3000               	movlw	0
  1820  1681  1283               	bcf	3,5	;RP0=0, select bank2
  1821  1682  1703               	bsf	3,6	;RP1=1, select bank2
  1822  1683  0096               	movwf	PWM_DutyCycle2@valor^(0+256)
  1823  1684  3000               	movlw	0
  1824  1685  0097               	movwf	(PWM_DutyCycle2@valor^(0+256)+1)
  1825  1686  160A  118A  2087  160A  118A  	fcall	_PWM_DutyCycle2
  1826                           
  1827                           ;main.c: 256: TIMER0_Set(238);
  1828  168B  30EE               	movlw	238
  1829  168C  120A  158A  2001  160A  118A  	fcall	_TIMER0_Set
  1830                           
  1831                           ;main.c: 259: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1832  1691  3018               	movlw	24
  1833  1692  1283               	bcf	3,5	;RP0=0, select bank2
  1834  1693  1703               	bsf	3,6	;RP1=1, select bank2
  1835  1694  00B7               	movwf	(??_main^(0+256)+2)
  1836  1695  3061               	movlw	97
  1837  1696  00B6               	movwf	(??_main^(0+256)+1)
  1838  1697  306E               	movlw	110
  1839  1698  00B5               	movwf	??_main^(0+256)
  1840  1699                     u4317:	
  1841  1699  0BB5               	decfsz	??_main^(0+256),f
  1842  169A  2E99               	goto	u4317
  1843  169B  0BB6               	decfsz	(??_main^(0+256)+1),f
  1844  169C  2E99               	goto	u4317
  1845  169D  0BB7               	decfsz	(??_main^(0+256)+2),f
  1846  169E  2E99               	goto	u4317
  1847  169F  0000               	nop
  1848  16A0                     l361:	
  1849                           ;main.c: 262: while (1)
  1850                           
  1851                           
  1852                           ;main.c: 263: {
  1853                           ;main.c: 265: sprintf(display, "%04d", rpm);
  1854  16A0  304A               	movlw	(STR_2-__stringbase)& (0+255)
  1855  16A1  1283               	bcf	3,5	;RP0=0, select bank2
  1856  16A2  1703               	bsf	3,6	;RP1=1, select bank2
  1857  16A3  00B5               	movwf	??_main^(0+256)
  1858  16A4  0835               	movf	??_main^(0+256),w
  1859  16A5  00A4               	movwf	sprintf@f^(0+256)
  1860  16A6  1683               	bsf	3,5	;RP0=1, select bank1
  1861  16A7  1303               	bcf	3,6	;RP1=0, select bank1
  1862  16A8  086F               	movf	(_rpm+1)^(0+128),w
  1863  16A9  1283               	bcf	3,5	;RP0=0, select bank2
  1864  16AA  1703               	bsf	3,6	;RP1=1, select bank2
  1865  16AB  01A6               	clrf	((?_sprintf+1)^(0+256)+1)
  1866  16AC  07A6               	addwf	((?_sprintf+1)^(0+256)+1),f
  1867  16AD  1683               	bsf	3,5	;RP0=1, select bank1
  1868  16AE  1303               	bcf	3,6	;RP1=0, select bank1
  1869  16AF  086E               	movf	_rpm^(0+128),w
  1870  16B0  1283               	bcf	3,5	;RP0=0, select bank2
  1871  16B1  1703               	bsf	3,6	;RP1=1, select bank2
  1872  16B2  01A5               	clrf	(?_sprintf^(0+256)+1)
  1873  16B3  07A5               	addwf	(?_sprintf^(0+256)+1),f
  1874  16B4  3049               	movlw	_display& (0+255)
  1875  16B5  120A  158A  238B  160A  118A  	fcall	_sprintf
  1876                           
  1877                           ;main.c: 272: LCD_Clear();
  1878  16BA  160A  118A  20F1  160A  118A  	fcall	_LCD_Clear
  1879                           
  1880                           ;main.c: 273: LCD_Cursor(0, 0);
  1881  16BF  1283               	bcf	3,5	;RP0=0, select bank2
  1882  16C0  1703               	bsf	3,6	;RP1=1, select bank2
  1883  16C1  0196               	clrf	LCD_Cursor@Col^(0+256)
  1884  16C2  3000               	movlw	0
  1885  16C3  160A  158A  27BF  160A  118A  	fcall	_LCD_Cursor
  1886                           
  1887                           ;main.c: 274: LCD_WriteString("RPM: ");
  1888  16C8  3044               	movlw	low (STR_3-__stringbase)
  1889  16C9  1283               	bcf	3,5	;RP0=0, select bank2
  1890  16CA  1703               	bsf	3,6	;RP1=1, select bank2
  1891  16CB  0098               	movwf	LCD_WriteString@Str^(0+256)
  1892  16CC  3080               	movlw	128
  1893  16CD  0099               	movwf	(LCD_WriteString@Str+1)^(0+256)
  1894  16CE  160A  118A  211A  160A  118A  	fcall	_LCD_WriteString
  1895                           
  1896                           ;main.c: 275: LCD_Cursor(0, 6);
  1897  16D3  3006               	movlw	6
  1898  16D4  1283               	bcf	3,5	;RP0=0, select bank2
  1899  16D5  1703               	bsf	3,6	;RP1=1, select bank2
  1900  16D6  00B5               	movwf	??_main^(0+256)
  1901  16D7  0835               	movf	??_main^(0+256),w
  1902  16D8  0096               	movwf	LCD_Cursor@Col^(0+256)
  1903  16D9  3000               	movlw	0
  1904  16DA  160A  158A  27BF  160A  118A  	fcall	_LCD_Cursor
  1905                           
  1906                           ;main.c: 276: LCD_WriteString(display);
  1907  16DF  3049               	movlw	_display& (0+255)
  1908  16E0  1283               	bcf	3,5	;RP0=0, select bank2
  1909  16E1  1703               	bsf	3,6	;RP1=1, select bank2
  1910  16E2  0098               	movwf	LCD_WriteString@Str^(0+256)
  1911  16E3  3001               	movlw	1
  1912  16E4  0099               	movwf	(LCD_WriteString@Str+1)^(0+256)
  1913  16E5  160A  118A  211A  160A  118A  	fcall	_LCD_WriteString
  1914                           
  1915                           ;main.c: 278: _delay((unsigned long)((200)*(18432000/4000.0)));
  1916  16EA  3005               	movlw	5
  1917  16EB  1283               	bcf	3,5	;RP0=0, select bank2
  1918  16EC  1703               	bsf	3,6	;RP1=1, select bank2
  1919  16ED  00B7               	movwf	(??_main^(0+256)+2)
  1920  16EE  30AD               	movlw	173
  1921  16EF  00B6               	movwf	(??_main^(0+256)+1)
  1922  16F0  30E0               	movlw	224
  1923  16F1  00B5               	movwf	??_main^(0+256)
  1924  16F2                     u4327:	
  1925  16F2  0BB5               	decfsz	??_main^(0+256),f
  1926  16F3  2EF2               	goto	u4327
  1927  16F4  0BB6               	decfsz	(??_main^(0+256)+1),f
  1928  16F5  2EF2               	goto	u4327
  1929  16F6  0BB7               	decfsz	(??_main^(0+256)+2),f
  1930  16F7  2EF2               	goto	u4327
  1931  16F8  2EA0               	goto	l361
  1932  16F9                     __end_of_main:	
  1933                           
  1934                           	psect	text1
  1935  0B8B                     __ptext1:	
  1936 ;; *************** function _sprintf *****************
  1937 ;; Defined at:
  1938 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  sp              1    wreg     PTR unsigned char 
  1941 ;;		 -> display(10), 
  1942 ;;  f               1   20[BANK2 ] PTR const unsigned char 
  1943 ;;		 -> STR_2(5), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  sp              1   35[BANK2 ] PTR unsigned char 
  1946 ;;		 -> display(10), 
  1947 ;;  _val            4   28[BANK2 ] struct .
  1948 ;;  width           2   33[BANK2 ] int 
  1949 ;;  c               1   36[BANK2 ] char 
  1950 ;;  flag            1   32[BANK2 ] unsigned char 
  1951 ;;  prec            1   27[BANK2 ] char 
  1952 ;;  ap              1   26[BANK2 ] PTR void [1]
  1953 ;;		 -> ?_sprintf(2), 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  2   20[BANK2 ] int 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         0       0       0       0       3
  1964 ;;      Locals:         0       0       0       0      11
  1965 ;;      Temps:          0       0       0       0       3
  1966 ;;      Totals:         0       0       0       0      17
  1967 ;;Total ram usage:       17 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    6
  1970 ;; This function calls:
  1971 ;;		___lwdiv
  1972 ;;		___lwmod
  1973 ;;		___wmul
  1974 ;;		_isdigit
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _sprintf
  1982  0B8B                     _sprintf:	
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1986                           ;sprintf@sp stored from wreg
  1987  0B8B  1283               	bcf	3,5	;RP0=0, select bank2
  1988  0B8C  1703               	bsf	3,6	;RP1=1, select bank2
  1989  0B8D  00B3               	movwf	sprintf@sp^(0+256)
  1990                           
  1991                           ;doprnt.c: 494: va_list ap;
  1992                           ;doprnt.c: 499: signed char c;
  1993                           ;doprnt.c: 501: int width;
  1994                           ;doprnt.c: 506: signed char prec;
  1995                           ;doprnt.c: 508: unsigned char flag;
  1996                           ;doprnt.c: 527: union {
  1997                           ;doprnt.c: 528: unsigned int _val;
  1998                           ;doprnt.c: 529: struct {
  1999                           ;doprnt.c: 530: const char * _cp;
  2000                           ;doprnt.c: 531: unsigned _len;
  2001                           ;doprnt.c: 532: } _str;
  2002                           ;doprnt.c: 533: } _val;
  2003                           ;doprnt.c: 542: *ap = __va_start();
  2004  0B8E  3025               	movlw	(?_sprintf+1)& (0+255)
  2005  0B8F  00A7               	movwf	??_sprintf^(0+256)
  2006  0B90  0827               	movf	??_sprintf^(0+256),w
  2007  0B91  00AA               	movwf	sprintf@ap^(0+256)
  2008  0B92                     l3429:	
  2009                           ;doprnt.c: 545: while(c = *f++) {
  2010                           
  2011  0B92  3001               	movlw	1
  2012  0B93  1283               	bcf	3,5	;RP0=0, select bank2
  2013  0B94  1703               	bsf	3,6	;RP1=1, select bank2
  2014  0B95  07A4               	addwf	sprintf@f^(0+256),f
  2015  0B96  30FF               	movlw	-1
  2016  0B97  0724               	addwf	sprintf@f^(0+256),w
  2017  0B98  0084               	movwf	4
  2018  0B99  160A  118A  200A  120A  158A  	fcall	stringdir
  2019  0B9E  00A7               	movwf	??_sprintf^(0+256)
  2020  0B9F  0827               	movf	??_sprintf^(0+256),w
  2021  0BA0  00B4               	movwf	sprintf@c^(0+256)
  2022  0BA1  08B4               	movf	sprintf@c^(0+256),f
  2023  0BA2  1903               	btfsc	3,2
  2024  0BA3  2D3B               	goto	l3431
  2025                           
  2026                           ;doprnt.c: 547: if(c != '%')
  2027  0BA4  0834               	movf	sprintf@c^(0+256),w
  2028  0BA5  3A25               	xorlw	37
  2029  0BA6  1903               	skipnz
  2030  0BA7  2BB4               	goto	l3333
  2031                           
  2032                           ;doprnt.c: 549: {
  2033                           ;doprnt.c: 550: ((*sp++ = (c)));
  2034  0BA8  0834               	movf	sprintf@c^(0+256),w
  2035  0BA9  00A7               	movwf	??_sprintf^(0+256)
  2036  0BAA  0833               	movf	sprintf@sp^(0+256),w
  2037  0BAB  0084               	movwf	4
  2038  0BAC  0827               	movf	??_sprintf^(0+256),w
  2039  0BAD  1783               	bsf	3,7	;select IRP bank2
  2040  0BAE  0080               	movwf	0
  2041  0BAF  3001               	movlw	1
  2042  0BB0  00A7               	movwf	??_sprintf^(0+256)
  2043  0BB1  0827               	movf	??_sprintf^(0+256),w
  2044  0BB2  07B3               	addwf	sprintf@sp^(0+256),f
  2045                           
  2046                           ;doprnt.c: 551: continue;
  2047  0BB3  2B92               	goto	l3429
  2048  0BB4                     l3333:	
  2049                           
  2050                           ;doprnt.c: 552: }
  2051                           ;doprnt.c: 555: width = 0;
  2052  0BB4  01B1               	clrf	sprintf@width^(0+256)
  2053  0BB5  01B2               	clrf	(sprintf@width+1)^(0+256)
  2054                           
  2055                           ;doprnt.c: 557: flag = 0;
  2056  0BB6  01B0               	clrf	sprintf@flag^(0+256)
  2057                           
  2058                           ;doprnt.c: 560: switch(*f) {
  2059                           
  2060                           ;doprnt.c: 559: for(;;) {
  2061  0BB7  2BBD               	goto	l3339
  2062  0BB8                     l638:	
  2063                           ;doprnt.c: 588: case '0':
  2064                           
  2065                           
  2066                           ;doprnt.c: 589: flag |= 0x04;
  2067  0BB8  1530               	bsf	sprintf@flag^(0+256),2
  2068                           
  2069                           ;doprnt.c: 590: f++;
  2070  0BB9  3001               	movlw	1
  2071  0BBA  00A7               	movwf	??_sprintf^(0+256)
  2072  0BBB  0827               	movf	??_sprintf^(0+256),w
  2073  0BBC  07A4               	addwf	sprintf@f^(0+256),f
  2074  0BBD                     l3339:	
  2075                           ;doprnt.c: 593: }
  2076                           
  2077                           ;doprnt.c: 591: continue;
  2078                           
  2079  0BBD  0824               	movf	sprintf@f^(0+256),w
  2080  0BBE  0084               	movwf	4
  2081  0BBF  160A  118A  200A  120A  158A  	fcall	stringdir
  2082                           
  2083                           ; Switch size 1, requested type "space"
  2084                           ; Number of cases is 1, Range of values is 48 to 48
  2085                           ; switch strategies available:
  2086                           ; Name         Instructions Cycles
  2087                           ; simple_byte            4     3 (average)
  2088                           ; direct_byte           14    11 (fixed)
  2089                           ; jumptable            263     9 (fixed)
  2090                           ;	Chosen strategy is simple_byte
  2091  0BC4  3A30               	xorlw	48	; case 48
  2092  0BC5  1903               	skipnz
  2093  0BC6  2BB8               	goto	l638
  2094  0BC7  2BC8               	goto	l3341
  2095  0BC8                     l3341:	
  2096                           ;doprnt.c: 595: }
  2097                           
  2098                           ;doprnt.c: 594: break;
  2099                           
  2100                           
  2101                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2102  0BC8  0824               	movf	sprintf@f^(0+256),w
  2103  0BC9  0084               	movwf	4
  2104  0BCA  160A  118A  200A  120A  158A  	fcall	stringdir
  2105  0BCF  160A  158A  2740  120A  158A  	fcall	_isdigit
  2106  0BD4  1C03               	btfss	3,0
  2107  0BD5  2C18               	goto	l3355
  2108                           
  2109                           ;doprnt.c: 607: width = 0;
  2110  0BD6  1283               	bcf	3,5	;RP0=0, select bank2
  2111  0BD7  1703               	bsf	3,6	;RP1=1, select bank2
  2112  0BD8  01B1               	clrf	sprintf@width^(0+256)
  2113  0BD9  01B2               	clrf	(sprintf@width+1)^(0+256)
  2114  0BDA                     l3345:	
  2115                           ;doprnt.c: 608: do {
  2116                           
  2117                           
  2118                           ;doprnt.c: 609: width *= 10;
  2119  0BDA  300A               	movlw	10
  2120  0BDB  1283               	bcf	3,5	;RP0=0, select bank2
  2121  0BDC  1703               	bsf	3,6	;RP1=1, select bank2
  2122  0BDD  0096               	movwf	___wmul@multiplier^(0+256)
  2123  0BDE  3000               	movlw	0
  2124  0BDF  0097               	movwf	(___wmul@multiplier^(0+256)+1)
  2125  0BE0  0832               	movf	(sprintf@width+1)^(0+256),w
  2126  0BE1  0199               	clrf	(___wmul@multiplicand+1)^(0+256)
  2127  0BE2  0799               	addwf	(___wmul@multiplicand+1)^(0+256),f
  2128  0BE3  0831               	movf	sprintf@width^(0+256),w
  2129  0BE4  0198               	clrf	___wmul@multiplicand^(0+256)
  2130  0BE5  0798               	addwf	___wmul@multiplicand^(0+256),f
  2131  0BE6  160A  118A  20CC  120A  158A  	fcall	___wmul
  2132  0BEB  1283               	bcf	3,5	;RP0=0, select bank2
  2133  0BEC  1703               	bsf	3,6	;RP1=1, select bank2
  2134  0BED  0817               	movf	(?___wmul+1)^(0+256),w
  2135  0BEE  01B2               	clrf	(sprintf@width+1)^(0+256)
  2136  0BEF  07B2               	addwf	(sprintf@width+1)^(0+256),f
  2137  0BF0  0816               	movf	?___wmul^(0+256),w
  2138  0BF1  01B1               	clrf	sprintf@width^(0+256)
  2139  0BF2  07B1               	addwf	sprintf@width^(0+256),f
  2140                           
  2141                           ;doprnt.c: 610: width += *f++ - '0';
  2142  0BF3  0824               	movf	sprintf@f^(0+256),w
  2143  0BF4  0084               	movwf	4
  2144  0BF5  160A  118A  200A  120A  158A  	fcall	stringdir
  2145  0BFA  3ED0               	addlw	208
  2146  0BFB  00A7               	movwf	??_sprintf^(0+256)
  2147  0BFC  30FF               	movlw	255
  2148  0BFD  1803               	skipnc
  2149  0BFE  3000               	movlw	0
  2150  0BFF  00A8               	movwf	(??_sprintf^(0+256)+1)
  2151  0C00  0827               	movf	??_sprintf^(0+256),w
  2152  0C01  07B1               	addwf	sprintf@width^(0+256),f
  2153  0C02  1803               	skipnc
  2154  0C03  0AB2               	incf	(sprintf@width+1)^(0+256),f
  2155  0C04  0828               	movf	(??_sprintf+1)^(0+256),w
  2156  0C05  07B2               	addwf	(sprintf@width+1)^(0+256),f
  2157  0C06  3001               	movlw	1
  2158  0C07  00A7               	movwf	??_sprintf^(0+256)
  2159  0C08  0827               	movf	??_sprintf^(0+256),w
  2160  0C09  07A4               	addwf	sprintf@f^(0+256),f
  2161                           
  2162                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2163  0C0A  0824               	movf	sprintf@f^(0+256),w
  2164  0C0B  0084               	movwf	4
  2165  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  2166  0C11  160A  158A  2740  120A  158A  	fcall	_isdigit
  2167  0C16  1803               	btfsc	3,0
  2168  0C17  2BDA               	goto	l3345
  2169  0C18                     l3355:	
  2170                           ;doprnt.c: 831: }
  2171                           
  2172                           ;doprnt.c: 822: continue;
  2173                           
  2174                           ;doprnt.c: 811: default:
  2175                           
  2176                           ;doprnt.c: 707: case 'i':
  2177                           ;doprnt.c: 708: break;
  2178                           
  2179                           ;doprnt.c: 706: case 'd':
  2180                           
  2181                           ;doprnt.c: 647: goto alldone;
  2182                           
  2183                           ;doprnt.c: 646: case 0:
  2184                           
  2185                           ;doprnt.c: 617: }
  2186                           ;doprnt.c: 644: switch(c = *f++) {
  2187                           
  2188  0C18  3001               	movlw	1
  2189  0C19  1283               	bcf	3,5	;RP0=0, select bank2
  2190  0C1A  1703               	bsf	3,6	;RP1=1, select bank2
  2191  0C1B  07A4               	addwf	sprintf@f^(0+256),f
  2192  0C1C  30FF               	movlw	-1
  2193  0C1D  0724               	addwf	sprintf@f^(0+256),w
  2194  0C1E  0084               	movwf	4
  2195  0C1F  160A  118A  200A  120A  158A  	fcall	stringdir
  2196  0C24  00B4               	movwf	sprintf@c^(0+256)
  2197                           
  2198                           ; Switch size 1, requested type "space"
  2199                           ; Number of cases is 3, Range of values is 0 to 105
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           10     6 (average)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is simple_byte
  2205  0C25  3A00               	xorlw	0	; case 0
  2206  0C26  1903               	skipnz
  2207  0C27  2D3B               	goto	l3431
  2208  0C28  3A64               	xorlw	100	; case 100
  2209  0C29  1903               	skipnz
  2210  0C2A  2C2F               	goto	l3357
  2211  0C2B  3A0D               	xorlw	13	; case 105
  2212  0C2C  1903               	skipnz
  2213  0C2D  2C2F               	goto	l3357
  2214  0C2E  2B92               	goto	l3429
  2215  0C2F                     l3357:	
  2216                           
  2217                           ;doprnt.c: 1262: {
  2218                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2219  0C2F  1283               	bcf	3,5	;RP0=0, select bank2
  2220  0C30  1703               	bsf	3,6	;RP1=1, select bank2
  2221  0C31  082A               	movf	sprintf@ap^(0+256),w
  2222  0C32  0084               	movwf	4
  2223  0C33  1783               	bsf	3,7	;select IRP bank2
  2224  0C34  0800               	movf	0,w
  2225  0C35  00AC               	movwf	sprintf@_val^(0+256)
  2226  0C36  0A84               	incf	4,f
  2227  0C37  0800               	movf	0,w
  2228  0C38  00AD               	movwf	(sprintf@_val+1)^(0+256)
  2229  0C39  3002               	movlw	2
  2230  0C3A  00A7               	movwf	??_sprintf^(0+256)
  2231  0C3B  0827               	movf	??_sprintf^(0+256),w
  2232  0C3C  07AA               	addwf	sprintf@ap^(0+256),f
  2233                           
  2234                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2235  0C3D  1FAD               	btfss	(sprintf@_val+1)^(0+256),7
  2236  0C3E  2C48               	goto	l3367
  2237                           
  2238                           ;doprnt.c: 1271: flag |= 0x03;
  2239  0C3F  3003               	movlw	3
  2240  0C40  00A7               	movwf	??_sprintf^(0+256)
  2241  0C41  0827               	movf	??_sprintf^(0+256),w
  2242  0C42  04B0               	iorwf	sprintf@flag^(0+256),f
  2243                           
  2244                           ;doprnt.c: 1272: _val._val = -_val._val;
  2245  0C43  09AC               	comf	sprintf@_val^(0+256),f
  2246  0C44  09AD               	comf	(sprintf@_val+1)^(0+256),f
  2247  0C45  0AAC               	incf	sprintf@_val^(0+256),f
  2248  0C46  1903               	skipnz
  2249  0C47  0AAD               	incf	(sprintf@_val+1)^(0+256),f
  2250  0C48                     l3367:	
  2251                           
  2252                           ;doprnt.c: 1273: }
  2253                           ;doprnt.c: 1275: }
  2254                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2255  0C48  01B4               	clrf	sprintf@c^(0+256)
  2256  0C49  0AB4               	incf	sprintf@c^(0+256),f
  2257  0C4A  0834               	movf	sprintf@c^(0+256),w
  2258  0C4B  3A05               	xorlw	5
  2259  0C4C  1903               	btfsc	3,2
  2260  0C4D  2C6F               	goto	l3379
  2261  0C4E                     l3371:	
  2262                           
  2263                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2264  0C4E  0834               	movf	sprintf@c^(0+256),w
  2265  0C4F  00A7               	movwf	??_sprintf^(0+256)
  2266  0C50  0727               	addwf	??_sprintf^(0+256),w
  2267  0C51  3E01               	addlw	low (_dpowers-__stringbase)
  2268  0C52  0084               	movwf	4
  2269  0C53  160A  118A  200A  120A  158A  	fcall	stringdir
  2270  0C58  00A8               	movwf	(??_sprintf+1)^(0+256)
  2271  0C59  160A  118A  200A  120A  158A  	fcall	stringdir
  2272  0C5E  00A9               	movwf	((??_sprintf+1)^(0+256)+1)
  2273  0C5F  0829               	movf	(??_sprintf+2)^(0+256),w
  2274  0C60  022D               	subwf	(sprintf@_val+1)^(0+256),w
  2275  0C61  1D03               	skipz
  2276  0C62  2C65               	goto	u4115
  2277  0C63  0828               	movf	(??_sprintf+1)^(0+256),w
  2278  0C64  022C               	subwf	sprintf@_val^(0+256),w
  2279  0C65                     u4115:	
  2280  0C65  1C03               	btfss	3,0
  2281  0C66  2C6F               	goto	l3379
  2282                           
  2283                           ;doprnt.c: 1316: break;
  2284  0C67  3001               	movlw	1
  2285  0C68  00A7               	movwf	??_sprintf^(0+256)
  2286  0C69  0827               	movf	??_sprintf^(0+256),w
  2287  0C6A  07B4               	addwf	sprintf@c^(0+256),f
  2288  0C6B  0834               	movf	sprintf@c^(0+256),w
  2289  0C6C  3A05               	xorlw	5
  2290  0C6D  1D03               	skipz
  2291  0C6E  2C4E               	goto	l3371
  2292  0C6F                     l3379:	
  2293                           
  2294                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2295  0C6F  0832               	movf	(sprintf@width+1)^(0+256),w
  2296  0C70  0431               	iorwf	sprintf@width^(0+256),w
  2297  0C71  1903               	skipnz
  2298  0C72  2C7D               	goto	l656
  2299  0C73  0830               	movf	sprintf@flag^(0+256),w
  2300  0C74  3903               	andlw	3
  2301  0C75  1903               	btfsc	3,2
  2302  0C76  2C7D               	goto	l656
  2303                           
  2304                           ;doprnt.c: 1355: width--;
  2305  0C77  30FF               	movlw	255
  2306  0C78  07B1               	addwf	sprintf@width^(0+256),f
  2307  0C79  1803               	skipnc
  2308  0C7A  0AB2               	incf	(sprintf@width+1)^(0+256),f
  2309  0C7B  30FF               	movlw	255
  2310  0C7C  07B2               	addwf	(sprintf@width+1)^(0+256),f
  2311  0C7D                     l656:	
  2312                           
  2313                           ;doprnt.c: 1390: if(width > c)
  2314  0C7D  0834               	movf	sprintf@c^(0+256),w
  2315  0C7E  00A7               	movwf	??_sprintf^(0+256)
  2316  0C7F  01A8               	clrf	(??_sprintf^(0+256)+1)
  2317  0C80  1BA7               	btfsc	??_sprintf^(0+256),7
  2318  0C81  03A8               	decf	(??_sprintf^(0+256)+1),f
  2319  0C82  0828               	movf	(??_sprintf+1)^(0+256),w
  2320  0C83  3A80               	xorlw	128
  2321  0C84  00A9               	movwf	(??_sprintf+2)^(0+256)
  2322  0C85  0832               	movf	(sprintf@width+1)^(0+256),w
  2323  0C86  3A80               	xorlw	128
  2324  0C87  0229               	subwf	(??_sprintf+2)^(0+256),w
  2325  0C88  1D03               	skipz
  2326  0C89  2C8C               	goto	u4155
  2327  0C8A  0831               	movf	sprintf@width^(0+256),w
  2328  0C8B  0227               	subwf	??_sprintf^(0+256),w
  2329  0C8C                     u4155:	
  2330  0C8C  1803               	skipnc
  2331  0C8D  2C9C               	goto	l3387
  2332                           
  2333                           ;doprnt.c: 1391: width -= c;
  2334  0C8E  1283               	bcf	3,5	;RP0=0, select bank2
  2335  0C8F  1703               	bsf	3,6	;RP1=1, select bank2
  2336  0C90  0834               	movf	sprintf@c^(0+256),w
  2337  0C91  00A7               	movwf	??_sprintf^(0+256)
  2338  0C92  01A8               	clrf	(??_sprintf^(0+256)+1)
  2339  0C93  1BA7               	btfsc	??_sprintf^(0+256),7
  2340  0C94  03A8               	decf	(??_sprintf^(0+256)+1),f
  2341  0C95  0827               	movf	??_sprintf^(0+256),w
  2342  0C96  02B1               	subwf	sprintf@width^(0+256),f
  2343  0C97  0828               	movf	(??_sprintf+1)^(0+256),w
  2344  0C98  1C03               	skipc
  2345  0C99  03B2               	decf	(sprintf@width+1)^(0+256),f
  2346  0C9A  02B2               	subwf	(sprintf@width+1)^(0+256),f
  2347  0C9B  2CA0               	goto	l3389
  2348  0C9C                     l3387:	
  2349                           
  2350                           ;doprnt.c: 1392: else
  2351                           ;doprnt.c: 1393: width = 0;
  2352  0C9C  1283               	bcf	3,5	;RP0=0, select bank2
  2353  0C9D  1703               	bsf	3,6	;RP1=1, select bank2
  2354  0C9E  01B1               	clrf	sprintf@width^(0+256)
  2355  0C9F  01B2               	clrf	(sprintf@width+1)^(0+256)
  2356  0CA0                     l3389:	
  2357                           
  2358                           ;doprnt.c: 1396: if(flag & 0x04) {
  2359  0CA0  1D30               	btfss	sprintf@flag^(0+256),2
  2360  0CA1  2CC7               	goto	l3405
  2361                           
  2362                           ;doprnt.c: 1401: if(flag & 0x03)
  2363  0CA2  0830               	movf	sprintf@flag^(0+256),w
  2364  0CA3  3903               	andlw	3
  2365  0CA4  1903               	btfsc	3,2
  2366  0CA5  2CB1               	goto	l3397
  2367                           
  2368                           ;doprnt.c: 1402: ((*sp++ = ('-')));
  2369  0CA6  302D               	movlw	45
  2370  0CA7  00A7               	movwf	??_sprintf^(0+256)
  2371  0CA8  0833               	movf	sprintf@sp^(0+256),w
  2372  0CA9  0084               	movwf	4
  2373  0CAA  0827               	movf	??_sprintf^(0+256),w
  2374  0CAB  1783               	bsf	3,7	;select IRP bank2
  2375  0CAC  0080               	movwf	0
  2376  0CAD  3001               	movlw	1
  2377  0CAE  00A7               	movwf	??_sprintf^(0+256)
  2378  0CAF  0827               	movf	??_sprintf^(0+256),w
  2379  0CB0  07B3               	addwf	sprintf@sp^(0+256),f
  2380  0CB1                     l3397:	
  2381                           
  2382                           ;doprnt.c: 1424: if(width)
  2383  0CB1  0832               	movf	(sprintf@width+1)^(0+256),w
  2384  0CB2  0431               	iorwf	sprintf@width^(0+256),w
  2385  0CB3  1903               	skipnz
  2386  0CB4  2CEF               	goto	l3419
  2387                           
  2388                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  2389                           
  2390                           ;doprnt.c: 1425: do
  2391  0CB5  3030               	movlw	48
  2392  0CB6  00A7               	movwf	??_sprintf^(0+256)
  2393  0CB7  0833               	movf	sprintf@sp^(0+256),w
  2394  0CB8  0084               	movwf	4
  2395  0CB9  0827               	movf	??_sprintf^(0+256),w
  2396  0CBA  1783               	bsf	3,7	;select IRP bank2
  2397  0CBB  0080               	movwf	0
  2398  0CBC  3001               	movlw	1
  2399  0CBD  00A7               	movwf	??_sprintf^(0+256)
  2400  0CBE  0827               	movf	??_sprintf^(0+256),w
  2401  0CBF  07B3               	addwf	sprintf@sp^(0+256),f
  2402                           
  2403                           ;doprnt.c: 1427: while(--width);
  2404  0CC0  30FF               	movlw	255
  2405  0CC1  07B1               	addwf	sprintf@width^(0+256),f
  2406  0CC2  1803               	skipnc
  2407  0CC3  0AB2               	incf	(sprintf@width+1)^(0+256),f
  2408  0CC4  30FF               	movlw	255
  2409  0CC5  07B2               	addwf	(sprintf@width+1)^(0+256),f
  2410  0CC6  2CB1               	goto	l3397
  2411  0CC7                     l3405:	
  2412                           ;doprnt.c: 1429: } else
  2413                           
  2414                           
  2415                           ;doprnt.c: 1431: {
  2416                           ;doprnt.c: 1433: if(width
  2417                           ;doprnt.c: 1437: )
  2418  0CC7  0832               	movf	(sprintf@width+1)^(0+256),w
  2419  0CC8  0431               	iorwf	sprintf@width^(0+256),w
  2420  0CC9  1903               	skipnz
  2421  0CCA  2CE0               	goto	l3413
  2422  0CCB                     l3407:	
  2423                           ;doprnt.c: 1438: do
  2424                           
  2425                           
  2426                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  2427  0CCB  3020               	movlw	32
  2428  0CCC  00A7               	movwf	??_sprintf^(0+256)
  2429  0CCD  0833               	movf	sprintf@sp^(0+256),w
  2430  0CCE  0084               	movwf	4
  2431  0CCF  0827               	movf	??_sprintf^(0+256),w
  2432  0CD0  1783               	bsf	3,7	;select IRP bank2
  2433  0CD1  0080               	movwf	0
  2434  0CD2  3001               	movlw	1
  2435  0CD3  00A7               	movwf	??_sprintf^(0+256)
  2436  0CD4  0827               	movf	??_sprintf^(0+256),w
  2437  0CD5  07B3               	addwf	sprintf@sp^(0+256),f
  2438                           
  2439                           ;doprnt.c: 1440: while(--width);
  2440  0CD6  30FF               	movlw	255
  2441  0CD7  07B1               	addwf	sprintf@width^(0+256),f
  2442  0CD8  1803               	skipnc
  2443  0CD9  0AB2               	incf	(sprintf@width+1)^(0+256),f
  2444  0CDA  30FF               	movlw	255
  2445  0CDB  07B2               	addwf	(sprintf@width+1)^(0+256),f
  2446  0CDC  0832               	movf	(sprintf@width+1)^(0+256),w
  2447  0CDD  0431               	iorwf	sprintf@width^(0+256),w
  2448  0CDE  1D03               	skipz
  2449  0CDF  2CCB               	goto	l3407
  2450  0CE0                     l3413:	
  2451                           
  2452                           ;doprnt.c: 1447: if(flag & 0x03)
  2453  0CE0  0830               	movf	sprintf@flag^(0+256),w
  2454  0CE1  3903               	andlw	3
  2455  0CE2  1903               	btfsc	3,2
  2456  0CE3  2CEF               	goto	l3419
  2457                           
  2458                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2459  0CE4  302D               	movlw	45
  2460  0CE5  00A7               	movwf	??_sprintf^(0+256)
  2461  0CE6  0833               	movf	sprintf@sp^(0+256),w
  2462  0CE7  0084               	movwf	4
  2463  0CE8  0827               	movf	??_sprintf^(0+256),w
  2464  0CE9  1783               	bsf	3,7	;select IRP bank2
  2465  0CEA  0080               	movwf	0
  2466  0CEB  3001               	movlw	1
  2467  0CEC  00A7               	movwf	??_sprintf^(0+256)
  2468  0CED  0827               	movf	??_sprintf^(0+256),w
  2469  0CEE  07B3               	addwf	sprintf@sp^(0+256),f
  2470  0CEF                     l3419:	
  2471                           
  2472                           ;doprnt.c: 1478: }
  2473                           ;doprnt.c: 1481: prec = c;
  2474  0CEF  0834               	movf	sprintf@c^(0+256),w
  2475  0CF0  00A7               	movwf	??_sprintf^(0+256)
  2476  0CF1  0827               	movf	??_sprintf^(0+256),w
  2477  0CF2  00AB               	movwf	sprintf@prec^(0+256)
  2478  0CF3                     l3427:	
  2479                           ;doprnt.c: 1483: while(prec--) {
  2480                           
  2481  0CF3  30FF               	movlw	-1
  2482  0CF4  00A7               	movwf	??_sprintf^(0+256)
  2483  0CF5  0827               	movf	??_sprintf^(0+256),w
  2484  0CF6  07AB               	addwf	sprintf@prec^(0+256),f
  2485  0CF7  082B               	movf	sprintf@prec^(0+256),w
  2486  0CF8  3AFF               	xorlw	-1
  2487  0CF9  1903               	btfsc	3,2
  2488  0CFA  2B92               	goto	l3429
  2489                           
  2490                           ;doprnt.c: 1487: {
  2491                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2492  0CFB  300A               	movlw	10
  2493  0CFC  009E               	movwf	___lwmod@divisor^(0+256)
  2494  0CFD  3000               	movlw	0
  2495  0CFE  009F               	movwf	(___lwmod@divisor^(0+256)+1)
  2496  0CFF  082B               	movf	sprintf@prec^(0+256),w
  2497  0D00  00A7               	movwf	??_sprintf^(0+256)
  2498  0D01  0727               	addwf	??_sprintf^(0+256),w
  2499  0D02  3E01               	addlw	low (_dpowers-__stringbase)
  2500  0D03  0084               	movwf	4
  2501  0D04  160A  118A  200A  120A  158A  	fcall	stringdir
  2502  0D09  0096               	movwf	___lwdiv@divisor^(0+256)
  2503  0D0A  160A  118A  200A  120A  158A  	fcall	stringdir
  2504  0D0F  0097               	movwf	(___lwdiv@divisor+1)^(0+256)
  2505  0D10  082D               	movf	(sprintf@_val+1)^(0+256),w
  2506  0D11  0199               	clrf	(___lwdiv@dividend+1)^(0+256)
  2507  0D12  0799               	addwf	(___lwdiv@dividend+1)^(0+256),f
  2508  0D13  082C               	movf	sprintf@_val^(0+256),w
  2509  0D14  0198               	clrf	___lwdiv@dividend^(0+256)
  2510  0D15  0798               	addwf	___lwdiv@dividend^(0+256),f
  2511  0D16  160A  118A  2181  120A  158A  	fcall	___lwdiv
  2512  0D1B  1283               	bcf	3,5	;RP0=0, select bank2
  2513  0D1C  1703               	bsf	3,6	;RP1=1, select bank2
  2514  0D1D  0817               	movf	(?___lwdiv+1)^(0+256),w
  2515  0D1E  01A1               	clrf	(___lwmod@dividend+1)^(0+256)
  2516  0D1F  07A1               	addwf	(___lwmod@dividend+1)^(0+256),f
  2517  0D20  0816               	movf	?___lwdiv^(0+256),w
  2518  0D21  01A0               	clrf	___lwmod@dividend^(0+256)
  2519  0D22  07A0               	addwf	___lwmod@dividend^(0+256),f
  2520  0D23  160A  118A  214B  120A  158A  	fcall	___lwmod
  2521  0D28  1283               	bcf	3,5	;RP0=0, select bank2
  2522  0D29  1703               	bsf	3,6	;RP1=1, select bank2
  2523  0D2A  081E               	movf	?___lwmod^(0+256),w
  2524  0D2B  3E30               	addlw	48
  2525  0D2C  00A8               	movwf	(??_sprintf+1)^(0+256)
  2526  0D2D  0828               	movf	(??_sprintf+1)^(0+256),w
  2527  0D2E  00B4               	movwf	sprintf@c^(0+256)
  2528                           
  2529                           ;doprnt.c: 1532: }
  2530                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2531  0D2F  0834               	movf	sprintf@c^(0+256),w
  2532  0D30  00A7               	movwf	??_sprintf^(0+256)
  2533  0D31  0833               	movf	sprintf@sp^(0+256),w
  2534  0D32  0084               	movwf	4
  2535  0D33  0827               	movf	??_sprintf^(0+256),w
  2536  0D34  1783               	bsf	3,7	;select IRP bank2
  2537  0D35  0080               	movwf	0
  2538  0D36  3001               	movlw	1
  2539  0D37  00A7               	movwf	??_sprintf^(0+256)
  2540  0D38  0827               	movf	??_sprintf^(0+256),w
  2541  0D39  07B3               	addwf	sprintf@sp^(0+256),f
  2542  0D3A  2CF3               	goto	l3427
  2543  0D3B                     l3431:	
  2544                           ;doprnt.c: 1534: }
  2545                           ;doprnt.c: 1542: }
  2546                           ;doprnt.c: 1544: alldone:
  2547                           
  2548                           
  2549                           ;doprnt.c: 1547: *sp = 0;
  2550  0D3B  1283               	bcf	3,5	;RP0=0, select bank2
  2551  0D3C  1703               	bsf	3,6	;RP1=1, select bank2
  2552  0D3D  0833               	movf	sprintf@sp^(0+256),w
  2553  0D3E  0084               	movwf	4
  2554  0D3F  1783               	bsf	3,7	;select IRP bank2
  2555  0D40  0180               	clrf	0
  2556  0D41  0008               	return
  2557  0D42                     __end_of_sprintf:	
  2558                           ;doprnt.c: 1549: return 0;
  2559                           ;	Return value of _sprintf is never used
  2560                           
  2561                           
  2562                           	psect	text2
  2563  1F40                     __ptext2:	
  2564 ;; *************** function _isdigit *****************
  2565 ;; Defined at:
  2566 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  c               1    wreg     unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  c               1    7[BANK2 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;		None               void
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       2
  2582 ;;      Temps:          0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       2
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    5
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_sprintf
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _isdigit
  2596  1F40                     _isdigit:	
  2597                           
  2598                           ;incstack = 0
  2599                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2600                           ;isdigit@c stored from wreg
  2601  1F40  1283               	bcf	3,5	;RP0=0, select bank2
  2602  1F41  1703               	bsf	3,6	;RP1=1, select bank2
  2603  1F42  0097               	movwf	isdigit@c^(0+256)
  2604  1F43  0196               	clrf	_isdigit$1463^(0+256)
  2605  1F44  303A               	movlw	58
  2606  1F45  0217               	subwf	isdigit@c^(0+256),w
  2607  1F46  1803               	skipnc
  2608  1F47  2F4E               	goto	l2685
  2609  1F48  3030               	movlw	48
  2610  1F49  0217               	subwf	isdigit@c^(0+256),w
  2611  1F4A  1C03               	skipc
  2612  1F4B  2F4E               	goto	l2685
  2613  1F4C  0196               	clrf	_isdigit$1463^(0+256)
  2614  1F4D  0A96               	incf	_isdigit$1463^(0+256),f
  2615  1F4E                     l2685:	
  2616  1F4E  0C16               	rrf	_isdigit$1463^(0+256),w
  2617  1F4F  0008               	return
  2618  1F50                     __end_of_isdigit:	
  2619                           
  2620                           	psect	text3
  2621  10CC                     __ptext3:	
  2622 ;; *************** function ___wmul *****************
  2623 ;; Defined at:
  2624 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  multiplier      2    6[BANK2 ] unsigned int 
  2627 ;;  multiplicand    2    8[BANK2 ] unsigned int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  product         2   10[BANK2 ] unsigned int 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  2    6[BANK2 ] unsigned int 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         0       0       0       0       4
  2640 ;;      Locals:         0       0       0       0       2
  2641 ;;      Temps:          0       0       0       0       0
  2642 ;;      Totals:         0       0       0       0       6
  2643 ;;Total ram usage:        6 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    5
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_sprintf
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function ___wmul
  2655  10CC                     ___wmul:	
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2659  10CC  1283               	bcf	3,5	;RP0=0, select bank2
  2660  10CD  1703               	bsf	3,6	;RP1=1, select bank2
  2661  10CE  019A               	clrf	___wmul@product^(0+256)
  2662  10CF  019B               	clrf	(___wmul@product+1)^(0+256)
  2663  10D0                     l2691:	
  2664  10D0  1C16               	btfss	___wmul@multiplier^(0+256),0
  2665  10D1  28D8               	goto	l757
  2666  10D2  0818               	movf	___wmul@multiplicand^(0+256),w
  2667  10D3  079A               	addwf	___wmul@product^(0+256),f
  2668  10D4  1803               	skipnc
  2669  10D5  0A9B               	incf	(___wmul@product+1)^(0+256),f
  2670  10D6  0819               	movf	(___wmul@multiplicand+1)^(0+256),w
  2671  10D7  079B               	addwf	(___wmul@product+1)^(0+256),f
  2672  10D8                     l757:	
  2673  10D8  3001               	movlw	1
  2674  10D9                     u2905:	
  2675  10D9  1003               	clrc
  2676  10DA  0D98               	rlf	___wmul@multiplicand^(0+256),f
  2677  10DB  0D99               	rlf	(___wmul@multiplicand+1)^(0+256),f
  2678  10DC  3EFF               	addlw	-1
  2679  10DD  1D03               	skipz
  2680  10DE  28D9               	goto	u2905
  2681  10DF  3001               	movlw	1
  2682  10E0                     u2915:	
  2683  10E0  1003               	clrc
  2684  10E1  0C97               	rrf	(___wmul@multiplier+1)^(0+256),f
  2685  10E2  0C96               	rrf	___wmul@multiplier^(0+256),f
  2686  10E3  3EFF               	addlw	-1
  2687  10E4  1D03               	skipz
  2688  10E5  28E0               	goto	u2915
  2689  10E6  0817               	movf	(___wmul@multiplier+1)^(0+256),w
  2690  10E7  0416               	iorwf	___wmul@multiplier^(0+256),w
  2691  10E8  1D03               	skipz
  2692  10E9  28D0               	goto	l2691
  2693  10EA  081B               	movf	(___wmul@product+1)^(0+256),w
  2694  10EB  0197               	clrf	(?___wmul+1)^(0+256)
  2695  10EC  0797               	addwf	(?___wmul+1)^(0+256),f
  2696  10ED  081A               	movf	___wmul@product^(0+256),w
  2697  10EE  0196               	clrf	?___wmul^(0+256)
  2698  10EF  0796               	addwf	?___wmul^(0+256),f
  2699  10F0  0008               	return
  2700  10F1                     __end_of___wmul:	
  2701                           
  2702                           	psect	text4
  2703  114B                     __ptext4:	
  2704 ;; *************** function ___lwmod *****************
  2705 ;; Defined at:
  2706 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  divisor         2   14[BANK2 ] unsigned int 
  2709 ;;  dividend        2   16[BANK2 ] unsigned int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  counter         1   19[BANK2 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  2   14[BANK2 ] unsigned int 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       0       0       0       4
  2722 ;;      Locals:         0       0       0       0       1
  2723 ;;      Temps:          0       0       0       0       1
  2724 ;;      Totals:         0       0       0       0       6
  2725 ;;Total ram usage:        6 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    5
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_sprintf
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function ___lwmod
  2737  114B                     ___lwmod:	
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2741  114B  1283               	bcf	3,5	;RP0=0, select bank2
  2742  114C  1703               	bsf	3,6	;RP1=1, select bank2
  2743  114D  081F               	movf	(___lwmod@divisor+1)^(0+256),w
  2744  114E  041E               	iorwf	___lwmod@divisor^(0+256),w
  2745  114F  1903               	skipnz
  2746  1150  297A               	goto	l2891
  2747  1151  01A3               	clrf	___lwmod@counter^(0+256)
  2748  1152  0AA3               	incf	___lwmod@counter^(0+256),f
  2749  1153                     l2881:	
  2750  1153  1B9F               	btfsc	(___lwmod@divisor+1)^(0+256),7
  2751  1154  2961               	goto	l2883
  2752  1155  3001               	movlw	1
  2753  1156                     u3365:	
  2754  1156  1003               	clrc
  2755  1157  0D9E               	rlf	___lwmod@divisor^(0+256),f
  2756  1158  0D9F               	rlf	(___lwmod@divisor+1)^(0+256),f
  2757  1159  3EFF               	addlw	-1
  2758  115A  1D03               	skipz
  2759  115B  2956               	goto	u3365
  2760  115C  3001               	movlw	1
  2761  115D  00A2               	movwf	??___lwmod^(0+256)
  2762  115E  0822               	movf	??___lwmod^(0+256),w
  2763  115F  07A3               	addwf	___lwmod@counter^(0+256),f
  2764  1160  2953               	goto	l2881
  2765  1161                     l2883:	
  2766  1161  081F               	movf	(___lwmod@divisor+1)^(0+256),w
  2767  1162  0221               	subwf	(___lwmod@dividend+1)^(0+256),w
  2768  1163  1D03               	skipz
  2769  1164  2967               	goto	u3385
  2770  1165  081E               	movf	___lwmod@divisor^(0+256),w
  2771  1166  0220               	subwf	___lwmod@dividend^(0+256),w
  2772  1167                     u3385:	
  2773  1167  1C03               	skipc
  2774  1168  296F               	goto	l2887
  2775  1169  081E               	movf	___lwmod@divisor^(0+256),w
  2776  116A  02A0               	subwf	___lwmod@dividend^(0+256),f
  2777  116B  081F               	movf	(___lwmod@divisor+1)^(0+256),w
  2778  116C  1C03               	skipc
  2779  116D  03A1               	decf	(___lwmod@dividend+1)^(0+256),f
  2780  116E  02A1               	subwf	(___lwmod@dividend+1)^(0+256),f
  2781  116F                     l2887:	
  2782  116F  3001               	movlw	1
  2783  1170                     u3395:	
  2784  1170  1003               	clrc
  2785  1171  0C9F               	rrf	(___lwmod@divisor+1)^(0+256),f
  2786  1172  0C9E               	rrf	___lwmod@divisor^(0+256),f
  2787  1173  3EFF               	addlw	-1
  2788  1174  1D03               	skipz
  2789  1175  2970               	goto	u3395
  2790  1176  3001               	movlw	1
  2791  1177  02A3               	subwf	___lwmod@counter^(0+256),f
  2792  1178  1D03               	btfss	3,2
  2793  1179  2961               	goto	l2883
  2794  117A                     l2891:	
  2795  117A  0821               	movf	(___lwmod@dividend+1)^(0+256),w
  2796  117B  019F               	clrf	(?___lwmod+1)^(0+256)
  2797  117C  079F               	addwf	(?___lwmod+1)^(0+256),f
  2798  117D  0820               	movf	___lwmod@dividend^(0+256),w
  2799  117E  019E               	clrf	?___lwmod^(0+256)
  2800  117F  079E               	addwf	?___lwmod^(0+256),f
  2801  1180  0008               	return
  2802  1181                     __end_of___lwmod:	
  2803                           
  2804                           	psect	text5
  2805  1181                     __ptext5:	
  2806 ;; *************** function ___lwdiv *****************
  2807 ;; Defined at:
  2808 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  divisor         2    6[BANK2 ] unsigned int 
  2811 ;;  dividend        2    8[BANK2 ] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  quotient        2   11[BANK2 ] unsigned int 
  2814 ;;  counter         1   13[BANK2 ] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  2    6[BANK2 ] unsigned int 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       0       0       0       4
  2825 ;;      Locals:         0       0       0       0       3
  2826 ;;      Temps:          0       0       0       0       1
  2827 ;;      Totals:         0       0       0       0       8
  2828 ;;Total ram usage:        8 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    5
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_sprintf
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           
  2839                           ;psect for function ___lwdiv
  2840  1181                     ___lwdiv:	
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2844  1181  1283               	bcf	3,5	;RP0=0, select bank2
  2845  1182  1703               	bsf	3,6	;RP1=1, select bank2
  2846  1183  019B               	clrf	___lwdiv@quotient^(0+256)
  2847  1184  019C               	clrf	(___lwdiv@quotient+1)^(0+256)
  2848  1185  0817               	movf	(___lwdiv@divisor+1)^(0+256),w
  2849  1186  0416               	iorwf	___lwdiv@divisor^(0+256),w
  2850  1187  1903               	skipnz
  2851  1188  29BA               	goto	l2869
  2852  1189  019D               	clrf	___lwdiv@counter^(0+256)
  2853  118A  0A9D               	incf	___lwdiv@counter^(0+256),f
  2854  118B                     l2857:	
  2855  118B  1B97               	btfsc	(___lwdiv@divisor+1)^(0+256),7
  2856  118C  2999               	goto	l2859
  2857  118D  3001               	movlw	1
  2858  118E                     u3295:	
  2859  118E  1003               	clrc
  2860  118F  0D96               	rlf	___lwdiv@divisor^(0+256),f
  2861  1190  0D97               	rlf	(___lwdiv@divisor+1)^(0+256),f
  2862  1191  3EFF               	addlw	-1
  2863  1192  1D03               	skipz
  2864  1193  298E               	goto	u3295
  2865  1194  3001               	movlw	1
  2866  1195  009A               	movwf	??___lwdiv^(0+256)
  2867  1196  081A               	movf	??___lwdiv^(0+256),w
  2868  1197  079D               	addwf	___lwdiv@counter^(0+256),f
  2869  1198  298B               	goto	l2857
  2870  1199                     l2859:	
  2871  1199  3001               	movlw	1
  2872  119A                     u3315:	
  2873  119A  1003               	clrc
  2874  119B  0D9B               	rlf	___lwdiv@quotient^(0+256),f
  2875  119C  0D9C               	rlf	(___lwdiv@quotient+1)^(0+256),f
  2876  119D  3EFF               	addlw	-1
  2877  119E  1D03               	skipz
  2878  119F  299A               	goto	u3315
  2879  11A0  0817               	movf	(___lwdiv@divisor+1)^(0+256),w
  2880  11A1  0219               	subwf	(___lwdiv@dividend+1)^(0+256),w
  2881  11A2  1D03               	skipz
  2882  11A3  29A6               	goto	u3325
  2883  11A4  0816               	movf	___lwdiv@divisor^(0+256),w
  2884  11A5  0218               	subwf	___lwdiv@dividend^(0+256),w
  2885  11A6                     u3325:	
  2886  11A6  1C03               	skipc
  2887  11A7  29AF               	goto	l2865
  2888  11A8  0816               	movf	___lwdiv@divisor^(0+256),w
  2889  11A9  0298               	subwf	___lwdiv@dividend^(0+256),f
  2890  11AA  0817               	movf	(___lwdiv@divisor+1)^(0+256),w
  2891  11AB  1C03               	skipc
  2892  11AC  0399               	decf	(___lwdiv@dividend+1)^(0+256),f
  2893  11AD  0299               	subwf	(___lwdiv@dividend+1)^(0+256),f
  2894  11AE  141B               	bsf	___lwdiv@quotient^(0+256),0
  2895  11AF                     l2865:	
  2896  11AF  3001               	movlw	1
  2897  11B0                     u3335:	
  2898  11B0  1003               	clrc
  2899  11B1  0C97               	rrf	(___lwdiv@divisor+1)^(0+256),f
  2900  11B2  0C96               	rrf	___lwdiv@divisor^(0+256),f
  2901  11B3  3EFF               	addlw	-1
  2902  11B4  1D03               	skipz
  2903  11B5  29B0               	goto	u3335
  2904  11B6  3001               	movlw	1
  2905  11B7  029D               	subwf	___lwdiv@counter^(0+256),f
  2906  11B8  1D03               	btfss	3,2
  2907  11B9  2999               	goto	l2859
  2908  11BA                     l2869:	
  2909  11BA  081C               	movf	(___lwdiv@quotient+1)^(0+256),w
  2910  11BB  0197               	clrf	(?___lwdiv+1)^(0+256)
  2911  11BC  0797               	addwf	(?___lwdiv+1)^(0+256),f
  2912  11BD  081B               	movf	___lwdiv@quotient^(0+256),w
  2913  11BE  0196               	clrf	?___lwdiv^(0+256)
  2914  11BF  0796               	addwf	?___lwdiv^(0+256),f
  2915  11C0  0008               	return
  2916  11C1                     __end_of___lwdiv:	
  2917                           
  2918                           	psect	text6
  2919  11C1                     __ptext6:	
  2920 ;; *************** function _USART_Init *****************
  2921 ;; Defined at:
  2922 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware\usart.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  BaudRate        4   21[BANK2 ] long 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;		None               void
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, pclath, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         0       0       0       0       4
  2937 ;;      Locals:         0       0       0       0       0
  2938 ;;      Temps:          0       0       0       0       4
  2939 ;;      Totals:         0       0       0       0       8
  2940 ;;Total ram usage:        8 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    6
  2943 ;; This function calls:
  2944 ;;		___aldiv
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _USART_Init
  2952  11C1                     _USART_Init:	
  2953                           
  2954                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2958  11C1  1283               	bcf	3,5	;RP0=0, select bank2
  2959  11C2  1703               	bsf	3,6	;RP1=1, select bank2
  2960  11C3  0825               	movf	USART_Init@BaudRate^(0+256),w
  2961  11C4  00A9               	movwf	??_USART_Init^(0+256)
  2962  11C5  0826               	movf	(USART_Init@BaudRate+1)^(0+256),w
  2963  11C6  00AA               	movwf	(??_USART_Init^(0+256)+1)
  2964  11C7  0827               	movf	(USART_Init@BaudRate+2)^(0+256),w
  2965  11C8  00AB               	movwf	(??_USART_Init^(0+256)+2)
  2966  11C9  0828               	movf	(USART_Init@BaudRate+3)^(0+256),w
  2967  11CA  00AC               	movwf	(??_USART_Init^(0+256)+3)
  2968  11CB  3004               	movlw	4
  2969  11CC                     u4025:	
  2970  11CC  1003               	clrc
  2971  11CD  0DA9               	rlf	??_USART_Init^(0+256),f
  2972  11CE  0DAA               	rlf	(??_USART_Init^(0+256)+1),f
  2973  11CF  0DAB               	rlf	(??_USART_Init^(0+256)+2),f
  2974  11D0  0DAC               	rlf	(??_USART_Init^(0+256)+3),f
  2975  11D1  3EFF               	addlw	-1
  2976  11D2  1D03               	skipz
  2977  11D3  29CC               	goto	u4025
  2978  11D4  082C               	movf	(??_USART_Init+3)^(0+256),w
  2979  11D5  0099               	movwf	(___aldiv@divisor+3)^(0+256)
  2980  11D6  082B               	movf	(??_USART_Init+2)^(0+256),w
  2981  11D7  0098               	movwf	(___aldiv@divisor+2)^(0+256)
  2982  11D8  082A               	movf	(??_USART_Init+1)^(0+256),w
  2983  11D9  0097               	movwf	(___aldiv@divisor+1)^(0+256)
  2984  11DA  0829               	movf	??_USART_Init^(0+256),w
  2985  11DB  0096               	movwf	___aldiv@divisor^(0+256)
  2986  11DC  3001               	movlw	1
  2987  11DD  009D               	movwf	(___aldiv@dividend+3)^(0+256)
  2988  11DE  3019               	movlw	25
  2989  11DF  009C               	movwf	(___aldiv@dividend+2)^(0+256)
  2990  11E0  3040               	movlw	64
  2991  11E1  009B               	movwf	(___aldiv@dividend+1)^(0+256)
  2992  11E2  3000               	movlw	0
  2993  11E3  009A               	movwf	___aldiv@dividend^(0+256)
  2994  11E4  120A  118A  2769   	fcall	___aldiv
  2995  11E7  1283               	bcf	3,5	;RP0=0, select bank2
  2996  11E8  1703               	bsf	3,6	;RP1=1, select bank2
  2997  11E9  0816               	movf	?___aldiv^(0+256),w
  2998  11EA  3EFF               	addlw	255
  2999  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  3000  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  3001  11ED  0099               	movwf	25	;volatile
  3002                           
  3003                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  3004  11EE  1398               	bcf	24,7	;volatile
  3005                           
  3006                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  3007  11EF  1318               	bcf	24,6	;volatile
  3008                           
  3009                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  3010  11F0  1698               	bsf	24,5	;volatile
  3011                           
  3012                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  3013  11F1  1218               	bcf	24,4	;volatile
  3014                           
  3015                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  3016  11F2  1518               	bsf	24,2	;volatile
  3017                           
  3018                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  3019  11F3  1498               	bsf	24,1	;volatile
  3020                           
  3021                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  3022  11F4  1018               	bcf	24,0	;volatile
  3023                           
  3024                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  3025  11F5  1283               	bcf	3,5	;RP0=0, select bank0
  3026  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  3027  11F7  1798               	bsf	24,7	;volatile
  3028                           
  3029                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  3030  11F8  1318               	bcf	24,6	;volatile
  3031                           
  3032                           ;usart.c: 28: RCSTAbits.SREN = 0;
  3033  11F9  1298               	bcf	24,5	;volatile
  3034                           
  3035                           ;usart.c: 29: RCSTAbits.CREN = 1;
  3036  11FA  1618               	bsf	24,4	;volatile
  3037                           
  3038                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  3039  11FB  1198               	bcf	24,3	;volatile
  3040                           
  3041                           ;usart.c: 31: RCSTAbits.FERR = 0;
  3042  11FC  1118               	bcf	24,2	;volatile
  3043                           
  3044                           ;usart.c: 32: RCSTAbits.OERR = 0;
  3045  11FD  1098               	bcf	24,1	;volatile
  3046                           
  3047                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  3048  11FE  1018               	bcf	24,0	;volatile
  3049                           
  3050                           ;usart.c: 36: PIE1bits.TXIE = 0;
  3051  11FF  1683               	bsf	3,5	;RP0=1, select bank1
  3052  1200  1303               	bcf	3,6	;RP1=0, select bank1
  3053  1201  120C               	bcf	12,4	;volatile
  3054                           
  3055                           ;usart.c: 37: PIR1bits.TXIF = 0;
  3056  1202  1283               	bcf	3,5	;RP0=0, select bank0
  3057  1203  1303               	bcf	3,6	;RP1=0, select bank0
  3058  1204  120C               	bcf	12,4	;volatile
  3059                           
  3060                           ;usart.c: 38: PIE1bits.RCIE = 1;
  3061  1205  1683               	bsf	3,5	;RP0=1, select bank1
  3062  1206  1303               	bcf	3,6	;RP1=0, select bank1
  3063  1207  168C               	bsf	12,5	;volatile
  3064                           
  3065                           ;usart.c: 39: PIR1bits.RCIF = 0;
  3066  1208  1283               	bcf	3,5	;RP0=0, select bank0
  3067  1209  1303               	bcf	3,6	;RP1=0, select bank0
  3068  120A  128C               	bcf	12,5	;volatile
  3069  120B  0008               	return
  3070  120C                     __end_of_USART_Init:	
  3071                           
  3072                           	psect	text7
  3073  0769                     __ptext7:	
  3074 ;; *************** function ___aldiv *****************
  3075 ;; Defined at:
  3076 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  divisor         4    6[BANK2 ] long 
  3079 ;;  dividend        4   10[BANK2 ] long 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  quotient        4   17[BANK2 ] long 
  3082 ;;  sign            1   16[BANK2 ] unsigned char 
  3083 ;;  counter         1   15[BANK2 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  4    6[BANK2 ] long 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       8
  3094 ;;      Locals:         0       0       0       0       6
  3095 ;;      Temps:          0       0       0       0       1
  3096 ;;      Totals:         0       0       0       0      15
  3097 ;;Total ram usage:       15 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    5
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_USART_Init
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function ___aldiv
  3109  0769                     ___aldiv:	
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3113  0769  1283               	bcf	3,5	;RP0=0, select bank2
  3114  076A  1703               	bsf	3,6	;RP1=1, select bank2
  3115  076B  01A0               	clrf	___aldiv@sign^(0+256)
  3116  076C  1F99               	btfss	(___aldiv@divisor+3)^(0+256),7
  3117  076D  2F7B               	goto	l812
  3118  076E  0996               	comf	___aldiv@divisor^(0+256),f
  3119  076F  0997               	comf	(___aldiv@divisor+1)^(0+256),f
  3120  0770  0998               	comf	(___aldiv@divisor+2)^(0+256),f
  3121  0771  0999               	comf	(___aldiv@divisor+3)^(0+256),f
  3122  0772  0A96               	incf	___aldiv@divisor^(0+256),f
  3123  0773  1903               	skipnz
  3124  0774  0A97               	incf	(___aldiv@divisor+1)^(0+256),f
  3125  0775  1903               	skipnz
  3126  0776  0A98               	incf	(___aldiv@divisor+2)^(0+256),f
  3127  0777  1903               	skipnz
  3128  0778  0A99               	incf	(___aldiv@divisor+3)^(0+256),f
  3129  0779  01A0               	clrf	___aldiv@sign^(0+256)
  3130  077A  0AA0               	incf	___aldiv@sign^(0+256),f
  3131  077B                     l812:	
  3132  077B  1F9D               	btfss	(___aldiv@dividend+3)^(0+256),7
  3133  077C  2F8C               	goto	l2711
  3134  077D  099A               	comf	___aldiv@dividend^(0+256),f
  3135  077E  099B               	comf	(___aldiv@dividend+1)^(0+256),f
  3136  077F  099C               	comf	(___aldiv@dividend+2)^(0+256),f
  3137  0780  099D               	comf	(___aldiv@dividend+3)^(0+256),f
  3138  0781  0A9A               	incf	___aldiv@dividend^(0+256),f
  3139  0782  1903               	skipnz
  3140  0783  0A9B               	incf	(___aldiv@dividend+1)^(0+256),f
  3141  0784  1903               	skipnz
  3142  0785  0A9C               	incf	(___aldiv@dividend+2)^(0+256),f
  3143  0786  1903               	skipnz
  3144  0787  0A9D               	incf	(___aldiv@dividend+3)^(0+256),f
  3145  0788  3001               	movlw	1
  3146  0789  009E               	movwf	??___aldiv^(0+256)
  3147  078A  081E               	movf	??___aldiv^(0+256),w
  3148  078B  06A0               	xorwf	___aldiv@sign^(0+256),f
  3149  078C                     l2711:	
  3150  078C  3000               	movlw	0
  3151  078D  00A4               	movwf	(___aldiv@quotient+3)^(0+256)
  3152  078E  3000               	movlw	0
  3153  078F  00A3               	movwf	(___aldiv@quotient+2)^(0+256)
  3154  0790  3000               	movlw	0
  3155  0791  00A2               	movwf	(___aldiv@quotient+1)^(0+256)
  3156  0792  3000               	movlw	0
  3157  0793  00A1               	movwf	___aldiv@quotient^(0+256)
  3158  0794  0819               	movf	(___aldiv@divisor+3)^(0+256),w
  3159  0795  0418               	iorwf	(___aldiv@divisor+2)^(0+256),w
  3160  0796  0417               	iorwf	(___aldiv@divisor+1)^(0+256),w
  3161  0797  0416               	iorwf	___aldiv@divisor^(0+256),w
  3162  0798  1903               	skipnz
  3163  0799  2FE1               	goto	l2733
  3164  079A  019F               	clrf	___aldiv@counter^(0+256)
  3165  079B  0A9F               	incf	___aldiv@counter^(0+256),f
  3166  079C                     l2719:	
  3167  079C  1B99               	btfsc	(___aldiv@divisor+3)^(0+256),7
  3168  079D  2FAC               	goto	l2721
  3169  079E  3001               	movlw	1
  3170  079F  009E               	movwf	??___aldiv^(0+256)
  3171  07A0                     u2965:	
  3172  07A0  1003               	clrc
  3173  07A1  0D96               	rlf	___aldiv@divisor^(0+256),f
  3174  07A2  0D97               	rlf	(___aldiv@divisor+1)^(0+256),f
  3175  07A3  0D98               	rlf	(___aldiv@divisor+2)^(0+256),f
  3176  07A4  0D99               	rlf	(___aldiv@divisor+3)^(0+256),f
  3177  07A5  0B9E               	decfsz	??___aldiv^(0+256),f
  3178  07A6  2FA0               	goto	u2965
  3179  07A7  3001               	movlw	1
  3180  07A8  009E               	movwf	??___aldiv^(0+256)
  3181  07A9  081E               	movf	??___aldiv^(0+256),w
  3182  07AA  079F               	addwf	___aldiv@counter^(0+256),f
  3183  07AB  2F9C               	goto	l2719
  3184  07AC                     l2721:	
  3185  07AC  3001               	movlw	1
  3186  07AD  009E               	movwf	??___aldiv^(0+256)
  3187  07AE                     u2985:	
  3188  07AE  1003               	clrc
  3189  07AF  0DA1               	rlf	___aldiv@quotient^(0+256),f
  3190  07B0  0DA2               	rlf	(___aldiv@quotient+1)^(0+256),f
  3191  07B1  0DA3               	rlf	(___aldiv@quotient+2)^(0+256),f
  3192  07B2  0DA4               	rlf	(___aldiv@quotient+3)^(0+256),f
  3193  07B3  0B9E               	decfsz	??___aldiv^(0+256),f
  3194  07B4  2FAE               	goto	u2985
  3195  07B5  0819               	movf	(___aldiv@divisor+3)^(0+256),w
  3196  07B6  021D               	subwf	(___aldiv@dividend+3)^(0+256),w
  3197  07B7  1D03               	skipz
  3198  07B8  2FC3               	goto	u2995
  3199  07B9  0818               	movf	(___aldiv@divisor+2)^(0+256),w
  3200  07BA  021C               	subwf	(___aldiv@dividend+2)^(0+256),w
  3201  07BB  1D03               	skipz
  3202  07BC  2FC3               	goto	u2995
  3203  07BD  0817               	movf	(___aldiv@divisor+1)^(0+256),w
  3204  07BE  021B               	subwf	(___aldiv@dividend+1)^(0+256),w
  3205  07BF  1D03               	skipz
  3206  07C0  2FC3               	goto	u2995
  3207  07C1  0816               	movf	___aldiv@divisor^(0+256),w
  3208  07C2  021A               	subwf	___aldiv@dividend^(0+256),w
  3209  07C3                     u2995:	
  3210  07C3  1C03               	skipc
  3211  07C4  2FD4               	goto	l2729
  3212  07C5  0816               	movf	___aldiv@divisor^(0+256),w
  3213  07C6  029A               	subwf	___aldiv@dividend^(0+256),f
  3214  07C7  0817               	movf	(___aldiv@divisor+1)^(0+256),w
  3215  07C8  1C03               	skipc
  3216  07C9  0F17               	incfsz	(___aldiv@divisor+1)^(0+256),w
  3217  07CA  029B               	subwf	(___aldiv@dividend+1)^(0+256),f
  3218  07CB  0818               	movf	(___aldiv@divisor+2)^(0+256),w
  3219  07CC  1C03               	skipc
  3220  07CD  0F18               	incfsz	(___aldiv@divisor+2)^(0+256),w
  3221  07CE  029C               	subwf	(___aldiv@dividend+2)^(0+256),f
  3222  07CF  0819               	movf	(___aldiv@divisor+3)^(0+256),w
  3223  07D0  1C03               	skipc
  3224  07D1  0F19               	incfsz	(___aldiv@divisor+3)^(0+256),w
  3225  07D2  029D               	subwf	(___aldiv@dividend+3)^(0+256),f
  3226  07D3  1421               	bsf	___aldiv@quotient^(0+256),0
  3227  07D4                     l2729:	
  3228  07D4  3001               	movlw	1
  3229  07D5                     u3005:	
  3230  07D5  1003               	clrc
  3231  07D6  0C99               	rrf	(___aldiv@divisor+3)^(0+256),f
  3232  07D7  0C98               	rrf	(___aldiv@divisor+2)^(0+256),f
  3233  07D8  0C97               	rrf	(___aldiv@divisor+1)^(0+256),f
  3234  07D9  0C96               	rrf	___aldiv@divisor^(0+256),f
  3235  07DA  3EFF               	addlw	-1
  3236  07DB  1D03               	skipz
  3237  07DC  2FD5               	goto	u3005
  3238  07DD  3001               	movlw	1
  3239  07DE  029F               	subwf	___aldiv@counter^(0+256),f
  3240  07DF  1D03               	btfss	3,2
  3241  07E0  2FAC               	goto	l2721
  3242  07E1                     l2733:	
  3243  07E1  0820               	movf	___aldiv@sign^(0+256),w
  3244  07E2  1903               	btfsc	3,2
  3245  07E3  2FEF               	goto	l2737
  3246  07E4  09A1               	comf	___aldiv@quotient^(0+256),f
  3247  07E5  09A2               	comf	(___aldiv@quotient+1)^(0+256),f
  3248  07E6  09A3               	comf	(___aldiv@quotient+2)^(0+256),f
  3249  07E7  09A4               	comf	(___aldiv@quotient+3)^(0+256),f
  3250  07E8  0AA1               	incf	___aldiv@quotient^(0+256),f
  3251  07E9  1903               	skipnz
  3252  07EA  0AA2               	incf	(___aldiv@quotient+1)^(0+256),f
  3253  07EB  1903               	skipnz
  3254  07EC  0AA3               	incf	(___aldiv@quotient+2)^(0+256),f
  3255  07ED  1903               	skipnz
  3256  07EE  0AA4               	incf	(___aldiv@quotient+3)^(0+256),f
  3257  07EF                     l2737:	
  3258  07EF  0824               	movf	(___aldiv@quotient+3)^(0+256),w
  3259  07F0  0099               	movwf	(?___aldiv+3)^(0+256)
  3260  07F1  0823               	movf	(___aldiv@quotient+2)^(0+256),w
  3261  07F2  0098               	movwf	(?___aldiv+2)^(0+256)
  3262  07F3  0822               	movf	(___aldiv@quotient+1)^(0+256),w
  3263  07F4  0097               	movwf	(?___aldiv+1)^(0+256)
  3264  07F5  0821               	movf	___aldiv@quotient^(0+256),w
  3265  07F6  0096               	movwf	?___aldiv^(0+256)
  3266  07F7  0008               	return
  3267  07F8                     __end_of___aldiv:	
  3268                           
  3269                           	psect	text8
  3270  0801                     __ptext8:	
  3271 ;; *************** function _TIMER0_Set *****************
  3272 ;; Defined at:
  3273 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware\timers.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  contagens       1    wreg     unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  contagens       1    6[BANK2 ] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		wreg
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3287 ;;      Params:         0       0       0       0       0
  3288 ;;      Locals:         0       0       0       0       1
  3289 ;;      Temps:          0       0       0       0       0
  3290 ;;      Totals:         0       0       0       0       1
  3291 ;;Total ram usage:        1 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    5
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _TIMER0_Set
  3303  0801                     _TIMER0_Set:	
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _TIMER0_Set: [wreg]
  3307                           ;TIMER0_Set@contagens stored from wreg
  3308  0801  1283               	bcf	3,5	;RP0=0, select bank2
  3309  0802  1703               	bsf	3,6	;RP1=1, select bank2
  3310  0803  0096               	movwf	TIMER0_Set@contagens^(0+256)
  3311                           
  3312                           ;timers.c: 22: TMR0 = contagens;
  3313  0804  0816               	movf	TIMER0_Set@contagens^(0+256),w
  3314  0805  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0806  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0807  0081               	movwf	1	;volatile
  3317  0808  0008               	return
  3318  0809                     __end_of_TIMER0_Set:	
  3319                           
  3320                           	psect	text9
  3321  1F35                     __ptext9:	
  3322 ;; *************** function _TIMER0_Init *****************
  3323 ;; Defined at:
  3324 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware\timers.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;		None               void
  3331 ;; Registers used:
  3332 ;;		None
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    5
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _TIMER0_Init
  3354  1F35                     _TIMER0_Init:	
  3355                           
  3356                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _TIMER0_Init: []
  3360  1F35  1683               	bsf	3,5	;RP0=1, select bank1
  3361  1F36  1303               	bcf	3,6	;RP1=0, select bank1
  3362  1F37  1281               	bcf	1,5	;volatile
  3363                           
  3364                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  3365  1F38  1201               	bcf	1,4	;volatile
  3366                           
  3367                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  3368  1F39  1181               	bcf	1,3	;volatile
  3369                           
  3370                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  3371  1F3A  1501               	bsf	1,2	;volatile
  3372                           
  3373                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  3374  1F3B  1481               	bsf	1,1	;volatile
  3375                           
  3376                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  3377  1F3C  1401               	bsf	1,0	;volatile
  3378                           
  3379                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  3380  1F3D  110B               	bcf	11,2	;volatile
  3381                           
  3382                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  3383  1F3E  168B               	bsf	11,5	;volatile
  3384  1F3F  0008               	return
  3385  1F40                     __end_of_TIMER0_Init:	
  3386                           
  3387                           	psect	text10
  3388  10A8                     __ptext10:	
  3389 ;; *************** function _PWM_Init *****************
  3390 ;; Defined at:
  3391 ;;		line 5 in file "C:\Users\filip\programs\FuzzySI\firmware\pwm.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;		None               void
  3398 ;; Registers used:
  3399 ;;		wreg
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    5
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           
  3420                           ;psect for function _PWM_Init
  3421  10A8                     _PWM_Init:	
  3422                           
  3423                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  3424                           
  3425                           ;incstack = 0
  3426                           ; Regs used in _PWM_Init: [wreg]
  3427  10A8  1283               	bcf	3,5	;RP0=0, select bank0
  3428  10A9  1303               	bcf	3,6	;RP1=0, select bank0
  3429  10AA  1492               	bsf	18,1	;volatile
  3430                           
  3431                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  3432  10AB  1012               	bcf	18,0	;volatile
  3433                           
  3434                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  3435  10AC  1312               	bcf	18,6	;volatile
  3436                           
  3437                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  3438  10AD  1292               	bcf	18,5	;volatile
  3439                           
  3440                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  3441  10AE  1212               	bcf	18,4	;volatile
  3442                           
  3443                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  3444  10AF  1192               	bcf	18,3	;volatile
  3445                           
  3446                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  3447  10B0  1512               	bsf	18,2	;volatile
  3448                           
  3449                           ;pwm.c: 27: PR2 = 255;
  3450  10B1  30FF               	movlw	255
  3451  10B2  1683               	bsf	3,5	;RP0=1, select bank1
  3452  10B3  1303               	bcf	3,6	;RP1=0, select bank1
  3453  10B4  0092               	movwf	18	;volatile
  3454                           
  3455                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  3456  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  3457  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  3458  10B7  1597               	bsf	23,3	;volatile
  3459                           
  3460                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  3461  10B8  1517               	bsf	23,2	;volatile
  3462                           
  3463                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  3464  10B9  1497               	bsf	23,1	;volatile
  3465                           
  3466                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  3467  10BA  1417               	bsf	23,0	;volatile
  3468                           
  3469                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  3470  10BB  1683               	bsf	3,5	;RP0=1, select bank1
  3471  10BC  1303               	bcf	3,6	;RP1=0, select bank1
  3472  10BD  150C               	bsf	12,2	;volatile
  3473                           
  3474                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  3475  10BE  1283               	bcf	3,5	;RP0=0, select bank0
  3476  10BF  1303               	bcf	3,6	;RP1=0, select bank0
  3477  10C0  110C               	bcf	12,2	;volatile
  3478                           
  3479                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  3480  10C1  159D               	bsf	29,3	;volatile
  3481                           
  3482                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  3483  10C2  151D               	bsf	29,2	;volatile
  3484                           
  3485                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  3486  10C3  149D               	bsf	29,1	;volatile
  3487                           
  3488                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  3489  10C4  141D               	bsf	29,0	;volatile
  3490                           
  3491                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  3492  10C5  1683               	bsf	3,5	;RP0=1, select bank1
  3493  10C6  1303               	bcf	3,6	;RP1=0, select bank1
  3494  10C7  140D               	bsf	13,0	;volatile
  3495                           
  3496                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  3497  10C8  1283               	bcf	3,5	;RP0=0, select bank0
  3498  10C9  1303               	bcf	3,6	;RP1=0, select bank0
  3499  10CA  100D               	bcf	13,0	;volatile
  3500  10CB  0008               	return
  3501  10CC                     __end_of_PWM_Init:	
  3502                           
  3503                           	psect	text11
  3504  1087                     __ptext11:	
  3505 ;; *************** function _PWM_DutyCycle2 *****************
  3506 ;; Defined at:
  3507 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware\pwm.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  valor           2    6[BANK2 ] int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;		None               void
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       0       0       2
  3522 ;;      Locals:         0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       2
  3524 ;;      Totals:         0       0       0       0       4
  3525 ;;Total ram usage:        4 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    5
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _PWM_DutyCycle2
  3537  1087                     _PWM_DutyCycle2:	
  3538                           
  3539                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  3543  1087  1283               	bcf	3,5	;RP0=0, select bank2
  3544  1088  1703               	bsf	3,6	;RP1=1, select bank2
  3545  1089  0817               	movf	(PWM_DutyCycle2@valor+1)^(0+256),w
  3546  108A  0099               	movwf	(??_PWM_DutyCycle2^(0+256)+1)
  3547  108B  0816               	movf	PWM_DutyCycle2@valor^(0+256),w
  3548  108C  0098               	movwf	??_PWM_DutyCycle2^(0+256)
  3549  108D  0D19               	rlf	(??_PWM_DutyCycle2^(0+256)+1),w
  3550  108E  0C99               	rrf	(??_PWM_DutyCycle2^(0+256)+1),f
  3551  108F  0C98               	rrf	??_PWM_DutyCycle2^(0+256),f
  3552  1090  0D19               	rlf	(??_PWM_DutyCycle2^(0+256)+1),w
  3553  1091  0C99               	rrf	(??_PWM_DutyCycle2^(0+256)+1),f
  3554  1092  0C98               	rrf	??_PWM_DutyCycle2^(0+256),f
  3555  1093  0818               	movf	??_PWM_DutyCycle2^(0+256),w
  3556  1094  1283               	bcf	3,5	;RP0=0, select bank0
  3557  1095  1303               	bcf	3,6	;RP1=0, select bank0
  3558  1096  009B               	movwf	27	;volatile
  3559                           
  3560                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3561  1097  1283               	bcf	3,5	;RP0=0, select bank2
  3562  1098  1703               	bsf	3,6	;RP1=1, select bank2
  3563  1099  0816               	movf	PWM_DutyCycle2@valor^(0+256),w
  3564  109A  0098               	movwf	??_PWM_DutyCycle2^(0+256)
  3565  109B  3003               	movlw	3
  3566  109C                     u4015:	
  3567  109C  1003               	clrc
  3568  109D  0D98               	rlf	??_PWM_DutyCycle2^(0+256),f
  3569  109E  3EFF               	addlw	-1
  3570  109F  1D03               	skipz
  3571  10A0  289C               	goto	u4015
  3572  10A1  1003               	clrc
  3573  10A2  0D18               	rlf	??_PWM_DutyCycle2^(0+256),w
  3574  10A3  380C               	iorlw	12
  3575  10A4  1283               	bcf	3,5	;RP0=0, select bank0
  3576  10A5  1303               	bcf	3,6	;RP1=0, select bank0
  3577  10A6  009D               	movwf	29	;volatile
  3578  10A7  0008               	return
  3579  10A8                     __end_of_PWM_DutyCycle2:	
  3580                           
  3581                           	psect	text12
  3582  1066                     __ptext12:	
  3583 ;; *************** function _PWM_DutyCycle1 *****************
  3584 ;; Defined at:
  3585 ;;		line 64 in file "C:\Users\filip\programs\FuzzySI\firmware\pwm.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  valor           2    6[BANK2 ] int 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       2
  3600 ;;      Locals:         0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       2
  3602 ;;      Totals:         0       0       0       0       4
  3603 ;;Total ram usage:        4 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    5
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _PWM_DutyCycle1
  3615  1066                     _PWM_DutyCycle1:	
  3616                           
  3617                           ;pwm.c: 91: CCPR1L = valor >> 2;
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  3621  1066  1283               	bcf	3,5	;RP0=0, select bank2
  3622  1067  1703               	bsf	3,6	;RP1=1, select bank2
  3623  1068  0817               	movf	(PWM_DutyCycle1@valor+1)^(0+256),w
  3624  1069  0099               	movwf	(??_PWM_DutyCycle1^(0+256)+1)
  3625  106A  0816               	movf	PWM_DutyCycle1@valor^(0+256),w
  3626  106B  0098               	movwf	??_PWM_DutyCycle1^(0+256)
  3627  106C  0D19               	rlf	(??_PWM_DutyCycle1^(0+256)+1),w
  3628  106D  0C99               	rrf	(??_PWM_DutyCycle1^(0+256)+1),f
  3629  106E  0C98               	rrf	??_PWM_DutyCycle1^(0+256),f
  3630  106F  0D19               	rlf	(??_PWM_DutyCycle1^(0+256)+1),w
  3631  1070  0C99               	rrf	(??_PWM_DutyCycle1^(0+256)+1),f
  3632  1071  0C98               	rrf	??_PWM_DutyCycle1^(0+256),f
  3633  1072  0818               	movf	??_PWM_DutyCycle1^(0+256),w
  3634  1073  1283               	bcf	3,5	;RP0=0, select bank0
  3635  1074  1303               	bcf	3,6	;RP1=0, select bank0
  3636  1075  0095               	movwf	21	;volatile
  3637                           
  3638                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  3639  1076  1283               	bcf	3,5	;RP0=0, select bank2
  3640  1077  1703               	bsf	3,6	;RP1=1, select bank2
  3641  1078  0816               	movf	PWM_DutyCycle1@valor^(0+256),w
  3642  1079  0098               	movwf	??_PWM_DutyCycle1^(0+256)
  3643  107A  3003               	movlw	3
  3644  107B                     u4055:	
  3645  107B  1003               	clrc
  3646  107C  0D98               	rlf	??_PWM_DutyCycle1^(0+256),f
  3647  107D  3EFF               	addlw	-1
  3648  107E  1D03               	skipz
  3649  107F  287B               	goto	u4055
  3650  1080  1003               	clrc
  3651  1081  0D18               	rlf	??_PWM_DutyCycle1^(0+256),w
  3652  1082  380C               	iorlw	12
  3653  1083  1283               	bcf	3,5	;RP0=0, select bank0
  3654  1084  1303               	bcf	3,6	;RP1=0, select bank0
  3655  1085  0097               	movwf	23	;volatile
  3656  1086  0008               	return
  3657  1087                     __end_of_PWM_DutyCycle1:	
  3658                           
  3659                           	psect	text13
  3660  111A                     __ptext13:	
  3661 ;; *************** function _LCD_WriteString *****************
  3662 ;; Defined at:
  3663 ;;		line 61 in file "C:\Users\filip\programs\FuzzySI\firmware\lcd.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  Str             2    8[BANK2 ] PTR const unsigned char 
  3666 ;;		 -> STR_3(6), STR_1(17), display(10), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;		None               void
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3678 ;;      Params:         0       0       0       0       2
  3679 ;;      Locals:         0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0
  3681 ;;      Totals:         0       0       0       0       2
  3682 ;;Total ram usage:        2 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    6
  3685 ;; This function calls:
  3686 ;;		_LCD_WriteData
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           
  3693                           ;psect for function _LCD_WriteString
  3694  111A                     _LCD_WriteString:	
  3695  111A                     l3319:	
  3696                           ;lcd.c: 63: while(*Str != '\0')
  3697                           
  3698                           ;incstack = 0
  3699                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3700                           
  3701  111A  1283               	bcf	3,5	;RP0=0, select bank2
  3702  111B  1703               	bsf	3,6	;RP1=1, select bank2
  3703  111C  0819               	movf	(LCD_WriteString@Str+1)^(0+256),w
  3704  111D  1283               	bcf	3,5	;RP0=0, select bank0
  3705  111E  1303               	bcf	3,6	;RP1=0, select bank0
  3706  111F  00FF               	movwf	127
  3707  1120  1283               	bcf	3,5	;RP0=0, select bank2
  3708  1121  1703               	bsf	3,6	;RP1=1, select bank2
  3709  1122  0818               	movf	LCD_WriteString@Str^(0+256),w
  3710  1123  0084               	movwf	4
  3711  1124  1283               	bcf	3,5	;RP0=0, select bank0
  3712  1125  1303               	bcf	3,6	;RP1=0, select bank0
  3713  1126  160A  118A  2000  160A  118A  	fcall	stringtab
  3714  112B  3800               	iorlw	0
  3715  112C  1903               	btfsc	3,2
  3716  112D  0008               	return
  3717                           
  3718                           ;lcd.c: 64: {
  3719                           ;lcd.c: 65: LCD_WriteData(*Str);
  3720  112E  1283               	bcf	3,5	;RP0=0, select bank2
  3721  112F  1703               	bsf	3,6	;RP1=1, select bank2
  3722  1130  0819               	movf	(LCD_WriteString@Str+1)^(0+256),w
  3723  1131  1283               	bcf	3,5	;RP0=0, select bank0
  3724  1132  1303               	bcf	3,6	;RP1=0, select bank0
  3725  1133  00FF               	movwf	127
  3726  1134  1283               	bcf	3,5	;RP0=0, select bank2
  3727  1135  1703               	bsf	3,6	;RP1=1, select bank2
  3728  1136  0818               	movf	LCD_WriteString@Str^(0+256),w
  3729  1137  0084               	movwf	4
  3730  1138  1283               	bcf	3,5	;RP0=0, select bank0
  3731  1139  1303               	bcf	3,6	;RP1=0, select bank0
  3732  113A  160A  118A  2000  160A  118A  	fcall	stringtab
  3733  113F  160A  158A  278D  160A  118A  	fcall	_LCD_WriteData
  3734                           
  3735                           ;lcd.c: 66: Str++;
  3736  1144  3001               	movlw	1
  3737  1145  1283               	bcf	3,5	;RP0=0, select bank2
  3738  1146  1703               	bsf	3,6	;RP1=1, select bank2
  3739  1147  0798               	addwf	LCD_WriteString@Str^(0+256),f
  3740  1148  1803               	skipnc
  3741  1149  0A99               	incf	(LCD_WriteString@Str+1)^(0+256),f
  3742  114A  291A               	goto	l3319
  3743  114B                     __end_of_LCD_WriteString:	
  3744                           
  3745                           	psect	text14
  3746  1F8D                     __ptext14:	
  3747 ;; *************** function _LCD_WriteData *****************
  3748 ;; Defined at:
  3749 ;;		line 47 in file "C:\Users\filip\programs\FuzzySI\firmware\lcd.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  Byte            1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  Byte            1    7[BANK2 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;		None               void
  3756 ;; Registers used:
  3757 ;;		wreg
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       1
  3765 ;;      Temps:          0       0       0       0       1
  3766 ;;      Totals:         0       0       0       0       2
  3767 ;;Total ram usage:        2 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    5
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_LCD_WriteString
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function _LCD_WriteData
  3779  1F8D                     _LCD_WriteData:	
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _LCD_WriteData: [wreg]
  3783                           ;LCD_WriteData@Byte stored from wreg
  3784  1F8D  1283               	bcf	3,5	;RP0=0, select bank2
  3785  1F8E  1703               	bsf	3,6	;RP1=1, select bank2
  3786  1F8F  0097               	movwf	LCD_WriteData@Byte^(0+256)
  3787                           
  3788                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  3789  1F90  1283               	bcf	3,5	;RP0=0, select bank0
  3790  1F91  1303               	bcf	3,6	;RP1=0, select bank0
  3791  1F92  1409               	bsf	9,0	;volatile
  3792                           
  3793                           ;lcd.c: 51: PORTD = Byte;
  3794  1F93  1283               	bcf	3,5	;RP0=0, select bank2
  3795  1F94  1703               	bsf	3,6	;RP1=1, select bank2
  3796  1F95  0817               	movf	LCD_WriteData@Byte^(0+256),w
  3797  1F96  1283               	bcf	3,5	;RP0=0, select bank0
  3798  1F97  1303               	bcf	3,6	;RP1=0, select bank0
  3799  1F98  0088               	movwf	8	;volatile
  3800                           
  3801                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  3802  1F99  1489               	bsf	9,1	;volatile
  3803                           
  3804                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3805  1F9A  303D               	movlw	61
  3806  1F9B  1283               	bcf	3,5	;RP0=0, select bank2
  3807  1F9C  1703               	bsf	3,6	;RP1=1, select bank2
  3808  1F9D  0096               	movwf	??_LCD_WriteData^(0+256)
  3809  1F9E                     u4337:	
  3810  1F9E  0B96               	decfsz	??_LCD_WriteData^(0+256),f
  3811  1F9F  2F9E               	goto	u4337
  3812                           
  3813                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  3814  1FA0  1283               	bcf	3,5	;RP0=0, select bank0
  3815  1FA1  1303               	bcf	3,6	;RP1=0, select bank0
  3816  1FA2  1089               	bcf	9,1	;volatile
  3817  1FA3  0008               	return
  3818  1FA4                     __end_of_LCD_WriteData:	
  3819                           
  3820                           	psect	text15
  3821  12D1                     __ptext15:	
  3822 ;; *************** function _LCD_Init *****************
  3823 ;; Defined at:
  3824 ;;		line 87 in file "C:\Users\filip\programs\FuzzySI\firmware\lcd.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;		None               void
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0
  3840 ;;      Temps:          0       0       0       0       2
  3841 ;;      Totals:         0       0       0       0       2
  3842 ;;Total ram usage:        2 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    6
  3845 ;; This function calls:
  3846 ;;		_LCD_WriteCmd
  3847 ;; This function is called by:
  3848 ;;		_main
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function _LCD_Init
  3854  12D1                     _LCD_Init:	
  3855                           
  3856                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  3857                           
  3858                           ;incstack = 0
  3859                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3860  12D1  1683               	bsf	3,5	;RP0=1, select bank1
  3861  12D2  1303               	bcf	3,6	;RP1=0, select bank1
  3862  12D3  119F               	bcf	31,3	;volatile
  3863                           
  3864                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  3865  12D4  151F               	bsf	31,2	;volatile
  3866                           
  3867                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  3868  12D5  109F               	bcf	31,1	;volatile
  3869                           
  3870                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  3871  12D6  101F               	bcf	31,0	;volatile
  3872                           
  3873                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  3874  12D7  305A               	movlw	90
  3875  12D8  1283               	bcf	3,5	;RP0=0, select bank2
  3876  12D9  1703               	bsf	3,6	;RP1=1, select bank2
  3877  12DA  0099               	movwf	(??_LCD_Init^(0+256)+1)
  3878  12DB  30C3               	movlw	195
  3879  12DC  0098               	movwf	??_LCD_Init^(0+256)
  3880  12DD                     u4347:	
  3881  12DD  0B98               	decfsz	??_LCD_Init^(0+256),f
  3882  12DE  2ADD               	goto	u4347
  3883  12DF  0B99               	decfsz	(??_LCD_Init^(0+256)+1),f
  3884  12E0  2ADD               	goto	u4347
  3885                           
  3886                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  3887  12E1  3030               	movlw	48
  3888  12E2  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3889                           
  3890                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  3891  12E7  3018               	movlw	24
  3892  12E8  1283               	bcf	3,5	;RP0=0, select bank2
  3893  12E9  1703               	bsf	3,6	;RP1=1, select bank2
  3894  12EA  0099               	movwf	(??_LCD_Init^(0+256)+1)
  3895  12EB  30EF               	movlw	239
  3896  12EC  0098               	movwf	??_LCD_Init^(0+256)
  3897  12ED                     u4357:	
  3898  12ED  0B98               	decfsz	??_LCD_Init^(0+256),f
  3899  12EE  2AED               	goto	u4357
  3900  12EF  0B99               	decfsz	(??_LCD_Init^(0+256)+1),f
  3901  12F0  2AED               	goto	u4357
  3902                           
  3903                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  3904  12F1  3030               	movlw	48
  3905  12F2  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3906                           
  3907                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  3908  12F7  3099               	movlw	153
  3909  12F8  1283               	bcf	3,5	;RP0=0, select bank2
  3910  12F9  1703               	bsf	3,6	;RP1=1, select bank2
  3911  12FA  0098               	movwf	??_LCD_Init^(0+256)
  3912  12FB                     u4367:	
  3913  12FB  0B98               	decfsz	??_LCD_Init^(0+256),f
  3914  12FC  2AFB               	goto	u4367
  3915                           
  3916                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  3917  12FD  3030               	movlw	48
  3918  12FE  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3919                           
  3920                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3921  1303  303D               	movlw	61
  3922  1304  1283               	bcf	3,5	;RP0=0, select bank2
  3923  1305  1703               	bsf	3,6	;RP1=1, select bank2
  3924  1306  0098               	movwf	??_LCD_Init^(0+256)
  3925  1307                     u4377:	
  3926  1307  0B98               	decfsz	??_LCD_Init^(0+256),f
  3927  1308  2B07               	goto	u4377
  3928                           
  3929                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  3930  1309  3038               	movlw	56
  3931  130A  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3932                           
  3933                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3934  130F  303D               	movlw	61
  3935  1310  1283               	bcf	3,5	;RP0=0, select bank2
  3936  1311  1703               	bsf	3,6	;RP1=1, select bank2
  3937  1312  0098               	movwf	??_LCD_Init^(0+256)
  3938  1313                     u4387:	
  3939  1313  0B98               	decfsz	??_LCD_Init^(0+256),f
  3940  1314  2B13               	goto	u4387
  3941                           
  3942                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  3943  1315  3001               	movlw	1
  3944  1316  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3945                           
  3946                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  3947  131B  300C               	movlw	12
  3948  131C  1283               	bcf	3,5	;RP0=0, select bank2
  3949  131D  1703               	bsf	3,6	;RP1=1, select bank2
  3950  131E  0099               	movwf	(??_LCD_Init^(0+256)+1)
  3951  131F  30F7               	movlw	247
  3952  1320  0098               	movwf	??_LCD_Init^(0+256)
  3953  1321                     u4397:	
  3954  1321  0B98               	decfsz	??_LCD_Init^(0+256),f
  3955  1322  2B21               	goto	u4397
  3956  1323  0B99               	decfsz	(??_LCD_Init^(0+256)+1),f
  3957  1324  2B21               	goto	u4397
  3958                           
  3959                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  3960  1325  300C               	movlw	12
  3961  1326  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3962                           
  3963                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3964  132B  303D               	movlw	61
  3965  132C  1283               	bcf	3,5	;RP0=0, select bank2
  3966  132D  1703               	bsf	3,6	;RP1=1, select bank2
  3967  132E  0098               	movwf	??_LCD_Init^(0+256)
  3968  132F                     u4407:	
  3969  132F  0B98               	decfsz	??_LCD_Init^(0+256),f
  3970  1330  2B2F               	goto	u4407
  3971                           
  3972                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  3973  1331  3006               	movlw	6
  3974  1332  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  3975                           
  3976                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3977  1337  303D               	movlw	61
  3978  1338  1283               	bcf	3,5	;RP0=0, select bank2
  3979  1339  1703               	bsf	3,6	;RP1=1, select bank2
  3980  133A  0098               	movwf	??_LCD_Init^(0+256)
  3981  133B                     u4417:	
  3982  133B  0B98               	decfsz	??_LCD_Init^(0+256),f
  3983  133C  2B3B               	goto	u4417
  3984  133D  0008               	return
  3985  133E                     __end_of_LCD_Init:	
  3986                           
  3987                           	psect	text16
  3988  1FBF                     __ptext16:	
  3989 ;; *************** function _LCD_Cursor *****************
  3990 ;; Defined at:
  3991 ;;		line 10 in file "C:\Users\filip\programs\FuzzySI\firmware\lcd.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  Row             1    wreg     unsigned char 
  3994 ;;  Col             1    6[BANK2 ] unsigned char 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  Row             1    8[BANK2 ] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;		None               void
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       0       0       0       1
  4007 ;;      Locals:         0       0       0       0       1
  4008 ;;      Temps:          0       0       0       0       1
  4009 ;;      Totals:         0       0       0       0       3
  4010 ;;Total ram usage:        3 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    5
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_main
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _LCD_Cursor
  4022  1FBF                     _LCD_Cursor:	
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  4026                           ;LCD_Cursor@Row stored from wreg
  4027  1FBF  1283               	bcf	3,5	;RP0=0, select bank2
  4028  1FC0  1703               	bsf	3,6	;RP1=1, select bank2
  4029  1FC1  0098               	movwf	LCD_Cursor@Row^(0+256)
  4030                           
  4031                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  4032  1FC2  1283               	bcf	3,5	;RP0=0, select bank0
  4033  1FC3  1303               	bcf	3,6	;RP1=0, select bank0
  4034  1FC4  1009               	bcf	9,0	;volatile
  4035                           
  4036                           ;lcd.c: 14: if (Row == 0)
  4037  1FC5  1283               	bcf	3,5	;RP0=0, select bank2
  4038  1FC6  1703               	bsf	3,6	;RP1=1, select bank2
  4039  1FC7  0898               	movf	LCD_Cursor@Row^(0+256),f
  4040  1FC8  1D03               	skipz
  4041  1FC9  2FCD               	goto	l3305
  4042                           
  4043                           ;lcd.c: 15: {
  4044                           ;lcd.c: 16: PORTD = 0x80 + Col;
  4045  1FCA  0816               	movf	LCD_Cursor@Col^(0+256),w
  4046  1FCB  3E80               	addlw	128
  4047  1FCC  2FD1               	goto	L2
  4048  1FCD                     l3305:	
  4049                           ;lcd.c: 17: }
  4050                           
  4051                           
  4052                           ;lcd.c: 18: else
  4053                           ;lcd.c: 19: {
  4054                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  4055  1FCD  1283               	bcf	3,5	;RP0=0, select bank2
  4056  1FCE  1703               	bsf	3,6	;RP1=1, select bank2
  4057  1FCF  0816               	movf	LCD_Cursor@Col^(0+256),w
  4058  1FD0  3EC0               	addlw	192
  4059  1FD1                     L2:	
  4060  1FD1  1283               	bcf	3,5	;RP0=0, select bank0
  4061  1FD2  1303               	bcf	3,6	;RP1=0, select bank0
  4062  1FD3  0088               	movwf	8	;volatile
  4063                           
  4064                           ;lcd.c: 21: }
  4065                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  4066  1FD4  1489               	bsf	9,1	;volatile
  4067                           
  4068                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4069  1FD5  303D               	movlw	61
  4070  1FD6  1283               	bcf	3,5	;RP0=0, select bank2
  4071  1FD7  1703               	bsf	3,6	;RP1=1, select bank2
  4072  1FD8  0097               	movwf	??_LCD_Cursor^(0+256)
  4073  1FD9                     u4427:	
  4074  1FD9  0B97               	decfsz	??_LCD_Cursor^(0+256),f
  4075  1FDA  2FD9               	goto	u4427
  4076                           
  4077                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  4078  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4079  1FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4080  1FDD  1089               	bcf	9,1	;volatile
  4081  1FDE  0008               	return
  4082  1FDF                     __end_of_LCD_Cursor:	
  4083                           
  4084                           	psect	text17
  4085  10F1                     __ptext17:	
  4086 ;; *************** function _LCD_Clear *****************
  4087 ;; Defined at:
  4088 ;;		line 71 in file "C:\Users\filip\programs\FuzzySI\firmware\lcd.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;		None               void
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       2
  4105 ;;      Totals:         0       0       0       0       2
  4106 ;;Total ram usage:        2 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    6
  4109 ;; This function calls:
  4110 ;;		_LCD_WriteCmd
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function _LCD_Clear
  4118  10F1                     _LCD_Clear:	
  4119                           
  4120                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  4124  10F1  3001               	movlw	1
  4125  10F2  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  4126                           
  4127                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  4128  10F7  300C               	movlw	12
  4129  10F8  1283               	bcf	3,5	;RP0=0, select bank2
  4130  10F9  1703               	bsf	3,6	;RP1=1, select bank2
  4131  10FA  0099               	movwf	(??_LCD_Clear^(0+256)+1)
  4132  10FB  30F7               	movlw	247
  4133  10FC  0098               	movwf	??_LCD_Clear^(0+256)
  4134  10FD                     u4437:	
  4135  10FD  0B98               	decfsz	??_LCD_Clear^(0+256),f
  4136  10FE  28FD               	goto	u4437
  4137  10FF  0B99               	decfsz	(??_LCD_Clear^(0+256)+1),f
  4138  1100  28FD               	goto	u4437
  4139                           
  4140                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  4141  1101  300C               	movlw	12
  4142  1102  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  4143                           
  4144                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4145  1107  303D               	movlw	61
  4146  1108  1283               	bcf	3,5	;RP0=0, select bank2
  4147  1109  1703               	bsf	3,6	;RP1=1, select bank2
  4148  110A  0098               	movwf	??_LCD_Clear^(0+256)
  4149  110B                     u4447:	
  4150  110B  0B98               	decfsz	??_LCD_Clear^(0+256),f
  4151  110C  290B               	goto	u4447
  4152                           
  4153                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  4154  110D  3006               	movlw	6
  4155  110E  160A  158A  2776  160A  118A  	fcall	_LCD_WriteCmd
  4156                           
  4157                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4158  1113  303D               	movlw	61
  4159  1114  1283               	bcf	3,5	;RP0=0, select bank2
  4160  1115  1703               	bsf	3,6	;RP1=1, select bank2
  4161  1116  0098               	movwf	??_LCD_Clear^(0+256)
  4162  1117                     u4457:	
  4163  1117  0B98               	decfsz	??_LCD_Clear^(0+256),f
  4164  1118  2917               	goto	u4457
  4165  1119  0008               	return
  4166  111A                     __end_of_LCD_Clear:	
  4167                           
  4168                           	psect	text18
  4169  1F76                     __ptext18:	
  4170 ;; *************** function _LCD_WriteCmd *****************
  4171 ;; Defined at:
  4172 ;;		line 32 in file "C:\Users\filip\programs\FuzzySI\firmware\lcd.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  Byte            1    wreg     unsigned char 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  Byte            1    7[BANK2 ] unsigned char 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       1
  4188 ;;      Temps:          0       0       0       0       1
  4189 ;;      Totals:         0       0       0       0       2
  4190 ;;Total ram usage:        2 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		Nothing
  4195 ;; This function is called by:
  4196 ;;		_LCD_Clear
  4197 ;;		_LCD_Init
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function _LCD_WriteCmd
  4203  1F76                     _LCD_WriteCmd:	
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _LCD_WriteCmd: [wreg]
  4207                           ;LCD_WriteCmd@Byte stored from wreg
  4208  1F76  1283               	bcf	3,5	;RP0=0, select bank2
  4209  1F77  1703               	bsf	3,6	;RP1=1, select bank2
  4210  1F78  0097               	movwf	LCD_WriteCmd@Byte^(0+256)
  4211                           
  4212                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  4213  1F79  1283               	bcf	3,5	;RP0=0, select bank0
  4214  1F7A  1303               	bcf	3,6	;RP1=0, select bank0
  4215  1F7B  1009               	bcf	9,0	;volatile
  4216                           
  4217                           ;lcd.c: 36: PORTD = Byte;
  4218  1F7C  1283               	bcf	3,5	;RP0=0, select bank2
  4219  1F7D  1703               	bsf	3,6	;RP1=1, select bank2
  4220  1F7E  0817               	movf	LCD_WriteCmd@Byte^(0+256),w
  4221  1F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4222  1F80  1303               	bcf	3,6	;RP1=0, select bank0
  4223  1F81  0088               	movwf	8	;volatile
  4224                           
  4225                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  4226  1F82  1489               	bsf	9,1	;volatile
  4227                           
  4228                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  4229  1F83  303D               	movlw	61
  4230  1F84  1283               	bcf	3,5	;RP0=0, select bank2
  4231  1F85  1703               	bsf	3,6	;RP1=1, select bank2
  4232  1F86  0096               	movwf	??_LCD_WriteCmd^(0+256)
  4233  1F87                     u4467:	
  4234  1F87  0B96               	decfsz	??_LCD_WriteCmd^(0+256),f
  4235  1F88  2F87               	goto	u4467
  4236                           
  4237                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  4238  1F89  1283               	bcf	3,5	;RP0=0, select bank0
  4239  1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  4240  1F8B  1089               	bcf	9,1	;volatile
  4241  1F8C  0008               	return
  4242  1F8D                     __end_of_LCD_WriteCmd:	
  4243                           
  4244                           	psect	text19
  4245  1F50                     __ptext19:	
  4246 ;; *************** function _ADC_Init *****************
  4247 ;; Defined at:
  4248 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware\adc.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		None
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0
  4265 ;;      Totals:         0       0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    5
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_main
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _ADC_Init
  4278  1F50                     _ADC_Init:	
  4279                           
  4280                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in _ADC_Init: []
  4284  1F50  1683               	bsf	3,5	;RP0=1, select bank1
  4285  1F51  1303               	bcf	3,6	;RP1=0, select bank1
  4286  1F52  179F               	bsf	31,7	;volatile
  4287                           
  4288                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  4289  1F53  159F               	bsf	31,3	;volatile
  4290                           
  4291                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  4292  1F54  151F               	bsf	31,2	;volatile
  4293                           
  4294                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  4295  1F55  149F               	bsf	31,1	;volatile
  4296                           
  4297                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  4298  1F56  101F               	bcf	31,0	;volatile
  4299                           
  4300                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  4301  1F57  1283               	bcf	3,5	;RP0=0, select bank0
  4302  1F58  1303               	bcf	3,6	;RP1=0, select bank0
  4303  1F59  179F               	bsf	31,7	;volatile
  4304                           
  4305                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  4306  1F5A  131F               	bcf	31,6	;volatile
  4307                           
  4308                           ;adc.c: 42: PIE1bits.ADIE = 0;
  4309  1F5B  1683               	bsf	3,5	;RP0=1, select bank1
  4310  1F5C  1303               	bcf	3,6	;RP1=0, select bank1
  4311  1F5D  130C               	bcf	12,6	;volatile
  4312                           
  4313                           ;adc.c: 43: PIR1bits.ADIF = 0;
  4314  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  4315  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4316  1F60  130C               	bcf	12,6	;volatile
  4317  1F61  0008               	return
  4318  1F62                     __end_of_ADC_Init:	
  4319                           
  4320                           	psect	text20
  4321  1484                     __ptext20:	
  4322 ;; *************** function _ISR *****************
  4323 ;; Defined at:
  4324 ;;		line 132 in file "C:\Users\filip\programs\FuzzySI\firmware\main.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;		None               void
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, pclath, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       6
  4341 ;;      Totals:         0       0       0       0       6
  4342 ;;Total ram usage:        6 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    4
  4345 ;; This function calls:
  4346 ;;		___ftdiv
  4347 ;;		___ftmul
  4348 ;;		___fttol
  4349 ;;		___lwtoft
  4350 ;;		_fuzzy
  4351 ;;		i1_TIMER0_Set
  4352 ;; This function is called by:
  4353 ;;		Interrupt level 1
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           
  4358                           ;psect for function _ISR
  4359  1484                     _ISR:	
  4360                           
  4361                           ;main.c: 135: if (PIR1bits.RCIF)
  4362  1484  1283               	bcf	3,5	;RP0=0, select bank0
  4363  1485  1303               	bcf	3,6	;RP1=0, select bank0
  4364  1486  1A8C               	btfsc	12,5	;volatile
  4365                           
  4366                           ;main.c: 136: {
  4367                           ;main.c: 139: PIR1bits.RCIF = 0;
  4368  1487  128C               	bcf	12,5	;volatile
  4369                           
  4370                           ;main.c: 140: }
  4371                           ;main.c: 143: if (PIR1bits.ADIF)
  4372  1488  1B0C               	btfsc	12,6	;volatile
  4373                           
  4374                           ;main.c: 144: {
  4375                           ;main.c: 148: PIR1bits.ADIF = 0;
  4376  1489  130C               	bcf	12,6	;volatile
  4377                           
  4378                           ;main.c: 149: }
  4379                           ;main.c: 153: if (INTCONbits.T0IF)
  4380  148A  1D0B               	btfss	11,2	;volatile
  4381  148B  2D29               	goto	i1l3481
  4382                           
  4383                           ;main.c: 154: {
  4384                           ;main.c: 156: TIMER0_Set(238);
  4385  148C  30EE               	movlw	238
  4386  148D  160A  158A  272F  160A  118A  	fcall	i1_TIMER0_Set
  4387                           
  4388                           ;main.c: 159: if (contagens_tm0 < 499)
  4389  1492  3001               	movlw	1
  4390  1493  1283               	bcf	3,5	;RP0=0, select bank2
  4391  1494  1703               	bsf	3,6	;RP1=1, select bank2
  4392  1495  0240               	subwf	(_contagens_tm0+1)^(0+256),w
  4393  1496  30F3               	movlw	243
  4394  1497  1903               	skipnz
  4395  1498  023F               	subwf	_contagens_tm0^(0+256),w
  4396  1499  1803               	skipnc
  4397  149A  2CA5               	goto	i1l3467
  4398                           
  4399                           ;main.c: 160: {
  4400                           ;main.c: 162: contagens_tm0++;
  4401  149B  3001               	movlw	1
  4402  149C  07BF               	addwf	_contagens_tm0^(0+256),f
  4403  149D  1803               	skipnc
  4404  149E  0AC0               	incf	(_contagens_tm0+1)^(0+256),f
  4405  149F  3000               	movlw	0
  4406  14A0  07C0               	addwf	(_contagens_tm0+1)^(0+256),f
  4407                           
  4408                           ;main.c: 165: PORTBbits.RB6 = 1;
  4409  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  4410  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  4411  14A3  1706               	bsf	6,6	;volatile
  4412                           
  4413                           ;main.c: 166: }
  4414  14A4  2D28               	goto	i1l3479
  4415  14A5                     i1l3467:	
  4416                           
  4417                           ;main.c: 167: else
  4418                           ;main.c: 168: {
  4419                           ;main.c: 170: contagens_tm0 = 0;
  4420  14A5  1283               	bcf	3,5	;RP0=0, select bank2
  4421  14A6  1703               	bsf	3,6	;RP1=1, select bank2
  4422  14A7  01BF               	clrf	_contagens_tm0^(0+256)
  4423  14A8  01C0               	clrf	(_contagens_tm0+1)^(0+256)
  4424                           
  4425                           ;main.c: 173: pulsos = (TMR1H << 8) + TMR1L;
  4426  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  4427  14AA  1303               	bcf	3,6	;RP1=0, select bank0
  4428  14AB  080F               	movf	15,w	;volatile
  4429  14AC  1283               	bcf	3,5	;RP0=0, select bank2
  4430  14AD  1703               	bsf	3,6	;RP1=1, select bank2
  4431  14AE  01C2               	clrf	(_pulsos+1)^(0+256)
  4432  14AF  07C2               	addwf	(_pulsos+1)^(0+256),f
  4433  14B0  1283               	bcf	3,5	;RP0=0, select bank0
  4434  14B1  1303               	bcf	3,6	;RP1=0, select bank0
  4435  14B2  080E               	movf	14,w	;volatile
  4436  14B3  1283               	bcf	3,5	;RP0=0, select bank2
  4437  14B4  1703               	bsf	3,6	;RP1=1, select bank2
  4438  14B5  01C1               	clrf	_pulsos^(0+256)
  4439  14B6  07C1               	addwf	_pulsos^(0+256),f
  4440                           
  4441                           ;main.c: 174: rpm = ((pulsos / 7.0) * 120);
  4442  14B7  0842               	movf	(_pulsos+1)^(0+256),w
  4443  14B8  01F9               	clrf	___lwtoft@c+1
  4444  14B9  07F9               	addwf	___lwtoft@c+1,f
  4445  14BA  0841               	movf	_pulsos^(0+256),w
  4446  14BB  01F8               	clrf	___lwtoft@c
  4447  14BC  07F8               	addwf	___lwtoft@c,f
  4448  14BD  160A  158A  2762  160A  118A  	fcall	___lwtoft
  4449  14C2  0878               	movf	?___lwtoft,w
  4450  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  4451  14C4  1303               	bcf	3,6	;RP1=0, select bank0
  4452  14C5  00AA               	movwf	___ftdiv@f1
  4453  14C6  0879               	movf	?___lwtoft+1,w
  4454  14C7  00AB               	movwf	___ftdiv@f1+1
  4455  14C8  087A               	movf	?___lwtoft+2,w
  4456  14C9  00AC               	movwf	___ftdiv@f1+2
  4457  14CA  3000               	movlw	0
  4458  14CB  00A7               	movwf	___ftdiv@f2
  4459  14CC  30E0               	movlw	224
  4460  14CD  00A8               	movwf	___ftdiv@f2+1
  4461  14CE  3040               	movlw	64
  4462  14CF  00A9               	movwf	___ftdiv@f2+2
  4463  14D0  160A  118A  23CC  160A  118A  	fcall	___ftdiv
  4464  14D5  1283               	bcf	3,5	;RP0=0, select bank0
  4465  14D6  1303               	bcf	3,6	;RP1=0, select bank0
  4466  14D7  0827               	movf	?___ftdiv,w
  4467  14D8  00BA               	movwf	___ftmul@f2
  4468  14D9  0828               	movf	?___ftdiv+1,w
  4469  14DA  00BB               	movwf	___ftmul@f2+1
  4470  14DB  0829               	movf	?___ftdiv+2,w
  4471  14DC  00BC               	movwf	___ftmul@f2+2
  4472  14DD  3000               	movlw	0
  4473  14DE  00B7               	movwf	___ftmul@f1
  4474  14DF  30F0               	movlw	240
  4475  14E0  00B8               	movwf	___ftmul@f1+1
  4476  14E1  3042               	movlw	66
  4477  14E2  00B9               	movwf	___ftmul@f1+2
  4478  14E3  160A  118A  253E  160A  118A  	fcall	___ftmul
  4479  14E8  1283               	bcf	3,5	;RP0=0, select bank0
  4480  14E9  1303               	bcf	3,6	;RP1=0, select bank0
  4481  14EA  0837               	movf	?___ftmul,w
  4482  14EB  00C7               	movwf	___fttol@f1
  4483  14EC  0838               	movf	?___ftmul+1,w
  4484  14ED  00C8               	movwf	___fttol@f1+1
  4485  14EE  0839               	movf	?___ftmul+2,w
  4486  14EF  00C9               	movwf	___fttol@f1+2
  4487  14F0  160A  118A  233E  160A  118A  	fcall	___fttol
  4488  14F5  1283               	bcf	3,5	;RP0=0, select bank0
  4489  14F6  1303               	bcf	3,6	;RP1=0, select bank0
  4490  14F7  0848               	movf	?___fttol+1,w
  4491  14F8  1683               	bsf	3,5	;RP0=1, select bank1
  4492  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  4493  14FA  01EF               	clrf	(_rpm+1)^(0+128)
  4494  14FB  07EF               	addwf	(_rpm+1)^(0+128),f
  4495  14FC  1283               	bcf	3,5	;RP0=0, select bank0
  4496  14FD  1303               	bcf	3,6	;RP1=0, select bank0
  4497  14FE  0847               	movf	?___fttol,w
  4498  14FF  1683               	bsf	3,5	;RP0=1, select bank1
  4499  1500  1303               	bcf	3,6	;RP1=0, select bank1
  4500  1501  01EE               	clrf	_rpm^(0+128)
  4501  1502  07EE               	addwf	_rpm^(0+128),f
  4502                           
  4503                           ;main.c: 177: erro_atual = setpoint - rpm;
  4504  1503  096E               	comf	_rpm^(0+128),w
  4505  1504  1283               	bcf	3,5	;RP0=0, select bank2
  4506  1505  1703               	bsf	3,6	;RP1=1, select bank2
  4507  1506  0090               	movwf	??_ISR^(0+256)
  4508  1507  1683               	bsf	3,5	;RP0=1, select bank1
  4509  1508  1303               	bcf	3,6	;RP1=0, select bank1
  4510  1509  096F               	comf	(_rpm+1)^(0+128),w
  4511  150A  1283               	bcf	3,5	;RP0=0, select bank2
  4512  150B  1703               	bsf	3,6	;RP1=1, select bank2
  4513  150C  0091               	movwf	(??_ISR^(0+256)+1)
  4514  150D  0A90               	incf	??_ISR^(0+256),f
  4515  150E  1903               	skipnz
  4516  150F  0A91               	incf	(??_ISR^(0+256)+1),f
  4517  1510  0855               	movf	_setpoint^(0+256),w
  4518  1511  0710               	addwf	??_ISR^(0+256),w
  4519  1512  1283               	bcf	3,5	;RP0=0, select bank0
  4520  1513  1303               	bcf	3,6	;RP1=0, select bank0
  4521  1514  00EE               	movwf	_erro_atual
  4522  1515  1283               	bcf	3,5	;RP0=0, select bank2
  4523  1516  1703               	bsf	3,6	;RP1=1, select bank2
  4524  1517  0856               	movf	(_setpoint+1)^(0+256),w
  4525  1518  1803               	skipnc
  4526  1519  0A56               	incf	(_setpoint+1)^(0+256),w
  4527  151A  0711               	addwf	(??_ISR+1)^(0+256),w
  4528  151B  1283               	bcf	3,5	;RP0=0, select bank0
  4529  151C  1303               	bcf	3,6	;RP1=0, select bank0
  4530  151D  00EF               	movwf	_erro_atual+1
  4531                           
  4532                           ;main.c: 178: fuzzy();
  4533  151E  120A  158A  2542  160A  118A  	fcall	_fuzzy
  4534                           
  4535                           ;main.c: 182: TMR1L = 0x00;
  4536  1523  1283               	bcf	3,5	;RP0=0, select bank0
  4537  1524  1303               	bcf	3,6	;RP1=0, select bank0
  4538  1525  018E               	clrf	14	;volatile
  4539                           
  4540                           ;main.c: 183: TMR1H = 0x00;
  4541  1526  018F               	clrf	15	;volatile
  4542                           
  4543                           ;main.c: 186: PORTBbits.RB6 = 0;
  4544  1527  1306               	bcf	6,6	;volatile
  4545  1528                     i1l3479:	
  4546                           
  4547                           ;main.c: 187: }
  4548                           ;main.c: 190: INTCONbits.T0IF = 0;
  4549  1528  110B               	bcf	11,2	;volatile
  4550  1529                     i1l3481:	
  4551                           
  4552                           ;main.c: 191: }
  4553                           ;main.c: 194: if (PIR1bits.TMR1IF)
  4554  1529  180C               	btfsc	12,0	;volatile
  4555                           
  4556                           ;main.c: 195: {
  4557                           ;main.c: 199: PIR1bits.TMR1IF = 0;
  4558  152A  100C               	bcf	12,0	;volatile
  4559                           
  4560                           ;main.c: 200: }
  4561                           ;main.c: 203: if (PIR1bits.SSPIF)
  4562  152B  198C               	btfsc	12,3	;volatile
  4563                           
  4564                           ;main.c: 204: {
  4565                           ;main.c: 208: PIR1bits.SSPIF = 0;
  4566  152C  118C               	bcf	12,3	;volatile
  4567  152D  1283               	bcf	3,5	;RP0=0, select bank2
  4568  152E  1703               	bsf	3,6	;RP1=1, select bank2
  4569  152F  0815               	movf	(??_ISR+5)^(0+256),w
  4570  1530  1283               	bcf	3,5	;RP0=0, select bank0
  4571  1531  1303               	bcf	3,6	;RP1=0, select bank0
  4572  1532  00FF               	movwf	127
  4573  1533  1283               	bcf	3,5	;RP0=0, select bank2
  4574  1534  1703               	bsf	3,6	;RP1=1, select bank2
  4575  1535  0814               	movf	(??_ISR+4)^(0+256),w
  4576  1536  008A               	movwf	10
  4577  1537  0813               	movf	(??_ISR+3)^(0+256),w
  4578  1538  0084               	movwf	4
  4579  1539  0E12               	swapf	(??_ISR+2)^(0+256),w
  4580  153A  0083               	movwf	3
  4581  153B  0EFE               	swapf	126,f
  4582  153C  0E7E               	swapf	126,w
  4583  153D  0009               	retfie
  4584  153E                     __end_of_ISR:	
  4585                           
  4586                           	psect	intentry
  4587  0004                     __pintentry:	
  4588                           ;incstack = 0
  4589                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4590                           
  4591  0004                     interrupt_function:	
  4592  007E                     saved_w	set	btemp
  4593  0004  00FE               	movwf	btemp
  4594  0005  0E03               	swapf	3,w
  4595  0006  1283               	bcf	3,5	;RP0=0, select bank2
  4596  0007  1703               	bsf	3,6	;RP1=1, select bank2
  4597  0008  0092               	movwf	(??_ISR+2)^(0+256)
  4598  0009  0804               	movf	4,w
  4599  000A  0093               	movwf	(??_ISR+3)^(0+256)
  4600  000B  080A               	movf	10,w
  4601  000C  0094               	movwf	(??_ISR+4)^(0+256)
  4602  000D  1283               	bcf	3,5	;RP0=0, select bank0
  4603  000E  1303               	bcf	3,6	;RP1=0, select bank0
  4604  000F  087F               	movf	btemp+1,w
  4605  0010  1283               	bcf	3,5	;RP0=0, select bank2
  4606  0011  1703               	bsf	3,6	;RP1=1, select bank2
  4607  0012  0095               	movwf	(??_ISR+5)^(0+256)
  4608  0013  160A  118A  2C84   	ljmp	_ISR
  4609                           
  4610                           	psect	text21
  4611  1F2F                     __ptext21:	
  4612 ;; *************** function i1_TIMER0_Set *****************
  4613 ;; Defined at:
  4614 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware\timers.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  contagens       1    wreg     unsigned char 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  contagens       1    0[COMMON] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;		None               void
  4621 ;; Registers used:
  4622 ;;		wreg
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       0       0       0
  4629 ;;      Locals:         1       0       0       0       0
  4630 ;;      Temps:          0       0       0       0       0
  4631 ;;      Totals:         1       0       0       0       0
  4632 ;;Total ram usage:        1 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_ISR
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function i1_TIMER0_Set
  4643  1F2F                     i1_TIMER0_Set:	
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in i1_TIMER0_Set: [wreg]
  4647                           ;i1TIMER0_Set@contagens stored from wreg
  4648  1F2F  00F0               	movwf	i1TIMER0_Set@contagens
  4649                           
  4650                           ;timers.c: 22: TMR0 = contagens;
  4651  1F30  0870               	movf	i1TIMER0_Set@contagens,w
  4652  1F31  1283               	bcf	3,5	;RP0=0, select bank0
  4653  1F32  1303               	bcf	3,6	;RP1=0, select bank0
  4654  1F33  0081               	movwf	1	;volatile
  4655  1F34  0008               	return
  4656  1F35                     __end_ofi1_TIMER0_Set:	
  4657                           
  4658                           	psect	text22
  4659  0D42                     __ptext22:	
  4660 ;; *************** function _fuzzy *****************
  4661 ;; Defined at:
  4662 ;;		line 102 in file "C:\Users\filip\programs\FuzzySI\firmware\main.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  freiaM          3   93[BANK3 ] float 
  4667 ;;  freia           3   90[BANK3 ] float 
  4668 ;;  mantem          3   87[BANK3 ] float 
  4669 ;;  acelera         3   84[BANK3 ] float 
  4670 ;;  aceleraM        3   81[BANK3 ] float 
  4671 ;;  maior           3   57[BANK0 ] float 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;		None               void
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         0       0       0       0       0
  4682 ;;      Locals:         0      21      78      96       0
  4683 ;;      Temps:          0       0       0       0       0
  4684 ;;      Totals:         0      21      78      96       0
  4685 ;;Total ram usage:      195 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    3
  4688 ;; This function calls:
  4689 ;;		___awtoft
  4690 ;;		___ftge
  4691 ;;		___ftmul
  4692 ;;		___fttol
  4693 ;;		_trapezoidal
  4694 ;;		_triangular
  4695 ;;		i1_PWM_DutyCycle2
  4696 ;; This function is called by:
  4697 ;;		_ISR
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function _fuzzy
  4703  0D42                     _fuzzy:	
  4704                           
  4705                           ;main.c: 104: float aceleraM = trapezoidal(erro_atual, -4000, -4300, -6000, -6000);
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _fuzzy: [wreg+status,2+status,0+pclath+cstack]
  4709  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  4710  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  4711  0D44  086F               	movf	_erro_atual+1,w
  4712  0D45  01F9               	clrf	___awtoft@c+1
  4713  0D46  07F9               	addwf	___awtoft@c+1,f
  4714  0D47  086E               	movf	_erro_atual,w
  4715  0D48  01F8               	clrf	___awtoft@c
  4716  0D49  07F8               	addwf	___awtoft@c,f
  4717  0D4A  160A  158A  27DF  120A  158A  	fcall	___awtoft
  4718  0D4F  0878               	movf	?___awtoft,w
  4719  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4720  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0D52  00B7               	movwf	trapezoidal@x
  4722  0D53  0879               	movf	?___awtoft+1,w
  4723  0D54  00B8               	movwf	trapezoidal@x+1
  4724  0D55  087A               	movf	?___awtoft+2,w
  4725  0D56  00B9               	movwf	trapezoidal@x+2
  4726  0D57  3000               	movlw	0
  4727  0D58  00BA               	movwf	trapezoidal@a
  4728  0D59  307A               	movlw	122
  4729  0D5A  00BB               	movwf	trapezoidal@a+1
  4730  0D5B  30C5               	movlw	197
  4731  0D5C  00BC               	movwf	trapezoidal@a+2
  4732  0D5D  3060               	movlw	96
  4733  0D5E  00BD               	movwf	trapezoidal@b
  4734  0D5F  3086               	movlw	134
  4735  0D60  00BE               	movwf	trapezoidal@b+1
  4736  0D61  30C5               	movlw	197
  4737  0D62  00BF               	movwf	trapezoidal@b+2
  4738  0D63  3080               	movlw	128
  4739  0D64  00C0               	movwf	trapezoidal@c
  4740  0D65  30BB               	movlw	187
  4741  0D66  00C1               	movwf	trapezoidal@c+1
  4742  0D67  30C5               	movlw	197
  4743  0D68  00C2               	movwf	trapezoidal@c+2
  4744  0D69  3080               	movlw	128
  4745  0D6A  00C3               	movwf	trapezoidal@d
  4746  0D6B  30BB               	movlw	187
  4747  0D6C  00C4               	movwf	trapezoidal@d+1
  4748  0D6D  30C5               	movlw	197
  4749  0D6E  00C5               	movwf	trapezoidal@d+2
  4750  0D6F  120A  158A  223B  120A  158A  	fcall	_trapezoidal
  4751  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  4753  0D76  0837               	movf	?_trapezoidal,w
  4754  0D77  1683               	bsf	3,5	;RP0=1, select bank3
  4755  0D78  1703               	bsf	3,6	;RP1=1, select bank3
  4756  0D79  00E1               	movwf	fuzzy@aceleraM^(0+384)
  4757  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4758  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4759  0D7C  0838               	movf	?_trapezoidal+1,w
  4760  0D7D  1683               	bsf	3,5	;RP0=1, select bank3
  4761  0D7E  1703               	bsf	3,6	;RP1=1, select bank3
  4762  0D7F  00E2               	movwf	(fuzzy@aceleraM+1)^(0+384)
  4763  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  4764  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  4765  0D82  0839               	movf	?_trapezoidal+2,w
  4766  0D83  1683               	bsf	3,5	;RP0=1, select bank3
  4767  0D84  1703               	bsf	3,6	;RP1=1, select bank3
  4768  0D85  00E3               	movwf	(fuzzy@aceleraM+2)^(0+384)
  4769                           
  4770                           ;main.c: 105: float acelera = trapezoidal(erro_atual, -80, -200, -3900, -4200);
  4771  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  4772  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  4773  0D88  086F               	movf	_erro_atual+1,w
  4774  0D89  01F9               	clrf	___awtoft@c+1
  4775  0D8A  07F9               	addwf	___awtoft@c+1,f
  4776  0D8B  086E               	movf	_erro_atual,w
  4777  0D8C  01F8               	clrf	___awtoft@c
  4778  0D8D  07F8               	addwf	___awtoft@c,f
  4779  0D8E  160A  158A  27DF  120A  158A  	fcall	___awtoft
  4780  0D93  0878               	movf	?___awtoft,w
  4781  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  4782  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  4783  0D96  00B7               	movwf	trapezoidal@x
  4784  0D97  0879               	movf	?___awtoft+1,w
  4785  0D98  00B8               	movwf	trapezoidal@x+1
  4786  0D99  087A               	movf	?___awtoft+2,w
  4787  0D9A  00B9               	movwf	trapezoidal@x+2
  4788  0D9B  3000               	movlw	0
  4789  0D9C  00BA               	movwf	trapezoidal@a
  4790  0D9D  30A0               	movlw	160
  4791  0D9E  00BB               	movwf	trapezoidal@a+1
  4792  0D9F  30C2               	movlw	194
  4793  0DA0  00BC               	movwf	trapezoidal@a+2
  4794  0DA1  3000               	movlw	0
  4795  0DA2  00BD               	movwf	trapezoidal@b
  4796  0DA3  3048               	movlw	72
  4797  0DA4  00BE               	movwf	trapezoidal@b+1
  4798  0DA5  30C3               	movlw	195
  4799  0DA6  00BF               	movwf	trapezoidal@b+2
  4800  0DA7  30C0               	movlw	192
  4801  0DA8  00C0               	movwf	trapezoidal@c
  4802  0DA9  3073               	movlw	115
  4803  0DAA  00C1               	movwf	trapezoidal@c+1
  4804  0DAB  30C5               	movlw	197
  4805  0DAC  00C2               	movwf	trapezoidal@c+2
  4806  0DAD  3040               	movlw	64
  4807  0DAE  00C3               	movwf	trapezoidal@d
  4808  0DAF  3083               	movlw	131
  4809  0DB0  00C4               	movwf	trapezoidal@d+1
  4810  0DB1  30C5               	movlw	197
  4811  0DB2  00C5               	movwf	trapezoidal@d+2
  4812  0DB3  120A  158A  223B  120A  158A  	fcall	_trapezoidal
  4813  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  4814  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  4815  0DBA  0837               	movf	?_trapezoidal,w
  4816  0DBB  1683               	bsf	3,5	;RP0=1, select bank3
  4817  0DBC  1703               	bsf	3,6	;RP1=1, select bank3
  4818  0DBD  00E4               	movwf	fuzzy@acelera^(0+384)
  4819  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0DC0  0838               	movf	?_trapezoidal+1,w
  4822  0DC1  1683               	bsf	3,5	;RP0=1, select bank3
  4823  0DC2  1703               	bsf	3,6	;RP1=1, select bank3
  4824  0DC3  00E5               	movwf	(fuzzy@acelera+1)^(0+384)
  4825  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  4826  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  4827  0DC6  0839               	movf	?_trapezoidal+2,w
  4828  0DC7  1683               	bsf	3,5	;RP0=1, select bank3
  4829  0DC8  1703               	bsf	3,6	;RP1=1, select bank3
  4830  0DC9  00E6               	movwf	(fuzzy@acelera+2)^(0+384)
  4831                           
  4832                           ;main.c: 106: float mantem = triangular (erro_atual, -100, -0, 100);
  4833  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0DCC  086F               	movf	_erro_atual+1,w
  4836  0DCD  01F9               	clrf	___awtoft@c+1
  4837  0DCE  07F9               	addwf	___awtoft@c+1,f
  4838  0DCF  086E               	movf	_erro_atual,w
  4839  0DD0  01F8               	clrf	___awtoft@c
  4840  0DD1  07F8               	addwf	___awtoft@c,f
  4841  0DD2  160A  158A  27DF  120A  158A  	fcall	___awtoft
  4842  0DD7  0878               	movf	?___awtoft,w
  4843  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  4844  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  4845  0DDA  00B7               	movwf	triangular@x
  4846  0DDB  0879               	movf	?___awtoft+1,w
  4847  0DDC  00B8               	movwf	triangular@x+1
  4848  0DDD  087A               	movf	?___awtoft+2,w
  4849  0DDE  00B9               	movwf	triangular@x+2
  4850  0DDF  3000               	movlw	0
  4851  0DE0  00BA               	movwf	triangular@a
  4852  0DE1  30C8               	movlw	200
  4853  0DE2  00BB               	movwf	triangular@a+1
  4854  0DE3  30C2               	movlw	194
  4855  0DE4  00BC               	movwf	triangular@a+2
  4856  0DE5  3000               	movlw	0
  4857  0DE6  00BD               	movwf	triangular@b
  4858  0DE7  3000               	movlw	0
  4859  0DE8  00BE               	movwf	triangular@b+1
  4860  0DE9  3000               	movlw	0
  4861  0DEA  00BF               	movwf	triangular@b+2
  4862  0DEB  3000               	movlw	0
  4863  0DEC  00C0               	movwf	triangular@c
  4864  0DED  30C8               	movlw	200
  4865  0DEE  00C1               	movwf	triangular@c+1
  4866  0DEF  3042               	movlw	66
  4867  0DF0  00C2               	movwf	triangular@c+2
  4868  0DF1  120A  158A  211D  120A  158A  	fcall	_triangular
  4869  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  4870  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  4871  0DF8  0837               	movf	?_triangular,w
  4872  0DF9  1683               	bsf	3,5	;RP0=1, select bank3
  4873  0DFA  1703               	bsf	3,6	;RP1=1, select bank3
  4874  0DFB  00E7               	movwf	fuzzy@mantem^(0+384)
  4875  0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  4876  0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  4877  0DFE  0838               	movf	?_triangular+1,w
  4878  0DFF  1683               	bsf	3,5	;RP0=1, select bank3
  4879  0E00  1703               	bsf	3,6	;RP1=1, select bank3
  4880  0E01  00E8               	movwf	(fuzzy@mantem+1)^(0+384)
  4881  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  4882  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  4883  0E04  0839               	movf	?_triangular+2,w
  4884  0E05  1683               	bsf	3,5	;RP0=1, select bank3
  4885  0E06  1703               	bsf	3,6	;RP1=1, select bank3
  4886  0E07  00E9               	movwf	(fuzzy@mantem+2)^(0+384)
  4887                           
  4888                           ;main.c: 107: float freia = trapezoidal(erro_atual, 80, 200, 3900, 4200);
  4889  0E08  1283               	bcf	3,5	;RP0=0, select bank0
  4890  0E09  1303               	bcf	3,6	;RP1=0, select bank0
  4891  0E0A  086F               	movf	_erro_atual+1,w
  4892  0E0B  01F9               	clrf	___awtoft@c+1
  4893  0E0C  07F9               	addwf	___awtoft@c+1,f
  4894  0E0D  086E               	movf	_erro_atual,w
  4895  0E0E  01F8               	clrf	___awtoft@c
  4896  0E0F  07F8               	addwf	___awtoft@c,f
  4897  0E10  160A  158A  27DF  120A  158A  	fcall	___awtoft
  4898  0E15  0878               	movf	?___awtoft,w
  4899  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  4900  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  4901  0E18  00B7               	movwf	trapezoidal@x
  4902  0E19  0879               	movf	?___awtoft+1,w
  4903  0E1A  00B8               	movwf	trapezoidal@x+1
  4904  0E1B  087A               	movf	?___awtoft+2,w
  4905  0E1C  00B9               	movwf	trapezoidal@x+2
  4906  0E1D  3000               	movlw	0
  4907  0E1E  00BA               	movwf	trapezoidal@a
  4908  0E1F  30A0               	movlw	160
  4909  0E20  00BB               	movwf	trapezoidal@a+1
  4910  0E21  3042               	movlw	66
  4911  0E22  00BC               	movwf	trapezoidal@a+2
  4912  0E23  3000               	movlw	0
  4913  0E24  00BD               	movwf	trapezoidal@b
  4914  0E25  3048               	movlw	72
  4915  0E26  00BE               	movwf	trapezoidal@b+1
  4916  0E27  3043               	movlw	67
  4917  0E28  00BF               	movwf	trapezoidal@b+2
  4918  0E29  30C0               	movlw	192
  4919  0E2A  00C0               	movwf	trapezoidal@c
  4920  0E2B  3073               	movlw	115
  4921  0E2C  00C1               	movwf	trapezoidal@c+1
  4922  0E2D  3045               	movlw	69
  4923  0E2E  00C2               	movwf	trapezoidal@c+2
  4924  0E2F  3040               	movlw	64
  4925  0E30  00C3               	movwf	trapezoidal@d
  4926  0E31  3083               	movlw	131
  4927  0E32  00C4               	movwf	trapezoidal@d+1
  4928  0E33  3045               	movlw	69
  4929  0E34  00C5               	movwf	trapezoidal@d+2
  4930  0E35  120A  158A  223B  120A  158A  	fcall	_trapezoidal
  4931  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0E3C  0837               	movf	?_trapezoidal,w
  4934  0E3D  1683               	bsf	3,5	;RP0=1, select bank3
  4935  0E3E  1703               	bsf	3,6	;RP1=1, select bank3
  4936  0E3F  00EA               	movwf	fuzzy@freia^(0+384)
  4937  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4938  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4939  0E42  0838               	movf	?_trapezoidal+1,w
  4940  0E43  1683               	bsf	3,5	;RP0=1, select bank3
  4941  0E44  1703               	bsf	3,6	;RP1=1, select bank3
  4942  0E45  00EB               	movwf	(fuzzy@freia+1)^(0+384)
  4943  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0E48  0839               	movf	?_trapezoidal+2,w
  4946  0E49  1683               	bsf	3,5	;RP0=1, select bank3
  4947  0E4A  1703               	bsf	3,6	;RP1=1, select bank3
  4948  0E4B  00EC               	movwf	(fuzzy@freia+2)^(0+384)
  4949                           
  4950                           ;main.c: 108: float freiaM = trapezoidal(erro_atual, 4000, 4300, 6000, 6000);
  4951  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0E4E  086F               	movf	_erro_atual+1,w
  4954  0E4F  01F9               	clrf	___awtoft@c+1
  4955  0E50  07F9               	addwf	___awtoft@c+1,f
  4956  0E51  086E               	movf	_erro_atual,w
  4957  0E52  01F8               	clrf	___awtoft@c
  4958  0E53  07F8               	addwf	___awtoft@c,f
  4959  0E54  160A  158A  27DF  120A  158A  	fcall	___awtoft
  4960  0E59  0878               	movf	?___awtoft,w
  4961  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0E5C  00B7               	movwf	trapezoidal@x
  4964  0E5D  0879               	movf	?___awtoft+1,w
  4965  0E5E  00B8               	movwf	trapezoidal@x+1
  4966  0E5F  087A               	movf	?___awtoft+2,w
  4967  0E60  00B9               	movwf	trapezoidal@x+2
  4968  0E61  3000               	movlw	0
  4969  0E62  00BA               	movwf	trapezoidal@a
  4970  0E63  307A               	movlw	122
  4971  0E64  00BB               	movwf	trapezoidal@a+1
  4972  0E65  3045               	movlw	69
  4973  0E66  00BC               	movwf	trapezoidal@a+2
  4974  0E67  3060               	movlw	96
  4975  0E68  00BD               	movwf	trapezoidal@b
  4976  0E69  3086               	movlw	134
  4977  0E6A  00BE               	movwf	trapezoidal@b+1
  4978  0E6B  3045               	movlw	69
  4979  0E6C  00BF               	movwf	trapezoidal@b+2
  4980  0E6D  3080               	movlw	128
  4981  0E6E  00C0               	movwf	trapezoidal@c
  4982  0E6F  30BB               	movlw	187
  4983  0E70  00C1               	movwf	trapezoidal@c+1
  4984  0E71  3045               	movlw	69
  4985  0E72  00C2               	movwf	trapezoidal@c+2
  4986  0E73  3080               	movlw	128
  4987  0E74  00C3               	movwf	trapezoidal@d
  4988  0E75  30BB               	movlw	187
  4989  0E76  00C4               	movwf	trapezoidal@d+1
  4990  0E77  3045               	movlw	69
  4991  0E78  00C5               	movwf	trapezoidal@d+2
  4992  0E79  120A  158A  223B  120A  158A  	fcall	_trapezoidal
  4993  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  4994  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  4995  0E80  0837               	movf	?_trapezoidal,w
  4996  0E81  1683               	bsf	3,5	;RP0=1, select bank3
  4997  0E82  1703               	bsf	3,6	;RP1=1, select bank3
  4998  0E83  00ED               	movwf	fuzzy@freiaM^(0+384)
  4999  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0E86  0838               	movf	?_trapezoidal+1,w
  5002  0E87  1683               	bsf	3,5	;RP0=1, select bank3
  5003  0E88  1703               	bsf	3,6	;RP1=1, select bank3
  5004  0E89  00EE               	movwf	(fuzzy@freiaM+1)^(0+384)
  5005  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0E8C  0839               	movf	?_trapezoidal+2,w
  5008  0E8D  1683               	bsf	3,5	;RP0=1, select bank3
  5009  0E8E  1703               	bsf	3,6	;RP1=1, select bank3
  5010  0E8F  00EF               	movwf	(fuzzy@freiaM+2)^(0+384)
  5011                           
  5012                           ;main.c: 110: float maior = ((((((((((((freiaM>.1?.1:freiaM) > (freia>.25?.25:freia)) ? 
      +                          (freiaM>.1?.1:freiaM) : (freia>.25?.25:freia))) > (mantem>0.5?0.5:mantem)) ? ((((freiaM>
      +                          .1?.1:freiaM) > (freia>.25?.25:freia)) ? (freiaM>.1?.1:freiaM) : (freia>.25?.25:freia)))
  5013  0E90  30CD               	movlw	205
  5014  0E91  00F0               	movwf	___ftge@ff1
  5015  0E92  30CC               	movlw	204
  5016  0E93  00F1               	movwf	___ftge@ff1+1
  5017  0E94  303D               	movlw	61
  5018  0E95  00F2               	movwf	___ftge@ff1+2
  5019  0E96  086D               	movf	fuzzy@freiaM^(0+384),w
  5020  0E97  00F3               	movwf	___ftge@ff2
  5021  0E98  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  5022  0E99  00F4               	movwf	___ftge@ff2+1
  5023  0E9A  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  5024  0E9B  00F5               	movwf	___ftge@ff2+2
  5025  0E9C  160A  118A  220C  120A  158A  	fcall	___ftge
  5026  0EA1  1C03               	btfss	3,0
  5027  0EA2  2EB5               	goto	i1l2903
  5028  0EA3  1683               	bsf	3,5	;RP0=1, select bank3
  5029  0EA4  1703               	bsf	3,6	;RP1=1, select bank3
  5030  0EA5  086D               	movf	fuzzy@freiaM^(0+384),w
  5031  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  5032  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  5033  0EA8  00E8               	movwf	_fuzzy$209
  5034  0EA9  1683               	bsf	3,5	;RP0=1, select bank3
  5035  0EAA  1703               	bsf	3,6	;RP1=1, select bank3
  5036  0EAB  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  5037  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  5038  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  5039  0EAE  00E9               	movwf	_fuzzy$209+1
  5040  0EAF  1683               	bsf	3,5	;RP0=1, select bank3
  5041  0EB0  1703               	bsf	3,6	;RP1=1, select bank3
  5042  0EB1  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  5043  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  5044  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  5045  0EB4  2EBC               	goto	L3
  5046  0EB5                     i1l2903:	
  5047  0EB5  30CD               	movlw	205
  5048  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0EB8  00E8               	movwf	_fuzzy$209
  5051  0EB9  30CC               	movlw	204
  5052  0EBA  00E9               	movwf	_fuzzy$209+1
  5053  0EBB  303D               	movlw	61
  5054  0EBC                     L3:	
  5055  0EBC  00EA               	movwf	_fuzzy$209+2
  5056  0EBD  3000               	movlw	0
  5057  0EBE  00F0               	movwf	___ftge@ff1
  5058  0EBF  3080               	movlw	128
  5059  0EC0  00F1               	movwf	___ftge@ff1+1
  5060  0EC1  303E               	movlw	62
  5061  0EC2  00F2               	movwf	___ftge@ff1+2
  5062  0EC3  1683               	bsf	3,5	;RP0=1, select bank3
  5063  0EC4  1703               	bsf	3,6	;RP1=1, select bank3
  5064  0EC5  086A               	movf	fuzzy@freia^(0+384),w
  5065  0EC6  00F3               	movwf	___ftge@ff2
  5066  0EC7  086B               	movf	(fuzzy@freia+1)^(0+384),w
  5067  0EC8  00F4               	movwf	___ftge@ff2+1
  5068  0EC9  086C               	movf	(fuzzy@freia+2)^(0+384),w
  5069  0ECA  00F5               	movwf	___ftge@ff2+2
  5070  0ECB  160A  118A  220C  120A  158A  	fcall	___ftge
  5071  0ED0  1C03               	btfss	3,0
  5072  0ED1  2EE4               	goto	i1l2909
  5073  0ED2  1683               	bsf	3,5	;RP0=1, select bank3
  5074  0ED3  1703               	bsf	3,6	;RP1=1, select bank3
  5075  0ED4  086A               	movf	fuzzy@freia^(0+384),w
  5076  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5077  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5078  0ED7  00EB               	movwf	_fuzzy$210
  5079  0ED8  1683               	bsf	3,5	;RP0=1, select bank3
  5080  0ED9  1703               	bsf	3,6	;RP1=1, select bank3
  5081  0EDA  086B               	movf	(fuzzy@freia+1)^(0+384),w
  5082  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  5083  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  5084  0EDD  00EC               	movwf	_fuzzy$210+1
  5085  0EDE  1683               	bsf	3,5	;RP0=1, select bank3
  5086  0EDF  1703               	bsf	3,6	;RP1=1, select bank3
  5087  0EE0  086C               	movf	(fuzzy@freia+2)^(0+384),w
  5088  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0EE3  2EEB               	goto	L4
  5091  0EE4                     i1l2909:	
  5092  0EE4  3000               	movlw	0
  5093  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0EE7  00EB               	movwf	_fuzzy$210
  5096  0EE8  3080               	movlw	128
  5097  0EE9  00EC               	movwf	_fuzzy$210+1
  5098  0EEA  303E               	movlw	62
  5099  0EEB                     L4:	
  5100  0EEB  00ED               	movwf	_fuzzy$210+2
  5101  0EEC  086B               	movf	_fuzzy$210,w
  5102  0EED  00F0               	movwf	___ftge@ff1
  5103  0EEE  086C               	movf	_fuzzy$210+1,w
  5104  0EEF  00F1               	movwf	___ftge@ff1+1
  5105  0EF0  086D               	movf	_fuzzy$210+2,w
  5106  0EF1  00F2               	movwf	___ftge@ff1+2
  5107  0EF2  0868               	movf	_fuzzy$209,w
  5108  0EF3  00F3               	movwf	___ftge@ff2
  5109  0EF4  0869               	movf	_fuzzy$209+1,w
  5110  0EF5  00F4               	movwf	___ftge@ff2+1
  5111  0EF6  086A               	movf	_fuzzy$209+2,w
  5112  0EF7  00F5               	movwf	___ftge@ff2+2
  5113  0EF8  160A  118A  220C  120A  158A  	fcall	___ftge
  5114  0EFD  1C03               	btfss	3,0
  5115  0EFE  2F3C               	goto	i1l2919
  5116  0EFF  3000               	movlw	0
  5117  0F00  00F0               	movwf	___ftge@ff1
  5118  0F01  3080               	movlw	128
  5119  0F02  00F1               	movwf	___ftge@ff1+1
  5120  0F03  303E               	movlw	62
  5121  0F04  00F2               	movwf	___ftge@ff1+2
  5122  0F05  1683               	bsf	3,5	;RP0=1, select bank3
  5123  0F06  1703               	bsf	3,6	;RP1=1, select bank3
  5124  0F07  086A               	movf	fuzzy@freia^(0+384),w
  5125  0F08  00F3               	movwf	___ftge@ff2
  5126  0F09  086B               	movf	(fuzzy@freia+1)^(0+384),w
  5127  0F0A  00F4               	movwf	___ftge@ff2+1
  5128  0F0B  086C               	movf	(fuzzy@freia+2)^(0+384),w
  5129  0F0C  00F5               	movwf	___ftge@ff2+2
  5130  0F0D  160A  118A  220C  120A  158A  	fcall	___ftge
  5131  0F12  1C03               	btfss	3,0
  5132  0F13  2F26               	goto	i1l2917
  5133  0F14  1683               	bsf	3,5	;RP0=1, select bank3
  5134  0F15  1703               	bsf	3,6	;RP1=1, select bank3
  5135  0F16  086A               	movf	fuzzy@freia^(0+384),w
  5136  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  5137  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  5138  0F19  00A0               	movwf	_fuzzy$211^(0+128)
  5139  0F1A  1683               	bsf	3,5	;RP0=1, select bank3
  5140  0F1B  1703               	bsf	3,6	;RP1=1, select bank3
  5141  0F1C  086B               	movf	(fuzzy@freia+1)^(0+384),w
  5142  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  5143  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  5144  0F1F  00A1               	movwf	(_fuzzy$211+1)^(0+128)
  5145  0F20  1683               	bsf	3,5	;RP0=1, select bank3
  5146  0F21  1703               	bsf	3,6	;RP1=1, select bank3
  5147  0F22  086C               	movf	(fuzzy@freia+2)^(0+384),w
  5148  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  5149  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  5150  0F25  2F2D               	goto	L5
  5151  0F26                     i1l2917:	
  5152  0F26  3000               	movlw	0
  5153  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  5154  0F28  1303               	bcf	3,6	;RP1=0, select bank1
  5155  0F29  00A0               	movwf	_fuzzy$211^(0+128)
  5156  0F2A  3080               	movlw	128
  5157  0F2B  00A1               	movwf	(_fuzzy$211+1)^(0+128)
  5158  0F2C  303E               	movlw	62
  5159  0F2D                     L5:	
  5160  0F2D  00A2               	movwf	(_fuzzy$211+2)^(0+128)
  5161  0F2E  0820               	movf	_fuzzy$211^(0+128),w
  5162  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0F31  00E5               	movwf	_fuzzy$208
  5165  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  5166  0F33  1303               	bcf	3,6	;RP1=0, select bank1
  5167  0F34  0821               	movf	(_fuzzy$211+1)^(0+128),w
  5168  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0F37  00E6               	movwf	_fuzzy$208+1
  5171  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  5172  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  5173  0F3A  0822               	movf	(_fuzzy$211+2)^(0+128),w
  5174  0F3B  2F78               	goto	L6
  5175  0F3C                     i1l2919:	
  5176  0F3C  30CD               	movlw	205
  5177  0F3D  00F0               	movwf	___ftge@ff1
  5178  0F3E  30CC               	movlw	204
  5179  0F3F  00F1               	movwf	___ftge@ff1+1
  5180  0F40  303D               	movlw	61
  5181  0F41  00F2               	movwf	___ftge@ff1+2
  5182  0F42  1683               	bsf	3,5	;RP0=1, select bank3
  5183  0F43  1703               	bsf	3,6	;RP1=1, select bank3
  5184  0F44  086D               	movf	fuzzy@freiaM^(0+384),w
  5185  0F45  00F3               	movwf	___ftge@ff2
  5186  0F46  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  5187  0F47  00F4               	movwf	___ftge@ff2+1
  5188  0F48  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  5189  0F49  00F5               	movwf	___ftge@ff2+2
  5190  0F4A  160A  118A  220C  120A  158A  	fcall	___ftge
  5191  0F4F  1C03               	btfss	3,0
  5192  0F50  2F63               	goto	i1l2923
  5193  0F51  1683               	bsf	3,5	;RP0=1, select bank3
  5194  0F52  1703               	bsf	3,6	;RP1=1, select bank3
  5195  0F53  086D               	movf	fuzzy@freiaM^(0+384),w
  5196  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  5197  0F55  1303               	bcf	3,6	;RP1=0, select bank1
  5198  0F56  00A3               	movwf	_fuzzy$212^(0+128)
  5199  0F57  1683               	bsf	3,5	;RP0=1, select bank3
  5200  0F58  1703               	bsf	3,6	;RP1=1, select bank3
  5201  0F59  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  5202  0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  5203  0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  5204  0F5C  00A4               	movwf	(_fuzzy$212+1)^(0+128)
  5205  0F5D  1683               	bsf	3,5	;RP0=1, select bank3
  5206  0F5E  1703               	bsf	3,6	;RP1=1, select bank3
  5207  0F5F  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  5208  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  5209  0F61  1303               	bcf	3,6	;RP1=0, select bank1
  5210  0F62  2F6A               	goto	L7
  5211  0F63                     i1l2923:	
  5212  0F63  30CD               	movlw	205
  5213  0F64  1683               	bsf	3,5	;RP0=1, select bank1
  5214  0F65  1303               	bcf	3,6	;RP1=0, select bank1
  5215  0F66  00A3               	movwf	_fuzzy$212^(0+128)
  5216  0F67  30CC               	movlw	204
  5217  0F68  00A4               	movwf	(_fuzzy$212+1)^(0+128)
  5218  0F69  303D               	movlw	61
  5219  0F6A                     L7:	
  5220  0F6A  00A5               	movwf	(_fuzzy$212+2)^(0+128)
  5221  0F6B  0823               	movf	_fuzzy$212^(0+128),w
  5222  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  5223  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  5224  0F6E  00E5               	movwf	_fuzzy$208
  5225  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  5226  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  5227  0F71  0824               	movf	(_fuzzy$212+1)^(0+128),w
  5228  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  5229  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  5230  0F74  00E6               	movwf	_fuzzy$208+1
  5231  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  5232  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  5233  0F77  0825               	movf	(_fuzzy$212+2)^(0+128),w
  5234  0F78                     L6:	
  5235  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  5236  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  5237  0F7A  00E7               	movwf	_fuzzy$208+2
  5238  0F7B  3000               	movlw	0
  5239  0F7C  00F0               	movwf	___ftge@ff1
  5240  0F7D  3000               	movlw	0
  5241  0F7E  00F1               	movwf	___ftge@ff1+1
  5242  0F7F  303F               	movlw	63
  5243  0F80  00F2               	movwf	___ftge@ff1+2
  5244  0F81  1683               	bsf	3,5	;RP0=1, select bank3
  5245  0F82  1703               	bsf	3,6	;RP1=1, select bank3
  5246  0F83  0867               	movf	fuzzy@mantem^(0+384),w
  5247  0F84  00F3               	movwf	___ftge@ff2
  5248  0F85  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  5249  0F86  00F4               	movwf	___ftge@ff2+1
  5250  0F87  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  5251  0F88  00F5               	movwf	___ftge@ff2+2
  5252  0F89  160A  118A  220C  120A  158A  	fcall	___ftge
  5253  0F8E  1C03               	btfss	3,0
  5254  0F8F  2FA2               	goto	i1l2929
  5255  0F90  1683               	bsf	3,5	;RP0=1, select bank3
  5256  0F91  1703               	bsf	3,6	;RP1=1, select bank3
  5257  0F92  0867               	movf	fuzzy@mantem^(0+384),w
  5258  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  5259  0F94  1303               	bcf	3,6	;RP1=0, select bank1
  5260  0F95  00A6               	movwf	_fuzzy$213^(0+128)
  5261  0F96  1683               	bsf	3,5	;RP0=1, select bank3
  5262  0F97  1703               	bsf	3,6	;RP1=1, select bank3
  5263  0F98  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  5264  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  5265  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  5266  0F9B  00A7               	movwf	(_fuzzy$213+1)^(0+128)
  5267  0F9C  1683               	bsf	3,5	;RP0=1, select bank3
  5268  0F9D  1703               	bsf	3,6	;RP1=1, select bank3
  5269  0F9E  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  5270  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  5271  0FA0  1303               	bcf	3,6	;RP1=0, select bank1
  5272  0FA1  2FA9               	goto	L8
  5273  0FA2                     i1l2929:	
  5274  0FA2  3000               	movlw	0
  5275  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  5276  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  5277  0FA5  00A6               	movwf	_fuzzy$213^(0+128)
  5278  0FA6  3000               	movlw	0
  5279  0FA7  00A7               	movwf	(_fuzzy$213+1)^(0+128)
  5280  0FA8  303F               	movlw	63
  5281  0FA9                     L8:	
  5282  0FA9  00A8               	movwf	(_fuzzy$213+2)^(0+128)
  5283  0FAA  0826               	movf	_fuzzy$213^(0+128),w
  5284  0FAB  00F0               	movwf	___ftge@ff1
  5285  0FAC  0827               	movf	(_fuzzy$213+1)^(0+128),w
  5286  0FAD  00F1               	movwf	___ftge@ff1+1
  5287  0FAE  0828               	movf	(_fuzzy$213+2)^(0+128),w
  5288  0FAF  00F2               	movwf	___ftge@ff1+2
  5289  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  5290  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  5291  0FB2  0865               	movf	_fuzzy$208,w
  5292  0FB3  00F3               	movwf	___ftge@ff2
  5293  0FB4  0866               	movf	_fuzzy$208+1,w
  5294  0FB5  00F4               	movwf	___ftge@ff2+1
  5295  0FB6  0867               	movf	_fuzzy$208+2,w
  5296  0FB7  00F5               	movwf	___ftge@ff2+2
  5297  0FB8  160A  118A  220C  120A  158A  	fcall	___ftge
  5298  0FBD  120A  158A  1C03   	btfss	3,0
  5299  0FC0  2809               	goto	i1l2939
  5300  0FC1  3000               	movlw	0
  5301  0FC2  00F0               	movwf	___ftge@ff1
  5302  0FC3  3000               	movlw	0
  5303  0FC4  00F1               	movwf	___ftge@ff1+1
  5304  0FC5  303F               	movlw	63
  5305  0FC6  00F2               	movwf	___ftge@ff1+2
  5306  0FC7  1683               	bsf	3,5	;RP0=1, select bank3
  5307  0FC8  1703               	bsf	3,6	;RP1=1, select bank3
  5308  0FC9  0867               	movf	fuzzy@mantem^(0+384),w
  5309  0FCA  00F3               	movwf	___ftge@ff2
  5310  0FCB  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  5311  0FCC  00F4               	movwf	___ftge@ff2+1
  5312  0FCD  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  5313  0FCE  00F5               	movwf	___ftge@ff2+2
  5314  0FCF  160A  118A  220C  120A  158A  	fcall	___ftge
  5315  0FD4  1C03               	btfss	3,0
  5316  0FD5  2FE8               	goto	i1l2937
  5317  0FD6  1683               	bsf	3,5	;RP0=1, select bank3
  5318  0FD7  1703               	bsf	3,6	;RP1=1, select bank3
  5319  0FD8  0867               	movf	fuzzy@mantem^(0+384),w
  5320  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  5321  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  5322  0FDB  00A9               	movwf	_fuzzy$214^(0+128)
  5323  0FDC  1683               	bsf	3,5	;RP0=1, select bank3
  5324  0FDD  1703               	bsf	3,6	;RP1=1, select bank3
  5325  0FDE  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  5326  0FDF  1683               	bsf	3,5	;RP0=1, select bank1
  5327  0FE0  1303               	bcf	3,6	;RP1=0, select bank1
  5328  0FE1  00AA               	movwf	(_fuzzy$214+1)^(0+128)
  5329  0FE2  1683               	bsf	3,5	;RP0=1, select bank3
  5330  0FE3  1703               	bsf	3,6	;RP1=1, select bank3
  5331  0FE4  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  5332  0FE5  1683               	bsf	3,5	;RP0=1, select bank1
  5333  0FE6  1303               	bcf	3,6	;RP1=0, select bank1
  5334  0FE7  2FEF               	goto	L9
  5335  0FE8                     i1l2937:	
  5336  0FE8  3000               	movlw	0
  5337  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  5338  0FEA  1303               	bcf	3,6	;RP1=0, select bank1
  5339  0FEB  00A9               	movwf	_fuzzy$214^(0+128)
  5340  0FEC  3000               	movlw	0
  5341  0FED  00AA               	movwf	(_fuzzy$214+1)^(0+128)
  5342  0FEE  303F               	movlw	63
  5343  0FEF                     L9:	
  5344  0FEF  00AB               	movwf	(_fuzzy$214+2)^(0+128)
  5345  0FF0  0829               	movf	_fuzzy$214^(0+128),w
  5346  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0FF3  00E2               	movwf	_fuzzy$207
  5349  0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  5350  0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  5351  0FF6  082A               	movf	(_fuzzy$214+1)^(0+128),w
  5352  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0FF9  00E3               	movwf	_fuzzy$207+1
  5355  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  5356  0FFB  1303               	bcf	3,6	;RP1=0, select bank1
  5357  0FFC  082B               	movf	(_fuzzy$214+2)^(0+128),w
  5358  0FFD  120A  158A  28F1   	goto	L10
  5359                           
  5360                           	psect	text23
  5361  1FA4                     __ptext23:	
  5362 ;; *************** function i1_PWM_DutyCycle2 *****************
  5363 ;; Defined at:
  5364 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware\pwm.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  valor           2   53[BANK0 ] int 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;		None               void
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5378 ;;      Params:         0       2       0       0       0
  5379 ;;      Locals:         0       0       0       0       0
  5380 ;;      Temps:          0       2       0       0       0
  5381 ;;      Totals:         0       4       0       0       0
  5382 ;;Total ram usage:        4 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_fuzzy
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function i1_PWM_DutyCycle2
  5393  1FA4                     i1_PWM_DutyCycle2:	
  5394                           
  5395                           ;pwm.c: 98: CCPR2L = valor >> 2;
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  5399  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  5400  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  5401  1FA6  0856               	movf	i1PWM_DutyCycle2@valor+1,w
  5402  1FA7  00D8               	movwf	??i1_PWM_DutyCycle2+1
  5403  1FA8  0855               	movf	i1PWM_DutyCycle2@valor,w
  5404  1FA9  00D7               	movwf	??i1_PWM_DutyCycle2
  5405  1FAA  0D58               	rlf	??i1_PWM_DutyCycle2+1,w
  5406  1FAB  0CD8               	rrf	??i1_PWM_DutyCycle2+1,f
  5407  1FAC  0CD7               	rrf	??i1_PWM_DutyCycle2,f
  5408  1FAD  0D58               	rlf	??i1_PWM_DutyCycle2+1,w
  5409  1FAE  0CD8               	rrf	??i1_PWM_DutyCycle2+1,f
  5410  1FAF  0CD7               	rrf	??i1_PWM_DutyCycle2,f
  5411  1FB0  0857               	movf	??i1_PWM_DutyCycle2,w
  5412  1FB1  009B               	movwf	27	;volatile
  5413                           
  5414                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  5415  1FB2  0855               	movf	i1PWM_DutyCycle2@valor,w
  5416  1FB3  00D7               	movwf	??i1_PWM_DutyCycle2
  5417  1FB4  3003               	movlw	3
  5418  1FB5                     u341_25:	
  5419  1FB5  1003               	clrc
  5420  1FB6  0DD7               	rlf	??i1_PWM_DutyCycle2,f
  5421  1FB7  3EFF               	addlw	-1
  5422  1FB8  1D03               	skipz
  5423  1FB9  2FB5               	goto	u341_25
  5424  1FBA  1003               	clrc
  5425  1FBB  0D57               	rlf	??i1_PWM_DutyCycle2,w
  5426  1FBC  380C               	iorlw	12
  5427  1FBD  009D               	movwf	29	;volatile
  5428  1FBE  0008               	return
  5429  1FBF                     __end_ofi1_PWM_DutyCycle2:	
  5430                           
  5431                           	psect	text24
  5432  091D                     __ptext24:	
  5433 ;; *************** function _triangular *****************
  5434 ;; Defined at:
  5435 ;;		line 66 in file "C:\Users\filip\programs\FuzzySI\firmware\main.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  x               3   23[BANK0 ] float 
  5438 ;;  a               3   26[BANK0 ] float 
  5439 ;;  b               3   29[BANK0 ] float 
  5440 ;;  c               3   32[BANK0 ] float 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  ua              3   35[BANK0 ] float 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  3   23[BANK0 ] float 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0, pclath, cstack
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         0      12       0       0       0
  5453 ;;      Locals:         0       3       0       0       0
  5454 ;;      Temps:          0       0       0       0       0
  5455 ;;      Totals:         0      15       0       0       0
  5456 ;;Total ram usage:       15 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    2
  5459 ;; This function calls:
  5460 ;;		___ftadd
  5461 ;;		___ftdiv
  5462 ;;		___ftge
  5463 ;;		___ftneg
  5464 ;; This function is called by:
  5465 ;;		_fuzzy
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           
  5470                           ;psect for function _triangular
  5471  091D                     _triangular:	
  5472                           
  5473                           ;main.c: 68: float ua = 0;
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _triangular: [wreg+status,2+status,0+pclath+cstack]
  5477  091D  3000               	movlw	0
  5478  091E  1283               	bcf	3,5	;RP0=0, select bank0
  5479  091F  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0920  00C3               	movwf	triangular@ua
  5481  0921  3000               	movlw	0
  5482  0922  00C4               	movwf	triangular@ua+1
  5483  0923  3000               	movlw	0
  5484  0924  00C5               	movwf	triangular@ua+2
  5485                           
  5486                           ;main.c: 70: if (x <= a)
  5487  0925  083A               	movf	triangular@a,w
  5488  0926  00F0               	movwf	___ftge@ff1
  5489  0927  083B               	movf	triangular@a+1,w
  5490  0928  00F1               	movwf	___ftge@ff1+1
  5491  0929  083C               	movf	triangular@a+2,w
  5492  092A  00F2               	movwf	___ftge@ff1+2
  5493  092B  0837               	movf	triangular@x,w
  5494  092C  00F3               	movwf	___ftge@ff2
  5495  092D  0838               	movf	triangular@x+1,w
  5496  092E  00F4               	movwf	___ftge@ff2+1
  5497  092F  0839               	movf	triangular@x+2,w
  5498  0930  00F5               	movwf	___ftge@ff2+2
  5499  0931  160A  118A  220C  120A  158A  	fcall	___ftge
  5500  0936  1803               	btfsc	3,0
  5501  0937  2A2A               	goto	L66
  5502                           
  5503                           ;main.c: 72: else if ((a < x) && (x <= b))
  5504                           
  5505                           ;main.c: 71: ua = 0;
  5506  0938  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0939  1303               	bcf	3,6	;RP1=0, select bank0
  5508  093A  083A               	movf	triangular@a,w
  5509  093B  00F0               	movwf	___ftge@ff1
  5510  093C  083B               	movf	triangular@a+1,w
  5511  093D  00F1               	movwf	___ftge@ff1+1
  5512  093E  083C               	movf	triangular@a+2,w
  5513  093F  00F2               	movwf	___ftge@ff1+2
  5514  0940  0837               	movf	triangular@x,w
  5515  0941  00F3               	movwf	___ftge@ff2
  5516  0942  0838               	movf	triangular@x+1,w
  5517  0943  00F4               	movwf	___ftge@ff2+1
  5518  0944  0839               	movf	triangular@x+2,w
  5519  0945  00F5               	movwf	___ftge@ff2+2
  5520  0946  160A  118A  220C  120A  158A  	fcall	___ftge
  5521  094B  1803               	btfsc	3,0
  5522  094C  2994               	goto	i1l2619
  5523  094D  1283               	bcf	3,5	;RP0=0, select bank0
  5524  094E  1303               	bcf	3,6	;RP1=0, select bank0
  5525  094F  083D               	movf	triangular@b,w
  5526  0950  00F0               	movwf	___ftge@ff1
  5527  0951  083E               	movf	triangular@b+1,w
  5528  0952  00F1               	movwf	___ftge@ff1+1
  5529  0953  083F               	movf	triangular@b+2,w
  5530  0954  00F2               	movwf	___ftge@ff1+2
  5531  0955  0837               	movf	triangular@x,w
  5532  0956  00F3               	movwf	___ftge@ff2
  5533  0957  0838               	movf	triangular@x+1,w
  5534  0958  00F4               	movwf	___ftge@ff2+1
  5535  0959  0839               	movf	triangular@x+2,w
  5536  095A  00F5               	movwf	___ftge@ff2+2
  5537  095B  160A  118A  220C  120A  158A  	fcall	___ftge
  5538  0960  1C03               	btfss	3,0
  5539  0961  2994               	goto	i1l2619
  5540                           
  5541                           ;main.c: 73: ua = ((x - a) / (b - a));
  5542  0962  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0963  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0964  083D               	movf	triangular@b,w
  5545  0965  00F8               	movwf	___ftadd@f1
  5546  0966  083E               	movf	triangular@b+1,w
  5547  0967  00F9               	movwf	___ftadd@f1+1
  5548  0968  083F               	movf	triangular@b+2,w
  5549  0969  00FA               	movwf	___ftadd@f1+2
  5550  096A  083A               	movf	triangular@a,w
  5551  096B  00F0               	movwf	___ftneg@f1
  5552  096C  083B               	movf	triangular@a+1,w
  5553  096D  00F1               	movwf	___ftneg@f1+1
  5554  096E  083C               	movf	triangular@a+2,w
  5555  096F  00F2               	movwf	___ftneg@f1+2
  5556  0970  160A  118A  205E  120A  158A  	fcall	___ftneg
  5557  0975  0870               	movf	?___ftneg,w
  5558  0976  00FB               	movwf	___ftadd@f2
  5559  0977  0871               	movf	?___ftneg+1,w
  5560  0978  00FC               	movwf	___ftadd@f2+1
  5561  0979  0872               	movf	?___ftneg+2,w
  5562  097A  00FD               	movwf	___ftadd@f2+2
  5563  097B  160A  118A  26F9  120A  158A  	fcall	___ftadd
  5564  0980  0878               	movf	?___ftadd,w
  5565  0981  1283               	bcf	3,5	;RP0=0, select bank0
  5566  0982  1303               	bcf	3,6	;RP1=0, select bank0
  5567  0983  00A7               	movwf	___ftdiv@f2
  5568  0984  0879               	movf	?___ftadd+1,w
  5569  0985  00A8               	movwf	___ftdiv@f2+1
  5570  0986  087A               	movf	?___ftadd+2,w
  5571  0987  00A9               	movwf	___ftdiv@f2+2
  5572  0988  0837               	movf	triangular@x,w
  5573  0989  00F8               	movwf	___ftadd@f1
  5574  098A  0838               	movf	triangular@x+1,w
  5575  098B  00F9               	movwf	___ftadd@f1+1
  5576  098C  0839               	movf	triangular@x+2,w
  5577  098D  00FA               	movwf	___ftadd@f1+2
  5578  098E  083A               	movf	triangular@a,w
  5579  098F  00F0               	movwf	___ftneg@f1
  5580  0990  083B               	movf	triangular@a+1,w
  5581  0991  00F1               	movwf	___ftneg@f1+1
  5582  0992  083C               	movf	triangular@a+2,w
  5583  0993  29EF               	goto	L67
  5584  0994                     i1l2619:	
  5585                           
  5586                           ;main.c: 74: else if ((b < x) && (x <= c))
  5587  0994  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0995  1303               	bcf	3,6	;RP1=0, select bank0
  5589  0996  083D               	movf	triangular@b,w
  5590  0997  00F0               	movwf	___ftge@ff1
  5591  0998  083E               	movf	triangular@b+1,w
  5592  0999  00F1               	movwf	___ftge@ff1+1
  5593  099A  083F               	movf	triangular@b+2,w
  5594  099B  00F2               	movwf	___ftge@ff1+2
  5595  099C  0837               	movf	triangular@x,w
  5596  099D  00F3               	movwf	___ftge@ff2
  5597  099E  0838               	movf	triangular@x+1,w
  5598  099F  00F4               	movwf	___ftge@ff2+1
  5599  09A0  0839               	movf	triangular@x+2,w
  5600  09A1  00F5               	movwf	___ftge@ff2+2
  5601  09A2  160A  118A  220C  120A  158A  	fcall	___ftge
  5602  09A7  1803               	btfsc	3,0
  5603  09A8  2A15               	goto	i1l2625
  5604  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  5605  09AA  1303               	bcf	3,6	;RP1=0, select bank0
  5606  09AB  0840               	movf	triangular@c,w
  5607  09AC  00F0               	movwf	___ftge@ff1
  5608  09AD  0841               	movf	triangular@c+1,w
  5609  09AE  00F1               	movwf	___ftge@ff1+1
  5610  09AF  0842               	movf	triangular@c+2,w
  5611  09B0  00F2               	movwf	___ftge@ff1+2
  5612  09B1  0837               	movf	triangular@x,w
  5613  09B2  00F3               	movwf	___ftge@ff2
  5614  09B3  0838               	movf	triangular@x+1,w
  5615  09B4  00F4               	movwf	___ftge@ff2+1
  5616  09B5  0839               	movf	triangular@x+2,w
  5617  09B6  00F5               	movwf	___ftge@ff2+2
  5618  09B7  160A  118A  220C  120A  158A  	fcall	___ftge
  5619  09BC  1C03               	btfss	3,0
  5620  09BD  2A15               	goto	i1l2625
  5621                           
  5622                           ;main.c: 75: ua = ((x - c) / (b - c));
  5623  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  5624  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  5625  09C0  083D               	movf	triangular@b,w
  5626  09C1  00F8               	movwf	___ftadd@f1
  5627  09C2  083E               	movf	triangular@b+1,w
  5628  09C3  00F9               	movwf	___ftadd@f1+1
  5629  09C4  083F               	movf	triangular@b+2,w
  5630  09C5  00FA               	movwf	___ftadd@f1+2
  5631  09C6  0840               	movf	triangular@c,w
  5632  09C7  00F0               	movwf	___ftneg@f1
  5633  09C8  0841               	movf	triangular@c+1,w
  5634  09C9  00F1               	movwf	___ftneg@f1+1
  5635  09CA  0842               	movf	triangular@c+2,w
  5636  09CB  00F2               	movwf	___ftneg@f1+2
  5637  09CC  160A  118A  205E  120A  158A  	fcall	___ftneg
  5638  09D1  0870               	movf	?___ftneg,w
  5639  09D2  00FB               	movwf	___ftadd@f2
  5640  09D3  0871               	movf	?___ftneg+1,w
  5641  09D4  00FC               	movwf	___ftadd@f2+1
  5642  09D5  0872               	movf	?___ftneg+2,w
  5643  09D6  00FD               	movwf	___ftadd@f2+2
  5644  09D7  160A  118A  26F9  120A  158A  	fcall	___ftadd
  5645  09DC  0878               	movf	?___ftadd,w
  5646  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  5647  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  5648  09DF  00A7               	movwf	___ftdiv@f2
  5649  09E0  0879               	movf	?___ftadd+1,w
  5650  09E1  00A8               	movwf	___ftdiv@f2+1
  5651  09E2  087A               	movf	?___ftadd+2,w
  5652  09E3  00A9               	movwf	___ftdiv@f2+2
  5653  09E4  0837               	movf	triangular@x,w
  5654  09E5  00F8               	movwf	___ftadd@f1
  5655  09E6  0838               	movf	triangular@x+1,w
  5656  09E7  00F9               	movwf	___ftadd@f1+1
  5657  09E8  0839               	movf	triangular@x+2,w
  5658  09E9  00FA               	movwf	___ftadd@f1+2
  5659  09EA  0840               	movf	triangular@c,w
  5660  09EB  00F0               	movwf	___ftneg@f1
  5661  09EC  0841               	movf	triangular@c+1,w
  5662  09ED  00F1               	movwf	___ftneg@f1+1
  5663  09EE  0842               	movf	triangular@c+2,w
  5664  09EF                     L67:	
  5665  09EF  00F2               	movwf	___ftneg@f1+2
  5666  09F0  160A  118A  205E  120A  158A  	fcall	___ftneg
  5667  09F5  0870               	movf	?___ftneg,w
  5668  09F6  00FB               	movwf	___ftadd@f2
  5669  09F7  0871               	movf	?___ftneg+1,w
  5670  09F8  00FC               	movwf	___ftadd@f2+1
  5671  09F9  0872               	movf	?___ftneg+2,w
  5672  09FA  00FD               	movwf	___ftadd@f2+2
  5673  09FB  160A  118A  26F9  120A  158A  	fcall	___ftadd
  5674  0A00  0878               	movf	?___ftadd,w
  5675  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  5676  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  5677  0A03  00AA               	movwf	___ftdiv@f1
  5678  0A04  0879               	movf	?___ftadd+1,w
  5679  0A05  00AB               	movwf	___ftdiv@f1+1
  5680  0A06  087A               	movf	?___ftadd+2,w
  5681  0A07  00AC               	movwf	___ftdiv@f1+2
  5682  0A08  160A  118A  23CC  120A  158A  	fcall	___ftdiv
  5683  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  5684  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  5685  0A0F  0827               	movf	?___ftdiv,w
  5686  0A10  00C3               	movwf	triangular@ua
  5687  0A11  0828               	movf	?___ftdiv+1,w
  5688  0A12  00C4               	movwf	triangular@ua+1
  5689  0A13  0829               	movf	?___ftdiv+2,w
  5690  0A14  2A31               	goto	L64
  5691  0A15                     i1l2625:	
  5692                           
  5693                           ;main.c: 76: else if (x > c)
  5694  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  5695  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  5696  0A17  0840               	movf	triangular@c,w
  5697  0A18  00F0               	movwf	___ftge@ff1
  5698  0A19  0841               	movf	triangular@c+1,w
  5699  0A1A  00F1               	movwf	___ftge@ff1+1
  5700  0A1B  0842               	movf	triangular@c+2,w
  5701  0A1C  00F2               	movwf	___ftge@ff1+2
  5702  0A1D  0837               	movf	triangular@x,w
  5703  0A1E  00F3               	movwf	___ftge@ff2
  5704  0A1F  0838               	movf	triangular@x+1,w
  5705  0A20  00F4               	movwf	___ftge@ff2+1
  5706  0A21  0839               	movf	triangular@x+2,w
  5707  0A22  00F5               	movwf	___ftge@ff2+2
  5708  0A23  160A  118A  220C  120A  158A  	fcall	___ftge
  5709  0A28  1803               	btfsc	3,0
  5710  0A29  2A32               	goto	i1l91
  5711  0A2A                     L66:	
  5712                           
  5713                           ;main.c: 77: ua = 0;
  5714  0A2A  3000               	movlw	0
  5715  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  5716  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  5717  0A2D  00C3               	movwf	triangular@ua
  5718  0A2E  3000               	movlw	0
  5719  0A2F  00C4               	movwf	triangular@ua+1
  5720  0A30  3000               	movlw	0
  5721  0A31                     L64:	
  5722  0A31  00C5               	movwf	triangular@ua+2
  5723  0A32                     i1l91:	
  5724                           
  5725                           ;main.c: 79: return (ua);
  5726  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  5727  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  5728  0A34  0843               	movf	triangular@ua,w
  5729  0A35  00B7               	movwf	?_triangular
  5730  0A36  0844               	movf	triangular@ua+1,w
  5731  0A37  00B8               	movwf	?_triangular+1
  5732  0A38  0845               	movf	triangular@ua+2,w
  5733  0A39  00B9               	movwf	?_triangular+2
  5734  0A3A  0008               	return
  5735  0A3B                     __end_of_triangular:	
  5736                           
  5737                           	psect	text25
  5738  0A3B                     __ptext25:	
  5739 ;; *************** function _trapezoidal *****************
  5740 ;; Defined at:
  5741 ;;		line 84 in file "C:\Users\filip\programs\FuzzySI\firmware\main.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  x               3   23[BANK0 ] float 
  5744 ;;  a               3   26[BANK0 ] float 
  5745 ;;  b               3   29[BANK0 ] float 
  5746 ;;  c               3   32[BANK0 ] float 
  5747 ;;  d               3   35[BANK0 ] float 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  ua              3   38[BANK0 ] float 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  3   23[BANK0 ] float 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, pclath, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         0      15       0       0       0
  5760 ;;      Locals:         0       3       0       0       0
  5761 ;;      Temps:          0       0       0       0       0
  5762 ;;      Totals:         0      18       0       0       0
  5763 ;;Total ram usage:       18 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    2
  5766 ;; This function calls:
  5767 ;;		___ftadd
  5768 ;;		___ftdiv
  5769 ;;		___ftge
  5770 ;;		___ftneg
  5771 ;; This function is called by:
  5772 ;;		_fuzzy
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function _trapezoidal
  5778  0A3B                     _trapezoidal:	
  5779                           
  5780                           ;main.c: 86: float ua = 0;
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in _trapezoidal: [wreg+status,2+status,0+pclath+cstack]
  5784  0A3B  3000               	movlw	0
  5785  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0A3E  00C6               	movwf	trapezoidal@ua
  5788  0A3F  3000               	movlw	0
  5789  0A40  00C7               	movwf	trapezoidal@ua+1
  5790  0A41  3000               	movlw	0
  5791  0A42  00C8               	movwf	trapezoidal@ua+2
  5792                           
  5793                           ;main.c: 88: if (x <= a)
  5794  0A43  083A               	movf	trapezoidal@a,w
  5795  0A44  00F0               	movwf	___ftge@ff1
  5796  0A45  083B               	movf	trapezoidal@a+1,w
  5797  0A46  00F1               	movwf	___ftge@ff1+1
  5798  0A47  083C               	movf	trapezoidal@a+2,w
  5799  0A48  00F2               	movwf	___ftge@ff1+2
  5800  0A49  0837               	movf	trapezoidal@x,w
  5801  0A4A  00F3               	movwf	___ftge@ff2
  5802  0A4B  0838               	movf	trapezoidal@x+1,w
  5803  0A4C  00F4               	movwf	___ftge@ff2+1
  5804  0A4D  0839               	movf	trapezoidal@x+2,w
  5805  0A4E  00F5               	movwf	___ftge@ff2+2
  5806  0A4F  160A  118A  220C  120A  158A  	fcall	___ftge
  5807  0A54  1803               	btfsc	3,0
  5808  0A55  2B7A               	goto	L72
  5809                           
  5810                           ;main.c: 90: else if ((a < x) && (x <= b))
  5811                           
  5812                           ;main.c: 89: ua = 0;
  5813  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  5814  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  5815  0A58  083A               	movf	trapezoidal@a,w
  5816  0A59  00F0               	movwf	___ftge@ff1
  5817  0A5A  083B               	movf	trapezoidal@a+1,w
  5818  0A5B  00F1               	movwf	___ftge@ff1+1
  5819  0A5C  083C               	movf	trapezoidal@a+2,w
  5820  0A5D  00F2               	movwf	___ftge@ff1+2
  5821  0A5E  0837               	movf	trapezoidal@x,w
  5822  0A5F  00F3               	movwf	___ftge@ff2
  5823  0A60  0838               	movf	trapezoidal@x+1,w
  5824  0A61  00F4               	movwf	___ftge@ff2+1
  5825  0A62  0839               	movf	trapezoidal@x+2,w
  5826  0A63  00F5               	movwf	___ftge@ff2+2
  5827  0A64  160A  118A  220C  120A  158A  	fcall	___ftge
  5828  0A69  1803               	btfsc	3,0
  5829  0A6A  2AB2               	goto	i1l2643
  5830  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  5831  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  5832  0A6D  083D               	movf	trapezoidal@b,w
  5833  0A6E  00F0               	movwf	___ftge@ff1
  5834  0A6F  083E               	movf	trapezoidal@b+1,w
  5835  0A70  00F1               	movwf	___ftge@ff1+1
  5836  0A71  083F               	movf	trapezoidal@b+2,w
  5837  0A72  00F2               	movwf	___ftge@ff1+2
  5838  0A73  0837               	movf	trapezoidal@x,w
  5839  0A74  00F3               	movwf	___ftge@ff2
  5840  0A75  0838               	movf	trapezoidal@x+1,w
  5841  0A76  00F4               	movwf	___ftge@ff2+1
  5842  0A77  0839               	movf	trapezoidal@x+2,w
  5843  0A78  00F5               	movwf	___ftge@ff2+2
  5844  0A79  160A  118A  220C  120A  158A  	fcall	___ftge
  5845  0A7E  1C03               	btfss	3,0
  5846  0A7F  2AB2               	goto	i1l2643
  5847                           
  5848                           ;main.c: 91: ua = ((x - a) / (b - a));
  5849  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  5850  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  5851  0A82  083D               	movf	trapezoidal@b,w
  5852  0A83  00F8               	movwf	___ftadd@f1
  5853  0A84  083E               	movf	trapezoidal@b+1,w
  5854  0A85  00F9               	movwf	___ftadd@f1+1
  5855  0A86  083F               	movf	trapezoidal@b+2,w
  5856  0A87  00FA               	movwf	___ftadd@f1+2
  5857  0A88  083A               	movf	trapezoidal@a,w
  5858  0A89  00F0               	movwf	___ftneg@f1
  5859  0A8A  083B               	movf	trapezoidal@a+1,w
  5860  0A8B  00F1               	movwf	___ftneg@f1+1
  5861  0A8C  083C               	movf	trapezoidal@a+2,w
  5862  0A8D  00F2               	movwf	___ftneg@f1+2
  5863  0A8E  160A  118A  205E  120A  158A  	fcall	___ftneg
  5864  0A93  0870               	movf	?___ftneg,w
  5865  0A94  00FB               	movwf	___ftadd@f2
  5866  0A95  0871               	movf	?___ftneg+1,w
  5867  0A96  00FC               	movwf	___ftadd@f2+1
  5868  0A97  0872               	movf	?___ftneg+2,w
  5869  0A98  00FD               	movwf	___ftadd@f2+2
  5870  0A99  160A  118A  26F9  120A  158A  	fcall	___ftadd
  5871  0A9E  0878               	movf	?___ftadd,w
  5872  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  5873  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  5874  0AA1  00A7               	movwf	___ftdiv@f2
  5875  0AA2  0879               	movf	?___ftadd+1,w
  5876  0AA3  00A8               	movwf	___ftdiv@f2+1
  5877  0AA4  087A               	movf	?___ftadd+2,w
  5878  0AA5  00A9               	movwf	___ftdiv@f2+2
  5879  0AA6  0837               	movf	trapezoidal@x,w
  5880  0AA7  00F8               	movwf	___ftadd@f1
  5881  0AA8  0838               	movf	trapezoidal@x+1,w
  5882  0AA9  00F9               	movwf	___ftadd@f1+1
  5883  0AAA  0839               	movf	trapezoidal@x+2,w
  5884  0AAB  00FA               	movwf	___ftadd@f1+2
  5885  0AAC  083A               	movf	trapezoidal@a,w
  5886  0AAD  00F0               	movwf	___ftneg@f1
  5887  0AAE  083B               	movf	trapezoidal@a+1,w
  5888  0AAF  00F1               	movwf	___ftneg@f1+1
  5889  0AB0  083C               	movf	trapezoidal@a+2,w
  5890  0AB1  2B3F               	goto	L74
  5891  0AB2                     i1l2643:	
  5892                           
  5893                           ;main.c: 92: else if ((b <= x) && (x <= c))
  5894  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  5896  0AB4  0837               	movf	trapezoidal@x,w
  5897  0AB5  00F0               	movwf	___ftge@ff1
  5898  0AB6  0838               	movf	trapezoidal@x+1,w
  5899  0AB7  00F1               	movwf	___ftge@ff1+1
  5900  0AB8  0839               	movf	trapezoidal@x+2,w
  5901  0AB9  00F2               	movwf	___ftge@ff1+2
  5902  0ABA  083D               	movf	trapezoidal@b,w
  5903  0ABB  00F3               	movwf	___ftge@ff2
  5904  0ABC  083E               	movf	trapezoidal@b+1,w
  5905  0ABD  00F4               	movwf	___ftge@ff2+1
  5906  0ABE  083F               	movf	trapezoidal@b+2,w
  5907  0ABF  00F5               	movwf	___ftge@ff2+2
  5908  0AC0  160A  118A  220C  120A  158A  	fcall	___ftge
  5909  0AC5  1C03               	btfss	3,0
  5910  0AC6  2AE4               	goto	i1l2649
  5911  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  5913  0AC9  0840               	movf	trapezoidal@c,w
  5914  0ACA  00F0               	movwf	___ftge@ff1
  5915  0ACB  0841               	movf	trapezoidal@c+1,w
  5916  0ACC  00F1               	movwf	___ftge@ff1+1
  5917  0ACD  0842               	movf	trapezoidal@c+2,w
  5918  0ACE  00F2               	movwf	___ftge@ff1+2
  5919  0ACF  0837               	movf	trapezoidal@x,w
  5920  0AD0  00F3               	movwf	___ftge@ff2
  5921  0AD1  0838               	movf	trapezoidal@x+1,w
  5922  0AD2  00F4               	movwf	___ftge@ff2+1
  5923  0AD3  0839               	movf	trapezoidal@x+2,w
  5924  0AD4  00F5               	movwf	___ftge@ff2+2
  5925  0AD5  160A  118A  220C  120A  158A  	fcall	___ftge
  5926  0ADA  1C03               	btfss	3,0
  5927  0ADB  2AE4               	goto	i1l2649
  5928                           
  5929                           ;main.c: 93: ua = 1;
  5930  0ADC  3000               	movlw	0
  5931  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  5932  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  5933  0ADF  00C6               	movwf	trapezoidal@ua
  5934  0AE0  3080               	movlw	128
  5935  0AE1  00C7               	movwf	trapezoidal@ua+1
  5936  0AE2  303F               	movlw	63
  5937  0AE3  2B81               	goto	L71
  5938  0AE4                     i1l2649:	
  5939                           
  5940                           ;main.c: 94: else if ((c < x) && (x <= d))
  5941  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0AE6  0840               	movf	trapezoidal@c,w
  5944  0AE7  00F0               	movwf	___ftge@ff1
  5945  0AE8  0841               	movf	trapezoidal@c+1,w
  5946  0AE9  00F1               	movwf	___ftge@ff1+1
  5947  0AEA  0842               	movf	trapezoidal@c+2,w
  5948  0AEB  00F2               	movwf	___ftge@ff1+2
  5949  0AEC  0837               	movf	trapezoidal@x,w
  5950  0AED  00F3               	movwf	___ftge@ff2
  5951  0AEE  0838               	movf	trapezoidal@x+1,w
  5952  0AEF  00F4               	movwf	___ftge@ff2+1
  5953  0AF0  0839               	movf	trapezoidal@x+2,w
  5954  0AF1  00F5               	movwf	___ftge@ff2+2
  5955  0AF2  160A  118A  220C  120A  158A  	fcall	___ftge
  5956  0AF7  1803               	btfsc	3,0
  5957  0AF8  2B65               	goto	i1l2655
  5958  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  5959  0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  5960  0AFB  0843               	movf	trapezoidal@d,w
  5961  0AFC  00F0               	movwf	___ftge@ff1
  5962  0AFD  0844               	movf	trapezoidal@d+1,w
  5963  0AFE  00F1               	movwf	___ftge@ff1+1
  5964  0AFF  0845               	movf	trapezoidal@d+2,w
  5965  0B00  00F2               	movwf	___ftge@ff1+2
  5966  0B01  0837               	movf	trapezoidal@x,w
  5967  0B02  00F3               	movwf	___ftge@ff2
  5968  0B03  0838               	movf	trapezoidal@x+1,w
  5969  0B04  00F4               	movwf	___ftge@ff2+1
  5970  0B05  0839               	movf	trapezoidal@x+2,w
  5971  0B06  00F5               	movwf	___ftge@ff2+2
  5972  0B07  160A  118A  220C  120A  158A  	fcall	___ftge
  5973  0B0C  1C03               	btfss	3,0
  5974  0B0D  2B65               	goto	i1l2655
  5975                           
  5976                           ;main.c: 95: ua = ((d - x) / (d - c));
  5977  0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  5978  0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  5979  0B10  0843               	movf	trapezoidal@d,w
  5980  0B11  00F8               	movwf	___ftadd@f1
  5981  0B12  0844               	movf	trapezoidal@d+1,w
  5982  0B13  00F9               	movwf	___ftadd@f1+1
  5983  0B14  0845               	movf	trapezoidal@d+2,w
  5984  0B15  00FA               	movwf	___ftadd@f1+2
  5985  0B16  0840               	movf	trapezoidal@c,w
  5986  0B17  00F0               	movwf	___ftneg@f1
  5987  0B18  0841               	movf	trapezoidal@c+1,w
  5988  0B19  00F1               	movwf	___ftneg@f1+1
  5989  0B1A  0842               	movf	trapezoidal@c+2,w
  5990  0B1B  00F2               	movwf	___ftneg@f1+2
  5991  0B1C  160A  118A  205E  120A  158A  	fcall	___ftneg
  5992  0B21  0870               	movf	?___ftneg,w
  5993  0B22  00FB               	movwf	___ftadd@f2
  5994  0B23  0871               	movf	?___ftneg+1,w
  5995  0B24  00FC               	movwf	___ftadd@f2+1
  5996  0B25  0872               	movf	?___ftneg+2,w
  5997  0B26  00FD               	movwf	___ftadd@f2+2
  5998  0B27  160A  118A  26F9  120A  158A  	fcall	___ftadd
  5999  0B2C  0878               	movf	?___ftadd,w
  6000  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  6001  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  6002  0B2F  00A7               	movwf	___ftdiv@f2
  6003  0B30  0879               	movf	?___ftadd+1,w
  6004  0B31  00A8               	movwf	___ftdiv@f2+1
  6005  0B32  087A               	movf	?___ftadd+2,w
  6006  0B33  00A9               	movwf	___ftdiv@f2+2
  6007  0B34  0843               	movf	trapezoidal@d,w
  6008  0B35  00F8               	movwf	___ftadd@f1
  6009  0B36  0844               	movf	trapezoidal@d+1,w
  6010  0B37  00F9               	movwf	___ftadd@f1+1
  6011  0B38  0845               	movf	trapezoidal@d+2,w
  6012  0B39  00FA               	movwf	___ftadd@f1+2
  6013  0B3A  0837               	movf	trapezoidal@x,w
  6014  0B3B  00F0               	movwf	___ftneg@f1
  6015  0B3C  0838               	movf	trapezoidal@x+1,w
  6016  0B3D  00F1               	movwf	___ftneg@f1+1
  6017  0B3E  0839               	movf	trapezoidal@x+2,w
  6018  0B3F                     L74:	
  6019  0B3F  00F2               	movwf	___ftneg@f1+2
  6020  0B40  160A  118A  205E  120A  158A  	fcall	___ftneg
  6021  0B45  0870               	movf	?___ftneg,w
  6022  0B46  00FB               	movwf	___ftadd@f2
  6023  0B47  0871               	movf	?___ftneg+1,w
  6024  0B48  00FC               	movwf	___ftadd@f2+1
  6025  0B49  0872               	movf	?___ftneg+2,w
  6026  0B4A  00FD               	movwf	___ftadd@f2+2
  6027  0B4B  160A  118A  26F9  120A  158A  	fcall	___ftadd
  6028  0B50  0878               	movf	?___ftadd,w
  6029  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  6030  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  6031  0B53  00AA               	movwf	___ftdiv@f1
  6032  0B54  0879               	movf	?___ftadd+1,w
  6033  0B55  00AB               	movwf	___ftdiv@f1+1
  6034  0B56  087A               	movf	?___ftadd+2,w
  6035  0B57  00AC               	movwf	___ftdiv@f1+2
  6036  0B58  160A  118A  23CC  120A  158A  	fcall	___ftdiv
  6037  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0B5E  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0B5F  0827               	movf	?___ftdiv,w
  6040  0B60  00C6               	movwf	trapezoidal@ua
  6041  0B61  0828               	movf	?___ftdiv+1,w
  6042  0B62  00C7               	movwf	trapezoidal@ua+1
  6043  0B63  0829               	movf	?___ftdiv+2,w
  6044  0B64  2B81               	goto	L71
  6045  0B65                     i1l2655:	
  6046                           
  6047                           ;main.c: 96: else if (x > d)
  6048  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  6049  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  6050  0B67  0843               	movf	trapezoidal@d,w
  6051  0B68  00F0               	movwf	___ftge@ff1
  6052  0B69  0844               	movf	trapezoidal@d+1,w
  6053  0B6A  00F1               	movwf	___ftge@ff1+1
  6054  0B6B  0845               	movf	trapezoidal@d+2,w
  6055  0B6C  00F2               	movwf	___ftge@ff1+2
  6056  0B6D  0837               	movf	trapezoidal@x,w
  6057  0B6E  00F3               	movwf	___ftge@ff2
  6058  0B6F  0838               	movf	trapezoidal@x+1,w
  6059  0B70  00F4               	movwf	___ftge@ff2+1
  6060  0B71  0839               	movf	trapezoidal@x+2,w
  6061  0B72  00F5               	movwf	___ftge@ff2+2
  6062  0B73  160A  118A  220C  120A  158A  	fcall	___ftge
  6063  0B78  1803               	btfsc	3,0
  6064  0B79  2B82               	goto	i1l101
  6065  0B7A                     L72:	
  6066                           
  6067                           ;main.c: 97: ua = 0;
  6068  0B7A  3000               	movlw	0
  6069  0B7B  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0B7C  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0B7D  00C6               	movwf	trapezoidal@ua
  6072  0B7E  3000               	movlw	0
  6073  0B7F  00C7               	movwf	trapezoidal@ua+1
  6074  0B80  3000               	movlw	0
  6075  0B81                     L71:	
  6076  0B81  00C8               	movwf	trapezoidal@ua+2
  6077  0B82                     i1l101:	
  6078                           
  6079                           ;main.c: 99: return (ua);
  6080  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  6081  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  6082  0B84  0846               	movf	trapezoidal@ua,w
  6083  0B85  00B7               	movwf	?_trapezoidal
  6084  0B86  0847               	movf	trapezoidal@ua+1,w
  6085  0B87  00B8               	movwf	?_trapezoidal+1
  6086  0B88  0848               	movf	trapezoidal@ua+2,w
  6087  0B89  00B9               	movwf	?_trapezoidal+2
  6088  0B8A  0008               	return
  6089  0B8B                     __end_of_trapezoidal:	
  6090                           
  6091                           	psect	text26
  6092  105E                     __ptext26:	
  6093 ;; *************** function ___ftneg *****************
  6094 ;; Defined at:
  6095 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  f1              3    0[COMMON] float 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  3    0[COMMON] float 
  6102 ;; Registers used:
  6103 ;;		wreg
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         3       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0
  6112 ;;      Totals:         3       0       0       0       0
  6113 ;;Total ram usage:        3 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_triangular
  6119 ;;		_trapezoidal
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           
  6124                           ;psect for function ___ftneg
  6125  105E                     ___ftneg:	
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in ___ftneg: [wreg]
  6129  105E  0872               	movf	___ftneg@f1+2,w
  6130  105F  0471               	iorwf	___ftneg@f1+1,w
  6131  1060  0470               	iorwf	___ftneg@f1,w
  6132  1061  1903               	skipnz
  6133  1062  0008               	return
  6134  1063  3080               	movlw	128
  6135  1064  06F2               	xorwf	___ftneg@f1+2,f
  6136  1065  0008               	return
  6137  1066                     __end_of___ftneg:	
  6138                           
  6139                           	psect	text27
  6140  120C                     __ptext27:	
  6141 ;; *************** function ___ftge *****************
  6142 ;; Defined at:
  6143 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  ff1             3    0[COMMON] float 
  6146 ;;  ff2             3    3[COMMON] float 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;		None               void
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6158 ;;      Params:         6       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0
  6160 ;;      Temps:          6       0       0       0       0
  6161 ;;      Totals:        12       0       0       0       0
  6162 ;;Total ram usage:       12 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_triangular
  6168 ;;		_trapezoidal
  6169 ;;		_fuzzy
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function ___ftge
  6175  120C                     ___ftge:	
  6176                           
  6177                           ;incstack = 0
  6178                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6179  120C  1FF2               	btfss	___ftge@ff1+2,7
  6180  120D  2A33               	goto	i1l2583
  6181  120E  3000               	movlw	0
  6182  120F  00F6               	movwf	??___ftge
  6183  1210  3000               	movlw	0
  6184  1211  00F7               	movwf	??___ftge+1
  6185  1212  3080               	movlw	128
  6186  1213  00F8               	movwf	??___ftge+2
  6187  1214  0970               	comf	___ftge@ff1,w
  6188  1215  00F9               	movwf	??___ftge+3
  6189  1216  0971               	comf	___ftge@ff1+1,w
  6190  1217  00FA               	movwf	??___ftge+4
  6191  1218  0972               	comf	___ftge@ff1+2,w
  6192  1219  00FB               	movwf	??___ftge+5
  6193  121A  0AF9               	incf	??___ftge+3,f
  6194  121B  1903               	skipnz
  6195  121C  0AFA               	incf	??___ftge+4,f
  6196  121D  1903               	skipnz
  6197  121E  0AFB               	incf	??___ftge+5,f
  6198  121F  0879               	movf	??___ftge+3,w
  6199  1220  07F6               	addwf	??___ftge,f
  6200  1221  087A               	movf	??___ftge+4,w
  6201  1222  1803               	skipnc
  6202  1223  0F7A               	incfsz	??___ftge+4,w
  6203  1224  2A26               	goto	u268_21
  6204  1225  2A27               	goto	u268_22
  6205  1226                     u268_21:	
  6206  1226  07F7               	addwf	??___ftge+1,f
  6207  1227                     u268_22:	
  6208  1227  087B               	movf	??___ftge+5,w
  6209  1228  1803               	skipnc
  6210  1229  0F7B               	incfsz	??___ftge+5,w
  6211  122A  2A2C               	goto	u268_23
  6212  122B  2A2D               	goto	u268_24
  6213  122C                     u268_23:	
  6214  122C  07F8               	addwf	??___ftge+2,f
  6215  122D                     u268_24:	
  6216  122D  0876               	movf	??___ftge,w
  6217  122E  00F0               	movwf	___ftge@ff1
  6218  122F  0877               	movf	??___ftge+1,w
  6219  1230  00F1               	movwf	___ftge@ff1+1
  6220  1231  0878               	movf	??___ftge+2,w
  6221  1232  00F2               	movwf	___ftge@ff1+2
  6222  1233                     i1l2583:	
  6223  1233  1FF5               	btfss	___ftge@ff2+2,7
  6224  1234  2A5A               	goto	i1l2587
  6225  1235  3000               	movlw	0
  6226  1236  00F6               	movwf	??___ftge
  6227  1237  3000               	movlw	0
  6228  1238  00F7               	movwf	??___ftge+1
  6229  1239  3080               	movlw	128
  6230  123A  00F8               	movwf	??___ftge+2
  6231  123B  0973               	comf	___ftge@ff2,w
  6232  123C  00F9               	movwf	??___ftge+3
  6233  123D  0974               	comf	___ftge@ff2+1,w
  6234  123E  00FA               	movwf	??___ftge+4
  6235  123F  0975               	comf	___ftge@ff2+2,w
  6236  1240  00FB               	movwf	??___ftge+5
  6237  1241  0AF9               	incf	??___ftge+3,f
  6238  1242  1903               	skipnz
  6239  1243  0AFA               	incf	??___ftge+4,f
  6240  1244  1903               	skipnz
  6241  1245  0AFB               	incf	??___ftge+5,f
  6242  1246  0879               	movf	??___ftge+3,w
  6243  1247  07F6               	addwf	??___ftge,f
  6244  1248  087A               	movf	??___ftge+4,w
  6245  1249  1803               	skipnc
  6246  124A  0F7A               	incfsz	??___ftge+4,w
  6247  124B  2A4D               	goto	u270_21
  6248  124C  2A4E               	goto	u270_22
  6249  124D                     u270_21:	
  6250  124D  07F7               	addwf	??___ftge+1,f
  6251  124E                     u270_22:	
  6252  124E  087B               	movf	??___ftge+5,w
  6253  124F  1803               	skipnc
  6254  1250  0F7B               	incfsz	??___ftge+5,w
  6255  1251  2A53               	goto	u270_23
  6256  1252  2A54               	goto	u270_24
  6257  1253                     u270_23:	
  6258  1253  07F8               	addwf	??___ftge+2,f
  6259  1254                     u270_24:	
  6260  1254  0876               	movf	??___ftge,w
  6261  1255  00F3               	movwf	___ftge@ff2
  6262  1256  0877               	movf	??___ftge+1,w
  6263  1257  00F4               	movwf	___ftge@ff2+1
  6264  1258  0878               	movf	??___ftge+2,w
  6265  1259  00F5               	movwf	___ftge@ff2+2
  6266  125A                     i1l2587:	
  6267  125A  3080               	movlw	128
  6268  125B  06F2               	xorwf	___ftge@ff1+2,f
  6269  125C  3080               	movlw	128
  6270  125D  06F5               	xorwf	___ftge@ff2+2,f
  6271  125E  0875               	movf	___ftge@ff2+2,w
  6272  125F  0272               	subwf	___ftge@ff1+2,w
  6273  1260  1D03               	skipz
  6274  1261  0008               	return
  6275  1262  0874               	movf	___ftge@ff2+1,w
  6276  1263  0271               	subwf	___ftge@ff1+1,w
  6277  1264  1D03               	skipz
  6278  1265  0008               	return
  6279  1266  0873               	movf	___ftge@ff2,w
  6280  1267  0270               	subwf	___ftge@ff1,w
  6281  1268  0008               	return
  6282  1269                     __end_of___ftge:	
  6283                           
  6284                           	psect	text28
  6285  13CC                     __ptext28:	
  6286 ;; *************** function ___ftdiv *****************
  6287 ;; Defined at:
  6288 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  f2              3    7[BANK0 ] float 
  6291 ;;  f1              3   10[BANK0 ] float 
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;  f3              3   18[BANK0 ] float 
  6294 ;;  sign            1   22[BANK0 ] unsigned char 
  6295 ;;  exp             1   21[BANK0 ] unsigned char 
  6296 ;;  cntr            1   17[BANK0 ] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  3    7[BANK0 ] float 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0, pclath, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6306 ;;      Params:         0       6       0       0       0
  6307 ;;      Locals:         0       6       0       0       0
  6308 ;;      Temps:          0       4       0       0       0
  6309 ;;      Totals:         0      16       0       0       0
  6310 ;;Total ram usage:       16 bytes
  6311 ;; Hardware stack levels used:    1
  6312 ;; Hardware stack levels required when called:    1
  6313 ;; This function calls:
  6314 ;;		___ftpack
  6315 ;; This function is called by:
  6316 ;;		_triangular
  6317 ;;		_trapezoidal
  6318 ;;		_ISR
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function ___ftdiv
  6324  13CC                     ___ftdiv:	
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6328  13CC  1283               	bcf	3,5	;RP0=0, select bank0
  6329  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  6330  13CE  082A               	movf	___ftdiv@f1,w
  6331  13CF  00AD               	movwf	??___ftdiv
  6332  13D0  082B               	movf	___ftdiv@f1+1,w
  6333  13D1  00AE               	movwf	??___ftdiv+1
  6334  13D2  082C               	movf	___ftdiv@f1+2,w
  6335  13D3  00AF               	movwf	??___ftdiv+2
  6336  13D4  1003               	clrc
  6337  13D5  0D2E               	rlf	??___ftdiv+1,w
  6338  13D6  0D2F               	rlf	??___ftdiv+2,w
  6339  13D7  00B0               	movwf	??___ftdiv+3
  6340  13D8  0830               	movf	??___ftdiv+3,w
  6341  13D9  00B5               	movwf	___ftdiv@exp
  6342  13DA  08B5               	movf	___ftdiv@exp,f
  6343  13DB  1D03               	skipz
  6344  13DC  2BE4               	goto	i1l2543
  6345  13DD  3000               	movlw	0
  6346  13DE  00A7               	movwf	?___ftdiv
  6347  13DF  3000               	movlw	0
  6348  13E0  00A8               	movwf	?___ftdiv+1
  6349  13E1  3000               	movlw	0
  6350  13E2  00A9               	movwf	?___ftdiv+2
  6351  13E3  0008               	return
  6352  13E4                     i1l2543:	
  6353  13E4  0827               	movf	___ftdiv@f2,w
  6354  13E5  00AD               	movwf	??___ftdiv
  6355  13E6  0828               	movf	___ftdiv@f2+1,w
  6356  13E7  00AE               	movwf	??___ftdiv+1
  6357  13E8  0829               	movf	___ftdiv@f2+2,w
  6358  13E9  00AF               	movwf	??___ftdiv+2
  6359  13EA  1003               	clrc
  6360  13EB  0D2E               	rlf	??___ftdiv+1,w
  6361  13EC  0D2F               	rlf	??___ftdiv+2,w
  6362  13ED  00B0               	movwf	??___ftdiv+3
  6363  13EE  0830               	movf	??___ftdiv+3,w
  6364  13EF  00B6               	movwf	___ftdiv@sign
  6365  13F0  08B6               	movf	___ftdiv@sign,f
  6366  13F1  1D03               	skipz
  6367  13F2  2BFA               	goto	i1l2549
  6368  13F3  3000               	movlw	0
  6369  13F4  00A7               	movwf	?___ftdiv
  6370  13F5  3000               	movlw	0
  6371  13F6  00A8               	movwf	?___ftdiv+1
  6372  13F7  3000               	movlw	0
  6373  13F8  00A9               	movwf	?___ftdiv+2
  6374  13F9  0008               	return
  6375  13FA                     i1l2549:	
  6376  13FA  3000               	movlw	0
  6377  13FB  00B2               	movwf	___ftdiv@f3
  6378  13FC  3000               	movlw	0
  6379  13FD  00B3               	movwf	___ftdiv@f3+1
  6380  13FE  3000               	movlw	0
  6381  13FF  00B4               	movwf	___ftdiv@f3+2
  6382  1400  3089               	movlw	137
  6383  1401  0736               	addwf	___ftdiv@sign,w
  6384  1402  00AD               	movwf	??___ftdiv
  6385  1403  082D               	movf	??___ftdiv,w
  6386  1404  02B5               	subwf	___ftdiv@exp,f
  6387  1405  082A               	movf	___ftdiv@f1,w
  6388  1406  00AD               	movwf	??___ftdiv
  6389  1407  082B               	movf	___ftdiv@f1+1,w
  6390  1408  00AE               	movwf	??___ftdiv+1
  6391  1409  082C               	movf	___ftdiv@f1+2,w
  6392  140A  00AF               	movwf	??___ftdiv+2
  6393  140B  3010               	movlw	16
  6394  140C                     u261_25:	
  6395  140C  1003               	clrc
  6396  140D  0CAF               	rrf	??___ftdiv+2,f
  6397  140E  0CAE               	rrf	??___ftdiv+1,f
  6398  140F  0CAD               	rrf	??___ftdiv,f
  6399  1410  3EFF               	addlw	-1
  6400  1411  1D03               	skipz
  6401  1412  2C0C               	goto	u261_25
  6402  1413  082D               	movf	??___ftdiv,w
  6403  1414  00B0               	movwf	??___ftdiv+3
  6404  1415  0830               	movf	??___ftdiv+3,w
  6405  1416  00B6               	movwf	___ftdiv@sign
  6406  1417  0827               	movf	___ftdiv@f2,w
  6407  1418  00AD               	movwf	??___ftdiv
  6408  1419  0828               	movf	___ftdiv@f2+1,w
  6409  141A  00AE               	movwf	??___ftdiv+1
  6410  141B  0829               	movf	___ftdiv@f2+2,w
  6411  141C  00AF               	movwf	??___ftdiv+2
  6412  141D  3010               	movlw	16
  6413  141E                     u262_25:	
  6414  141E  1003               	clrc
  6415  141F  0CAF               	rrf	??___ftdiv+2,f
  6416  1420  0CAE               	rrf	??___ftdiv+1,f
  6417  1421  0CAD               	rrf	??___ftdiv,f
  6418  1422  3EFF               	addlw	-1
  6419  1423  1D03               	skipz
  6420  1424  2C1E               	goto	u262_25
  6421  1425  082D               	movf	??___ftdiv,w
  6422  1426  00B0               	movwf	??___ftdiv+3
  6423  1427  0830               	movf	??___ftdiv+3,w
  6424  1428  06B6               	xorwf	___ftdiv@sign,f
  6425  1429  3080               	movlw	128
  6426  142A  00AD               	movwf	??___ftdiv
  6427  142B  082D               	movf	??___ftdiv,w
  6428  142C  05B6               	andwf	___ftdiv@sign,f
  6429  142D  17AB               	bsf	___ftdiv@f1+1,7
  6430  142E  30FF               	movlw	255
  6431  142F  05AA               	andwf	___ftdiv@f1,f
  6432  1430  30FF               	movlw	255
  6433  1431  05AB               	andwf	___ftdiv@f1+1,f
  6434  1432  3000               	movlw	0
  6435  1433  05AC               	andwf	___ftdiv@f1+2,f
  6436  1434  17A8               	bsf	___ftdiv@f2+1,7
  6437  1435  30FF               	movlw	255
  6438  1436  05A7               	andwf	___ftdiv@f2,f
  6439  1437  30FF               	movlw	255
  6440  1438  05A8               	andwf	___ftdiv@f2+1,f
  6441  1439  3000               	movlw	0
  6442  143A  05A9               	andwf	___ftdiv@f2+2,f
  6443  143B  3018               	movlw	24
  6444  143C  00AD               	movwf	??___ftdiv
  6445  143D  082D               	movf	??___ftdiv,w
  6446  143E  00B1               	movwf	___ftdiv@cntr
  6447  143F                     i1l2563:	
  6448  143F  3001               	movlw	1
  6449  1440                     u263_25:	
  6450  1440  1003               	clrc
  6451  1441  0DB2               	rlf	___ftdiv@f3,f
  6452  1442  0DB3               	rlf	___ftdiv@f3+1,f
  6453  1443  0DB4               	rlf	___ftdiv@f3+2,f
  6454  1444  3EFF               	addlw	-1
  6455  1445  1D03               	skipz
  6456  1446  2C40               	goto	u263_25
  6457  1447  0829               	movf	___ftdiv@f2+2,w
  6458  1448  022C               	subwf	___ftdiv@f1+2,w
  6459  1449  1D03               	skipz
  6460  144A  2C51               	goto	u264_25
  6461  144B  0828               	movf	___ftdiv@f2+1,w
  6462  144C  022B               	subwf	___ftdiv@f1+1,w
  6463  144D  1D03               	skipz
  6464  144E  2C51               	goto	u264_25
  6465  144F  0827               	movf	___ftdiv@f2,w
  6466  1450  022A               	subwf	___ftdiv@f1,w
  6467  1451                     u264_25:	
  6468  1451  1C03               	skipc
  6469  1452  2C5E               	goto	i1l2571
  6470  1453  0827               	movf	___ftdiv@f2,w
  6471  1454  02AA               	subwf	___ftdiv@f1,f
  6472  1455  0828               	movf	___ftdiv@f2+1,w
  6473  1456  1C03               	skipc
  6474  1457  0F28               	incfsz	___ftdiv@f2+1,w
  6475  1458  02AB               	subwf	___ftdiv@f1+1,f
  6476  1459  0829               	movf	___ftdiv@f2+2,w
  6477  145A  1C03               	skipc
  6478  145B  0A29               	incf	___ftdiv@f2+2,w
  6479  145C  02AC               	subwf	___ftdiv@f1+2,f
  6480  145D  1432               	bsf	___ftdiv@f3,0
  6481  145E                     i1l2571:	
  6482  145E  3001               	movlw	1
  6483  145F                     u265_25:	
  6484  145F  1003               	clrc
  6485  1460  0DAA               	rlf	___ftdiv@f1,f
  6486  1461  0DAB               	rlf	___ftdiv@f1+1,f
  6487  1462  0DAC               	rlf	___ftdiv@f1+2,f
  6488  1463  3EFF               	addlw	-1
  6489  1464  1D03               	skipz
  6490  1465  2C5F               	goto	u265_25
  6491  1466  3001               	movlw	1
  6492  1467  02B1               	subwf	___ftdiv@cntr,f
  6493  1468  1D03               	btfss	3,2
  6494  1469  2C3F               	goto	i1l2563
  6495  146A  0832               	movf	___ftdiv@f3,w
  6496  146B  00F0               	movwf	___ftpack@arg
  6497  146C  0833               	movf	___ftdiv@f3+1,w
  6498  146D  00F1               	movwf	___ftpack@arg+1
  6499  146E  0834               	movf	___ftdiv@f3+2,w
  6500  146F  00F2               	movwf	___ftpack@arg+2
  6501  1470  0835               	movf	___ftdiv@exp,w
  6502  1471  00AD               	movwf	??___ftdiv
  6503  1472  082D               	movf	??___ftdiv,w
  6504  1473  00F3               	movwf	___ftpack@exp
  6505  1474  0836               	movf	___ftdiv@sign,w
  6506  1475  00AE               	movwf	??___ftdiv+1
  6507  1476  082E               	movf	??___ftdiv+1,w
  6508  1477  00F4               	movwf	___ftpack@sign
  6509  1478  160A  118A  2269   	fcall	___ftpack
  6510  147B  0870               	movf	?___ftpack,w
  6511  147C  1283               	bcf	3,5	;RP0=0, select bank0
  6512  147D  1303               	bcf	3,6	;RP1=0, select bank0
  6513  147E  00A7               	movwf	?___ftdiv
  6514  147F  0871               	movf	?___ftpack+1,w
  6515  1480  00A8               	movwf	?___ftdiv+1
  6516  1481  0872               	movf	?___ftpack+2,w
  6517  1482  00A9               	movwf	?___ftdiv+2
  6518  1483  0008               	return
  6519  1484                     __end_of___ftdiv:	
  6520                           
  6521                           	psect	text29
  6522  16F9                     __ptext29:	
  6523 ;; *************** function ___ftadd *****************
  6524 ;; Defined at:
  6525 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  f1              3    8[COMMON] float 
  6528 ;;  f2              3   11[COMMON] float 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  exp1            1    6[BANK0 ] unsigned char 
  6531 ;;  exp2            1    5[BANK0 ] unsigned char 
  6532 ;;  sign            1    4[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  3    8[COMMON] float 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0, pclath, cstack
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6542 ;;      Params:         6       0       0       0       0
  6543 ;;      Locals:         0       3       0       0       0
  6544 ;;      Temps:          0       4       0       0       0
  6545 ;;      Totals:         6       7       0       0       0
  6546 ;;Total ram usage:       13 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    1
  6549 ;; This function calls:
  6550 ;;		___ftpack
  6551 ;; This function is called by:
  6552 ;;		_triangular
  6553 ;;		_trapezoidal
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___ftadd
  6559  16F9                     ___ftadd:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6563  16F9  0878               	movf	___ftadd@f1,w
  6564  16FA  1283               	bcf	3,5	;RP0=0, select bank0
  6565  16FB  1303               	bcf	3,6	;RP1=0, select bank0
  6566  16FC  00A0               	movwf	??___ftadd
  6567  16FD  0879               	movf	___ftadd@f1+1,w
  6568  16FE  00A1               	movwf	??___ftadd+1
  6569  16FF  087A               	movf	___ftadd@f1+2,w
  6570  1700  00A2               	movwf	??___ftadd+2
  6571  1701  1003               	clrc
  6572  1702  0D21               	rlf	??___ftadd+1,w
  6573  1703  0D22               	rlf	??___ftadd+2,w
  6574  1704  00A3               	movwf	??___ftadd+3
  6575  1705  0823               	movf	??___ftadd+3,w
  6576  1706  00A6               	movwf	___ftadd@exp1
  6577  1707  087B               	movf	___ftadd@f2,w
  6578  1708  00A0               	movwf	??___ftadd
  6579  1709  087C               	movf	___ftadd@f2+1,w
  6580  170A  00A1               	movwf	??___ftadd+1
  6581  170B  087D               	movf	___ftadd@f2+2,w
  6582  170C  00A2               	movwf	??___ftadd+2
  6583  170D  1003               	clrc
  6584  170E  0D21               	rlf	??___ftadd+1,w
  6585  170F  0D22               	rlf	??___ftadd+2,w
  6586  1710  00A3               	movwf	??___ftadd+3
  6587  1711  0823               	movf	??___ftadd+3,w
  6588  1712  00A5               	movwf	___ftadd@exp2
  6589  1713  0826               	movf	___ftadd@exp1,w
  6590  1714  1903               	btfsc	3,2
  6591  1715  2F22               	goto	i1l2473
  6592  1716  0825               	movf	___ftadd@exp2,w
  6593  1717  0226               	subwf	___ftadd@exp1,w
  6594  1718  1803               	skipnc
  6595  1719  2F29               	goto	i1l2477
  6596  171A  0326               	decf	___ftadd@exp1,w
  6597  171B  3AFF               	xorlw	255
  6598  171C  0725               	addwf	___ftadd@exp2,w
  6599  171D  00A0               	movwf	??___ftadd
  6600  171E  3019               	movlw	25
  6601  171F  0220               	subwf	??___ftadd,w
  6602  1720  1C03               	skipc
  6603  1721  2F29               	goto	i1l2477
  6604  1722                     i1l2473:	
  6605  1722  087B               	movf	___ftadd@f2,w
  6606  1723  00F8               	movwf	?___ftadd
  6607  1724  087C               	movf	___ftadd@f2+1,w
  6608  1725  00F9               	movwf	?___ftadd+1
  6609  1726  087D               	movf	___ftadd@f2+2,w
  6610  1727  00FA               	movwf	?___ftadd+2
  6611  1728  0008               	return
  6612  1729                     i1l2477:	
  6613  1729  0825               	movf	___ftadd@exp2,w
  6614  172A  1903               	btfsc	3,2
  6615  172B  0008               	return
  6616  172C  0826               	movf	___ftadd@exp1,w
  6617  172D  0225               	subwf	___ftadd@exp2,w
  6618  172E  1803               	skipnc
  6619  172F  2F38               	goto	i1l2483
  6620  1730  0325               	decf	___ftadd@exp2,w
  6621  1731  3AFF               	xorlw	255
  6622  1732  0726               	addwf	___ftadd@exp1,w
  6623  1733  00A0               	movwf	??___ftadd
  6624  1734  3019               	movlw	25
  6625  1735  0220               	subwf	??___ftadd,w
  6626  1736  1803               	btfsc	3,0
  6627  1737  0008               	return
  6628  1738                     i1l2483:	
  6629  1738  3006               	movlw	6
  6630  1739  00A0               	movwf	??___ftadd
  6631  173A  0820               	movf	??___ftadd,w
  6632  173B  00A4               	movwf	___ftadd@sign
  6633  173C  1BFA               	btfsc	___ftadd@f1+2,7
  6634  173D  17A4               	bsf	___ftadd@sign,7
  6635  173E  1BFD               	btfsc	___ftadd@f2+2,7
  6636  173F  1724               	bsf	___ftadd@sign,6
  6637  1740  17F9               	bsf	___ftadd@f1+1,7
  6638  1741  30FF               	movlw	255
  6639  1742  05F8               	andwf	___ftadd@f1,f
  6640  1743  30FF               	movlw	255
  6641  1744  05F9               	andwf	___ftadd@f1+1,f
  6642  1745  3000               	movlw	0
  6643  1746  05FA               	andwf	___ftadd@f1+2,f
  6644  1747  17FC               	bsf	___ftadd@f2+1,7
  6645  1748  30FF               	movlw	255
  6646  1749  05FB               	andwf	___ftadd@f2,f
  6647  174A  30FF               	movlw	255
  6648  174B  05FC               	andwf	___ftadd@f2+1,f
  6649  174C  3000               	movlw	0
  6650  174D  05FD               	andwf	___ftadd@f2+2,f
  6651  174E  0825               	movf	___ftadd@exp2,w
  6652  174F  0226               	subwf	___ftadd@exp1,w
  6653  1750  1803               	skipnc
  6654  1751  2F78               	goto	i1l2505
  6655  1752                     i1l2495:	
  6656  1752  3001               	movlw	1
  6657  1753                     u244_25:	
  6658  1753  1003               	clrc
  6659  1754  0DFB               	rlf	___ftadd@f2,f
  6660  1755  0DFC               	rlf	___ftadd@f2+1,f
  6661  1756  0DFD               	rlf	___ftadd@f2+2,f
  6662  1757  3EFF               	addlw	-1
  6663  1758  1D03               	skipz
  6664  1759  2F53               	goto	u244_25
  6665  175A  3001               	movlw	1
  6666  175B  02A5               	subwf	___ftadd@exp2,f
  6667  175C  0825               	movf	___ftadd@exp2,w
  6668  175D  0626               	xorwf	___ftadd@exp1,w
  6669  175E  1903               	skipnz
  6670  175F  2F73               	goto	i1l2503
  6671  1760  3001               	movlw	1
  6672  1761  02A4               	subwf	___ftadd@sign,f
  6673  1762  0824               	movf	___ftadd@sign,w
  6674  1763  3907               	andlw	7
  6675  1764  1903               	btfsc	3,2
  6676  1765  2F73               	goto	i1l2503
  6677  1766  2F52               	goto	i1l2495
  6678  1767                     i1l2501:	
  6679  1767  3001               	movlw	1
  6680  1768                     u247_25:	
  6681  1768  1003               	clrc
  6682  1769  0CFA               	rrf	___ftadd@f1+2,f
  6683  176A  0CF9               	rrf	___ftadd@f1+1,f
  6684  176B  0CF8               	rrf	___ftadd@f1,f
  6685  176C  3EFF               	addlw	-1
  6686  176D  1D03               	skipz
  6687  176E  2F68               	goto	u247_25
  6688  176F  3001               	movlw	1
  6689  1770  00A0               	movwf	??___ftadd
  6690  1771  0820               	movf	??___ftadd,w
  6691  1772  07A6               	addwf	___ftadd@exp1,f
  6692  1773                     i1l2503:	
  6693  1773  0826               	movf	___ftadd@exp1,w
  6694  1774  0625               	xorwf	___ftadd@exp2,w
  6695  1775  1903               	btfsc	3,2
  6696  1776  2FA1               	goto	i1l947
  6697  1777  2F67               	goto	i1l2501
  6698  1778                     i1l2505:	
  6699  1778  0826               	movf	___ftadd@exp1,w
  6700  1779  0225               	subwf	___ftadd@exp2,w
  6701  177A  1803               	skipnc
  6702  177B  2FA1               	goto	i1l947
  6703  177C                     i1l2507:	
  6704  177C  3001               	movlw	1
  6705  177D                     u250_25:	
  6706  177D  1003               	clrc
  6707  177E  0DF8               	rlf	___ftadd@f1,f
  6708  177F  0DF9               	rlf	___ftadd@f1+1,f
  6709  1780  0DFA               	rlf	___ftadd@f1+2,f
  6710  1781  3EFF               	addlw	-1
  6711  1782  1D03               	skipz
  6712  1783  2F7D               	goto	u250_25
  6713  1784  3001               	movlw	1
  6714  1785  02A6               	subwf	___ftadd@exp1,f
  6715  1786  0825               	movf	___ftadd@exp2,w
  6716  1787  0626               	xorwf	___ftadd@exp1,w
  6717  1788  1903               	skipnz
  6718  1789  2F9D               	goto	i1l2515
  6719  178A  3001               	movlw	1
  6720  178B  02A4               	subwf	___ftadd@sign,f
  6721  178C  0824               	movf	___ftadd@sign,w
  6722  178D  3907               	andlw	7
  6723  178E  1903               	btfsc	3,2
  6724  178F  2F9D               	goto	i1l2515
  6725  1790  2F7C               	goto	i1l2507
  6726  1791                     i1l2513:	
  6727  1791  3001               	movlw	1
  6728  1792                     u253_25:	
  6729  1792  1003               	clrc
  6730  1793  0CFD               	rrf	___ftadd@f2+2,f
  6731  1794  0CFC               	rrf	___ftadd@f2+1,f
  6732  1795  0CFB               	rrf	___ftadd@f2,f
  6733  1796  3EFF               	addlw	-1
  6734  1797  1D03               	skipz
  6735  1798  2F92               	goto	u253_25
  6736  1799  3001               	movlw	1
  6737  179A  00A0               	movwf	??___ftadd
  6738  179B  0820               	movf	??___ftadd,w
  6739  179C  07A5               	addwf	___ftadd@exp2,f
  6740  179D                     i1l2515:	
  6741  179D  0826               	movf	___ftadd@exp1,w
  6742  179E  0625               	xorwf	___ftadd@exp2,w
  6743  179F  1D03               	skipz
  6744  17A0  2F91               	goto	i1l2513
  6745  17A1                     i1l947:	
  6746  17A1  1FA4               	btfss	___ftadd@sign,7
  6747  17A2  2FB3               	goto	i1l2519
  6748  17A3  30FF               	movlw	255
  6749  17A4  06F8               	xorwf	___ftadd@f1,f
  6750  17A5  30FF               	movlw	255
  6751  17A6  06F9               	xorwf	___ftadd@f1+1,f
  6752  17A7  30FF               	movlw	255
  6753  17A8  06FA               	xorwf	___ftadd@f1+2,f
  6754  17A9  3001               	movlw	1
  6755  17AA  07F8               	addwf	___ftadd@f1,f
  6756  17AB  3000               	movlw	0
  6757  17AC  1803               	skipnc
  6758  17AD  3001               	movlw	1
  6759  17AE  07F9               	addwf	___ftadd@f1+1,f
  6760  17AF  3000               	movlw	0
  6761  17B0  1803               	skipnc
  6762  17B1  3001               	movlw	1
  6763  17B2  07FA               	addwf	___ftadd@f1+2,f
  6764  17B3                     i1l2519:	
  6765  17B3  1F24               	btfss	___ftadd@sign,6
  6766  17B4  2FC5               	goto	i1l2523
  6767  17B5  30FF               	movlw	255
  6768  17B6  06FB               	xorwf	___ftadd@f2,f
  6769  17B7  30FF               	movlw	255
  6770  17B8  06FC               	xorwf	___ftadd@f2+1,f
  6771  17B9  30FF               	movlw	255
  6772  17BA  06FD               	xorwf	___ftadd@f2+2,f
  6773  17BB  3001               	movlw	1
  6774  17BC  07FB               	addwf	___ftadd@f2,f
  6775  17BD  3000               	movlw	0
  6776  17BE  1803               	skipnc
  6777  17BF  3001               	movlw	1
  6778  17C0  07FC               	addwf	___ftadd@f2+1,f
  6779  17C1  3000               	movlw	0
  6780  17C2  1803               	skipnc
  6781  17C3  3001               	movlw	1
  6782  17C4  07FD               	addwf	___ftadd@f2+2,f
  6783  17C5                     i1l2523:	
  6784  17C5  01A4               	clrf	___ftadd@sign
  6785  17C6  0878               	movf	___ftadd@f1,w
  6786  17C7  07FB               	addwf	___ftadd@f2,f
  6787  17C8  0879               	movf	___ftadd@f1+1,w
  6788  17C9  1103               	clrz
  6789  17CA  1803               	skipnc
  6790  17CB  0A79               	incf	___ftadd@f1+1,w
  6791  17CC  1D03               	btfss	3,2
  6792  17CD  07FC               	addwf	___ftadd@f2+1,f
  6793  17CE  087A               	movf	___ftadd@f1+2,w
  6794  17CF  1103               	clrz
  6795  17D0  1803               	skipnc
  6796  17D1  0A7A               	incf	___ftadd@f1+2,w
  6797  17D2  1D03               	btfss	3,2
  6798  17D3  07FD               	addwf	___ftadd@f2+2,f
  6799  17D4  1FFD               	btfss	___ftadd@f2+2,7
  6800  17D5  2FE8               	goto	i1l2533
  6801  17D6  30FF               	movlw	255
  6802  17D7  06FB               	xorwf	___ftadd@f2,f
  6803  17D8  30FF               	movlw	255
  6804  17D9  06FC               	xorwf	___ftadd@f2+1,f
  6805  17DA  30FF               	movlw	255
  6806  17DB  06FD               	xorwf	___ftadd@f2+2,f
  6807  17DC  3001               	movlw	1
  6808  17DD  07FB               	addwf	___ftadd@f2,f
  6809  17DE  3000               	movlw	0
  6810  17DF  1803               	skipnc
  6811  17E0  3001               	movlw	1
  6812  17E1  07FC               	addwf	___ftadd@f2+1,f
  6813  17E2  3000               	movlw	0
  6814  17E3  1803               	skipnc
  6815  17E4  3001               	movlw	1
  6816  17E5  07FD               	addwf	___ftadd@f2+2,f
  6817  17E6  01A4               	clrf	___ftadd@sign
  6818  17E7  0AA4               	incf	___ftadd@sign,f
  6819  17E8                     i1l2533:	
  6820  17E8  087B               	movf	___ftadd@f2,w
  6821  17E9  00F0               	movwf	___ftpack@arg
  6822  17EA  087C               	movf	___ftadd@f2+1,w
  6823  17EB  00F1               	movwf	___ftpack@arg+1
  6824  17EC  087D               	movf	___ftadd@f2+2,w
  6825  17ED  00F2               	movwf	___ftpack@arg+2
  6826  17EE  0826               	movf	___ftadd@exp1,w
  6827  17EF  00A0               	movwf	??___ftadd
  6828  17F0  0820               	movf	??___ftadd,w
  6829  17F1  00F3               	movwf	___ftpack@exp
  6830  17F2  0824               	movf	___ftadd@sign,w
  6831  17F3  00A1               	movwf	??___ftadd+1
  6832  17F4  0821               	movf	??___ftadd+1,w
  6833  17F5  00F4               	movwf	___ftpack@sign
  6834  17F6  160A  118A  2269   	fcall	___ftpack
  6835  17F9  0870               	movf	?___ftpack,w
  6836  17FA  00F8               	movwf	?___ftadd
  6837  17FB  0871               	movf	?___ftpack+1,w
  6838  17FC  00F9               	movwf	?___ftadd+1
  6839  17FD  0872               	movf	?___ftpack+2,w
  6840  17FE  00FA               	movwf	?___ftadd+2
  6841  17FF  0008               	return
  6842  1800                     __end_of___ftadd:	
  6843                           
  6844                           	psect	text30
  6845  133E                     __ptext30:	
  6846 ;; *************** function ___fttol *****************
  6847 ;; Defined at:
  6848 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  f1              3   39[BANK0 ] float 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  lval            4   48[BANK0 ] unsigned long 
  6853 ;;  exp1            1   52[BANK0 ] unsigned char 
  6854 ;;  sign1           1   47[BANK0 ] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  4   39[BANK0 ] long 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6864 ;;      Params:         0       4       0       0       0
  6865 ;;      Locals:         0       6       0       0       0
  6866 ;;      Temps:          0       4       0       0       0
  6867 ;;      Totals:         0      14       0       0       0
  6868 ;;Total ram usage:       14 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_fuzzy
  6874 ;;		_ISR
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           
  6879                           ;psect for function ___fttol
  6880  133E                     ___fttol:	
  6881                           
  6882                           ;incstack = 0
  6883                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6884  133E  1283               	bcf	3,5	;RP0=0, select bank0
  6885  133F  1303               	bcf	3,6	;RP1=0, select bank0
  6886  1340  0847               	movf	___fttol@f1,w
  6887  1341  00CB               	movwf	??___fttol
  6888  1342  0848               	movf	___fttol@f1+1,w
  6889  1343  00CC               	movwf	??___fttol+1
  6890  1344  0849               	movf	___fttol@f1+2,w
  6891  1345  00CD               	movwf	??___fttol+2
  6892  1346  1003               	clrc
  6893  1347  0D4C               	rlf	??___fttol+1,w
  6894  1348  0D4D               	rlf	??___fttol+2,w
  6895  1349  00CE               	movwf	??___fttol+3
  6896  134A  084E               	movf	??___fttol+3,w
  6897  134B  00D4               	movwf	___fttol@exp1
  6898  134C  08D4               	movf	___fttol@exp1,f
  6899  134D  1D03               	skipz
  6900  134E  2B58               	goto	i1l2809
  6901  134F  3000               	movlw	0
  6902  1350  00CA               	movwf	?___fttol+3
  6903  1351  3000               	movlw	0
  6904  1352  00C9               	movwf	?___fttol+2
  6905  1353  3000               	movlw	0
  6906  1354  00C8               	movwf	?___fttol+1
  6907  1355  3000               	movlw	0
  6908  1356  00C7               	movwf	?___fttol
  6909  1357  0008               	return
  6910  1358                     i1l2809:	
  6911  1358  0847               	movf	___fttol@f1,w
  6912  1359  00CB               	movwf	??___fttol
  6913  135A  0848               	movf	___fttol@f1+1,w
  6914  135B  00CC               	movwf	??___fttol+1
  6915  135C  0849               	movf	___fttol@f1+2,w
  6916  135D  00CD               	movwf	??___fttol+2
  6917  135E  3017               	movlw	23
  6918  135F                     u319_25:	
  6919  135F  1003               	clrc
  6920  1360  0CCD               	rrf	??___fttol+2,f
  6921  1361  0CCC               	rrf	??___fttol+1,f
  6922  1362  0CCB               	rrf	??___fttol,f
  6923  1363  3EFF               	addlw	-1
  6924  1364  1D03               	skipz
  6925  1365  2B5F               	goto	u319_25
  6926  1366  084B               	movf	??___fttol,w
  6927  1367  00CE               	movwf	??___fttol+3
  6928  1368  084E               	movf	??___fttol+3,w
  6929  1369  00CF               	movwf	___fttol@sign1
  6930  136A  17C8               	bsf	___fttol@f1+1,7
  6931  136B  30FF               	movlw	255
  6932  136C  05C7               	andwf	___fttol@f1,f
  6933  136D  30FF               	movlw	255
  6934  136E  05C8               	andwf	___fttol@f1+1,f
  6935  136F  3000               	movlw	0
  6936  1370  05C9               	andwf	___fttol@f1+2,f
  6937  1371  0847               	movf	___fttol@f1,w
  6938  1372  00D0               	movwf	___fttol@lval
  6939  1373  0848               	movf	___fttol@f1+1,w
  6940  1374  00D1               	movwf	___fttol@lval+1
  6941  1375  0849               	movf	___fttol@f1+2,w
  6942  1376  00D2               	movwf	___fttol@lval+2
  6943  1377  01D3               	clrf	___fttol@lval+3
  6944  1378  308E               	movlw	142
  6945  1379  02D4               	subwf	___fttol@exp1,f
  6946  137A  1FD4               	btfss	___fttol@exp1,7
  6947  137B  2B9A               	goto	i1l2829
  6948  137C  0854               	movf	___fttol@exp1,w
  6949  137D  3A80               	xorlw	128
  6950  137E  3E8F               	addlw	143
  6951  137F  1803               	skipnc
  6952  1380  2B8A               	goto	i1l2827
  6953  1381  3000               	movlw	0
  6954  1382  00CA               	movwf	?___fttol+3
  6955  1383  3000               	movlw	0
  6956  1384  00C9               	movwf	?___fttol+2
  6957  1385  3000               	movlw	0
  6958  1386  00C8               	movwf	?___fttol+1
  6959  1387  3000               	movlw	0
  6960  1388  00C7               	movwf	?___fttol
  6961  1389  0008               	return
  6962  138A                     i1l2827:	
  6963  138A  3001               	movlw	1
  6964  138B                     u322_25:	
  6965  138B  1003               	clrc
  6966  138C  0CD3               	rrf	___fttol@lval+3,f
  6967  138D  0CD2               	rrf	___fttol@lval+2,f
  6968  138E  0CD1               	rrf	___fttol@lval+1,f
  6969  138F  0CD0               	rrf	___fttol@lval,f
  6970  1390  3EFF               	addlw	-1
  6971  1391  1D03               	skipz
  6972  1392  2B8B               	goto	u322_25
  6973  1393  3001               	movlw	1
  6974  1394  00CB               	movwf	??___fttol
  6975  1395  084B               	movf	??___fttol,w
  6976  1396  07D4               	addwf	___fttol@exp1,f
  6977  1397  1903               	btfsc	3,2
  6978  1398  2BB5               	goto	i1l2839
  6979  1399  2B8A               	goto	i1l2827
  6980  139A                     i1l2829:	
  6981  139A  3018               	movlw	24
  6982  139B  0254               	subwf	___fttol@exp1,w
  6983  139C  1C03               	skipc
  6984  139D  2BB2               	goto	i1l2837
  6985  139E  3000               	movlw	0
  6986  139F  00CA               	movwf	?___fttol+3
  6987  13A0  3000               	movlw	0
  6988  13A1  00C9               	movwf	?___fttol+2
  6989  13A2  3000               	movlw	0
  6990  13A3  00C8               	movwf	?___fttol+1
  6991  13A4  3000               	movlw	0
  6992  13A5  00C7               	movwf	?___fttol
  6993  13A6  0008               	return
  6994  13A7                     i1l2835:	
  6995  13A7  3001               	movlw	1
  6996  13A8  00CB               	movwf	??___fttol
  6997  13A9                     u325_25:	
  6998  13A9  1003               	clrc
  6999  13AA  0DD0               	rlf	___fttol@lval,f
  7000  13AB  0DD1               	rlf	___fttol@lval+1,f
  7001  13AC  0DD2               	rlf	___fttol@lval+2,f
  7002  13AD  0DD3               	rlf	___fttol@lval+3,f
  7003  13AE  0BCB               	decfsz	??___fttol,f
  7004  13AF  2BA9               	goto	u325_25
  7005  13B0  3001               	movlw	1
  7006  13B1  02D4               	subwf	___fttol@exp1,f
  7007  13B2                     i1l2837:	
  7008  13B2  08D4               	movf	___fttol@exp1,f
  7009  13B3  1D03               	skipz
  7010  13B4  2BA7               	goto	i1l2835
  7011  13B5                     i1l2839:	
  7012  13B5  084F               	movf	___fttol@sign1,w
  7013  13B6  1903               	btfsc	3,2
  7014  13B7  2BC3               	goto	i1l2843
  7015  13B8  09D0               	comf	___fttol@lval,f
  7016  13B9  09D1               	comf	___fttol@lval+1,f
  7017  13BA  09D2               	comf	___fttol@lval+2,f
  7018  13BB  09D3               	comf	___fttol@lval+3,f
  7019  13BC  0AD0               	incf	___fttol@lval,f
  7020  13BD  1903               	skipnz
  7021  13BE  0AD1               	incf	___fttol@lval+1,f
  7022  13BF  1903               	skipnz
  7023  13C0  0AD2               	incf	___fttol@lval+2,f
  7024  13C1  1903               	skipnz
  7025  13C2  0AD3               	incf	___fttol@lval+3,f
  7026  13C3                     i1l2843:	
  7027  13C3  0853               	movf	___fttol@lval+3,w
  7028  13C4  00CA               	movwf	?___fttol+3
  7029  13C5  0852               	movf	___fttol@lval+2,w
  7030  13C6  00C9               	movwf	?___fttol+2
  7031  13C7  0851               	movf	___fttol@lval+1,w
  7032  13C8  00C8               	movwf	?___fttol+1
  7033  13C9  0850               	movf	___fttol@lval,w
  7034  13CA  00C7               	movwf	?___fttol
  7035  13CB  0008               	return
  7036  13CC                     __end_of___fttol:	
  7037                           
  7038                           	psect	text31
  7039  153E                     __ptext31:	
  7040 ;; *************** function ___ftmul *****************
  7041 ;; Defined at:
  7042 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  f1              3   23[BANK0 ] float 
  7045 ;;  f2              3   26[BANK0 ] float 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
  7048 ;;  sign            1   38[BANK0 ] unsigned char 
  7049 ;;  cntr            1   37[BANK0 ] unsigned char 
  7050 ;;  exp             1   33[BANK0 ] unsigned char 
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  3   23[BANK0 ] float 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0, pclath, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7060 ;;      Params:         0       6       0       0       0
  7061 ;;      Locals:         0       6       0       0       0
  7062 ;;      Temps:          0       4       0       0       0
  7063 ;;      Totals:         0      16       0       0       0
  7064 ;;Total ram usage:       16 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:    1
  7067 ;; This function calls:
  7068 ;;		___ftpack
  7069 ;; This function is called by:
  7070 ;;		_fuzzy
  7071 ;;		_ISR
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           
  7076                           ;psect for function ___ftmul
  7077  153E                     ___ftmul:	
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7081  153E  1283               	bcf	3,5	;RP0=0, select bank0
  7082  153F  1303               	bcf	3,6	;RP1=0, select bank0
  7083  1540  0837               	movf	___ftmul@f1,w
  7084  1541  00BD               	movwf	??___ftmul
  7085  1542  0838               	movf	___ftmul@f1+1,w
  7086  1543  00BE               	movwf	??___ftmul+1
  7087  1544  0839               	movf	___ftmul@f1+2,w
  7088  1545  00BF               	movwf	??___ftmul+2
  7089  1546  1003               	clrc
  7090  1547  0D3E               	rlf	??___ftmul+1,w
  7091  1548  0D3F               	rlf	??___ftmul+2,w
  7092  1549  00C0               	movwf	??___ftmul+3
  7093  154A  0840               	movf	??___ftmul+3,w
  7094  154B  00C1               	movwf	___ftmul@exp
  7095  154C  08C1               	movf	___ftmul@exp,f
  7096  154D  1D03               	skipz
  7097  154E  2D56               	goto	i1l2759
  7098  154F  3000               	movlw	0
  7099  1550  00B7               	movwf	?___ftmul
  7100  1551  3000               	movlw	0
  7101  1552  00B8               	movwf	?___ftmul+1
  7102  1553  3000               	movlw	0
  7103  1554  00B9               	movwf	?___ftmul+2
  7104  1555  0008               	return
  7105  1556                     i1l2759:	
  7106  1556  083A               	movf	___ftmul@f2,w
  7107  1557  00BD               	movwf	??___ftmul
  7108  1558  083B               	movf	___ftmul@f2+1,w
  7109  1559  00BE               	movwf	??___ftmul+1
  7110  155A  083C               	movf	___ftmul@f2+2,w
  7111  155B  00BF               	movwf	??___ftmul+2
  7112  155C  1003               	clrc
  7113  155D  0D3E               	rlf	??___ftmul+1,w
  7114  155E  0D3F               	rlf	??___ftmul+2,w
  7115  155F  00C0               	movwf	??___ftmul+3
  7116  1560  0840               	movf	??___ftmul+3,w
  7117  1561  00C6               	movwf	___ftmul@sign
  7118  1562  08C6               	movf	___ftmul@sign,f
  7119  1563  1D03               	skipz
  7120  1564  2D6C               	goto	i1l2765
  7121  1565  3000               	movlw	0
  7122  1566  00B7               	movwf	?___ftmul
  7123  1567  3000               	movlw	0
  7124  1568  00B8               	movwf	?___ftmul+1
  7125  1569  3000               	movlw	0
  7126  156A  00B9               	movwf	?___ftmul+2
  7127  156B  0008               	return
  7128  156C                     i1l2765:	
  7129  156C  0846               	movf	___ftmul@sign,w
  7130  156D  3E7B               	addlw	123
  7131  156E  00BD               	movwf	??___ftmul
  7132  156F  083D               	movf	??___ftmul,w
  7133  1570  07C1               	addwf	___ftmul@exp,f
  7134  1571  0837               	movf	___ftmul@f1,w
  7135  1572  00BD               	movwf	??___ftmul
  7136  1573  0838               	movf	___ftmul@f1+1,w
  7137  1574  00BE               	movwf	??___ftmul+1
  7138  1575  0839               	movf	___ftmul@f1+2,w
  7139  1576  00BF               	movwf	??___ftmul+2
  7140  1577  3010               	movlw	16
  7141  1578                     u306_25:	
  7142  1578  1003               	clrc
  7143  1579  0CBF               	rrf	??___ftmul+2,f
  7144  157A  0CBE               	rrf	??___ftmul+1,f
  7145  157B  0CBD               	rrf	??___ftmul,f
  7146  157C  3EFF               	addlw	-1
  7147  157D  1D03               	skipz
  7148  157E  2D78               	goto	u306_25
  7149  157F  083D               	movf	??___ftmul,w
  7150  1580  00C0               	movwf	??___ftmul+3
  7151  1581  0840               	movf	??___ftmul+3,w
  7152  1582  00C6               	movwf	___ftmul@sign
  7153  1583  083A               	movf	___ftmul@f2,w
  7154  1584  00BD               	movwf	??___ftmul
  7155  1585  083B               	movf	___ftmul@f2+1,w
  7156  1586  00BE               	movwf	??___ftmul+1
  7157  1587  083C               	movf	___ftmul@f2+2,w
  7158  1588  00BF               	movwf	??___ftmul+2
  7159  1589  3010               	movlw	16
  7160  158A                     u307_25:	
  7161  158A  1003               	clrc
  7162  158B  0CBF               	rrf	??___ftmul+2,f
  7163  158C  0CBE               	rrf	??___ftmul+1,f
  7164  158D  0CBD               	rrf	??___ftmul,f
  7165  158E  3EFF               	addlw	-1
  7166  158F  1D03               	skipz
  7167  1590  2D8A               	goto	u307_25
  7168  1591  083D               	movf	??___ftmul,w
  7169  1592  00C0               	movwf	??___ftmul+3
  7170  1593  0840               	movf	??___ftmul+3,w
  7171  1594  06C6               	xorwf	___ftmul@sign,f
  7172  1595  3080               	movlw	128
  7173  1596  00BD               	movwf	??___ftmul
  7174  1597  083D               	movf	??___ftmul,w
  7175  1598  05C6               	andwf	___ftmul@sign,f
  7176  1599  17B8               	bsf	___ftmul@f1+1,7
  7177  159A  17BB               	bsf	___ftmul@f2+1,7
  7178  159B  30FF               	movlw	255
  7179  159C  05BA               	andwf	___ftmul@f2,f
  7180  159D  30FF               	movlw	255
  7181  159E  05BB               	andwf	___ftmul@f2+1,f
  7182  159F  3000               	movlw	0
  7183  15A0  05BC               	andwf	___ftmul@f2+2,f
  7184  15A1  3000               	movlw	0
  7185  15A2  00C2               	movwf	___ftmul@f3_as_product
  7186  15A3  3000               	movlw	0
  7187  15A4  00C3               	movwf	___ftmul@f3_as_product+1
  7188  15A5  3000               	movlw	0
  7189  15A6  00C4               	movwf	___ftmul@f3_as_product+2
  7190  15A7  3007               	movlw	7
  7191  15A8  00BD               	movwf	??___ftmul
  7192  15A9  083D               	movf	??___ftmul,w
  7193  15AA  00C5               	movwf	___ftmul@cntr
  7194  15AB                     i1l2777:	
  7195  15AB  1C37               	btfss	___ftmul@f1,0
  7196  15AC  2DBB               	goto	i1l2781
  7197  15AD  083A               	movf	___ftmul@f2,w
  7198  15AE  07C2               	addwf	___ftmul@f3_as_product,f
  7199  15AF  083B               	movf	___ftmul@f2+1,w
  7200  15B0  1103               	clrz
  7201  15B1  1803               	skipnc
  7202  15B2  0A3B               	incf	___ftmul@f2+1,w
  7203  15B3  1D03               	btfss	3,2
  7204  15B4  07C3               	addwf	___ftmul@f3_as_product+1,f
  7205  15B5  083C               	movf	___ftmul@f2+2,w
  7206  15B6  1103               	clrz
  7207  15B7  1803               	skipnc
  7208  15B8  0A3C               	incf	___ftmul@f2+2,w
  7209  15B9  1D03               	btfss	3,2
  7210  15BA  07C4               	addwf	___ftmul@f3_as_product+2,f
  7211  15BB                     i1l2781:	
  7212  15BB  3001               	movlw	1
  7213  15BC                     u310_25:	
  7214  15BC  1003               	clrc
  7215  15BD  0CB9               	rrf	___ftmul@f1+2,f
  7216  15BE  0CB8               	rrf	___ftmul@f1+1,f
  7217  15BF  0CB7               	rrf	___ftmul@f1,f
  7218  15C0  3EFF               	addlw	-1
  7219  15C1  1D03               	skipz
  7220  15C2  2DBC               	goto	u310_25
  7221  15C3  3001               	movlw	1
  7222  15C4                     u311_25:	
  7223  15C4  1003               	clrc
  7224  15C5  0DBA               	rlf	___ftmul@f2,f
  7225  15C6  0DBB               	rlf	___ftmul@f2+1,f
  7226  15C7  0DBC               	rlf	___ftmul@f2+2,f
  7227  15C8  3EFF               	addlw	-1
  7228  15C9  1D03               	skipz
  7229  15CA  2DC4               	goto	u311_25
  7230  15CB  3001               	movlw	1
  7231  15CC  02C5               	subwf	___ftmul@cntr,f
  7232  15CD  1D03               	btfss	3,2
  7233  15CE  2DAB               	goto	i1l2777
  7234  15CF  3009               	movlw	9
  7235  15D0  00BD               	movwf	??___ftmul
  7236  15D1  083D               	movf	??___ftmul,w
  7237  15D2  00C5               	movwf	___ftmul@cntr
  7238  15D3                     i1l2789:	
  7239  15D3  1C37               	btfss	___ftmul@f1,0
  7240  15D4  2DE3               	goto	i1l2793
  7241  15D5  083A               	movf	___ftmul@f2,w
  7242  15D6  07C2               	addwf	___ftmul@f3_as_product,f
  7243  15D7  083B               	movf	___ftmul@f2+1,w
  7244  15D8  1103               	clrz
  7245  15D9  1803               	skipnc
  7246  15DA  0A3B               	incf	___ftmul@f2+1,w
  7247  15DB  1D03               	btfss	3,2
  7248  15DC  07C3               	addwf	___ftmul@f3_as_product+1,f
  7249  15DD  083C               	movf	___ftmul@f2+2,w
  7250  15DE  1103               	clrz
  7251  15DF  1803               	skipnc
  7252  15E0  0A3C               	incf	___ftmul@f2+2,w
  7253  15E1  1D03               	btfss	3,2
  7254  15E2  07C4               	addwf	___ftmul@f3_as_product+2,f
  7255  15E3                     i1l2793:	
  7256  15E3  3001               	movlw	1
  7257  15E4                     u315_25:	
  7258  15E4  1003               	clrc
  7259  15E5  0CB9               	rrf	___ftmul@f1+2,f
  7260  15E6  0CB8               	rrf	___ftmul@f1+1,f
  7261  15E7  0CB7               	rrf	___ftmul@f1,f
  7262  15E8  3EFF               	addlw	-1
  7263  15E9  1D03               	skipz
  7264  15EA  2DE4               	goto	u315_25
  7265  15EB  3001               	movlw	1
  7266  15EC                     u316_25:	
  7267  15EC  1003               	clrc
  7268  15ED  0CC4               	rrf	___ftmul@f3_as_product+2,f
  7269  15EE  0CC3               	rrf	___ftmul@f3_as_product+1,f
  7270  15EF  0CC2               	rrf	___ftmul@f3_as_product,f
  7271  15F0  3EFF               	addlw	-1
  7272  15F1  1D03               	skipz
  7273  15F2  2DEC               	goto	u316_25
  7274  15F3  3001               	movlw	1
  7275  15F4  02C5               	subwf	___ftmul@cntr,f
  7276  15F5  1D03               	btfss	3,2
  7277  15F6  2DD3               	goto	i1l2789
  7278  15F7  0842               	movf	___ftmul@f3_as_product,w
  7279  15F8  00F0               	movwf	___ftpack@arg
  7280  15F9  0843               	movf	___ftmul@f3_as_product+1,w
  7281  15FA  00F1               	movwf	___ftpack@arg+1
  7282  15FB  0844               	movf	___ftmul@f3_as_product+2,w
  7283  15FC  00F2               	movwf	___ftpack@arg+2
  7284  15FD  0841               	movf	___ftmul@exp,w
  7285  15FE  00BD               	movwf	??___ftmul
  7286  15FF  083D               	movf	??___ftmul,w
  7287  1600  00F3               	movwf	___ftpack@exp
  7288  1601  0846               	movf	___ftmul@sign,w
  7289  1602  00BE               	movwf	??___ftmul+1
  7290  1603  083E               	movf	??___ftmul+1,w
  7291  1604  00F4               	movwf	___ftpack@sign
  7292  1605  160A  118A  2269   	fcall	___ftpack
  7293  1608  0870               	movf	?___ftpack,w
  7294  1609  1283               	bcf	3,5	;RP0=0, select bank0
  7295  160A  1303               	bcf	3,6	;RP1=0, select bank0
  7296  160B  00B7               	movwf	?___ftmul
  7297  160C  0871               	movf	?___ftpack+1,w
  7298  160D  00B8               	movwf	?___ftmul+1
  7299  160E  0872               	movf	?___ftpack+2,w
  7300  160F  00B9               	movwf	?___ftmul+2
  7301  1610  0008               	return
  7302  1611                     __end_of___ftmul:	
  7303                           
  7304                           	psect	text32
  7305  1FDF                     __ptext32:	
  7306 ;; *************** function ___awtoft *****************
  7307 ;; Defined at:
  7308 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  c               2    8[COMMON] int 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  sign            1   13[COMMON] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  3    8[COMMON] float 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, pclath, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7322 ;;      Params:         3       0       0       0       0
  7323 ;;      Locals:         1       0       0       0       0
  7324 ;;      Temps:          2       0       0       0       0
  7325 ;;      Totals:         6       0       0       0       0
  7326 ;;Total ram usage:        6 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    1
  7329 ;; This function calls:
  7330 ;;		___ftpack
  7331 ;; This function is called by:
  7332 ;;		_fuzzy
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           
  7337                           ;psect for function ___awtoft
  7338  1FDF                     ___awtoft:	
  7339                           
  7340                           ;incstack = 0
  7341                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7342  1FDF  01FD               	clrf	___awtoft@sign
  7343  1FE0  1FF9               	btfss	___awtoft@c+1,7
  7344  1FE1  2FE9               	goto	i1l2749
  7345  1FE2  09F8               	comf	___awtoft@c,f
  7346  1FE3  09F9               	comf	___awtoft@c+1,f
  7347  1FE4  0AF8               	incf	___awtoft@c,f
  7348  1FE5  1903               	skipnz
  7349  1FE6  0AF9               	incf	___awtoft@c+1,f
  7350  1FE7  01FD               	clrf	___awtoft@sign
  7351  1FE8  0AFD               	incf	___awtoft@sign,f
  7352  1FE9                     i1l2749:	
  7353  1FE9  0878               	movf	___awtoft@c,w
  7354  1FEA  00F0               	movwf	___ftpack@arg
  7355  1FEB  0879               	movf	___awtoft@c+1,w
  7356  1FEC  00F1               	movwf	___ftpack@arg+1
  7357  1FED  01F2               	clrf	___ftpack@arg+2
  7358  1FEE  308E               	movlw	142
  7359  1FEF  00FB               	movwf	??___awtoft
  7360  1FF0  087B               	movf	??___awtoft,w
  7361  1FF1  00F3               	movwf	___ftpack@exp
  7362  1FF2  087D               	movf	___awtoft@sign,w
  7363  1FF3  00FC               	movwf	??___awtoft+1
  7364  1FF4  087C               	movf	??___awtoft+1,w
  7365  1FF5  00F4               	movwf	___ftpack@sign
  7366  1FF6  160A  118A  2269   	fcall	___ftpack
  7367  1FF9  0870               	movf	?___ftpack,w
  7368  1FFA  00F8               	movwf	?___awtoft
  7369  1FFB  0871               	movf	?___ftpack+1,w
  7370  1FFC  00F9               	movwf	?___awtoft+1
  7371  1FFD  0872               	movf	?___ftpack+2,w
  7372  1FFE  00FA               	movwf	?___awtoft+2
  7373  1FFF  0008               	return
  7374  2000                     __end_of___awtoft:	
  7375                           
  7376                           	psect	text33
  7377  1F62                     __ptext33:	
  7378 ;; *************** function ___lwtoft *****************
  7379 ;; Defined at:
  7380 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  c               2    8[COMMON] unsigned int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  3    8[COMMON] float 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0, pclath, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7394 ;;      Params:         3       0       0       0       0
  7395 ;;      Locals:         0       0       0       0       0
  7396 ;;      Temps:          1       0       0       0       0
  7397 ;;      Totals:         4       0       0       0       0
  7398 ;;Total ram usage:        4 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    1
  7401 ;; This function calls:
  7402 ;;		___ftpack
  7403 ;; This function is called by:
  7404 ;;		_ISR
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function ___lwtoft
  7410  1F62                     ___lwtoft:	
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7414  1F62  0878               	movf	___lwtoft@c,w
  7415  1F63  00F0               	movwf	___ftpack@arg
  7416  1F64  0879               	movf	___lwtoft@c+1,w
  7417  1F65  00F1               	movwf	___ftpack@arg+1
  7418  1F66  01F2               	clrf	___ftpack@arg+2
  7419  1F67  308E               	movlw	142
  7420  1F68  00FB               	movwf	??___lwtoft
  7421  1F69  087B               	movf	??___lwtoft,w
  7422  1F6A  00F3               	movwf	___ftpack@exp
  7423  1F6B  01F4               	clrf	___ftpack@sign
  7424  1F6C  160A  118A  2269   	fcall	___ftpack
  7425  1F6F  0870               	movf	?___ftpack,w
  7426  1F70  00F8               	movwf	?___lwtoft
  7427  1F71  0871               	movf	?___ftpack+1,w
  7428  1F72  00F9               	movwf	?___lwtoft+1
  7429  1F73  0872               	movf	?___ftpack+2,w
  7430  1F74  00FA               	movwf	?___lwtoft+2
  7431  1F75  0008               	return
  7432  1F76                     __end_of___lwtoft:	
  7433                           
  7434                           	psect	text34
  7435  1269                     __ptext34:	
  7436 ;; *************** function ___ftpack *****************
  7437 ;; Defined at:
  7438 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  arg             3    0[COMMON] unsigned um
  7441 ;;  exp             1    3[COMMON] unsigned char 
  7442 ;;  sign            1    4[COMMON] unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  3    0[COMMON] float 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7454 ;;      Params:         5       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0
  7456 ;;      Temps:          3       0       0       0       0
  7457 ;;      Totals:         8       0       0       0       0
  7458 ;;Total ram usage:        8 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		___awtoft
  7464 ;;		___ftadd
  7465 ;;		___ftdiv
  7466 ;;		___ftmul
  7467 ;;		___lwtoft
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           
  7472                           ;psect for function ___ftpack
  7473  1269                     ___ftpack:	
  7474                           
  7475                           ;incstack = 0
  7476                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7477  1269  0873               	movf	___ftpack@exp,w
  7478  126A  1903               	btfsc	3,2
  7479  126B  2A71               	goto	i1l2439
  7480  126C  0872               	movf	___ftpack@arg+2,w
  7481  126D  0471               	iorwf	___ftpack@arg+1,w
  7482  126E  0470               	iorwf	___ftpack@arg,w
  7483  126F  1D03               	skipz
  7484  1270  2A84               	goto	i1l2445
  7485  1271                     i1l2439:	
  7486  1271  3000               	movlw	0
  7487  1272  00F0               	movwf	?___ftpack
  7488  1273  3000               	movlw	0
  7489  1274  00F1               	movwf	?___ftpack+1
  7490  1275  3000               	movlw	0
  7491  1276  00F2               	movwf	?___ftpack+2
  7492  1277  0008               	return
  7493  1278                     i1l2443:	
  7494  1278  3001               	movlw	1
  7495  1279  00F5               	movwf	??___ftpack
  7496  127A  0875               	movf	??___ftpack,w
  7497  127B  07F3               	addwf	___ftpack@exp,f
  7498  127C  3001               	movlw	1
  7499  127D                     u226_25:	
  7500  127D  1003               	clrc
  7501  127E  0CF2               	rrf	___ftpack@arg+2,f
  7502  127F  0CF1               	rrf	___ftpack@arg+1,f
  7503  1280  0CF0               	rrf	___ftpack@arg,f
  7504  1281  3EFF               	addlw	-1
  7505  1282  1D03               	skipz
  7506  1283  2A7D               	goto	u226_25
  7507  1284                     i1l2445:	
  7508  1284  30FE               	movlw	254
  7509  1285  0572               	andwf	___ftpack@arg+2,w
  7510  1286  1903               	btfsc	3,2
  7511  1287  2A9F               	goto	i1l918
  7512  1288  2A78               	goto	i1l2443
  7513  1289                     i1l2447:	
  7514  1289  3001               	movlw	1
  7515  128A  00F5               	movwf	??___ftpack
  7516  128B  0875               	movf	??___ftpack,w
  7517  128C  07F3               	addwf	___ftpack@exp,f
  7518  128D  3001               	movlw	1
  7519  128E  07F0               	addwf	___ftpack@arg,f
  7520  128F  3000               	movlw	0
  7521  1290  1803               	skipnc
  7522  1291  3001               	movlw	1
  7523  1292  07F1               	addwf	___ftpack@arg+1,f
  7524  1293  3000               	movlw	0
  7525  1294  1803               	skipnc
  7526  1295  3001               	movlw	1
  7527  1296  07F2               	addwf	___ftpack@arg+2,f
  7528  1297  3001               	movlw	1
  7529  1298                     u228_25:	
  7530  1298  1003               	clrc
  7531  1299  0CF2               	rrf	___ftpack@arg+2,f
  7532  129A  0CF1               	rrf	___ftpack@arg+1,f
  7533  129B  0CF0               	rrf	___ftpack@arg,f
  7534  129C  3EFF               	addlw	-1
  7535  129D  1D03               	skipz
  7536  129E  2A98               	goto	u228_25
  7537  129F                     i1l918:	
  7538  129F  30FF               	movlw	255
  7539  12A0  0572               	andwf	___ftpack@arg+2,w
  7540  12A1  1903               	btfsc	3,2
  7541  12A2  2AAE               	goto	i1l2455
  7542  12A3  2A89               	goto	i1l2447
  7543  12A4                     i1l2453:	
  7544  12A4  3001               	movlw	1
  7545  12A5  02F3               	subwf	___ftpack@exp,f
  7546  12A6  3001               	movlw	1
  7547  12A7                     u230_25:	
  7548  12A7  1003               	clrc
  7549  12A8  0DF0               	rlf	___ftpack@arg,f
  7550  12A9  0DF1               	rlf	___ftpack@arg+1,f
  7551  12AA  0DF2               	rlf	___ftpack@arg+2,f
  7552  12AB  3EFF               	addlw	-1
  7553  12AC  1D03               	skipz
  7554  12AD  2AA7               	goto	u230_25
  7555  12AE                     i1l2455:	
  7556  12AE  1FF1               	btfss	___ftpack@arg+1,7
  7557  12AF  2AA4               	goto	i1l2453
  7558  12B0  1873               	btfsc	___ftpack@exp,0
  7559  12B1  2AB8               	goto	i1l924
  7560  12B2  30FF               	movlw	255
  7561  12B3  05F0               	andwf	___ftpack@arg,f
  7562  12B4  307F               	movlw	127
  7563  12B5  05F1               	andwf	___ftpack@arg+1,f
  7564  12B6  30FF               	movlw	255
  7565  12B7  05F2               	andwf	___ftpack@arg+2,f
  7566  12B8                     i1l924:	
  7567  12B8  1003               	clrc
  7568  12B9  0CF3               	rrf	___ftpack@exp,f
  7569  12BA  0873               	movf	___ftpack@exp,w
  7570  12BB  00F5               	movwf	??___ftpack
  7571  12BC  01F6               	clrf	??___ftpack+1
  7572  12BD  01F7               	clrf	??___ftpack+2
  7573  12BE  3010               	movlw	16
  7574  12BF                     u233_25:	
  7575  12BF  1003               	clrc
  7576  12C0  0DF5               	rlf	??___ftpack,f
  7577  12C1  0DF6               	rlf	??___ftpack+1,f
  7578  12C2  0DF7               	rlf	??___ftpack+2,f
  7579  12C3  3EFF               	addlw	-1
  7580  12C4  1D03               	skipz
  7581  12C5  2ABF               	goto	u233_25
  7582  12C6  0875               	movf	??___ftpack,w
  7583  12C7  04F0               	iorwf	___ftpack@arg,f
  7584  12C8  0876               	movf	??___ftpack+1,w
  7585  12C9  04F1               	iorwf	___ftpack@arg+1,f
  7586  12CA  0877               	movf	??___ftpack+2,w
  7587  12CB  04F2               	iorwf	___ftpack@arg+2,f
  7588  12CC  0874               	movf	___ftpack@sign,w
  7589  12CD  1903               	btfsc	3,2
  7590  12CE  0008               	return
  7591  12CF  17F2               	bsf	___ftpack@arg+2,7
  7592  12D0  0008               	return
  7593  12D1                     __end_of___ftpack:	
  7594  007E                     btemp	set	126	;btemp
  7595  007E                     wtemp	set	126
  7596  007E                     wtemp0	set	126
  7597  0080                     wtemp1	set	128
  7598  0082                     wtemp2	set	130
  7599  0084                     wtemp3	set	132
  7600  0086                     wtemp4	set	134
  7601  0088                     wtemp5	set	136
  7602  007F                     wtemp6	set	127
  7603  007E                     ttemp	set	126
  7604  007E                     ttemp0	set	126
  7605  0081                     ttemp1	set	129
  7606  0084                     ttemp2	set	132
  7607  0087                     ttemp3	set	135
  7608  007F                     ttemp4	set	127
  7609  007E                     ltemp	set	126
  7610  007E                     ltemp0	set	126
  7611  0082                     ltemp1	set	130
  7612  0086                     ltemp2	set	134
  7613  0080                     ltemp3	set	128
  7614                           
  7615                           	psect	text22_split_1
  7616  0809                     i1l2939:	
  7617  0809  30CD               	movlw	205
  7618  080A  00F0               	movwf	___ftge@ff1
  7619  080B  30CC               	movlw	204
  7620  080C  00F1               	movwf	___ftge@ff1+1
  7621  080D  303D               	movlw	61
  7622  080E  00F2               	movwf	___ftge@ff1+2
  7623  080F  1683               	bsf	3,5	;RP0=1, select bank3
  7624  0810  1703               	bsf	3,6	;RP1=1, select bank3
  7625  0811  086D               	movf	fuzzy@freiaM^(0+384),w
  7626  0812  00F3               	movwf	___ftge@ff2
  7627  0813  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  7628  0814  00F4               	movwf	___ftge@ff2+1
  7629  0815  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  7630  0816  00F5               	movwf	___ftge@ff2+2
  7631  0817  160A  118A  220C  120A  158A  	fcall	___ftge
  7632  081C  1C03               	btfss	3,0
  7633  081D  2830               	goto	i1l2943
  7634  081E  1683               	bsf	3,5	;RP0=1, select bank3
  7635  081F  1703               	bsf	3,6	;RP1=1, select bank3
  7636  0820  086D               	movf	fuzzy@freiaM^(0+384),w
  7637  0821  1683               	bsf	3,5	;RP0=1, select bank1
  7638  0822  1303               	bcf	3,6	;RP1=0, select bank1
  7639  0823  00AF               	movwf	_fuzzy$216^(0+128)
  7640  0824  1683               	bsf	3,5	;RP0=1, select bank3
  7641  0825  1703               	bsf	3,6	;RP1=1, select bank3
  7642  0826  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  7643  0827  1683               	bsf	3,5	;RP0=1, select bank1
  7644  0828  1303               	bcf	3,6	;RP1=0, select bank1
  7645  0829  00B0               	movwf	(_fuzzy$216+1)^(0+128)
  7646  082A  1683               	bsf	3,5	;RP0=1, select bank3
  7647  082B  1703               	bsf	3,6	;RP1=1, select bank3
  7648  082C  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  7649  082D  1683               	bsf	3,5	;RP0=1, select bank1
  7650  082E  1303               	bcf	3,6	;RP1=0, select bank1
  7651  082F  2837               	goto	L11
  7652  0830                     i1l2943:	
  7653  0830  30CD               	movlw	205
  7654  0831  1683               	bsf	3,5	;RP0=1, select bank1
  7655  0832  1303               	bcf	3,6	;RP1=0, select bank1
  7656  0833  00AF               	movwf	_fuzzy$216^(0+128)
  7657  0834  30CC               	movlw	204
  7658  0835  00B0               	movwf	(_fuzzy$216+1)^(0+128)
  7659  0836  303D               	movlw	61
  7660  0837                     L11:	
  7661  0837  00B1               	movwf	(_fuzzy$216+2)^(0+128)
  7662  0838  3000               	movlw	0
  7663  0839  00F0               	movwf	___ftge@ff1
  7664  083A  3080               	movlw	128
  7665  083B  00F1               	movwf	___ftge@ff1+1
  7666  083C  303E               	movlw	62
  7667  083D  00F2               	movwf	___ftge@ff1+2
  7668  083E  1683               	bsf	3,5	;RP0=1, select bank3
  7669  083F  1703               	bsf	3,6	;RP1=1, select bank3
  7670  0840  086A               	movf	fuzzy@freia^(0+384),w
  7671  0841  00F3               	movwf	___ftge@ff2
  7672  0842  086B               	movf	(fuzzy@freia+1)^(0+384),w
  7673  0843  00F4               	movwf	___ftge@ff2+1
  7674  0844  086C               	movf	(fuzzy@freia+2)^(0+384),w
  7675  0845  00F5               	movwf	___ftge@ff2+2
  7676  0846  160A  118A  220C  120A  158A  	fcall	___ftge
  7677  084B  1C03               	btfss	3,0
  7678  084C  285F               	goto	i1l2949
  7679  084D  1683               	bsf	3,5	;RP0=1, select bank3
  7680  084E  1703               	bsf	3,6	;RP1=1, select bank3
  7681  084F  086A               	movf	fuzzy@freia^(0+384),w
  7682  0850  1683               	bsf	3,5	;RP0=1, select bank1
  7683  0851  1303               	bcf	3,6	;RP1=0, select bank1
  7684  0852  00B2               	movwf	_fuzzy$217^(0+128)
  7685  0853  1683               	bsf	3,5	;RP0=1, select bank3
  7686  0854  1703               	bsf	3,6	;RP1=1, select bank3
  7687  0855  086B               	movf	(fuzzy@freia+1)^(0+384),w
  7688  0856  1683               	bsf	3,5	;RP0=1, select bank1
  7689  0857  1303               	bcf	3,6	;RP1=0, select bank1
  7690  0858  00B3               	movwf	(_fuzzy$217+1)^(0+128)
  7691  0859  1683               	bsf	3,5	;RP0=1, select bank3
  7692  085A  1703               	bsf	3,6	;RP1=1, select bank3
  7693  085B  086C               	movf	(fuzzy@freia+2)^(0+384),w
  7694  085C  1683               	bsf	3,5	;RP0=1, select bank1
  7695  085D  1303               	bcf	3,6	;RP1=0, select bank1
  7696  085E  2866               	goto	L12
  7697  085F                     i1l2949:	
  7698  085F  3000               	movlw	0
  7699  0860  1683               	bsf	3,5	;RP0=1, select bank1
  7700  0861  1303               	bcf	3,6	;RP1=0, select bank1
  7701  0862  00B2               	movwf	_fuzzy$217^(0+128)
  7702  0863  3080               	movlw	128
  7703  0864  00B3               	movwf	(_fuzzy$217+1)^(0+128)
  7704  0865  303E               	movlw	62
  7705  0866                     L12:	
  7706  0866  00B4               	movwf	(_fuzzy$217+2)^(0+128)
  7707  0867  0832               	movf	_fuzzy$217^(0+128),w
  7708  0868  00F0               	movwf	___ftge@ff1
  7709  0869  0833               	movf	(_fuzzy$217+1)^(0+128),w
  7710  086A  00F1               	movwf	___ftge@ff1+1
  7711  086B  0834               	movf	(_fuzzy$217+2)^(0+128),w
  7712  086C  00F2               	movwf	___ftge@ff1+2
  7713  086D  082F               	movf	_fuzzy$216^(0+128),w
  7714  086E  00F3               	movwf	___ftge@ff2
  7715  086F  0830               	movf	(_fuzzy$216+1)^(0+128),w
  7716  0870  00F4               	movwf	___ftge@ff2+1
  7717  0871  0831               	movf	(_fuzzy$216+2)^(0+128),w
  7718  0872  00F5               	movwf	___ftge@ff2+2
  7719  0873  160A  118A  220C  120A  158A  	fcall	___ftge
  7720  0878  1C03               	btfss	3,0
  7721  0879  28AF               	goto	i1l2959
  7722  087A  3000               	movlw	0
  7723  087B  00F0               	movwf	___ftge@ff1
  7724  087C  3080               	movlw	128
  7725  087D  00F1               	movwf	___ftge@ff1+1
  7726  087E  303E               	movlw	62
  7727  087F  00F2               	movwf	___ftge@ff1+2
  7728  0880  1683               	bsf	3,5	;RP0=1, select bank3
  7729  0881  1703               	bsf	3,6	;RP1=1, select bank3
  7730  0882  086A               	movf	fuzzy@freia^(0+384),w
  7731  0883  00F3               	movwf	___ftge@ff2
  7732  0884  086B               	movf	(fuzzy@freia+1)^(0+384),w
  7733  0885  00F4               	movwf	___ftge@ff2+1
  7734  0886  086C               	movf	(fuzzy@freia+2)^(0+384),w
  7735  0887  00F5               	movwf	___ftge@ff2+2
  7736  0888  160A  118A  220C  120A  158A  	fcall	___ftge
  7737  088D  1C03               	btfss	3,0
  7738  088E  28A1               	goto	i1l2957
  7739  088F  1683               	bsf	3,5	;RP0=1, select bank3
  7740  0890  1703               	bsf	3,6	;RP1=1, select bank3
  7741  0891  086A               	movf	fuzzy@freia^(0+384),w
  7742  0892  1683               	bsf	3,5	;RP0=1, select bank1
  7743  0893  1303               	bcf	3,6	;RP1=0, select bank1
  7744  0894  00B5               	movwf	_fuzzy$218^(0+128)
  7745  0895  1683               	bsf	3,5	;RP0=1, select bank3
  7746  0896  1703               	bsf	3,6	;RP1=1, select bank3
  7747  0897  086B               	movf	(fuzzy@freia+1)^(0+384),w
  7748  0898  1683               	bsf	3,5	;RP0=1, select bank1
  7749  0899  1303               	bcf	3,6	;RP1=0, select bank1
  7750  089A  00B6               	movwf	(_fuzzy$218+1)^(0+128)
  7751  089B  1683               	bsf	3,5	;RP0=1, select bank3
  7752  089C  1703               	bsf	3,6	;RP1=1, select bank3
  7753  089D  086C               	movf	(fuzzy@freia+2)^(0+384),w
  7754  089E  1683               	bsf	3,5	;RP0=1, select bank1
  7755  089F  1303               	bcf	3,6	;RP1=0, select bank1
  7756  08A0  28A8               	goto	L13
  7757  08A1                     i1l2957:	
  7758  08A1  3000               	movlw	0
  7759  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  7760  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  7761  08A4  00B5               	movwf	_fuzzy$218^(0+128)
  7762  08A5  3080               	movlw	128
  7763  08A6  00B6               	movwf	(_fuzzy$218+1)^(0+128)
  7764  08A7  303E               	movlw	62
  7765  08A8                     L13:	
  7766  08A8  00B7               	movwf	(_fuzzy$218+2)^(0+128)
  7767  08A9  0835               	movf	_fuzzy$218^(0+128),w
  7768  08AA  00AC               	movwf	_fuzzy$215^(0+128)
  7769  08AB  0836               	movf	(_fuzzy$218+1)^(0+128),w
  7770  08AC  00AD               	movwf	(_fuzzy$215+1)^(0+128)
  7771  08AD  0837               	movf	(_fuzzy$218+2)^(0+128),w
  7772  08AE  28E3               	goto	L14
  7773  08AF                     i1l2959:	
  7774  08AF  30CD               	movlw	205
  7775  08B0  00F0               	movwf	___ftge@ff1
  7776  08B1  30CC               	movlw	204
  7777  08B2  00F1               	movwf	___ftge@ff1+1
  7778  08B3  303D               	movlw	61
  7779  08B4  00F2               	movwf	___ftge@ff1+2
  7780  08B5  1683               	bsf	3,5	;RP0=1, select bank3
  7781  08B6  1703               	bsf	3,6	;RP1=1, select bank3
  7782  08B7  086D               	movf	fuzzy@freiaM^(0+384),w
  7783  08B8  00F3               	movwf	___ftge@ff2
  7784  08B9  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  7785  08BA  00F4               	movwf	___ftge@ff2+1
  7786  08BB  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  7787  08BC  00F5               	movwf	___ftge@ff2+2
  7788  08BD  160A  118A  220C  120A  158A  	fcall	___ftge
  7789  08C2  1C03               	btfss	3,0
  7790  08C3  28D6               	goto	i1l2963
  7791  08C4  1683               	bsf	3,5	;RP0=1, select bank3
  7792  08C5  1703               	bsf	3,6	;RP1=1, select bank3
  7793  08C6  086D               	movf	fuzzy@freiaM^(0+384),w
  7794  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  7795  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  7796  08C9  00B8               	movwf	_fuzzy$219^(0+128)
  7797  08CA  1683               	bsf	3,5	;RP0=1, select bank3
  7798  08CB  1703               	bsf	3,6	;RP1=1, select bank3
  7799  08CC  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  7800  08CD  1683               	bsf	3,5	;RP0=1, select bank1
  7801  08CE  1303               	bcf	3,6	;RP1=0, select bank1
  7802  08CF  00B9               	movwf	(_fuzzy$219+1)^(0+128)
  7803  08D0  1683               	bsf	3,5	;RP0=1, select bank3
  7804  08D1  1703               	bsf	3,6	;RP1=1, select bank3
  7805  08D2  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  7806  08D3  1683               	bsf	3,5	;RP0=1, select bank1
  7807  08D4  1303               	bcf	3,6	;RP1=0, select bank1
  7808  08D5  28DD               	goto	L15
  7809  08D6                     i1l2963:	
  7810  08D6  30CD               	movlw	205
  7811  08D7  1683               	bsf	3,5	;RP0=1, select bank1
  7812  08D8  1303               	bcf	3,6	;RP1=0, select bank1
  7813  08D9  00B8               	movwf	_fuzzy$219^(0+128)
  7814  08DA  30CC               	movlw	204
  7815  08DB  00B9               	movwf	(_fuzzy$219+1)^(0+128)
  7816  08DC  303D               	movlw	61
  7817  08DD                     L15:	
  7818  08DD  00BA               	movwf	(_fuzzy$219+2)^(0+128)
  7819  08DE  0838               	movf	_fuzzy$219^(0+128),w
  7820  08DF  00AC               	movwf	_fuzzy$215^(0+128)
  7821  08E0  0839               	movf	(_fuzzy$219+1)^(0+128),w
  7822  08E1  00AD               	movwf	(_fuzzy$215+1)^(0+128)
  7823  08E2  083A               	movf	(_fuzzy$219+2)^(0+128),w
  7824  08E3                     L14:	
  7825  08E3  00AE               	movwf	(_fuzzy$215+2)^(0+128)
  7826  08E4  082C               	movf	_fuzzy$215^(0+128),w
  7827  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  7828  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  7829  08E7  00E2               	movwf	_fuzzy$207
  7830  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  7831  08E9  1303               	bcf	3,6	;RP1=0, select bank1
  7832  08EA  082D               	movf	(_fuzzy$215+1)^(0+128),w
  7833  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  7834  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  7835  08ED  00E3               	movwf	_fuzzy$207+1
  7836  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  7837  08EF  1303               	bcf	3,6	;RP1=0, select bank1
  7838  08F0  082E               	movf	(_fuzzy$215+2)^(0+128),w
  7839  08F1                     L10:	
  7840  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  7841  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  7842  08F3  00E4               	movwf	_fuzzy$207+2
  7843  08F4  3000               	movlw	0
  7844  08F5  00F0               	movwf	___ftge@ff1
  7845  08F6  3040               	movlw	64
  7846  08F7  00F1               	movwf	___ftge@ff1+1
  7847  08F8  303F               	movlw	63
  7848  08F9  00F2               	movwf	___ftge@ff1+2
  7849  08FA  1683               	bsf	3,5	;RP0=1, select bank3
  7850  08FB  1703               	bsf	3,6	;RP1=1, select bank3
  7851  08FC  0864               	movf	fuzzy@acelera^(0+384),w
  7852  08FD  00F3               	movwf	___ftge@ff2
  7853  08FE  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  7854  08FF  00F4               	movwf	___ftge@ff2+1
  7855  0900  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  7856  0901  00F5               	movwf	___ftge@ff2+2
  7857  0902  160A  118A  220C   	fcall	___ftge
  7858  0905  120A  118A  1C03   	btfss	3,0
  7859  0908  2844               	goto	i1l2969
  7860  0909  1683               	bsf	3,5	;RP0=1, select bank3
  7861  090A  1703               	bsf	3,6	;RP1=1, select bank3
  7862  090B  0864               	movf	fuzzy@acelera^(0+384),w
  7863  090C  1683               	bsf	3,5	;RP0=1, select bank1
  7864  090D  1303               	bcf	3,6	;RP1=0, select bank1
  7865  090E  00BB               	movwf	_fuzzy$220^(0+128)
  7866  090F  1683               	bsf	3,5	;RP0=1, select bank3
  7867  0910  1703               	bsf	3,6	;RP1=1, select bank3
  7868  0911  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  7869  0912  1683               	bsf	3,5	;RP0=1, select bank1
  7870  0913  1303               	bcf	3,6	;RP1=0, select bank1
  7871  0914  00BC               	movwf	(_fuzzy$220+1)^(0+128)
  7872  0915  1683               	bsf	3,5	;RP0=1, select bank3
  7873  0916  1703               	bsf	3,6	;RP1=1, select bank3
  7874  0917  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  7875  0918  1683               	bsf	3,5	;RP0=1, select bank1
  7876  0919  1303               	bcf	3,6	;RP1=0, select bank1
  7877  091A  120A  118A  284B   	goto	L16
  7878                           
  7879                           	psect	text22_split_2
  7880  0044                     i1l2969:	
  7881  0044  3000               	movlw	0
  7882  0045  1683               	bsf	3,5	;RP0=1, select bank1
  7883  0046  1303               	bcf	3,6	;RP1=0, select bank1
  7884  0047  00BB               	movwf	_fuzzy$220^(0+128)
  7885  0048  3040               	movlw	64
  7886  0049  00BC               	movwf	(_fuzzy$220+1)^(0+128)
  7887  004A  303F               	movlw	63
  7888  004B                     L16:	
  7889  004B  00BD               	movwf	(_fuzzy$220+2)^(0+128)
  7890  004C  083B               	movf	_fuzzy$220^(0+128),w
  7891  004D  00F0               	movwf	___ftge@ff1
  7892  004E  083C               	movf	(_fuzzy$220+1)^(0+128),w
  7893  004F  00F1               	movwf	___ftge@ff1+1
  7894  0050  083D               	movf	(_fuzzy$220+2)^(0+128),w
  7895  0051  00F2               	movwf	___ftge@ff1+2
  7896  0052  1283               	bcf	3,5	;RP0=0, select bank0
  7897  0053  1303               	bcf	3,6	;RP1=0, select bank0
  7898  0054  0862               	movf	_fuzzy$207,w
  7899  0055  00F3               	movwf	___ftge@ff2
  7900  0056  0863               	movf	_fuzzy$207+1,w
  7901  0057  00F4               	movwf	___ftge@ff2+1
  7902  0058  0864               	movf	_fuzzy$207+2,w
  7903  0059  00F5               	movwf	___ftge@ff2+2
  7904  005A  160A  118A  220C  120A  118A  	fcall	___ftge
  7905  005F  1C03               	btfss	3,0
  7906  0060  289E               	goto	i1l2979
  7907  0061  3000               	movlw	0
  7908  0062  00F0               	movwf	___ftge@ff1
  7909  0063  3040               	movlw	64
  7910  0064  00F1               	movwf	___ftge@ff1+1
  7911  0065  303F               	movlw	63
  7912  0066  00F2               	movwf	___ftge@ff1+2
  7913  0067  1683               	bsf	3,5	;RP0=1, select bank3
  7914  0068  1703               	bsf	3,6	;RP1=1, select bank3
  7915  0069  0864               	movf	fuzzy@acelera^(0+384),w
  7916  006A  00F3               	movwf	___ftge@ff2
  7917  006B  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  7918  006C  00F4               	movwf	___ftge@ff2+1
  7919  006D  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  7920  006E  00F5               	movwf	___ftge@ff2+2
  7921  006F  160A  118A  220C  120A  118A  	fcall	___ftge
  7922  0074  1C03               	btfss	3,0
  7923  0075  2888               	goto	i1l2977
  7924  0076  1683               	bsf	3,5	;RP0=1, select bank3
  7925  0077  1703               	bsf	3,6	;RP1=1, select bank3
  7926  0078  0864               	movf	fuzzy@acelera^(0+384),w
  7927  0079  1683               	bsf	3,5	;RP0=1, select bank1
  7928  007A  1303               	bcf	3,6	;RP1=0, select bank1
  7929  007B  00BE               	movwf	_fuzzy$221^(0+128)
  7930  007C  1683               	bsf	3,5	;RP0=1, select bank3
  7931  007D  1703               	bsf	3,6	;RP1=1, select bank3
  7932  007E  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  7933  007F  1683               	bsf	3,5	;RP0=1, select bank1
  7934  0080  1303               	bcf	3,6	;RP1=0, select bank1
  7935  0081  00BF               	movwf	(_fuzzy$221+1)^(0+128)
  7936  0082  1683               	bsf	3,5	;RP0=1, select bank3
  7937  0083  1703               	bsf	3,6	;RP1=1, select bank3
  7938  0084  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  7939  0085  1683               	bsf	3,5	;RP0=1, select bank1
  7940  0086  1303               	bcf	3,6	;RP1=0, select bank1
  7941  0087  288F               	goto	L17
  7942  0088                     i1l2977:	
  7943  0088  3000               	movlw	0
  7944  0089  1683               	bsf	3,5	;RP0=1, select bank1
  7945  008A  1303               	bcf	3,6	;RP1=0, select bank1
  7946  008B  00BE               	movwf	_fuzzy$221^(0+128)
  7947  008C  3040               	movlw	64
  7948  008D  00BF               	movwf	(_fuzzy$221+1)^(0+128)
  7949  008E  303F               	movlw	63
  7950  008F                     L17:	
  7951  008F  00C0               	movwf	(_fuzzy$221+2)^(0+128)
  7952  0090  083E               	movf	_fuzzy$221^(0+128),w
  7953  0091  1283               	bcf	3,5	;RP0=0, select bank0
  7954  0092  1303               	bcf	3,6	;RP1=0, select bank0
  7955  0093  00DF               	movwf	_fuzzy$206
  7956  0094  1683               	bsf	3,5	;RP0=1, select bank1
  7957  0095  1303               	bcf	3,6	;RP1=0, select bank1
  7958  0096  083F               	movf	(_fuzzy$221+1)^(0+128),w
  7959  0097  1283               	bcf	3,5	;RP0=0, select bank0
  7960  0098  1303               	bcf	3,6	;RP1=0, select bank0
  7961  0099  00E0               	movwf	_fuzzy$206+1
  7962  009A  1683               	bsf	3,5	;RP0=1, select bank1
  7963  009B  1303               	bcf	3,6	;RP1=0, select bank1
  7964  009C  0840               	movf	(_fuzzy$221+2)^(0+128),w
  7965  009D  2ADE               	goto	L18
  7966  009E                     i1l2979:	
  7967  009E  30CD               	movlw	205
  7968  009F  00F0               	movwf	___ftge@ff1
  7969  00A0  30CC               	movlw	204
  7970  00A1  00F1               	movwf	___ftge@ff1+1
  7971  00A2  303D               	movlw	61
  7972  00A3  00F2               	movwf	___ftge@ff1+2
  7973  00A4  1683               	bsf	3,5	;RP0=1, select bank3
  7974  00A5  1703               	bsf	3,6	;RP1=1, select bank3
  7975  00A6  086D               	movf	fuzzy@freiaM^(0+384),w
  7976  00A7  00F3               	movwf	___ftge@ff2
  7977  00A8  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  7978  00A9  00F4               	movwf	___ftge@ff2+1
  7979  00AA  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  7980  00AB  00F5               	movwf	___ftge@ff2+2
  7981  00AC  160A  118A  220C  120A  118A  	fcall	___ftge
  7982  00B1  1C03               	btfss	3,0
  7983  00B2  28C5               	goto	i1l2983
  7984  00B3  1683               	bsf	3,5	;RP0=1, select bank3
  7985  00B4  1703               	bsf	3,6	;RP1=1, select bank3
  7986  00B5  086D               	movf	fuzzy@freiaM^(0+384),w
  7987  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  7988  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  7989  00B8  00C7               	movwf	_fuzzy$224^(0+128)
  7990  00B9  1683               	bsf	3,5	;RP0=1, select bank3
  7991  00BA  1703               	bsf	3,6	;RP1=1, select bank3
  7992  00BB  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  7993  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  7994  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  7995  00BE  00C8               	movwf	(_fuzzy$224+1)^(0+128)
  7996  00BF  1683               	bsf	3,5	;RP0=1, select bank3
  7997  00C0  1703               	bsf	3,6	;RP1=1, select bank3
  7998  00C1  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  7999  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  8000  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  8001  00C4  28CC               	goto	L19
  8002  00C5                     i1l2983:	
  8003  00C5  30CD               	movlw	205
  8004  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  8005  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  8006  00C8  00C7               	movwf	_fuzzy$224^(0+128)
  8007  00C9  30CC               	movlw	204
  8008  00CA  00C8               	movwf	(_fuzzy$224+1)^(0+128)
  8009  00CB  303D               	movlw	61
  8010  00CC                     L19:	
  8011  00CC  00C9               	movwf	(_fuzzy$224+2)^(0+128)
  8012  00CD  3000               	movlw	0
  8013  00CE  00F0               	movwf	___ftge@ff1
  8014  00CF  3080               	movlw	128
  8015  00D0  00F1               	movwf	___ftge@ff1+1
  8016  00D1  303E               	movlw	62
  8017  00D2  00F2               	movwf	___ftge@ff1+2
  8018  00D3  1683               	bsf	3,5	;RP0=1, select bank3
  8019  00D4  1703               	bsf	3,6	;RP1=1, select bank3
  8020  00D5  086A               	movf	fuzzy@freia^(0+384),w
  8021  00D6  00F3               	movwf	___ftge@ff2
  8022  00D7  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8023  00D8  00F4               	movwf	___ftge@ff2+1
  8024  00D9  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8025  00DA  00F5               	movwf	___ftge@ff2+2
  8026  00DB  160A  118A  220C  120A  118A  	fcall	___ftge
  8027  00E0  1C03               	btfss	3,0
  8028  00E1  28F4               	goto	i1l2989
  8029  00E2  1683               	bsf	3,5	;RP0=1, select bank3
  8030  00E3  1703               	bsf	3,6	;RP1=1, select bank3
  8031  00E4  086A               	movf	fuzzy@freia^(0+384),w
  8032  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  8033  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  8034  00E7  00CA               	movwf	_fuzzy$225^(0+128)
  8035  00E8  1683               	bsf	3,5	;RP0=1, select bank3
  8036  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  8037  00EA  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8038  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  8039  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  8040  00ED  00CB               	movwf	(_fuzzy$225+1)^(0+128)
  8041  00EE  1683               	bsf	3,5	;RP0=1, select bank3
  8042  00EF  1703               	bsf	3,6	;RP1=1, select bank3
  8043  00F0  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8044  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  8045  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  8046  00F3  28FB               	goto	L20
  8047  00F4                     i1l2989:	
  8048  00F4  3000               	movlw	0
  8049  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  8050  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  8051  00F7  00CA               	movwf	_fuzzy$225^(0+128)
  8052  00F8  3080               	movlw	128
  8053  00F9  00CB               	movwf	(_fuzzy$225+1)^(0+128)
  8054  00FA  303E               	movlw	62
  8055  00FB                     L20:	
  8056  00FB  00CC               	movwf	(_fuzzy$225+2)^(0+128)
  8057  00FC  084A               	movf	_fuzzy$225^(0+128),w
  8058  00FD  00F0               	movwf	___ftge@ff1
  8059  00FE  084B               	movf	(_fuzzy$225+1)^(0+128),w
  8060  00FF  00F1               	movwf	___ftge@ff1+1
  8061  0100  084C               	movf	(_fuzzy$225+2)^(0+128),w
  8062  0101  00F2               	movwf	___ftge@ff1+2
  8063  0102  0847               	movf	_fuzzy$224^(0+128),w
  8064  0103  00F3               	movwf	___ftge@ff2
  8065  0104  0848               	movf	(_fuzzy$224+1)^(0+128),w
  8066  0105  00F4               	movwf	___ftge@ff2+1
  8067  0106  0849               	movf	(_fuzzy$224+2)^(0+128),w
  8068  0107  00F5               	movwf	___ftge@ff2+2
  8069  0108  160A  118A  220C  120A  118A  	fcall	___ftge
  8070  010D  1C03               	btfss	3,0
  8071  010E  2944               	goto	i1l2999
  8072  010F  3000               	movlw	0
  8073  0110  00F0               	movwf	___ftge@ff1
  8074  0111  3080               	movlw	128
  8075  0112  00F1               	movwf	___ftge@ff1+1
  8076  0113  303E               	movlw	62
  8077  0114  00F2               	movwf	___ftge@ff1+2
  8078  0115  1683               	bsf	3,5	;RP0=1, select bank3
  8079  0116  1703               	bsf	3,6	;RP1=1, select bank3
  8080  0117  086A               	movf	fuzzy@freia^(0+384),w
  8081  0118  00F3               	movwf	___ftge@ff2
  8082  0119  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8083  011A  00F4               	movwf	___ftge@ff2+1
  8084  011B  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8085  011C  00F5               	movwf	___ftge@ff2+2
  8086  011D  160A  118A  220C  120A  118A  	fcall	___ftge
  8087  0122  1C03               	btfss	3,0
  8088  0123  2936               	goto	i1l2997
  8089  0124  1683               	bsf	3,5	;RP0=1, select bank3
  8090  0125  1703               	bsf	3,6	;RP1=1, select bank3
  8091  0126  086A               	movf	fuzzy@freia^(0+384),w
  8092  0127  1683               	bsf	3,5	;RP0=1, select bank1
  8093  0128  1303               	bcf	3,6	;RP1=0, select bank1
  8094  0129  00CD               	movwf	_fuzzy$226^(0+128)
  8095  012A  1683               	bsf	3,5	;RP0=1, select bank3
  8096  012B  1703               	bsf	3,6	;RP1=1, select bank3
  8097  012C  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8098  012D  1683               	bsf	3,5	;RP0=1, select bank1
  8099  012E  1303               	bcf	3,6	;RP1=0, select bank1
  8100  012F  00CE               	movwf	(_fuzzy$226+1)^(0+128)
  8101  0130  1683               	bsf	3,5	;RP0=1, select bank3
  8102  0131  1703               	bsf	3,6	;RP1=1, select bank3
  8103  0132  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8104  0133  1683               	bsf	3,5	;RP0=1, select bank1
  8105  0134  1303               	bcf	3,6	;RP1=0, select bank1
  8106  0135  293D               	goto	L21
  8107  0136                     i1l2997:	
  8108  0136  3000               	movlw	0
  8109  0137  1683               	bsf	3,5	;RP0=1, select bank1
  8110  0138  1303               	bcf	3,6	;RP1=0, select bank1
  8111  0139  00CD               	movwf	_fuzzy$226^(0+128)
  8112  013A  3080               	movlw	128
  8113  013B  00CE               	movwf	(_fuzzy$226+1)^(0+128)
  8114  013C  303E               	movlw	62
  8115  013D                     L21:	
  8116  013D  00CF               	movwf	(_fuzzy$226+2)^(0+128)
  8117  013E  084D               	movf	_fuzzy$226^(0+128),w
  8118  013F  00C4               	movwf	_fuzzy$223^(0+128)
  8119  0140  084E               	movf	(_fuzzy$226+1)^(0+128),w
  8120  0141  00C5               	movwf	(_fuzzy$223+1)^(0+128)
  8121  0142  084F               	movf	(_fuzzy$226+2)^(0+128),w
  8122  0143  2978               	goto	L22
  8123  0144                     i1l2999:	
  8124  0144  30CD               	movlw	205
  8125  0145  00F0               	movwf	___ftge@ff1
  8126  0146  30CC               	movlw	204
  8127  0147  00F1               	movwf	___ftge@ff1+1
  8128  0148  303D               	movlw	61
  8129  0149  00F2               	movwf	___ftge@ff1+2
  8130  014A  1683               	bsf	3,5	;RP0=1, select bank3
  8131  014B  1703               	bsf	3,6	;RP1=1, select bank3
  8132  014C  086D               	movf	fuzzy@freiaM^(0+384),w
  8133  014D  00F3               	movwf	___ftge@ff2
  8134  014E  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8135  014F  00F4               	movwf	___ftge@ff2+1
  8136  0150  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8137  0151  00F5               	movwf	___ftge@ff2+2
  8138  0152  160A  118A  220C  120A  118A  	fcall	___ftge
  8139  0157  1C03               	btfss	3,0
  8140  0158  296B               	goto	i1l3003
  8141  0159  1683               	bsf	3,5	;RP0=1, select bank3
  8142  015A  1703               	bsf	3,6	;RP1=1, select bank3
  8143  015B  086D               	movf	fuzzy@freiaM^(0+384),w
  8144  015C  1683               	bsf	3,5	;RP0=1, select bank1
  8145  015D  1303               	bcf	3,6	;RP1=0, select bank1
  8146  015E  00D0               	movwf	_fuzzy$227^(0+128)
  8147  015F  1683               	bsf	3,5	;RP0=1, select bank3
  8148  0160  1703               	bsf	3,6	;RP1=1, select bank3
  8149  0161  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8150  0162  1683               	bsf	3,5	;RP0=1, select bank1
  8151  0163  1303               	bcf	3,6	;RP1=0, select bank1
  8152  0164  00D1               	movwf	(_fuzzy$227+1)^(0+128)
  8153  0165  1683               	bsf	3,5	;RP0=1, select bank3
  8154  0166  1703               	bsf	3,6	;RP1=1, select bank3
  8155  0167  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8156  0168  1683               	bsf	3,5	;RP0=1, select bank1
  8157  0169  1303               	bcf	3,6	;RP1=0, select bank1
  8158  016A  2972               	goto	L23
  8159  016B                     i1l3003:	
  8160  016B  30CD               	movlw	205
  8161  016C  1683               	bsf	3,5	;RP0=1, select bank1
  8162  016D  1303               	bcf	3,6	;RP1=0, select bank1
  8163  016E  00D0               	movwf	_fuzzy$227^(0+128)
  8164  016F  30CC               	movlw	204
  8165  0170  00D1               	movwf	(_fuzzy$227+1)^(0+128)
  8166  0171  303D               	movlw	61
  8167  0172                     L23:	
  8168  0172  00D2               	movwf	(_fuzzy$227+2)^(0+128)
  8169  0173  0850               	movf	_fuzzy$227^(0+128),w
  8170  0174  00C4               	movwf	_fuzzy$223^(0+128)
  8171  0175  0851               	movf	(_fuzzy$227+1)^(0+128),w
  8172  0176  00C5               	movwf	(_fuzzy$223+1)^(0+128)
  8173  0177  0852               	movf	(_fuzzy$227+2)^(0+128),w
  8174  0178                     L22:	
  8175  0178  00C6               	movwf	(_fuzzy$223+2)^(0+128)
  8176  0179  3000               	movlw	0
  8177  017A  00F0               	movwf	___ftge@ff1
  8178  017B  3000               	movlw	0
  8179  017C  00F1               	movwf	___ftge@ff1+1
  8180  017D  303F               	movlw	63
  8181  017E  00F2               	movwf	___ftge@ff1+2
  8182  017F  1683               	bsf	3,5	;RP0=1, select bank3
  8183  0180  1703               	bsf	3,6	;RP1=1, select bank3
  8184  0181  0867               	movf	fuzzy@mantem^(0+384),w
  8185  0182  00F3               	movwf	___ftge@ff2
  8186  0183  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8187  0184  00F4               	movwf	___ftge@ff2+1
  8188  0185  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8189  0186  00F5               	movwf	___ftge@ff2+2
  8190  0187  160A  118A  220C  120A  118A  	fcall	___ftge
  8191  018C  1C03               	btfss	3,0
  8192  018D  29A0               	goto	i1l3009
  8193  018E  1683               	bsf	3,5	;RP0=1, select bank3
  8194  018F  1703               	bsf	3,6	;RP1=1, select bank3
  8195  0190  0867               	movf	fuzzy@mantem^(0+384),w
  8196  0191  1683               	bsf	3,5	;RP0=1, select bank1
  8197  0192  1303               	bcf	3,6	;RP1=0, select bank1
  8198  0193  00D3               	movwf	_fuzzy$228^(0+128)
  8199  0194  1683               	bsf	3,5	;RP0=1, select bank3
  8200  0195  1703               	bsf	3,6	;RP1=1, select bank3
  8201  0196  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8202  0197  1683               	bsf	3,5	;RP0=1, select bank1
  8203  0198  1303               	bcf	3,6	;RP1=0, select bank1
  8204  0199  00D4               	movwf	(_fuzzy$228+1)^(0+128)
  8205  019A  1683               	bsf	3,5	;RP0=1, select bank3
  8206  019B  1703               	bsf	3,6	;RP1=1, select bank3
  8207  019C  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8208  019D  1683               	bsf	3,5	;RP0=1, select bank1
  8209  019E  1303               	bcf	3,6	;RP1=0, select bank1
  8210  019F  29A7               	goto	L24
  8211  01A0                     i1l3009:	
  8212  01A0  3000               	movlw	0
  8213  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  8214  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  8215  01A3  00D3               	movwf	_fuzzy$228^(0+128)
  8216  01A4  3000               	movlw	0
  8217  01A5  00D4               	movwf	(_fuzzy$228+1)^(0+128)
  8218  01A6  303F               	movlw	63
  8219  01A7                     L24:	
  8220  01A7  00D5               	movwf	(_fuzzy$228+2)^(0+128)
  8221  01A8  0853               	movf	_fuzzy$228^(0+128),w
  8222  01A9  00F0               	movwf	___ftge@ff1
  8223  01AA  0854               	movf	(_fuzzy$228+1)^(0+128),w
  8224  01AB  00F1               	movwf	___ftge@ff1+1
  8225  01AC  0855               	movf	(_fuzzy$228+2)^(0+128),w
  8226  01AD  00F2               	movwf	___ftge@ff1+2
  8227  01AE  0844               	movf	_fuzzy$223^(0+128),w
  8228  01AF  00F3               	movwf	___ftge@ff2
  8229  01B0  0845               	movf	(_fuzzy$223+1)^(0+128),w
  8230  01B1  00F4               	movwf	___ftge@ff2+1
  8231  01B2  0846               	movf	(_fuzzy$223+2)^(0+128),w
  8232  01B3  00F5               	movwf	___ftge@ff2+2
  8233  01B4  160A  118A  220C  120A  118A  	fcall	___ftge
  8234  01B9  1C03               	btfss	3,0
  8235  01BA  29F0               	goto	i1l3019
  8236  01BB  3000               	movlw	0
  8237  01BC  00F0               	movwf	___ftge@ff1
  8238  01BD  3000               	movlw	0
  8239  01BE  00F1               	movwf	___ftge@ff1+1
  8240  01BF  303F               	movlw	63
  8241  01C0  00F2               	movwf	___ftge@ff1+2
  8242  01C1  1683               	bsf	3,5	;RP0=1, select bank3
  8243  01C2  1703               	bsf	3,6	;RP1=1, select bank3
  8244  01C3  0867               	movf	fuzzy@mantem^(0+384),w
  8245  01C4  00F3               	movwf	___ftge@ff2
  8246  01C5  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8247  01C6  00F4               	movwf	___ftge@ff2+1
  8248  01C7  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8249  01C8  00F5               	movwf	___ftge@ff2+2
  8250  01C9  160A  118A  220C  120A  118A  	fcall	___ftge
  8251  01CE  1C03               	btfss	3,0
  8252  01CF  29E2               	goto	i1l3017
  8253  01D0  1683               	bsf	3,5	;RP0=1, select bank3
  8254  01D1  1703               	bsf	3,6	;RP1=1, select bank3
  8255  01D2  0867               	movf	fuzzy@mantem^(0+384),w
  8256  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  8257  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  8258  01D5  00D6               	movwf	_fuzzy$229^(0+128)
  8259  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  8260  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  8261  01D8  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8262  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  8263  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  8264  01DB  00D7               	movwf	(_fuzzy$229+1)^(0+128)
  8265  01DC  1683               	bsf	3,5	;RP0=1, select bank3
  8266  01DD  1703               	bsf	3,6	;RP1=1, select bank3
  8267  01DE  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8268  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  8269  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  8270  01E1  29E9               	goto	L25
  8271  01E2                     i1l3017:	
  8272  01E2  3000               	movlw	0
  8273  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  8274  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  8275  01E5  00D6               	movwf	_fuzzy$229^(0+128)
  8276  01E6  3000               	movlw	0
  8277  01E7  00D7               	movwf	(_fuzzy$229+1)^(0+128)
  8278  01E8  303F               	movlw	63
  8279  01E9                     L25:	
  8280  01E9  00D8               	movwf	(_fuzzy$229+2)^(0+128)
  8281  01EA  0856               	movf	_fuzzy$229^(0+128),w
  8282  01EB  00C1               	movwf	_fuzzy$222^(0+128)
  8283  01EC  0857               	movf	(_fuzzy$229+1)^(0+128),w
  8284  01ED  00C2               	movwf	(_fuzzy$222+1)^(0+128)
  8285  01EE  0858               	movf	(_fuzzy$229+2)^(0+128),w
  8286  01EF  2AD0               	goto	L26
  8287  01F0                     i1l3019:	
  8288  01F0  30CD               	movlw	205
  8289  01F1  00F0               	movwf	___ftge@ff1
  8290  01F2  30CC               	movlw	204
  8291  01F3  00F1               	movwf	___ftge@ff1+1
  8292  01F4  303D               	movlw	61
  8293  01F5  00F2               	movwf	___ftge@ff1+2
  8294  01F6  1683               	bsf	3,5	;RP0=1, select bank3
  8295  01F7  1703               	bsf	3,6	;RP1=1, select bank3
  8296  01F8  086D               	movf	fuzzy@freiaM^(0+384),w
  8297  01F9  00F3               	movwf	___ftge@ff2
  8298  01FA  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8299  01FB  00F4               	movwf	___ftge@ff2+1
  8300  01FC  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8301  01FD  00F5               	movwf	___ftge@ff2+2
  8302  01FE  160A  118A  220C  120A  118A  	fcall	___ftge
  8303  0203  1C03               	btfss	3,0
  8304  0204  2A17               	goto	i1l3023
  8305  0205  1683               	bsf	3,5	;RP0=1, select bank3
  8306  0206  1703               	bsf	3,6	;RP1=1, select bank3
  8307  0207  086D               	movf	fuzzy@freiaM^(0+384),w
  8308  0208  1683               	bsf	3,5	;RP0=1, select bank1
  8309  0209  1303               	bcf	3,6	;RP1=0, select bank1
  8310  020A  00DC               	movwf	_fuzzy$231^(0+128)
  8311  020B  1683               	bsf	3,5	;RP0=1, select bank3
  8312  020C  1703               	bsf	3,6	;RP1=1, select bank3
  8313  020D  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8314  020E  1683               	bsf	3,5	;RP0=1, select bank1
  8315  020F  1303               	bcf	3,6	;RP1=0, select bank1
  8316  0210  00DD               	movwf	(_fuzzy$231+1)^(0+128)
  8317  0211  1683               	bsf	3,5	;RP0=1, select bank3
  8318  0212  1703               	bsf	3,6	;RP1=1, select bank3
  8319  0213  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8320  0214  1683               	bsf	3,5	;RP0=1, select bank1
  8321  0215  1303               	bcf	3,6	;RP1=0, select bank1
  8322  0216  2A1E               	goto	L27
  8323  0217                     i1l3023:	
  8324  0217  30CD               	movlw	205
  8325  0218  1683               	bsf	3,5	;RP0=1, select bank1
  8326  0219  1303               	bcf	3,6	;RP1=0, select bank1
  8327  021A  00DC               	movwf	_fuzzy$231^(0+128)
  8328  021B  30CC               	movlw	204
  8329  021C  00DD               	movwf	(_fuzzy$231+1)^(0+128)
  8330  021D  303D               	movlw	61
  8331  021E                     L27:	
  8332  021E  00DE               	movwf	(_fuzzy$231+2)^(0+128)
  8333  021F  3000               	movlw	0
  8334  0220  00F0               	movwf	___ftge@ff1
  8335  0221  3080               	movlw	128
  8336  0222  00F1               	movwf	___ftge@ff1+1
  8337  0223  303E               	movlw	62
  8338  0224  00F2               	movwf	___ftge@ff1+2
  8339  0225  1683               	bsf	3,5	;RP0=1, select bank3
  8340  0226  1703               	bsf	3,6	;RP1=1, select bank3
  8341  0227  086A               	movf	fuzzy@freia^(0+384),w
  8342  0228  00F3               	movwf	___ftge@ff2
  8343  0229  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8344  022A  00F4               	movwf	___ftge@ff2+1
  8345  022B  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8346  022C  00F5               	movwf	___ftge@ff2+2
  8347  022D  160A  118A  220C  120A  118A  	fcall	___ftge
  8348  0232  1C03               	btfss	3,0
  8349  0233  2A46               	goto	i1l3029
  8350  0234  1683               	bsf	3,5	;RP0=1, select bank3
  8351  0235  1703               	bsf	3,6	;RP1=1, select bank3
  8352  0236  086A               	movf	fuzzy@freia^(0+384),w
  8353  0237  1683               	bsf	3,5	;RP0=1, select bank1
  8354  0238  1303               	bcf	3,6	;RP1=0, select bank1
  8355  0239  00DF               	movwf	_fuzzy$232^(0+128)
  8356  023A  1683               	bsf	3,5	;RP0=1, select bank3
  8357  023B  1703               	bsf	3,6	;RP1=1, select bank3
  8358  023C  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8359  023D  1683               	bsf	3,5	;RP0=1, select bank1
  8360  023E  1303               	bcf	3,6	;RP1=0, select bank1
  8361  023F  00E0               	movwf	(_fuzzy$232+1)^(0+128)
  8362  0240  1683               	bsf	3,5	;RP0=1, select bank3
  8363  0241  1703               	bsf	3,6	;RP1=1, select bank3
  8364  0242  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8365  0243  1683               	bsf	3,5	;RP0=1, select bank1
  8366  0244  1303               	bcf	3,6	;RP1=0, select bank1
  8367  0245  2A4D               	goto	L28
  8368  0246                     i1l3029:	
  8369  0246  3000               	movlw	0
  8370  0247  1683               	bsf	3,5	;RP0=1, select bank1
  8371  0248  1303               	bcf	3,6	;RP1=0, select bank1
  8372  0249  00DF               	movwf	_fuzzy$232^(0+128)
  8373  024A  3080               	movlw	128
  8374  024B  00E0               	movwf	(_fuzzy$232+1)^(0+128)
  8375  024C  303E               	movlw	62
  8376  024D                     L28:	
  8377  024D  00E1               	movwf	(_fuzzy$232+2)^(0+128)
  8378  024E  085F               	movf	_fuzzy$232^(0+128),w
  8379  024F  00F0               	movwf	___ftge@ff1
  8380  0250  0860               	movf	(_fuzzy$232+1)^(0+128),w
  8381  0251  00F1               	movwf	___ftge@ff1+1
  8382  0252  0861               	movf	(_fuzzy$232+2)^(0+128),w
  8383  0253  00F2               	movwf	___ftge@ff1+2
  8384  0254  085C               	movf	_fuzzy$231^(0+128),w
  8385  0255  00F3               	movwf	___ftge@ff2
  8386  0256  085D               	movf	(_fuzzy$231+1)^(0+128),w
  8387  0257  00F4               	movwf	___ftge@ff2+1
  8388  0258  085E               	movf	(_fuzzy$231+2)^(0+128),w
  8389  0259  00F5               	movwf	___ftge@ff2+2
  8390  025A  160A  118A  220C  120A  118A  	fcall	___ftge
  8391  025F  1C03               	btfss	3,0
  8392  0260  2A96               	goto	i1l3039
  8393  0261  3000               	movlw	0
  8394  0262  00F0               	movwf	___ftge@ff1
  8395  0263  3080               	movlw	128
  8396  0264  00F1               	movwf	___ftge@ff1+1
  8397  0265  303E               	movlw	62
  8398  0266  00F2               	movwf	___ftge@ff1+2
  8399  0267  1683               	bsf	3,5	;RP0=1, select bank3
  8400  0268  1703               	bsf	3,6	;RP1=1, select bank3
  8401  0269  086A               	movf	fuzzy@freia^(0+384),w
  8402  026A  00F3               	movwf	___ftge@ff2
  8403  026B  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8404  026C  00F4               	movwf	___ftge@ff2+1
  8405  026D  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8406  026E  00F5               	movwf	___ftge@ff2+2
  8407  026F  160A  118A  220C  120A  118A  	fcall	___ftge
  8408  0274  1C03               	btfss	3,0
  8409  0275  2A88               	goto	i1l3037
  8410  0276  1683               	bsf	3,5	;RP0=1, select bank3
  8411  0277  1703               	bsf	3,6	;RP1=1, select bank3
  8412  0278  086A               	movf	fuzzy@freia^(0+384),w
  8413  0279  1683               	bsf	3,5	;RP0=1, select bank1
  8414  027A  1303               	bcf	3,6	;RP1=0, select bank1
  8415  027B  00E2               	movwf	_fuzzy$233^(0+128)
  8416  027C  1683               	bsf	3,5	;RP0=1, select bank3
  8417  027D  1703               	bsf	3,6	;RP1=1, select bank3
  8418  027E  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8419  027F  1683               	bsf	3,5	;RP0=1, select bank1
  8420  0280  1303               	bcf	3,6	;RP1=0, select bank1
  8421  0281  00E3               	movwf	(_fuzzy$233+1)^(0+128)
  8422  0282  1683               	bsf	3,5	;RP0=1, select bank3
  8423  0283  1703               	bsf	3,6	;RP1=1, select bank3
  8424  0284  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8425  0285  1683               	bsf	3,5	;RP0=1, select bank1
  8426  0286  1303               	bcf	3,6	;RP1=0, select bank1
  8427  0287  2A8F               	goto	L29
  8428  0288                     i1l3037:	
  8429  0288  3000               	movlw	0
  8430  0289  1683               	bsf	3,5	;RP0=1, select bank1
  8431  028A  1303               	bcf	3,6	;RP1=0, select bank1
  8432  028B  00E2               	movwf	_fuzzy$233^(0+128)
  8433  028C  3080               	movlw	128
  8434  028D  00E3               	movwf	(_fuzzy$233+1)^(0+128)
  8435  028E  303E               	movlw	62
  8436  028F                     L29:	
  8437  028F  00E4               	movwf	(_fuzzy$233+2)^(0+128)
  8438  0290  0862               	movf	_fuzzy$233^(0+128),w
  8439  0291  00D9               	movwf	_fuzzy$230^(0+128)
  8440  0292  0863               	movf	(_fuzzy$233+1)^(0+128),w
  8441  0293  00DA               	movwf	(_fuzzy$230+1)^(0+128)
  8442  0294  0864               	movf	(_fuzzy$233+2)^(0+128),w
  8443  0295  2ACA               	goto	L30
  8444  0296                     i1l3039:	
  8445  0296  30CD               	movlw	205
  8446  0297  00F0               	movwf	___ftge@ff1
  8447  0298  30CC               	movlw	204
  8448  0299  00F1               	movwf	___ftge@ff1+1
  8449  029A  303D               	movlw	61
  8450  029B  00F2               	movwf	___ftge@ff1+2
  8451  029C  1683               	bsf	3,5	;RP0=1, select bank3
  8452  029D  1703               	bsf	3,6	;RP1=1, select bank3
  8453  029E  086D               	movf	fuzzy@freiaM^(0+384),w
  8454  029F  00F3               	movwf	___ftge@ff2
  8455  02A0  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8456  02A1  00F4               	movwf	___ftge@ff2+1
  8457  02A2  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8458  02A3  00F5               	movwf	___ftge@ff2+2
  8459  02A4  160A  118A  220C  120A  118A  	fcall	___ftge
  8460  02A9  1C03               	btfss	3,0
  8461  02AA  2ABD               	goto	i1l3043
  8462  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  8463  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  8464  02AD  086D               	movf	fuzzy@freiaM^(0+384),w
  8465  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  8466  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  8467  02B0  00E5               	movwf	_fuzzy$234^(0+128)
  8468  02B1  1683               	bsf	3,5	;RP0=1, select bank3
  8469  02B2  1703               	bsf	3,6	;RP1=1, select bank3
  8470  02B3  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8471  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  8472  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  8473  02B6  00E6               	movwf	(_fuzzy$234+1)^(0+128)
  8474  02B7  1683               	bsf	3,5	;RP0=1, select bank3
  8475  02B8  1703               	bsf	3,6	;RP1=1, select bank3
  8476  02B9  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8477  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  8478  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  8479  02BC  2AC4               	goto	L31
  8480  02BD                     i1l3043:	
  8481  02BD  30CD               	movlw	205
  8482  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  8483  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  8484  02C0  00E5               	movwf	_fuzzy$234^(0+128)
  8485  02C1  30CC               	movlw	204
  8486  02C2  00E6               	movwf	(_fuzzy$234+1)^(0+128)
  8487  02C3  303D               	movlw	61
  8488  02C4                     L31:	
  8489  02C4  00E7               	movwf	(_fuzzy$234+2)^(0+128)
  8490  02C5  0865               	movf	_fuzzy$234^(0+128),w
  8491  02C6  00D9               	movwf	_fuzzy$230^(0+128)
  8492  02C7  0866               	movf	(_fuzzy$234+1)^(0+128),w
  8493  02C8  00DA               	movwf	(_fuzzy$230+1)^(0+128)
  8494  02C9  0867               	movf	(_fuzzy$234+2)^(0+128),w
  8495  02CA                     L30:	
  8496  02CA  00DB               	movwf	(_fuzzy$230+2)^(0+128)
  8497  02CB  0859               	movf	_fuzzy$230^(0+128),w
  8498  02CC  00C1               	movwf	_fuzzy$222^(0+128)
  8499  02CD  085A               	movf	(_fuzzy$230+1)^(0+128),w
  8500  02CE  00C2               	movwf	(_fuzzy$222+1)^(0+128)
  8501  02CF  085B               	movf	(_fuzzy$230+2)^(0+128),w
  8502  02D0                     L26:	
  8503  02D0  00C3               	movwf	(_fuzzy$222+2)^(0+128)
  8504  02D1  0841               	movf	_fuzzy$222^(0+128),w
  8505  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  8506  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  8507  02D4  00DF               	movwf	_fuzzy$206
  8508  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  8509  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  8510  02D7  0842               	movf	(_fuzzy$222+1)^(0+128),w
  8511  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  8512  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  8513  02DA  00E0               	movwf	_fuzzy$206+1
  8514  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  8515  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  8516  02DD  0843               	movf	(_fuzzy$222+2)^(0+128),w
  8517  02DE                     L18:	
  8518  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  8519  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  8520  02E0  00E1               	movwf	_fuzzy$206+2
  8521  02E1  1683               	bsf	3,5	;RP0=1, select bank3
  8522  02E2  1703               	bsf	3,6	;RP1=1, select bank3
  8523  02E3  0861               	movf	fuzzy@aceleraM^(0+384),w
  8524  02E4  00F0               	movwf	___ftge@ff1
  8525  02E5  0862               	movf	(fuzzy@aceleraM+1)^(0+384),w
  8526  02E6  00F1               	movwf	___ftge@ff1+1
  8527  02E7  0863               	movf	(fuzzy@aceleraM+2)^(0+384),w
  8528  02E8  00F2               	movwf	___ftge@ff1+2
  8529  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  8530  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  8531  02EB  085F               	movf	_fuzzy$206,w
  8532  02EC  00F3               	movwf	___ftge@ff2
  8533  02ED  0860               	movf	_fuzzy$206+1,w
  8534  02EE  00F4               	movwf	___ftge@ff2+1
  8535  02EF  0861               	movf	_fuzzy$206+2,w
  8536  02F0  00F5               	movwf	___ftge@ff2+2
  8537  02F1  160A  118A  220C  120A  118A  	fcall	___ftge
  8538  02F6  1C03               	btfss	3,0
  8539  02F7  2B08               	goto	i1l3049
  8540  02F8  1683               	bsf	3,5	;RP0=1, select bank3
  8541  02F9  1703               	bsf	3,6	;RP1=1, select bank3
  8542  02FA  0861               	movf	fuzzy@aceleraM^(0+384),w
  8543  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  8544  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  8545  02FD  00DC               	movwf	_fuzzy$205
  8546  02FE  1683               	bsf	3,5	;RP0=1, select bank3
  8547  02FF  1703               	bsf	3,6	;RP1=1, select bank3
  8548  0300  0862               	movf	(fuzzy@aceleraM+1)^(0+384),w
  8549  0301  1283               	bcf	3,5	;RP0=0, select bank0
  8550  0302  1303               	bcf	3,6	;RP1=0, select bank0
  8551  0303  00DD               	movwf	_fuzzy$205+1
  8552  0304  1683               	bsf	3,5	;RP0=1, select bank3
  8553  0305  1703               	bsf	3,6	;RP1=1, select bank3
  8554  0306  0863               	movf	(fuzzy@aceleraM+2)^(0+384),w
  8555  0307  2F36               	goto	L32
  8556  0308                     i1l3049:	
  8557  0308  30CD               	movlw	205
  8558  0309  00F0               	movwf	___ftge@ff1
  8559  030A  30CC               	movlw	204
  8560  030B  00F1               	movwf	___ftge@ff1+1
  8561  030C  303D               	movlw	61
  8562  030D  00F2               	movwf	___ftge@ff1+2
  8563  030E  1683               	bsf	3,5	;RP0=1, select bank3
  8564  030F  1703               	bsf	3,6	;RP1=1, select bank3
  8565  0310  086D               	movf	fuzzy@freiaM^(0+384),w
  8566  0311  00F3               	movwf	___ftge@ff2
  8567  0312  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8568  0313  00F4               	movwf	___ftge@ff2+1
  8569  0314  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8570  0315  00F5               	movwf	___ftge@ff2+2
  8571  0316  160A  118A  220C  120A  118A  	fcall	___ftge
  8572  031B  1C03               	btfss	3,0
  8573  031C  2B25               	goto	i1l3053
  8574  031D  1683               	bsf	3,5	;RP0=1, select bank3
  8575  031E  1703               	bsf	3,6	;RP1=1, select bank3
  8576  031F  086D               	movf	fuzzy@freiaM^(0+384),w
  8577  0320  0093               	movwf	_fuzzy$238^(0+384)
  8578  0321  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8579  0322  0094               	movwf	(_fuzzy$238+1)^(0+384)
  8580  0323  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8581  0324  2B2C               	goto	L33
  8582  0325                     i1l3053:	
  8583  0325  30CD               	movlw	205
  8584  0326  1683               	bsf	3,5	;RP0=1, select bank3
  8585  0327  1703               	bsf	3,6	;RP1=1, select bank3
  8586  0328  0093               	movwf	_fuzzy$238^(0+384)
  8587  0329  30CC               	movlw	204
  8588  032A  0094               	movwf	(_fuzzy$238+1)^(0+384)
  8589  032B  303D               	movlw	61
  8590  032C                     L33:	
  8591  032C  0095               	movwf	(_fuzzy$238+2)^(0+384)
  8592  032D  3000               	movlw	0
  8593  032E  00F0               	movwf	___ftge@ff1
  8594  032F  3080               	movlw	128
  8595  0330  00F1               	movwf	___ftge@ff1+1
  8596  0331  303E               	movlw	62
  8597  0332  00F2               	movwf	___ftge@ff1+2
  8598  0333  086A               	movf	fuzzy@freia^(0+384),w
  8599  0334  00F3               	movwf	___ftge@ff2
  8600  0335  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8601  0336  00F4               	movwf	___ftge@ff2+1
  8602  0337  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8603  0338  00F5               	movwf	___ftge@ff2+2
  8604  0339  160A  118A  220C  120A  118A  	fcall	___ftge
  8605  033E  1C03               	btfss	3,0
  8606  033F  2B48               	goto	i1l3059
  8607  0340  1683               	bsf	3,5	;RP0=1, select bank3
  8608  0341  1703               	bsf	3,6	;RP1=1, select bank3
  8609  0342  086A               	movf	fuzzy@freia^(0+384),w
  8610  0343  0096               	movwf	_fuzzy$239^(0+384)
  8611  0344  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8612  0345  0097               	movwf	(_fuzzy$239+1)^(0+384)
  8613  0346  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8614  0347  2B4F               	goto	L34
  8615  0348                     i1l3059:	
  8616  0348  3000               	movlw	0
  8617  0349  1683               	bsf	3,5	;RP0=1, select bank3
  8618  034A  1703               	bsf	3,6	;RP1=1, select bank3
  8619  034B  0096               	movwf	_fuzzy$239^(0+384)
  8620  034C  3080               	movlw	128
  8621  034D  0097               	movwf	(_fuzzy$239+1)^(0+384)
  8622  034E  303E               	movlw	62
  8623  034F                     L34:	
  8624  034F  0098               	movwf	(_fuzzy$239+2)^(0+384)
  8625  0350  0816               	movf	_fuzzy$239^(0+384),w
  8626  0351  00F0               	movwf	___ftge@ff1
  8627  0352  0817               	movf	(_fuzzy$239+1)^(0+384),w
  8628  0353  00F1               	movwf	___ftge@ff1+1
  8629  0354  0818               	movf	(_fuzzy$239+2)^(0+384),w
  8630  0355  00F2               	movwf	___ftge@ff1+2
  8631  0356  0813               	movf	_fuzzy$238^(0+384),w
  8632  0357  00F3               	movwf	___ftge@ff2
  8633  0358  0814               	movf	(_fuzzy$238+1)^(0+384),w
  8634  0359  00F4               	movwf	___ftge@ff2+1
  8635  035A  0815               	movf	(_fuzzy$238+2)^(0+384),w
  8636  035B  00F5               	movwf	___ftge@ff2+2
  8637  035C  160A  118A  220C  120A  118A  	fcall	___ftge
  8638  0361  1C03               	btfss	3,0
  8639  0362  2B8E               	goto	i1l3069
  8640  0363  3000               	movlw	0
  8641  0364  00F0               	movwf	___ftge@ff1
  8642  0365  3080               	movlw	128
  8643  0366  00F1               	movwf	___ftge@ff1+1
  8644  0367  303E               	movlw	62
  8645  0368  00F2               	movwf	___ftge@ff1+2
  8646  0369  1683               	bsf	3,5	;RP0=1, select bank3
  8647  036A  1703               	bsf	3,6	;RP1=1, select bank3
  8648  036B  086A               	movf	fuzzy@freia^(0+384),w
  8649  036C  00F3               	movwf	___ftge@ff2
  8650  036D  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8651  036E  00F4               	movwf	___ftge@ff2+1
  8652  036F  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8653  0370  00F5               	movwf	___ftge@ff2+2
  8654  0371  160A  118A  220C  120A  118A  	fcall	___ftge
  8655  0376  1C03               	btfss	3,0
  8656  0377  2B80               	goto	i1l3067
  8657  0378  1683               	bsf	3,5	;RP0=1, select bank3
  8658  0379  1703               	bsf	3,6	;RP1=1, select bank3
  8659  037A  086A               	movf	fuzzy@freia^(0+384),w
  8660  037B  0099               	movwf	_fuzzy$240^(0+384)
  8661  037C  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8662  037D  009A               	movwf	(_fuzzy$240+1)^(0+384)
  8663  037E  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8664  037F  2B87               	goto	L35
  8665  0380                     i1l3067:	
  8666  0380  3000               	movlw	0
  8667  0381  1683               	bsf	3,5	;RP0=1, select bank3
  8668  0382  1703               	bsf	3,6	;RP1=1, select bank3
  8669  0383  0099               	movwf	_fuzzy$240^(0+384)
  8670  0384  3080               	movlw	128
  8671  0385  009A               	movwf	(_fuzzy$240+1)^(0+384)
  8672  0386  303E               	movlw	62
  8673  0387                     L35:	
  8674  0387  009B               	movwf	(_fuzzy$240+2)^(0+384)
  8675  0388  0819               	movf	_fuzzy$240^(0+384),w
  8676  0389  0090               	movwf	_fuzzy$237^(0+384)
  8677  038A  081A               	movf	(_fuzzy$240+1)^(0+384),w
  8678  038B  0091               	movwf	(_fuzzy$237+1)^(0+384)
  8679  038C  081B               	movf	(_fuzzy$240+2)^(0+384),w
  8680  038D  2BB8               	goto	L36
  8681  038E                     i1l3069:	
  8682  038E  30CD               	movlw	205
  8683  038F  00F0               	movwf	___ftge@ff1
  8684  0390  30CC               	movlw	204
  8685  0391  00F1               	movwf	___ftge@ff1+1
  8686  0392  303D               	movlw	61
  8687  0393  00F2               	movwf	___ftge@ff1+2
  8688  0394  1683               	bsf	3,5	;RP0=1, select bank3
  8689  0395  1703               	bsf	3,6	;RP1=1, select bank3
  8690  0396  086D               	movf	fuzzy@freiaM^(0+384),w
  8691  0397  00F3               	movwf	___ftge@ff2
  8692  0398  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8693  0399  00F4               	movwf	___ftge@ff2+1
  8694  039A  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8695  039B  00F5               	movwf	___ftge@ff2+2
  8696  039C  160A  118A  220C  120A  118A  	fcall	___ftge
  8697  03A1  1C03               	btfss	3,0
  8698  03A2  2BAB               	goto	i1l3073
  8699  03A3  1683               	bsf	3,5	;RP0=1, select bank3
  8700  03A4  1703               	bsf	3,6	;RP1=1, select bank3
  8701  03A5  086D               	movf	fuzzy@freiaM^(0+384),w
  8702  03A6  009C               	movwf	_fuzzy$241^(0+384)
  8703  03A7  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8704  03A8  009D               	movwf	(_fuzzy$241+1)^(0+384)
  8705  03A9  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8706  03AA  2BB2               	goto	L37
  8707  03AB                     i1l3073:	
  8708  03AB  30CD               	movlw	205
  8709  03AC  1683               	bsf	3,5	;RP0=1, select bank3
  8710  03AD  1703               	bsf	3,6	;RP1=1, select bank3
  8711  03AE  009C               	movwf	_fuzzy$241^(0+384)
  8712  03AF  30CC               	movlw	204
  8713  03B0  009D               	movwf	(_fuzzy$241+1)^(0+384)
  8714  03B1  303D               	movlw	61
  8715  03B2                     L37:	
  8716  03B2  009E               	movwf	(_fuzzy$241+2)^(0+384)
  8717  03B3  081C               	movf	_fuzzy$241^(0+384),w
  8718  03B4  0090               	movwf	_fuzzy$237^(0+384)
  8719  03B5  081D               	movf	(_fuzzy$241+1)^(0+384),w
  8720  03B6  0091               	movwf	(_fuzzy$237+1)^(0+384)
  8721  03B7  081E               	movf	(_fuzzy$241+2)^(0+384),w
  8722  03B8                     L36:	
  8723  03B8  0092               	movwf	(_fuzzy$237+2)^(0+384)
  8724  03B9  3000               	movlw	0
  8725  03BA  00F0               	movwf	___ftge@ff1
  8726  03BB  3000               	movlw	0
  8727  03BC  00F1               	movwf	___ftge@ff1+1
  8728  03BD  303F               	movlw	63
  8729  03BE  00F2               	movwf	___ftge@ff1+2
  8730  03BF  0867               	movf	fuzzy@mantem^(0+384),w
  8731  03C0  00F3               	movwf	___ftge@ff2
  8732  03C1  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8733  03C2  00F4               	movwf	___ftge@ff2+1
  8734  03C3  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8735  03C4  00F5               	movwf	___ftge@ff2+2
  8736  03C5  160A  118A  220C  120A  118A  	fcall	___ftge
  8737  03CA  1C03               	btfss	3,0
  8738  03CB  2BD4               	goto	i1l3079
  8739  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  8740  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  8741  03CE  0867               	movf	fuzzy@mantem^(0+384),w
  8742  03CF  009F               	movwf	_fuzzy$242^(0+384)
  8743  03D0  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8744  03D1  00A0               	movwf	(_fuzzy$242+1)^(0+384)
  8745  03D2  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8746  03D3  2BDB               	goto	L38
  8747  03D4                     i1l3079:	
  8748  03D4  3000               	movlw	0
  8749  03D5  1683               	bsf	3,5	;RP0=1, select bank3
  8750  03D6  1703               	bsf	3,6	;RP1=1, select bank3
  8751  03D7  009F               	movwf	_fuzzy$242^(0+384)
  8752  03D8  3000               	movlw	0
  8753  03D9  00A0               	movwf	(_fuzzy$242+1)^(0+384)
  8754  03DA  303F               	movlw	63
  8755  03DB                     L38:	
  8756  03DB  00A1               	movwf	(_fuzzy$242+2)^(0+384)
  8757  03DC  081F               	movf	_fuzzy$242^(0+384),w
  8758  03DD  00F0               	movwf	___ftge@ff1
  8759  03DE  0820               	movf	(_fuzzy$242+1)^(0+384),w
  8760  03DF  00F1               	movwf	___ftge@ff1+1
  8761  03E0  0821               	movf	(_fuzzy$242+2)^(0+384),w
  8762  03E1  00F2               	movwf	___ftge@ff1+2
  8763  03E2  0810               	movf	_fuzzy$237^(0+384),w
  8764  03E3  00F3               	movwf	___ftge@ff2
  8765  03E4  0811               	movf	(_fuzzy$237+1)^(0+384),w
  8766  03E5  00F4               	movwf	___ftge@ff2+1
  8767  03E6  0812               	movf	(_fuzzy$237+2)^(0+384),w
  8768  03E7  00F5               	movwf	___ftge@ff2+2
  8769  03E8  160A  118A  220C  120A  118A  	fcall	___ftge
  8770  03ED  1C03               	btfss	3,0
  8771  03EE  2C22               	goto	i1l3089
  8772  03EF  3000               	movlw	0
  8773  03F0  00F0               	movwf	___ftge@ff1
  8774  03F1  3000               	movlw	0
  8775  03F2  00F1               	movwf	___ftge@ff1+1
  8776  03F3  303F               	movlw	63
  8777  03F4  00F2               	movwf	___ftge@ff1+2
  8778  03F5  1683               	bsf	3,5	;RP0=1, select bank3
  8779  03F6  1703               	bsf	3,6	;RP1=1, select bank3
  8780  03F7  0867               	movf	fuzzy@mantem^(0+384),w
  8781  03F8  00F3               	movwf	___ftge@ff2
  8782  03F9  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8783  03FA  00F4               	movwf	___ftge@ff2+1
  8784  03FB  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8785  03FC  00F5               	movwf	___ftge@ff2+2
  8786  03FD  160A  118A  220C  120A  118A  	fcall	___ftge
  8787  0402  1C03               	btfss	3,0
  8788  0403  2C0C               	goto	i1l3087
  8789  0404  1683               	bsf	3,5	;RP0=1, select bank3
  8790  0405  1703               	bsf	3,6	;RP1=1, select bank3
  8791  0406  0867               	movf	fuzzy@mantem^(0+384),w
  8792  0407  00A2               	movwf	_fuzzy$243^(0+384)
  8793  0408  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  8794  0409  00A3               	movwf	(_fuzzy$243+1)^(0+384)
  8795  040A  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  8796  040B  2C13               	goto	L39
  8797  040C                     i1l3087:	
  8798  040C  3000               	movlw	0
  8799  040D  1683               	bsf	3,5	;RP0=1, select bank3
  8800  040E  1703               	bsf	3,6	;RP1=1, select bank3
  8801  040F  00A2               	movwf	_fuzzy$243^(0+384)
  8802  0410  3000               	movlw	0
  8803  0411  00A3               	movwf	(_fuzzy$243+1)^(0+384)
  8804  0412  303F               	movlw	63
  8805  0413                     L39:	
  8806  0413  00A4               	movwf	(_fuzzy$243+2)^(0+384)
  8807  0414  0822               	movf	_fuzzy$243^(0+384),w
  8808  0415  1683               	bsf	3,5	;RP0=1, select bank1
  8809  0416  1303               	bcf	3,6	;RP1=0, select bank1
  8810  0417  00EB               	movwf	_fuzzy$236^(0+128)
  8811  0418  1683               	bsf	3,5	;RP0=1, select bank3
  8812  0419  1703               	bsf	3,6	;RP1=1, select bank3
  8813  041A  0823               	movf	(_fuzzy$243+1)^(0+384),w
  8814  041B  1683               	bsf	3,5	;RP0=1, select bank1
  8815  041C  1303               	bcf	3,6	;RP1=0, select bank1
  8816  041D  00EC               	movwf	(_fuzzy$236+1)^(0+128)
  8817  041E  1683               	bsf	3,5	;RP0=1, select bank3
  8818  041F  1703               	bsf	3,6	;RP1=1, select bank3
  8819  0420  0824               	movf	(_fuzzy$243+2)^(0+384),w
  8820  0421  2CE0               	goto	L40
  8821  0422                     i1l3089:	
  8822  0422  30CD               	movlw	205
  8823  0423  00F0               	movwf	___ftge@ff1
  8824  0424  30CC               	movlw	204
  8825  0425  00F1               	movwf	___ftge@ff1+1
  8826  0426  303D               	movlw	61
  8827  0427  00F2               	movwf	___ftge@ff1+2
  8828  0428  1683               	bsf	3,5	;RP0=1, select bank3
  8829  0429  1703               	bsf	3,6	;RP1=1, select bank3
  8830  042A  086D               	movf	fuzzy@freiaM^(0+384),w
  8831  042B  00F3               	movwf	___ftge@ff2
  8832  042C  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8833  042D  00F4               	movwf	___ftge@ff2+1
  8834  042E  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8835  042F  00F5               	movwf	___ftge@ff2+2
  8836  0430  160A  118A  220C  120A  118A  	fcall	___ftge
  8837  0435  1C03               	btfss	3,0
  8838  0436  2C3F               	goto	i1l3093
  8839  0437  1683               	bsf	3,5	;RP0=1, select bank3
  8840  0438  1703               	bsf	3,6	;RP1=1, select bank3
  8841  0439  086D               	movf	fuzzy@freiaM^(0+384),w
  8842  043A  00A8               	movwf	_fuzzy$245^(0+384)
  8843  043B  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8844  043C  00A9               	movwf	(_fuzzy$245+1)^(0+384)
  8845  043D  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8846  043E  2C46               	goto	L41
  8847  043F                     i1l3093:	
  8848  043F  30CD               	movlw	205
  8849  0440  1683               	bsf	3,5	;RP0=1, select bank3
  8850  0441  1703               	bsf	3,6	;RP1=1, select bank3
  8851  0442  00A8               	movwf	_fuzzy$245^(0+384)
  8852  0443  30CC               	movlw	204
  8853  0444  00A9               	movwf	(_fuzzy$245+1)^(0+384)
  8854  0445  303D               	movlw	61
  8855  0446                     L41:	
  8856  0446  00AA               	movwf	(_fuzzy$245+2)^(0+384)
  8857  0447  3000               	movlw	0
  8858  0448  00F0               	movwf	___ftge@ff1
  8859  0449  3080               	movlw	128
  8860  044A  00F1               	movwf	___ftge@ff1+1
  8861  044B  303E               	movlw	62
  8862  044C  00F2               	movwf	___ftge@ff1+2
  8863  044D  086A               	movf	fuzzy@freia^(0+384),w
  8864  044E  00F3               	movwf	___ftge@ff2
  8865  044F  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8866  0450  00F4               	movwf	___ftge@ff2+1
  8867  0451  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8868  0452  00F5               	movwf	___ftge@ff2+2
  8869  0453  160A  118A  220C  120A  118A  	fcall	___ftge
  8870  0458  1C03               	btfss	3,0
  8871  0459  2C62               	goto	i1l3099
  8872  045A  1683               	bsf	3,5	;RP0=1, select bank3
  8873  045B  1703               	bsf	3,6	;RP1=1, select bank3
  8874  045C  086A               	movf	fuzzy@freia^(0+384),w
  8875  045D  00AB               	movwf	_fuzzy$246^(0+384)
  8876  045E  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8877  045F  00AC               	movwf	(_fuzzy$246+1)^(0+384)
  8878  0460  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8879  0461  2C69               	goto	L42
  8880  0462                     i1l3099:	
  8881  0462  3000               	movlw	0
  8882  0463  1683               	bsf	3,5	;RP0=1, select bank3
  8883  0464  1703               	bsf	3,6	;RP1=1, select bank3
  8884  0465  00AB               	movwf	_fuzzy$246^(0+384)
  8885  0466  3080               	movlw	128
  8886  0467  00AC               	movwf	(_fuzzy$246+1)^(0+384)
  8887  0468  303E               	movlw	62
  8888  0469                     L42:	
  8889  0469  00AD               	movwf	(_fuzzy$246+2)^(0+384)
  8890  046A  082B               	movf	_fuzzy$246^(0+384),w
  8891  046B  00F0               	movwf	___ftge@ff1
  8892  046C  082C               	movf	(_fuzzy$246+1)^(0+384),w
  8893  046D  00F1               	movwf	___ftge@ff1+1
  8894  046E  082D               	movf	(_fuzzy$246+2)^(0+384),w
  8895  046F  00F2               	movwf	___ftge@ff1+2
  8896  0470  0828               	movf	_fuzzy$245^(0+384),w
  8897  0471  00F3               	movwf	___ftge@ff2
  8898  0472  0829               	movf	(_fuzzy$245+1)^(0+384),w
  8899  0473  00F4               	movwf	___ftge@ff2+1
  8900  0474  082A               	movf	(_fuzzy$245+2)^(0+384),w
  8901  0475  00F5               	movwf	___ftge@ff2+2
  8902  0476  160A  118A  220C  120A  118A  	fcall	___ftge
  8903  047B  1C03               	btfss	3,0
  8904  047C  2CA8               	goto	i1l3109
  8905  047D  3000               	movlw	0
  8906  047E  00F0               	movwf	___ftge@ff1
  8907  047F  3080               	movlw	128
  8908  0480  00F1               	movwf	___ftge@ff1+1
  8909  0481  303E               	movlw	62
  8910  0482  00F2               	movwf	___ftge@ff1+2
  8911  0483  1683               	bsf	3,5	;RP0=1, select bank3
  8912  0484  1703               	bsf	3,6	;RP1=1, select bank3
  8913  0485  086A               	movf	fuzzy@freia^(0+384),w
  8914  0486  00F3               	movwf	___ftge@ff2
  8915  0487  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8916  0488  00F4               	movwf	___ftge@ff2+1
  8917  0489  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8918  048A  00F5               	movwf	___ftge@ff2+2
  8919  048B  160A  118A  220C  120A  118A  	fcall	___ftge
  8920  0490  1C03               	btfss	3,0
  8921  0491  2C9A               	goto	i1l3107
  8922  0492  1683               	bsf	3,5	;RP0=1, select bank3
  8923  0493  1703               	bsf	3,6	;RP1=1, select bank3
  8924  0494  086A               	movf	fuzzy@freia^(0+384),w
  8925  0495  00AE               	movwf	_fuzzy$247^(0+384)
  8926  0496  086B               	movf	(fuzzy@freia+1)^(0+384),w
  8927  0497  00AF               	movwf	(_fuzzy$247+1)^(0+384)
  8928  0498  086C               	movf	(fuzzy@freia+2)^(0+384),w
  8929  0499  2CA1               	goto	L43
  8930  049A                     i1l3107:	
  8931  049A  3000               	movlw	0
  8932  049B  1683               	bsf	3,5	;RP0=1, select bank3
  8933  049C  1703               	bsf	3,6	;RP1=1, select bank3
  8934  049D  00AE               	movwf	_fuzzy$247^(0+384)
  8935  049E  3080               	movlw	128
  8936  049F  00AF               	movwf	(_fuzzy$247+1)^(0+384)
  8937  04A0  303E               	movlw	62
  8938  04A1                     L43:	
  8939  04A1  00B0               	movwf	(_fuzzy$247+2)^(0+384)
  8940  04A2  082E               	movf	_fuzzy$247^(0+384),w
  8941  04A3  00A5               	movwf	_fuzzy$244^(0+384)
  8942  04A4  082F               	movf	(_fuzzy$247+1)^(0+384),w
  8943  04A5  00A6               	movwf	(_fuzzy$244+1)^(0+384)
  8944  04A6  0830               	movf	(_fuzzy$247+2)^(0+384),w
  8945  04A7  2CD2               	goto	L44
  8946  04A8                     i1l3109:	
  8947  04A8  30CD               	movlw	205
  8948  04A9  00F0               	movwf	___ftge@ff1
  8949  04AA  30CC               	movlw	204
  8950  04AB  00F1               	movwf	___ftge@ff1+1
  8951  04AC  303D               	movlw	61
  8952  04AD  00F2               	movwf	___ftge@ff1+2
  8953  04AE  1683               	bsf	3,5	;RP0=1, select bank3
  8954  04AF  1703               	bsf	3,6	;RP1=1, select bank3
  8955  04B0  086D               	movf	fuzzy@freiaM^(0+384),w
  8956  04B1  00F3               	movwf	___ftge@ff2
  8957  04B2  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8958  04B3  00F4               	movwf	___ftge@ff2+1
  8959  04B4  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8960  04B5  00F5               	movwf	___ftge@ff2+2
  8961  04B6  160A  118A  220C  120A  118A  	fcall	___ftge
  8962  04BB  1C03               	btfss	3,0
  8963  04BC  2CC5               	goto	i1l3113
  8964  04BD  1683               	bsf	3,5	;RP0=1, select bank3
  8965  04BE  1703               	bsf	3,6	;RP1=1, select bank3
  8966  04BF  086D               	movf	fuzzy@freiaM^(0+384),w
  8967  04C0  00B1               	movwf	_fuzzy$248^(0+384)
  8968  04C1  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  8969  04C2  00B2               	movwf	(_fuzzy$248+1)^(0+384)
  8970  04C3  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  8971  04C4  2CCC               	goto	L45
  8972  04C5                     i1l3113:	
  8973  04C5  30CD               	movlw	205
  8974  04C6  1683               	bsf	3,5	;RP0=1, select bank3
  8975  04C7  1703               	bsf	3,6	;RP1=1, select bank3
  8976  04C8  00B1               	movwf	_fuzzy$248^(0+384)
  8977  04C9  30CC               	movlw	204
  8978  04CA  00B2               	movwf	(_fuzzy$248+1)^(0+384)
  8979  04CB  303D               	movlw	61
  8980  04CC                     L45:	
  8981  04CC  00B3               	movwf	(_fuzzy$248+2)^(0+384)
  8982  04CD  0831               	movf	_fuzzy$248^(0+384),w
  8983  04CE  00A5               	movwf	_fuzzy$244^(0+384)
  8984  04CF  0832               	movf	(_fuzzy$248+1)^(0+384),w
  8985  04D0  00A6               	movwf	(_fuzzy$244+1)^(0+384)
  8986  04D1  0833               	movf	(_fuzzy$248+2)^(0+384),w
  8987  04D2                     L44:	
  8988  04D2  00A7               	movwf	(_fuzzy$244+2)^(0+384)
  8989  04D3  0825               	movf	_fuzzy$244^(0+384),w
  8990  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  8991  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  8992  04D6  00EB               	movwf	_fuzzy$236^(0+128)
  8993  04D7  1683               	bsf	3,5	;RP0=1, select bank3
  8994  04D8  1703               	bsf	3,6	;RP1=1, select bank3
  8995  04D9  0826               	movf	(_fuzzy$244+1)^(0+384),w
  8996  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  8997  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  8998  04DC  00EC               	movwf	(_fuzzy$236+1)^(0+128)
  8999  04DD  1683               	bsf	3,5	;RP0=1, select bank3
  9000  04DE  1703               	bsf	3,6	;RP1=1, select bank3
  9001  04DF  0827               	movf	(_fuzzy$244+2)^(0+384),w
  9002  04E0                     L40:	
  9003  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  9004  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  9005  04E2  00ED               	movwf	(_fuzzy$236+2)^(0+128)
  9006  04E3  3000               	movlw	0
  9007  04E4  00F0               	movwf	___ftge@ff1
  9008  04E5  3040               	movlw	64
  9009  04E6  00F1               	movwf	___ftge@ff1+1
  9010  04E7  303F               	movlw	63
  9011  04E8  00F2               	movwf	___ftge@ff1+2
  9012  04E9  1683               	bsf	3,5	;RP0=1, select bank3
  9013  04EA  1703               	bsf	3,6	;RP1=1, select bank3
  9014  04EB  0864               	movf	fuzzy@acelera^(0+384),w
  9015  04EC  00F3               	movwf	___ftge@ff2
  9016  04ED  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  9017  04EE  00F4               	movwf	___ftge@ff2+1
  9018  04EF  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  9019  04F0  00F5               	movwf	___ftge@ff2+2
  9020  04F1  160A  118A  220C  120A  118A  	fcall	___ftge
  9021  04F6  1C03               	btfss	3,0
  9022  04F7  2D00               	goto	i1l3119
  9023  04F8  1683               	bsf	3,5	;RP0=1, select bank3
  9024  04F9  1703               	bsf	3,6	;RP1=1, select bank3
  9025  04FA  0864               	movf	fuzzy@acelera^(0+384),w
  9026  04FB  00B4               	movwf	_fuzzy$249^(0+384)
  9027  04FC  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  9028  04FD  00B5               	movwf	(_fuzzy$249+1)^(0+384)
  9029  04FE  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  9030  04FF  2D07               	goto	L46
  9031  0500                     i1l3119:	
  9032  0500  3000               	movlw	0
  9033  0501  1683               	bsf	3,5	;RP0=1, select bank3
  9034  0502  1703               	bsf	3,6	;RP1=1, select bank3
  9035  0503  00B4               	movwf	_fuzzy$249^(0+384)
  9036  0504  3040               	movlw	64
  9037  0505  00B5               	movwf	(_fuzzy$249+1)^(0+384)
  9038  0506  303F               	movlw	63
  9039  0507                     L46:	
  9040  0507  00B6               	movwf	(_fuzzy$249+2)^(0+384)
  9041  0508  0834               	movf	_fuzzy$249^(0+384),w
  9042  0509  00F0               	movwf	___ftge@ff1
  9043  050A  0835               	movf	(_fuzzy$249+1)^(0+384),w
  9044  050B  00F1               	movwf	___ftge@ff1+1
  9045  050C  0836               	movf	(_fuzzy$249+2)^(0+384),w
  9046  050D  00F2               	movwf	___ftge@ff1+2
  9047  050E  1683               	bsf	3,5	;RP0=1, select bank1
  9048  050F  1303               	bcf	3,6	;RP1=0, select bank1
  9049  0510  086B               	movf	_fuzzy$236^(0+128),w
  9050  0511  00F3               	movwf	___ftge@ff2
  9051  0512  086C               	movf	(_fuzzy$236+1)^(0+128),w
  9052  0513  00F4               	movwf	___ftge@ff2+1
  9053  0514  086D               	movf	(_fuzzy$236+2)^(0+128),w
  9054  0515  00F5               	movwf	___ftge@ff2+2
  9055  0516  160A  118A  220C  120A  118A  	fcall	___ftge
  9056  051B  1C03               	btfss	3,0
  9057  051C  2D50               	goto	i1l3129
  9058  051D  3000               	movlw	0
  9059  051E  00F0               	movwf	___ftge@ff1
  9060  051F  3040               	movlw	64
  9061  0520  00F1               	movwf	___ftge@ff1+1
  9062  0521  303F               	movlw	63
  9063  0522  00F2               	movwf	___ftge@ff1+2
  9064  0523  1683               	bsf	3,5	;RP0=1, select bank3
  9065  0524  1703               	bsf	3,6	;RP1=1, select bank3
  9066  0525  0864               	movf	fuzzy@acelera^(0+384),w
  9067  0526  00F3               	movwf	___ftge@ff2
  9068  0527  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  9069  0528  00F4               	movwf	___ftge@ff2+1
  9070  0529  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  9071  052A  00F5               	movwf	___ftge@ff2+2
  9072  052B  160A  118A  220C  120A  118A  	fcall	___ftge
  9073  0530  1C03               	btfss	3,0
  9074  0531  2D3A               	goto	i1l3127
  9075  0532  1683               	bsf	3,5	;RP0=1, select bank3
  9076  0533  1703               	bsf	3,6	;RP1=1, select bank3
  9077  0534  0864               	movf	fuzzy@acelera^(0+384),w
  9078  0535  00B7               	movwf	_fuzzy$250^(0+384)
  9079  0536  0865               	movf	(fuzzy@acelera+1)^(0+384),w
  9080  0537  00B8               	movwf	(_fuzzy$250+1)^(0+384)
  9081  0538  0866               	movf	(fuzzy@acelera+2)^(0+384),w
  9082  0539  2D41               	goto	L47
  9083  053A                     i1l3127:	
  9084  053A  3000               	movlw	0
  9085  053B  1683               	bsf	3,5	;RP0=1, select bank3
  9086  053C  1703               	bsf	3,6	;RP1=1, select bank3
  9087  053D  00B7               	movwf	_fuzzy$250^(0+384)
  9088  053E  3040               	movlw	64
  9089  053F  00B8               	movwf	(_fuzzy$250+1)^(0+384)
  9090  0540  303F               	movlw	63
  9091  0541                     L47:	
  9092  0541  00B9               	movwf	(_fuzzy$250+2)^(0+384)
  9093  0542  0837               	movf	_fuzzy$250^(0+384),w
  9094  0543  1683               	bsf	3,5	;RP0=1, select bank1
  9095  0544  1303               	bcf	3,6	;RP1=0, select bank1
  9096  0545  00E8               	movwf	_fuzzy$235^(0+128)
  9097  0546  1683               	bsf	3,5	;RP0=1, select bank3
  9098  0547  1703               	bsf	3,6	;RP1=1, select bank3
  9099  0548  0838               	movf	(_fuzzy$250+1)^(0+384),w
  9100  0549  1683               	bsf	3,5	;RP0=1, select bank1
  9101  054A  1303               	bcf	3,6	;RP1=0, select bank1
  9102  054B  00E9               	movwf	(_fuzzy$235+1)^(0+128)
  9103  054C  1683               	bsf	3,5	;RP0=1, select bank3
  9104  054D  1703               	bsf	3,6	;RP1=1, select bank3
  9105  054E  0839               	movf	(_fuzzy$250+2)^(0+384),w
  9106  054F  2F26               	goto	L48
  9107  0550                     i1l3129:	
  9108  0550  30CD               	movlw	205
  9109  0551  00F0               	movwf	___ftge@ff1
  9110  0552  30CC               	movlw	204
  9111  0553  00F1               	movwf	___ftge@ff1+1
  9112  0554  303D               	movlw	61
  9113  0555  00F2               	movwf	___ftge@ff1+2
  9114  0556  1683               	bsf	3,5	;RP0=1, select bank3
  9115  0557  1703               	bsf	3,6	;RP1=1, select bank3
  9116  0558  086D               	movf	fuzzy@freiaM^(0+384),w
  9117  0559  00F3               	movwf	___ftge@ff2
  9118  055A  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9119  055B  00F4               	movwf	___ftge@ff2+1
  9120  055C  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9121  055D  00F5               	movwf	___ftge@ff2+2
  9122  055E  160A  118A  220C  120A  118A  	fcall	___ftge
  9123  0563  1C03               	btfss	3,0
  9124  0564  2D6D               	goto	i1l3133
  9125  0565  1683               	bsf	3,5	;RP0=1, select bank3
  9126  0566  1703               	bsf	3,6	;RP1=1, select bank3
  9127  0567  086D               	movf	fuzzy@freiaM^(0+384),w
  9128  0568  00C0               	movwf	_fuzzy$253^(0+384)
  9129  0569  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9130  056A  00C1               	movwf	(_fuzzy$253+1)^(0+384)
  9131  056B  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9132  056C  2D74               	goto	L49
  9133  056D                     i1l3133:	
  9134  056D  30CD               	movlw	205
  9135  056E  1683               	bsf	3,5	;RP0=1, select bank3
  9136  056F  1703               	bsf	3,6	;RP1=1, select bank3
  9137  0570  00C0               	movwf	_fuzzy$253^(0+384)
  9138  0571  30CC               	movlw	204
  9139  0572  00C1               	movwf	(_fuzzy$253+1)^(0+384)
  9140  0573  303D               	movlw	61
  9141  0574                     L49:	
  9142  0574  00C2               	movwf	(_fuzzy$253+2)^(0+384)
  9143  0575  3000               	movlw	0
  9144  0576  00F0               	movwf	___ftge@ff1
  9145  0577  3080               	movlw	128
  9146  0578  00F1               	movwf	___ftge@ff1+1
  9147  0579  303E               	movlw	62
  9148  057A  00F2               	movwf	___ftge@ff1+2
  9149  057B  086A               	movf	fuzzy@freia^(0+384),w
  9150  057C  00F3               	movwf	___ftge@ff2
  9151  057D  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9152  057E  00F4               	movwf	___ftge@ff2+1
  9153  057F  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9154  0580  00F5               	movwf	___ftge@ff2+2
  9155  0581  160A  118A  220C  120A  118A  	fcall	___ftge
  9156  0586  1C03               	btfss	3,0
  9157  0587  2D90               	goto	i1l3139
  9158  0588  1683               	bsf	3,5	;RP0=1, select bank3
  9159  0589  1703               	bsf	3,6	;RP1=1, select bank3
  9160  058A  086A               	movf	fuzzy@freia^(0+384),w
  9161  058B  00C3               	movwf	_fuzzy$254^(0+384)
  9162  058C  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9163  058D  00C4               	movwf	(_fuzzy$254+1)^(0+384)
  9164  058E  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9165  058F  2D97               	goto	L50
  9166  0590                     i1l3139:	
  9167  0590  3000               	movlw	0
  9168  0591  1683               	bsf	3,5	;RP0=1, select bank3
  9169  0592  1703               	bsf	3,6	;RP1=1, select bank3
  9170  0593  00C3               	movwf	_fuzzy$254^(0+384)
  9171  0594  3080               	movlw	128
  9172  0595  00C4               	movwf	(_fuzzy$254+1)^(0+384)
  9173  0596  303E               	movlw	62
  9174  0597                     L50:	
  9175  0597  00C5               	movwf	(_fuzzy$254+2)^(0+384)
  9176  0598  0843               	movf	_fuzzy$254^(0+384),w
  9177  0599  00F0               	movwf	___ftge@ff1
  9178  059A  0844               	movf	(_fuzzy$254+1)^(0+384),w
  9179  059B  00F1               	movwf	___ftge@ff1+1
  9180  059C  0845               	movf	(_fuzzy$254+2)^(0+384),w
  9181  059D  00F2               	movwf	___ftge@ff1+2
  9182  059E  0840               	movf	_fuzzy$253^(0+384),w
  9183  059F  00F3               	movwf	___ftge@ff2
  9184  05A0  0841               	movf	(_fuzzy$253+1)^(0+384),w
  9185  05A1  00F4               	movwf	___ftge@ff2+1
  9186  05A2  0842               	movf	(_fuzzy$253+2)^(0+384),w
  9187  05A3  00F5               	movwf	___ftge@ff2+2
  9188  05A4  160A  118A  220C  120A  118A  	fcall	___ftge
  9189  05A9  1C03               	btfss	3,0
  9190  05AA  2DD6               	goto	i1l3149
  9191  05AB  3000               	movlw	0
  9192  05AC  00F0               	movwf	___ftge@ff1
  9193  05AD  3080               	movlw	128
  9194  05AE  00F1               	movwf	___ftge@ff1+1
  9195  05AF  303E               	movlw	62
  9196  05B0  00F2               	movwf	___ftge@ff1+2
  9197  05B1  1683               	bsf	3,5	;RP0=1, select bank3
  9198  05B2  1703               	bsf	3,6	;RP1=1, select bank3
  9199  05B3  086A               	movf	fuzzy@freia^(0+384),w
  9200  05B4  00F3               	movwf	___ftge@ff2
  9201  05B5  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9202  05B6  00F4               	movwf	___ftge@ff2+1
  9203  05B7  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9204  05B8  00F5               	movwf	___ftge@ff2+2
  9205  05B9  160A  118A  220C  120A  118A  	fcall	___ftge
  9206  05BE  1C03               	btfss	3,0
  9207  05BF  2DC8               	goto	i1l3147
  9208  05C0  1683               	bsf	3,5	;RP0=1, select bank3
  9209  05C1  1703               	bsf	3,6	;RP1=1, select bank3
  9210  05C2  086A               	movf	fuzzy@freia^(0+384),w
  9211  05C3  00C6               	movwf	_fuzzy$255^(0+384)
  9212  05C4  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9213  05C5  00C7               	movwf	(_fuzzy$255+1)^(0+384)
  9214  05C6  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9215  05C7  2DCF               	goto	L51
  9216  05C8                     i1l3147:	
  9217  05C8  3000               	movlw	0
  9218  05C9  1683               	bsf	3,5	;RP0=1, select bank3
  9219  05CA  1703               	bsf	3,6	;RP1=1, select bank3
  9220  05CB  00C6               	movwf	_fuzzy$255^(0+384)
  9221  05CC  3080               	movlw	128
  9222  05CD  00C7               	movwf	(_fuzzy$255+1)^(0+384)
  9223  05CE  303E               	movlw	62
  9224  05CF                     L51:	
  9225  05CF  00C8               	movwf	(_fuzzy$255+2)^(0+384)
  9226  05D0  0846               	movf	_fuzzy$255^(0+384),w
  9227  05D1  00BD               	movwf	_fuzzy$252^(0+384)
  9228  05D2  0847               	movf	(_fuzzy$255+1)^(0+384),w
  9229  05D3  00BE               	movwf	(_fuzzy$252+1)^(0+384)
  9230  05D4  0848               	movf	(_fuzzy$255+2)^(0+384),w
  9231  05D5  2E00               	goto	L52
  9232  05D6                     i1l3149:	
  9233  05D6  30CD               	movlw	205
  9234  05D7  00F0               	movwf	___ftge@ff1
  9235  05D8  30CC               	movlw	204
  9236  05D9  00F1               	movwf	___ftge@ff1+1
  9237  05DA  303D               	movlw	61
  9238  05DB  00F2               	movwf	___ftge@ff1+2
  9239  05DC  1683               	bsf	3,5	;RP0=1, select bank3
  9240  05DD  1703               	bsf	3,6	;RP1=1, select bank3
  9241  05DE  086D               	movf	fuzzy@freiaM^(0+384),w
  9242  05DF  00F3               	movwf	___ftge@ff2
  9243  05E0  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9244  05E1  00F4               	movwf	___ftge@ff2+1
  9245  05E2  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9246  05E3  00F5               	movwf	___ftge@ff2+2
  9247  05E4  160A  118A  220C  120A  118A  	fcall	___ftge
  9248  05E9  1C03               	btfss	3,0
  9249  05EA  2DF3               	goto	i1l3153
  9250  05EB  1683               	bsf	3,5	;RP0=1, select bank3
  9251  05EC  1703               	bsf	3,6	;RP1=1, select bank3
  9252  05ED  086D               	movf	fuzzy@freiaM^(0+384),w
  9253  05EE  00C9               	movwf	_fuzzy$256^(0+384)
  9254  05EF  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9255  05F0  00CA               	movwf	(_fuzzy$256+1)^(0+384)
  9256  05F1  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9257  05F2  2DFA               	goto	L53
  9258  05F3                     i1l3153:	
  9259  05F3  30CD               	movlw	205
  9260  05F4  1683               	bsf	3,5	;RP0=1, select bank3
  9261  05F5  1703               	bsf	3,6	;RP1=1, select bank3
  9262  05F6  00C9               	movwf	_fuzzy$256^(0+384)
  9263  05F7  30CC               	movlw	204
  9264  05F8  00CA               	movwf	(_fuzzy$256+1)^(0+384)
  9265  05F9  303D               	movlw	61
  9266  05FA                     L53:	
  9267  05FA  00CB               	movwf	(_fuzzy$256+2)^(0+384)
  9268  05FB  0849               	movf	_fuzzy$256^(0+384),w
  9269  05FC  00BD               	movwf	_fuzzy$252^(0+384)
  9270  05FD  084A               	movf	(_fuzzy$256+1)^(0+384),w
  9271  05FE  00BE               	movwf	(_fuzzy$252+1)^(0+384)
  9272  05FF  084B               	movf	(_fuzzy$256+2)^(0+384),w
  9273  0600                     L52:	
  9274  0600  00BF               	movwf	(_fuzzy$252+2)^(0+384)
  9275  0601  3000               	movlw	0
  9276  0602  00F0               	movwf	___ftge@ff1
  9277  0603  3000               	movlw	0
  9278  0604  00F1               	movwf	___ftge@ff1+1
  9279  0605  303F               	movlw	63
  9280  0606  00F2               	movwf	___ftge@ff1+2
  9281  0607  0867               	movf	fuzzy@mantem^(0+384),w
  9282  0608  00F3               	movwf	___ftge@ff2
  9283  0609  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  9284  060A  00F4               	movwf	___ftge@ff2+1
  9285  060B  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  9286  060C  00F5               	movwf	___ftge@ff2+2
  9287  060D  160A  118A  220C  120A  118A  	fcall	___ftge
  9288  0612  1C03               	btfss	3,0
  9289  0613  2E1C               	goto	i1l3159
  9290  0614  1683               	bsf	3,5	;RP0=1, select bank3
  9291  0615  1703               	bsf	3,6	;RP1=1, select bank3
  9292  0616  0867               	movf	fuzzy@mantem^(0+384),w
  9293  0617  00CC               	movwf	_fuzzy$257^(0+384)
  9294  0618  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  9295  0619  00CD               	movwf	(_fuzzy$257+1)^(0+384)
  9296  061A  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  9297  061B  2E23               	goto	L54
  9298  061C                     i1l3159:	
  9299  061C  3000               	movlw	0
  9300  061D  1683               	bsf	3,5	;RP0=1, select bank3
  9301  061E  1703               	bsf	3,6	;RP1=1, select bank3
  9302  061F  00CC               	movwf	_fuzzy$257^(0+384)
  9303  0620  3000               	movlw	0
  9304  0621  00CD               	movwf	(_fuzzy$257+1)^(0+384)
  9305  0622  303F               	movlw	63
  9306  0623                     L54:	
  9307  0623  00CE               	movwf	(_fuzzy$257+2)^(0+384)
  9308  0624  084C               	movf	_fuzzy$257^(0+384),w
  9309  0625  00F0               	movwf	___ftge@ff1
  9310  0626  084D               	movf	(_fuzzy$257+1)^(0+384),w
  9311  0627  00F1               	movwf	___ftge@ff1+1
  9312  0628  084E               	movf	(_fuzzy$257+2)^(0+384),w
  9313  0629  00F2               	movwf	___ftge@ff1+2
  9314  062A  083D               	movf	_fuzzy$252^(0+384),w
  9315  062B  00F3               	movwf	___ftge@ff2
  9316  062C  083E               	movf	(_fuzzy$252+1)^(0+384),w
  9317  062D  00F4               	movwf	___ftge@ff2+1
  9318  062E  083F               	movf	(_fuzzy$252+2)^(0+384),w
  9319  062F  00F5               	movwf	___ftge@ff2+2
  9320  0630  160A  118A  220C  120A  118A  	fcall	___ftge
  9321  0635  1C03               	btfss	3,0
  9322  0636  2E62               	goto	i1l3169
  9323  0637  3000               	movlw	0
  9324  0638  00F0               	movwf	___ftge@ff1
  9325  0639  3000               	movlw	0
  9326  063A  00F1               	movwf	___ftge@ff1+1
  9327  063B  303F               	movlw	63
  9328  063C  00F2               	movwf	___ftge@ff1+2
  9329  063D  1683               	bsf	3,5	;RP0=1, select bank3
  9330  063E  1703               	bsf	3,6	;RP1=1, select bank3
  9331  063F  0867               	movf	fuzzy@mantem^(0+384),w
  9332  0640  00F3               	movwf	___ftge@ff2
  9333  0641  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  9334  0642  00F4               	movwf	___ftge@ff2+1
  9335  0643  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  9336  0644  00F5               	movwf	___ftge@ff2+2
  9337  0645  160A  118A  220C  120A  118A  	fcall	___ftge
  9338  064A  1C03               	btfss	3,0
  9339  064B  2E54               	goto	i1l3167
  9340  064C  1683               	bsf	3,5	;RP0=1, select bank3
  9341  064D  1703               	bsf	3,6	;RP1=1, select bank3
  9342  064E  0867               	movf	fuzzy@mantem^(0+384),w
  9343  064F  00CF               	movwf	_fuzzy$258^(0+384)
  9344  0650  0868               	movf	(fuzzy@mantem+1)^(0+384),w
  9345  0651  00D0               	movwf	(_fuzzy$258+1)^(0+384)
  9346  0652  0869               	movf	(fuzzy@mantem+2)^(0+384),w
  9347  0653  2E5B               	goto	L55
  9348  0654                     i1l3167:	
  9349  0654  3000               	movlw	0
  9350  0655  1683               	bsf	3,5	;RP0=1, select bank3
  9351  0656  1703               	bsf	3,6	;RP1=1, select bank3
  9352  0657  00CF               	movwf	_fuzzy$258^(0+384)
  9353  0658  3000               	movlw	0
  9354  0659  00D0               	movwf	(_fuzzy$258+1)^(0+384)
  9355  065A  303F               	movlw	63
  9356  065B                     L55:	
  9357  065B  00D1               	movwf	(_fuzzy$258+2)^(0+384)
  9358  065C  084F               	movf	_fuzzy$258^(0+384),w
  9359  065D  00BA               	movwf	_fuzzy$251^(0+384)
  9360  065E  0850               	movf	(_fuzzy$258+1)^(0+384),w
  9361  065F  00BB               	movwf	(_fuzzy$251+1)^(0+384)
  9362  0660  0851               	movf	(_fuzzy$258+2)^(0+384),w
  9363  0661  2F18               	goto	L56
  9364  0662                     i1l3169:	
  9365  0662  30CD               	movlw	205
  9366  0663  00F0               	movwf	___ftge@ff1
  9367  0664  30CC               	movlw	204
  9368  0665  00F1               	movwf	___ftge@ff1+1
  9369  0666  303D               	movlw	61
  9370  0667  00F2               	movwf	___ftge@ff1+2
  9371  0668  1683               	bsf	3,5	;RP0=1, select bank3
  9372  0669  1703               	bsf	3,6	;RP1=1, select bank3
  9373  066A  086D               	movf	fuzzy@freiaM^(0+384),w
  9374  066B  00F3               	movwf	___ftge@ff2
  9375  066C  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9376  066D  00F4               	movwf	___ftge@ff2+1
  9377  066E  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9378  066F  00F5               	movwf	___ftge@ff2+2
  9379  0670  160A  118A  220C  120A  118A  	fcall	___ftge
  9380  0675  1C03               	btfss	3,0
  9381  0676  2E7F               	goto	i1l3173
  9382  0677  1683               	bsf	3,5	;RP0=1, select bank3
  9383  0678  1703               	bsf	3,6	;RP1=1, select bank3
  9384  0679  086D               	movf	fuzzy@freiaM^(0+384),w
  9385  067A  00D5               	movwf	_fuzzy$260^(0+384)
  9386  067B  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9387  067C  00D6               	movwf	(_fuzzy$260+1)^(0+384)
  9388  067D  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9389  067E  2E86               	goto	L57
  9390  067F                     i1l3173:	
  9391  067F  30CD               	movlw	205
  9392  0680  1683               	bsf	3,5	;RP0=1, select bank3
  9393  0681  1703               	bsf	3,6	;RP1=1, select bank3
  9394  0682  00D5               	movwf	_fuzzy$260^(0+384)
  9395  0683  30CC               	movlw	204
  9396  0684  00D6               	movwf	(_fuzzy$260+1)^(0+384)
  9397  0685  303D               	movlw	61
  9398  0686                     L57:	
  9399  0686  00D7               	movwf	(_fuzzy$260+2)^(0+384)
  9400  0687  3000               	movlw	0
  9401  0688  00F0               	movwf	___ftge@ff1
  9402  0689  3080               	movlw	128
  9403  068A  00F1               	movwf	___ftge@ff1+1
  9404  068B  303E               	movlw	62
  9405  068C  00F2               	movwf	___ftge@ff1+2
  9406  068D  086A               	movf	fuzzy@freia^(0+384),w
  9407  068E  00F3               	movwf	___ftge@ff2
  9408  068F  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9409  0690  00F4               	movwf	___ftge@ff2+1
  9410  0691  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9411  0692  00F5               	movwf	___ftge@ff2+2
  9412  0693  160A  118A  220C  120A  118A  	fcall	___ftge
  9413  0698  1C03               	btfss	3,0
  9414  0699  2EA2               	goto	i1l3179
  9415  069A  1683               	bsf	3,5	;RP0=1, select bank3
  9416  069B  1703               	bsf	3,6	;RP1=1, select bank3
  9417  069C  086A               	movf	fuzzy@freia^(0+384),w
  9418  069D  00D8               	movwf	_fuzzy$261^(0+384)
  9419  069E  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9420  069F  00D9               	movwf	(_fuzzy$261+1)^(0+384)
  9421  06A0  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9422  06A1  2EA9               	goto	L58
  9423  06A2                     i1l3179:	
  9424  06A2  3000               	movlw	0
  9425  06A3  1683               	bsf	3,5	;RP0=1, select bank3
  9426  06A4  1703               	bsf	3,6	;RP1=1, select bank3
  9427  06A5  00D8               	movwf	_fuzzy$261^(0+384)
  9428  06A6  3080               	movlw	128
  9429  06A7  00D9               	movwf	(_fuzzy$261+1)^(0+384)
  9430  06A8  303E               	movlw	62
  9431  06A9                     L58:	
  9432  06A9  00DA               	movwf	(_fuzzy$261+2)^(0+384)
  9433  06AA  0858               	movf	_fuzzy$261^(0+384),w
  9434  06AB  00F0               	movwf	___ftge@ff1
  9435  06AC  0859               	movf	(_fuzzy$261+1)^(0+384),w
  9436  06AD  00F1               	movwf	___ftge@ff1+1
  9437  06AE  085A               	movf	(_fuzzy$261+2)^(0+384),w
  9438  06AF  00F2               	movwf	___ftge@ff1+2
  9439  06B0  0855               	movf	_fuzzy$260^(0+384),w
  9440  06B1  00F3               	movwf	___ftge@ff2
  9441  06B2  0856               	movf	(_fuzzy$260+1)^(0+384),w
  9442  06B3  00F4               	movwf	___ftge@ff2+1
  9443  06B4  0857               	movf	(_fuzzy$260+2)^(0+384),w
  9444  06B5  00F5               	movwf	___ftge@ff2+2
  9445  06B6  160A  118A  220C  120A  118A  	fcall	___ftge
  9446  06BB  1C03               	btfss	3,0
  9447  06BC  2EE8               	goto	i1l3189
  9448  06BD  3000               	movlw	0
  9449  06BE  00F0               	movwf	___ftge@ff1
  9450  06BF  3080               	movlw	128
  9451  06C0  00F1               	movwf	___ftge@ff1+1
  9452  06C1  303E               	movlw	62
  9453  06C2  00F2               	movwf	___ftge@ff1+2
  9454  06C3  1683               	bsf	3,5	;RP0=1, select bank3
  9455  06C4  1703               	bsf	3,6	;RP1=1, select bank3
  9456  06C5  086A               	movf	fuzzy@freia^(0+384),w
  9457  06C6  00F3               	movwf	___ftge@ff2
  9458  06C7  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9459  06C8  00F4               	movwf	___ftge@ff2+1
  9460  06C9  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9461  06CA  00F5               	movwf	___ftge@ff2+2
  9462  06CB  160A  118A  220C  120A  118A  	fcall	___ftge
  9463  06D0  1C03               	btfss	3,0
  9464  06D1  2EDA               	goto	i1l3187
  9465  06D2  1683               	bsf	3,5	;RP0=1, select bank3
  9466  06D3  1703               	bsf	3,6	;RP1=1, select bank3
  9467  06D4  086A               	movf	fuzzy@freia^(0+384),w
  9468  06D5  00DB               	movwf	_fuzzy$262^(0+384)
  9469  06D6  086B               	movf	(fuzzy@freia+1)^(0+384),w
  9470  06D7  00DC               	movwf	(_fuzzy$262+1)^(0+384)
  9471  06D8  086C               	movf	(fuzzy@freia+2)^(0+384),w
  9472  06D9  2EE1               	goto	L59
  9473  06DA                     i1l3187:	
  9474  06DA  3000               	movlw	0
  9475  06DB  1683               	bsf	3,5	;RP0=1, select bank3
  9476  06DC  1703               	bsf	3,6	;RP1=1, select bank3
  9477  06DD  00DB               	movwf	_fuzzy$262^(0+384)
  9478  06DE  3080               	movlw	128
  9479  06DF  00DC               	movwf	(_fuzzy$262+1)^(0+384)
  9480  06E0  303E               	movlw	62
  9481  06E1                     L59:	
  9482  06E1  00DD               	movwf	(_fuzzy$262+2)^(0+384)
  9483  06E2  085B               	movf	_fuzzy$262^(0+384),w
  9484  06E3  00D2               	movwf	_fuzzy$259^(0+384)
  9485  06E4  085C               	movf	(_fuzzy$262+1)^(0+384),w
  9486  06E5  00D3               	movwf	(_fuzzy$259+1)^(0+384)
  9487  06E6  085D               	movf	(_fuzzy$262+2)^(0+384),w
  9488  06E7  2F12               	goto	L60
  9489  06E8                     i1l3189:	
  9490  06E8  30CD               	movlw	205
  9491  06E9  00F0               	movwf	___ftge@ff1
  9492  06EA  30CC               	movlw	204
  9493  06EB  00F1               	movwf	___ftge@ff1+1
  9494  06EC  303D               	movlw	61
  9495  06ED  00F2               	movwf	___ftge@ff1+2
  9496  06EE  1683               	bsf	3,5	;RP0=1, select bank3
  9497  06EF  1703               	bsf	3,6	;RP1=1, select bank3
  9498  06F0  086D               	movf	fuzzy@freiaM^(0+384),w
  9499  06F1  00F3               	movwf	___ftge@ff2
  9500  06F2  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9501  06F3  00F4               	movwf	___ftge@ff2+1
  9502  06F4  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9503  06F5  00F5               	movwf	___ftge@ff2+2
  9504  06F6  160A  118A  220C  120A  118A  	fcall	___ftge
  9505  06FB  1C03               	btfss	3,0
  9506  06FC  2F05               	goto	i1l3193
  9507  06FD  1683               	bsf	3,5	;RP0=1, select bank3
  9508  06FE  1703               	bsf	3,6	;RP1=1, select bank3
  9509  06FF  086D               	movf	fuzzy@freiaM^(0+384),w
  9510  0700  00DE               	movwf	_fuzzy$263^(0+384)
  9511  0701  086E               	movf	(fuzzy@freiaM+1)^(0+384),w
  9512  0702  00DF               	movwf	(_fuzzy$263+1)^(0+384)
  9513  0703  086F               	movf	(fuzzy@freiaM+2)^(0+384),w
  9514  0704  2F0C               	goto	L61
  9515  0705                     i1l3193:	
  9516  0705  30CD               	movlw	205
  9517  0706  1683               	bsf	3,5	;RP0=1, select bank3
  9518  0707  1703               	bsf	3,6	;RP1=1, select bank3
  9519  0708  00DE               	movwf	_fuzzy$263^(0+384)
  9520  0709  30CC               	movlw	204
  9521  070A  00DF               	movwf	(_fuzzy$263+1)^(0+384)
  9522  070B  303D               	movlw	61
  9523  070C                     L61:	
  9524  070C  00E0               	movwf	(_fuzzy$263+2)^(0+384)
  9525  070D  085E               	movf	_fuzzy$263^(0+384),w
  9526  070E  00D2               	movwf	_fuzzy$259^(0+384)
  9527  070F  085F               	movf	(_fuzzy$263+1)^(0+384),w
  9528  0710  00D3               	movwf	(_fuzzy$259+1)^(0+384)
  9529  0711  0860               	movf	(_fuzzy$263+2)^(0+384),w
  9530  0712                     L60:	
  9531  0712  00D4               	movwf	(_fuzzy$259+2)^(0+384)
  9532  0713  0852               	movf	_fuzzy$259^(0+384),w
  9533  0714  00BA               	movwf	_fuzzy$251^(0+384)
  9534  0715  0853               	movf	(_fuzzy$259+1)^(0+384),w
  9535  0716  00BB               	movwf	(_fuzzy$251+1)^(0+384)
  9536  0717  0854               	movf	(_fuzzy$259+2)^(0+384),w
  9537  0718                     L56:	
  9538  0718  00BC               	movwf	(_fuzzy$251+2)^(0+384)
  9539  0719  083A               	movf	_fuzzy$251^(0+384),w
  9540  071A  1683               	bsf	3,5	;RP0=1, select bank1
  9541  071B  1303               	bcf	3,6	;RP1=0, select bank1
  9542  071C  00E8               	movwf	_fuzzy$235^(0+128)
  9543  071D  1683               	bsf	3,5	;RP0=1, select bank3
  9544  071E  1703               	bsf	3,6	;RP1=1, select bank3
  9545  071F  083B               	movf	(_fuzzy$251+1)^(0+384),w
  9546  0720  1683               	bsf	3,5	;RP0=1, select bank1
  9547  0721  1303               	bcf	3,6	;RP1=0, select bank1
  9548  0722  00E9               	movwf	(_fuzzy$235+1)^(0+128)
  9549  0723  1683               	bsf	3,5	;RP0=1, select bank3
  9550  0724  1703               	bsf	3,6	;RP1=1, select bank3
  9551  0725  083C               	movf	(_fuzzy$251+2)^(0+384),w
  9552  0726                     L48:	
  9553  0726  1683               	bsf	3,5	;RP0=1, select bank1
  9554  0727  1303               	bcf	3,6	;RP1=0, select bank1
  9555  0728  00EA               	movwf	(_fuzzy$235+2)^(0+128)
  9556  0729  0868               	movf	_fuzzy$235^(0+128),w
  9557  072A  1283               	bcf	3,5	;RP0=0, select bank0
  9558  072B  1303               	bcf	3,6	;RP1=0, select bank0
  9559  072C  00DC               	movwf	_fuzzy$205
  9560  072D  1683               	bsf	3,5	;RP0=1, select bank1
  9561  072E  1303               	bcf	3,6	;RP1=0, select bank1
  9562  072F  0869               	movf	(_fuzzy$235+1)^(0+128),w
  9563  0730  1283               	bcf	3,5	;RP0=0, select bank0
  9564  0731  1303               	bcf	3,6	;RP1=0, select bank0
  9565  0732  00DD               	movwf	_fuzzy$205+1
  9566  0733  1683               	bsf	3,5	;RP0=1, select bank1
  9567  0734  1303               	bcf	3,6	;RP1=0, select bank1
  9568  0735  086A               	movf	(_fuzzy$235+2)^(0+128),w
  9569  0736                     L32:	
  9570  0736  1283               	bcf	3,5	;RP0=0, select bank0
  9571  0737  1303               	bcf	3,6	;RP1=0, select bank0
  9572  0738  00DE               	movwf	_fuzzy$205+2
  9573  0739  085C               	movf	_fuzzy$205,w
  9574  073A  00D9               	movwf	fuzzy@maior
  9575  073B  085D               	movf	_fuzzy$205+1,w
  9576  073C  00DA               	movwf	fuzzy@maior+1
  9577  073D  085E               	movf	_fuzzy$205+2,w
  9578  073E  00DB               	movwf	fuzzy@maior+2
  9579                           
  9580                           ;main.c: 119: PWM_DutyCycle2((int)(maior*1023));
  9581  073F  0859               	movf	fuzzy@maior,w
  9582  0740  00BA               	movwf	___ftmul@f2
  9583  0741  085A               	movf	fuzzy@maior+1,w
  9584  0742  00BB               	movwf	___ftmul@f2+1
  9585  0743  085B               	movf	fuzzy@maior+2,w
  9586  0744  00BC               	movwf	___ftmul@f2+2
  9587  0745  30C0               	movlw	192
  9588  0746  00B7               	movwf	___ftmul@f1
  9589  0747  307F               	movlw	127
  9590  0748  00B8               	movwf	___ftmul@f1+1
  9591  0749  3044               	movlw	68
  9592  074A  00B9               	movwf	___ftmul@f1+2
  9593  074B  160A  118A  253E  120A  118A  	fcall	___ftmul
  9594  0750  1283               	bcf	3,5	;RP0=0, select bank0
  9595  0751  1303               	bcf	3,6	;RP1=0, select bank0
  9596  0752  0837               	movf	?___ftmul,w
  9597  0753  00C7               	movwf	___fttol@f1
  9598  0754  0838               	movf	?___ftmul+1,w
  9599  0755  00C8               	movwf	___fttol@f1+1
  9600  0756  0839               	movf	?___ftmul+2,w
  9601  0757  00C9               	movwf	___fttol@f1+2
  9602  0758  160A  118A  233E  120A  118A  	fcall	___fttol
  9603  075D  1283               	bcf	3,5	;RP0=0, select bank0
  9604  075E  1303               	bcf	3,6	;RP1=0, select bank0
  9605  075F  0848               	movf	?___fttol+1,w
  9606  0760  01D6               	clrf	i1PWM_DutyCycle2@valor+1
  9607  0761  07D6               	addwf	i1PWM_DutyCycle2@valor+1,f
  9608  0762  0847               	movf	?___fttol,w
  9609  0763  01D5               	clrf	i1PWM_DutyCycle2@valor
  9610  0764  07D5               	addwf	i1PWM_DutyCycle2@valor,f
  9611  0765  160A  158A  27A4   	fcall	i1_PWM_DutyCycle2
  9612  0768  0008               	return
  9613  0769                     __end_of_fuzzy:	


Data Sizes:
    Strings     68
    Constant    10
    Data        4
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     78      80
    BANK3            96     96      96
    BANK2            96     40      71

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> display(BANK2[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    S1267$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    LCD_WriteString@Str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[6]), STR_1(CODE[17]), display(BANK2[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _fuzzy->___awtoft
    _triangular->___awtoft
    _triangular->___ftadd
    _trapezoidal->___awtoft
    _trapezoidal->___ftadd
    ___ftdiv->___ftadd
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_fuzzy
    _fuzzy->i1_PWM_DutyCycle2
    i1_PWM_DutyCycle2->___fttol
    _triangular->___ftdiv
    _trapezoidal->___ftdiv
    ___ftdiv->___ftadd
    ___fttol->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->_fuzzy

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    _ISR->_fuzzy

Critical Paths under _main in BANK2

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3226
                                             37 BANK2      3     3      0
                           _ADC_Init
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             17    14      3    1875
                                             20 BANK2     17    14      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              6 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              6 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                             14 BANK2      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              6 BANK2      8     4      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             21 BANK2      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              6 BANK2     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              6 BANK2      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     146
                                              6 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              6 BANK2      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     0      2     259
                                              8 BANK2      2     0      2
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              6 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              8 BANK2      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     258
                                              6 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              8 BANK2      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              6 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0   63525
                                              0 BANK2      6     6      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                              _fuzzy
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _fuzzy                                              195   195      0   55274
                                             57 BANK0     21    21      0
                                              0 BANK1     78    78      0
                                              0 BANK3     96    96      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___fttol
                        _trapezoidal
                         _triangular
                   i1_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (5) i1_PWM_DutyCycle2                                     4     2      2      70
                                             53 BANK0      4     2      2
                            ___ftmul (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _triangular                                          15     3     12   17820
                                             23 BANK0     15     3     12
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) _trapezoidal                                         18     3     15   18933
                                             23 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     557
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftge                                              12     6      6    9480
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             16    10      6    3007
                                              7 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    4053
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     380
                                             39 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             16    10      6    2669
                                             23 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    2498
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _ISR (ROOT)
   ___ftdiv
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _fuzzy
     ___awtoft
       ___ftpack
     ___ftge
     ___ftmul
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     _trapezoidal
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftneg (ARG)
     _triangular
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftge (ARG)
       ___ftneg (ARG)
     i1_PWM_DutyCycle2
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     60      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60     28      47      11       74.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4E      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     155      12        0.0%
ABS                  0      0     155       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu May 26 02:21:02 2022

        ?i1_PWM_DutyCycle2 0055                          pc 0002                ?_LCD_Cursor 0116  
  __size_of_PWM_DutyCycle1 0021    __size_of_PWM_DutyCycle2 0021                __CFG_CP$OFF 0000  
              _SSPSTATbits 0094                         fsr 0004        ___wmul@multiplicand 0118  
       ??i1_PWM_DutyCycle2 0057               ___ftadd@exp1 0026               ___ftadd@exp2 0025  
              _trapezoidal 0A3B              _contagens_tm0 013F               ___ftadd@sign 0024  
                      l361 16A0                        l812 077B                        l638 0BB8  
                      l656 0C7D                        l757 10D8                        _PR2 0092  
             __CFG_CPD$OFF 0000                        _ISR 1484                        _rpm 00EE  
                      fsr0 0004                        indf 0000               __CFG_FOSC$HS 0000  
        ??_LCD_WriteString 011A               __CFG_LVP$OFF 0000                       ?_ISR 0070  
             ___ftdiv@cntr 0031               ___ftdiv@sign 0036         LCD_WriteString@Str 0118  
                     l3305 1FCD                       l3413 0CE0                       l3405 0CC7  
                     l3341 0BC8                       l3333 0BB4                       l3319 111A  
                     l2711 078C                       l3407 0CCB                       l3431 0D3B  
                     l2721 07AC                       l3345 0BDA                       l3427 0CF3  
                     l3419 0CEF                       l3371 0C4E                       l3355 0C18  
                     l3339 0BBD                       l2733 07E1                       l3357 0C2F  
                     l3429 0B92                       l2719 079C                       l3367 0C48  
                     l2737 07EF                       l2729 07D4                       l2691 10D0  
                     l3387 0C9C                       l3379 0C6F                       l2685 1F4E  
                     l3397 0CB1                       l3389 0CA0                       l2865 11AF  
                     l2857 118B                       l2881 1153                       l2859 1199  
                     l2883 1161                       l2891 117A                       l2869 11BA  
                     l2887 116F                       STR_1 1042                       STR_2 1059  
                     STR_3 1053                       STR_4 101A                       u3005 07D5  
                     u4015 109C                       u4025 11CC                       u3315 119A  
                     u4115 0C65                       u3325 11A6                       u4055 107B  
                     u3335 11B0                       u4155 0C8C                       u3365 1156  
                     u4317 1699                       u4407 132F                       u3295 118E  
                     u4327 16F2                       u4417 133B                       u4337 1F9E  
                     u3385 1167                       u2905 10D9                       u4427 1FD9  
                     u4347 12DD                       u3395 1170                       u2915 10E0  
                     u4437 10FD                       u4357 12ED                       u4447 110B  
                     u4367 12FB                       u4457 1117                       u4377 1307  
                     u4467 1F87                       u4387 1313                       u4397 1321  
                     u2965 07A0                       u2985 07AE                       i1l91 0A32  
                     u2995 07C3                       _OERR 00C1                       _TMR0 0001  
                     _TMR1 000E                       _main 1611               ___ftpack@arg 0070  
       __size_of_LCD_Clear 0029               ___ftpack@exp 0073                       btemp 007E  
         __end_of_ADC_Init 1F62                       ltemp 007E                       start 0016  
                     ttemp 007E                       wtemp 007E              ?_LCD_WriteCmd 0070  
            _LCD_WriteData 1F8D               ___ftmul@cntr 0045               ___ftmul@sign 0046  
                    ??_ISR 0110               ___fttol@exp1 0054               ___fttol@lval 0050  
              ?_TIMER0_Set 0070           __end_of_LCD_Init 133E            __end_of___aldiv 07F8  
                    ?_main 0070                      _EEADR 010D            __end_of___ftadd 1800  
            __CFG_WDTE$OFF 0000            __end_of___ftdiv 1484            __end_of___ftneg 1066  
          __end_of___ftmul 1611                      _T1CON 0010            __end_of___fttol 13CC  
          __end_of___lwdiv 11C1                      i1l101 0B82            __end_of___lwmod 1181  
                    i1l924 12B8                      i1l918 129F                      i1l947 17A1  
                    _RCREG 001A                      _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
            __CFG_PWRTE$ON 0000              ___awtoft@sign 007D            __end_of_dpowers 101A  
          __end_of_isdigit 1F50                      _fuzzy 0D42              ___ftpack@sign 0074  
           __CFG_BOREN$OFF 0000        __size_of_LCD_Cursor 0020                      pclath 000A  
         __end_of_PWM_Init 10CC                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __end_of_sprintf 0D42             ??_LCD_WriteCmd 0116             ?_LCD_WriteData 0070  
              ?_USART_Init 0125      i1TIMER0_Set@contagens 0070            __initialization 0019  
             __end_of_main 16F9                     ??_main 0135              ___fttol@sign1 004F  
             ?_TIMER0_Init 0070          __end_of_LCD_Clear 111A                     _ADRESH 001E  
                   _ADRESL 009E                     _EEDATA 010C                     _CCPR1L 0015  
                   _CCPR2L 001B                     _EECON2 018D                     ?_fuzzy 0070  
         __end_of___awtoft 2000           __end_of___ftpack 12D1                     i1l3003 016B  
                   i1l3023 0217                     i1l3113 04C5                     i1l3017 01E2  
                   i1l3009 01A0                     i1l3107 049A                     i1l3043 02BD  
                   i1l3019 01F0                     i1l2501 1767                     i1l3133 056D  
                   i1l3109 04A8                     i1l3053 0325                     i1l3037 0288  
                   i1l3029 0246                     i1l2503 1773                     i1l3127 053A  
                   i1l3119 0500                     i1l3039 0296                     i1l2513 1791  
                   i1l2505 1778                     i1l3153 05F3                     i1l3129 0550  
                   i1l3073 03AB                     i1l3049 0308                     i1l2443 1278  
                   i1l2523 17C5                     i1l2515 179D                     i1l2507 177C  
                   i1l3147 05C8                     i1l3139 0590                     i1l3067 0380  
                   i1l3059 0348                     i1l2453 12A4                     i1l2445 1284  
                   i1l2533 17E8                     i1l3173 067F                     i1l3149 05D6  
                   i1l3093 043F                     i1l3069 038E                     i1l2455 12AE  
                   i1l2447 1289                     i1l2439 1271                     i1l2519 17B3  
                   i1l2543 13E4                     i1l3167 0654                     i1l3159 061C  
                   i1l3087 040C                     i1l3079 03D4                     i1l2473 1722  
                   i1l2625 0A15                     i1l3193 0705                     i1l3169 0662  
                   i1l3089 0422                     i1l2483 1738                     i1l2571 145E  
                   i1l2563 143F                     i1l2643 0AB2                     i1l2619 0994  
                   i1l3187 06DA                     i1l3179 06A2                     i1l3099 0462  
                   i1l2477 1729                     i1l2549 13FA                     i1l3189 06E8  
                   i1l2495 1752                     i1l2583 1233                     i1l2655 0B65  
                   i1l2903 0EB5                     i1l2809 1358                     i1l2649 0AE4  
                   i1l3481 1529                     i1l2843 13C3                     i1l2835 13A7  
                   i1l2827 138A                     i1l2587 125A                     i1l2923 0F63  
                   i1l3467 14A5                     i1l2749 1FE9                     i1l2781 15BB  
                   i1l2765 156C                     i1l2837 13B2                     i1l2829 139A  
                   i1l2917 0F26                     i1l2909 0EE4                     i1l2759 1556  
                   i1l2839 13B5                     i1l2943 0830                     i1l2919 0F3C  
                   i1l3479 1528                     i1l2793 15E3                     i1l2777 15AB  
                   i1l2937 0FE8                     i1l2929 0FA2                     i1l2963 08D6  
                   i1l2939 0809                     i1l2789 15D3                     i1l2957 08A1  
                   i1l2949 085F                     i1l2983 00C5                     i1l2959 08AF  
                   i1l2977 0088                     i1l2969 0044                     i1l2979 009E  
                   i1l2997 0136                     i1l2989 00F4                     i1l2999 0144  
                   u230_25 12A7                     u310_25 15BC                     u311_25 15C4  
                   u233_25 12BF                     u226_25 127D                     u306_25 1578  
                   u322_25 138B                     u250_25 177D                     u315_25 15E4  
                   u307_25 158A                     u228_25 1298                     u316_25 15EC  
                   u244_25 1753                     u325_25 13A9                     u253_25 1792  
                   u261_25 140C                     u341_25 1FB5                     u270_21 124D  
                   u270_22 124E                     u270_23 1253                     u270_24 1254  
                   u262_25 141E                     u319_25 135F                     u247_25 1768  
                   u263_25 1440                     u264_25 1451                     u265_25 145F  
         __end_of___lwtoft 1F76                     u268_21 1226                     u268_22 1227  
                   u268_23 122C                     u268_24 122D        __size_of_TIMER0_Set 0008  
                   _SSPADD 0093                     _SSPBUF 0013           LCD_WriteCmd@Byte 0117  
                   ___ftge 120C                  ??___aldiv 011E                     ___wmul 10CC  
                ??___ftadd 0020             _PWM_DutyCycle1 1066             _PWM_DutyCycle2 1087  
                ??___ftdiv 002D                  ??___ftneg 0073                  ??___ftmul 003D  
                ??___fttol 004B                  ??___lwdiv 011A                  ??___lwmod 0122  
                   _ligado 0153               trapezoidal@a 003A               trapezoidal@b 003D  
             trapezoidal@c 0040               trapezoidal@d 0043               trapezoidal@x 0037  
                   _pulsos 0141                     _status 0145      ___ftmul@f3_as_product 0042  
                ??_isdigit 0116               triangular@ua 0043                  ?_ADC_Init 0070  
                   saved_w 007E        __size_of_USART_Init 004B                  ??_sprintf 0127  
            ?i1_TIMER0_Set 0070    __end_of__initialization 0040                  ?_LCD_Init 0070  
               ___ftadd@f1 0078                 ___ftadd@f2 007B            ??_LCD_WriteData 0116  
               ___ftge@ff1 0070                 ___ftge@ff2 0073                 ___ftdiv@f1 002A  
               ___ftdiv@f2 0027                 ___ftdiv@f3 0032                 ___ftneg@f1 0070  
               ___awtoft@c 0078     __end_of_PWM_DutyCycle1 1087     __end_of_PWM_DutyCycle2 10A8  
               ___ftmul@f1 0037                 ___ftmul@f2 003A                 ___fttol@f1 0047  
           __pcstackCOMMON 0070               __pidataBANK2 1F2B              LCD_Cursor@Col 0116  
            LCD_Cursor@Row 0118               ??_LCD_Cursor 0117            _LCD_WriteString 111A  
            __end_of_fuzzy 0769               ?_trapezoidal 0037                 ___lwtoft@c 0078  
                ?_PWM_Init 0070             _OPTION_REGbits 0081                 ??_ADC_Init 0116  
     __end_of_LCD_WriteCmd 1F8D  __size_ofi1_PWM_DutyCycle2 001B             ??i1_TIMER0_Set 0070  
                  ??_fuzzy 007E               sprintf@width 0131                 __pbssBANK0 006E  
               __pbssBANK1 00EE                 __pbssBANK2 0138         __end_of_LCD_Cursor 1FDF  
               ??_LCD_Init 0118            ?_PWM_DutyCycle1 0116            ?_PWM_DutyCycle2 0116  
               __pmaintext 1611                    ?___ftge 0070                    ?___wmul 0116  
               __pintentry 0004               ??_TIMER0_Set 0116                    _CCP1CON 0017  
                  _CCP2CON 001D                  ?___awtoft 0078                  ?___ftpack 0070  
               ??_PWM_Init 0116                  ?___lwtoft 0078       __size_of_TIMER0_Init 000B  
                  _SSPCON2 0091                 __stringtab 1000         __end_of_TIMER0_Set 0809  
  __end_of_LCD_WriteString 114B                  _ADCResult 013B               ??_USART_Init 0129  
        LCD_WriteData@Byte 0117                    ___aldiv 0769            __size_of___ftge 005D  
                  ___ftadd 16F9                    ___ftdiv 13CC                    ___ftneg 105E  
          __size_of___wmul 0025                    ___ftmul 153E                    ___fttol 133E  
               _erro_atual 006E                    ___lwdiv 1181                    ___lwmod 114B  
               ??___awtoft 007B                 ??___ftpack 0075                fuzzy@freiaM 01ED  
              fuzzy@mantem 01E7                    __ptext1 0B8B                    __ptext2 1F40  
                  __ptext3 10CC                    __ptext4 114B                    __ptext5 1181  
                  __ptext6 11C1                    __ptext7 0769                    __ptext8 0801  
                  __ptext9 1F35                 ??___lwtoft 007B                    _display 0149  
             __size_of_ISR 00BA                  _T1CONbits 0010                    _dpowers 1010  
                _T2CONbits 0012                    _isdigit 1F40              trapezoidal@ua 0046  
         ___aldiv@dividend 011A                  _LCD_Clear 10F1         __end_of_USART_Init 120C  
                  _sprintf 0B8B                    clrloop0 07F9       end_of_initialization 0040  
                _RCSTAbits 0018           ___aldiv@quotient 0121                    psplit$0 260033  
                  psplit$1 330034       __end_ofi1_TIMER0_Set 1F35      __size_of_LCD_WriteCmd 0017  
                _PORTBbits 0006                  _PORTEbits 0009       __size_of_trapezoidal 0150  
               ?_LCD_Clear 0070           i1_PWM_DutyCycle2 1FA4          __size_of_ADC_Init 0012  
             _contador_rb6 013D                 _triangular 091D        PWM_DutyCycle1@valor 0116  
      PWM_DutyCycle2@valor 0116                _CCP1CONbits 0017                ___ftdiv@exp 0035  
              _CCP2CONbits 001D                  _TXSTAbits 0098           ?_LCD_WriteString 0118  
        __size_of_LCD_Init 006D               _LCD_WriteCmd 1F76                ___ftmul@exp 0041  
           __end_of___ftge 1269             __end_of___wmul 10F1          __size_of_PWM_Init 0024  
      start_initialization 0019                __end_of_ISR 153E           ??_PWM_DutyCycle1 0118  
         ??_PWM_DutyCycle2 0118      __end_of_LCD_WriteData 1FA4                   ??___ftge 0076  
                 ??___wmul 011A                __pdataBANK2 0153                triangular@a 003A  
              triangular@b 003D                triangular@c 0040                triangular@x 0037  
        __size_of___awtoft 0021          __size_of___ftpack 0068                  ___latbits 0002  
        __size_of___lwtoft 0014              __pcstackBANK0 0020              __pcstackBANK1 00A0  
            __pcstackBANK2 0110              __pcstackBANK3 0190                ??_LCD_Clear 0118  
      __end_of__stringdata 105E               _isdigit$1463 0116              fuzzy@aceleraM 01E1  
              ?_triangular 0037                sprintf@_val 012C                sprintf@flag 0130  
              sprintf@prec 012B      __size_ofi1_TIMER0_Set 0006           ___lwdiv@dividend 0118  
      TIMER0_Set@contagens 0116                   ?___aldiv 0116                   ?___ftadd 0078  
                 ?___ftdiv 0027                   ?___ftneg 0070                   ?___ftmul 0037  
                 ?___fttol 0047                   ?___lwdiv 0116                   ?___lwmod 011E  
                __pstrings 1000              ??_TIMER0_Init 0116         USART_Init@BaudRate 0125  
                 ?_isdigit 0070                   _ADC_Init 1F50           ___lwdiv@quotient 011B  
               pnum$text22 0026                   ?_sprintf 0124                 fuzzy@freia 01EA  
               fuzzy@maior 0059             __size_of_fuzzy FA27               i1_TIMER0_Set 1F2F  
             _receiveIndex 0143            ___aldiv@divisor 0116          interrupt_function 0004  
          ___aldiv@counter 011F                   _LCD_Init 12D1             ___wmul@product 011A  
                _fuzzy$210 006B                  _fuzzy$211 00A0                  _fuzzy$220 00BB  
                _fuzzy$212 00A3                  _fuzzy$205 005C                  _fuzzy$221 00BE  
                _fuzzy$213 00A6                  _fuzzy$206 005F                  _fuzzy$230 00D9  
                _fuzzy$222 00C1                  _fuzzy$214 00A9                  _fuzzy$207 0062  
                _fuzzy$231 00DC                  _fuzzy$223 00C4                  _fuzzy$215 00AC  
                _fuzzy$208 0065                  _fuzzy$232 00DF                  _fuzzy$224 00C7  
                _fuzzy$216 00AF                  _fuzzy$240 0199                  _fuzzy$209 0068  
                _fuzzy$233 00E2                  _fuzzy$225 00CA                  _fuzzy$217 00B2  
                _fuzzy$241 019C                  _fuzzy$234 00E5                  _fuzzy$226 00CD  
                _fuzzy$218 00B5                  _fuzzy$250 01B7                  _fuzzy$242 019F  
                _fuzzy$235 00E8                  _fuzzy$227 00D0                  _fuzzy$219 00B8  
                _fuzzy$251 01BA                  _fuzzy$243 01A2                  _fuzzy$236 00EB  
                _fuzzy$228 00D3                  _fuzzy$260 01D5                  _fuzzy$252 01BD  
                _fuzzy$244 01A5                  _fuzzy$229 00D6                  _fuzzy$261 01D8  
                _fuzzy$253 01C0                  _fuzzy$245 01A8                  _fuzzy$237 0190  
                _fuzzy$262 01DB                  _fuzzy$254 01C3                  _fuzzy$246 01AB  
                _fuzzy$238 0193                  _fuzzy$263 01DE                  _fuzzy$255 01C6  
                _fuzzy$247 01AE                  _fuzzy$239 0196                  _fuzzy$256 01C9  
                _fuzzy$248 01B1                  _fuzzy$257 01CC                  _fuzzy$249 01B4  
                _fuzzy$258 01CF                  _fuzzy$259 01D2                  clear_ram0 07F8  
                 _PIE1bits 008C                   _PIE2bits 008D                   _PIR1bits 000C  
                 _PIR2bits 000D                  _temp_lida 0138   __end_ofi1_PWM_DutyCycle2 1FBF  
                _tempo_rb6 0147        __size_of_triangular 011E                 _ADCON0bits 001F  
              __stringbase 100F                 _ADCON1bits 009F                __stringdata 101A  
                 _PWM_Init 10A8          ___wmul@multiplier 0116        __end_of_TIMER0_Init 1F40  
               _EECON1bits 018C           __size_of___aldiv 008F           __size_of___ftadd 0107  
         __size_of___ftdiv 00B8           __size_of___ftneg 0008           __size_of___ftmul 00D3  
         __size_of___fttol 008E           __size_of___lwdiv 0040           __size_of___lwmod 0036  
                 ___awtoft 1FDF                   ___ftpack 1269              ??_trapezoidal 007E  
       __end_of__stringtab 1010                   ___lwtoft 1F62               fuzzy@acelera 01E4  
         __size_of_isdigit 0010            ___lwdiv@divisor 0116            ___lwdiv@counter 011D  
                 __ptext10 10A8                   __ptext11 1087                   __ptext20 1484  
                 __ptext12 1066                   __ptext21 1F2F                   __ptext13 111A  
                 __ptext30 133E                   __ptext22 0D42                   __ptext14 1F8D  
                 __ptext31 153E                   __ptext23 1FA4                   __ptext15 12D1  
                 __ptext32 1FDF                   __ptext24 091D                   __ptext16 1FBF  
                 __ptext33 1F62                   __ptext25 0A3B                   __ptext17 10F1  
                 __ptext34 1269                   __ptext26 105E                   __ptext18 1F76  
                 __ptext27 120C                   __ptext19 1F50                   __ptext28 13CC  
                 __ptext29 16F9           __size_of_sprintf 01B7              __size_of_main 00E8  
                 _setpoint 0155                 _LCD_Cursor 1FBF   __size_of_LCD_WriteString 0031  
       pnum$text22_split_1 0033         pnum$text22_split_2 0034                _TIMER0_Init 1F35  
               _INTCONbits 000B        __end_of_trapezoidal 0B8B                   isdigit@c 0117  
             ??_triangular 007E                   intlevel1 0000                  sprintf@ap 012A  
                sprintf@sp 0133           ___lwmod@dividend 0120                  stringcode 100A  
               _TIMER0_Set 0801         __end_of_triangular 0A3B                   sprintf@c 0134  
                 sprintf@f 0124            ___lwmod@divisor 011E            ___lwmod@counter 0123  
                 stringdir 100A                   stringtab 1000               ___aldiv@sign 0120  
   __size_of_LCD_WriteData 0017                _SSPCON2bits 0091      i1PWM_DutyCycle2@valor 0055  
               _SSPCONbits 0014                 _USART_Init 11C1  
