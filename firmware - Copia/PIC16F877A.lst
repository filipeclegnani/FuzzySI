

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 10:28:48 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text17_split_1,local,class=CODE,merge=1,delta=2
    64                           	psect	text17_split_2,local,class=CODE,merge=1,delta=2
    65                           	psect	text17_split_3,local,class=CODE,merge=1,delta=2
    66                           	psect	text17_split_4,local,class=CODE,merge=1,delta=2
    67                           	psect	text17_split_5,local,class=CODE,merge=1,delta=2
    68                           	psect	text17_split_6,local,class=CODE,merge=1,delta=2
    69                           	psect	text17_split_7,local,class=CODE,merge=1,delta=2
    70                           	dabs	1,0x7E,2
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  0088                     	;# 
   231  0089                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  009F                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  010F                     	;# 
   429  018C                     	;# 
   430  018D                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  0008                     	;# 
   440  0009                     	;# 
   441  000A                     	;# 
   442  000B                     	;# 
   443  000C                     	;# 
   444  000D                     	;# 
   445  000E                     	;# 
   446  000E                     	;# 
   447  000F                     	;# 
   448  0010                     	;# 
   449  0011                     	;# 
   450  0012                     	;# 
   451  0013                     	;# 
   452  0014                     	;# 
   453  0015                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  001D                     	;# 
   464  001E                     	;# 
   465  001F                     	;# 
   466  0081                     	;# 
   467  0085                     	;# 
   468  0086                     	;# 
   469  0087                     	;# 
   470  0088                     	;# 
   471  0089                     	;# 
   472  008C                     	;# 
   473  008D                     	;# 
   474  008E                     	;# 
   475  0091                     	;# 
   476  0092                     	;# 
   477  0093                     	;# 
   478  0094                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009E                     	;# 
   484  009F                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000E                     	;# 
   507  000F                     	;# 
   508  0010                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0014                     	;# 
   513  0015                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0017                     	;# 
   517  0018                     	;# 
   518  0019                     	;# 
   519  001A                     	;# 
   520  001B                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  001D                     	;# 
   524  001E                     	;# 
   525  001F                     	;# 
   526  0081                     	;# 
   527  0085                     	;# 
   528  0086                     	;# 
   529  0087                     	;# 
   530  0088                     	;# 
   531  0089                     	;# 
   532  008C                     	;# 
   533  008D                     	;# 
   534  008E                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0098                     	;# 
   540  0099                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  010F                     	;# 
   549  018C                     	;# 
   550  018D                     	;# 
   551  0000                     	;# 
   552  0001                     	;# 
   553  0002                     	;# 
   554  0003                     	;# 
   555  0004                     	;# 
   556  0005                     	;# 
   557  0006                     	;# 
   558  0007                     	;# 
   559  0008                     	;# 
   560  0009                     	;# 
   561  000A                     	;# 
   562  000B                     	;# 
   563  000C                     	;# 
   564  000D                     	;# 
   565  000E                     	;# 
   566  000E                     	;# 
   567  000F                     	;# 
   568  0010                     	;# 
   569  0011                     	;# 
   570  0012                     	;# 
   571  0013                     	;# 
   572  0014                     	;# 
   573  0015                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0017                     	;# 
   577  0018                     	;# 
   578  0019                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  0081                     	;# 
   587  0085                     	;# 
   588  0086                     	;# 
   589  0087                     	;# 
   590  0088                     	;# 
   591  0089                     	;# 
   592  008C                     	;# 
   593  008D                     	;# 
   594  008E                     	;# 
   595  0091                     	;# 
   596  0092                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  009F                     	;# 
   605  010C                     	;# 
   606  010D                     	;# 
   607  010E                     	;# 
   608  010F                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611                           
   612                           	psect	idataBANK0
   613  07FD                     __pidataBANK0:	
   614                           
   615                           ;initializer for _velocidadeSetada
   616  07FD  3458               	retlw	88
   617  07FE  341B               	retlw	27
   618                           
   619                           	psect	idataBANK1
   620  1040                     __pidataBANK1:	
   621                           
   622                           ;initializer for _setpoint
   623  1040  3458               	retlw	88
   624  1041  341B               	retlw	27
   625  000E                     _TMR1	set	14
   626  001F                     _ADCON0bits	set	31
   627  001E                     _ADRESH	set	30
   628  0017                     _CCP1CON	set	23
   629  0017                     _CCP1CONbits	set	23
   630  001D                     _CCP2CON	set	29
   631  001D                     _CCP2CONbits	set	29
   632  0015                     _CCPR1L	set	21
   633  001B                     _CCPR2L	set	27
   634  000B                     _INTCONbits	set	11
   635  000C                     _PIR1bits	set	12
   636  000D                     _PIR2bits	set	13
   637  0005                     _PORTA	set	5
   638  0006                     _PORTB	set	6
   639  0006                     _PORTBbits	set	6
   640  0007                     _PORTC	set	7
   641  0008                     _PORTD	set	8
   642  0009                     _PORTE	set	9
   643  0009                     _PORTEbits	set	9
   644  001A                     _RCREG	set	26
   645  0018                     _RCSTAbits	set	24
   646  0013                     _SSPBUF	set	19
   647  0014                     _SSPCONbits	set	20
   648  0010                     _T1CON	set	16
   649  0010                     _T1CONbits	set	16
   650  0012                     _T2CONbits	set	18
   651  0001                     _TMR0	set	1
   652  000F                     _TMR1H	set	15
   653  000E                     _TMR1L	set	14
   654  0019                     _TXREG	set	25
   655  00C1                     _OERR	set	193
   656  009F                     _ADCON1bits	set	159
   657  009E                     _ADRESL	set	158
   658  0081                     _OPTION_REGbits	set	129
   659  008C                     _PIE1bits	set	140
   660  008D                     _PIE2bits	set	141
   661  0092                     _PR2	set	146
   662  0099                     _SPBRG	set	153
   663  0093                     _SSPADD	set	147
   664  0091                     _SSPCON2	set	145
   665  0091                     _SSPCON2bits	set	145
   666  0094                     _SSPSTATbits	set	148
   667  0085                     _TRISA	set	133
   668  0086                     _TRISB	set	134
   669  0087                     _TRISC	set	135
   670  0088                     _TRISD	set	136
   671  0089                     _TRISE	set	137
   672  0098                     _TXSTAbits	set	152
   673  010D                     _EEADR	set	269
   674  010C                     _EEDATA	set	268
   675  018C                     _EECON1bits	set	396
   676  018D                     _EECON2	set	397
   677                           
   678                           	psect	strings
   679  1000                     __pstrings:	
   680  1000                     stringtab:	
   681  1000                     __stringtab:	
   682  1000                     stringcode:	
   683                           ;	String table - string pointers are 1 byte each
   684                           
   685  1000                     stringdir:	
   686  1000  3010               	movlw	high stringdir
   687  1001  008A               	movwf	10
   688  1002  0804               	movf	4,w
   689  1003  0A84               	incf	4,f
   690  1004  0782               	addwf	2,f
   691  1005                     __stringbase:	
   692  1005  3400               	retlw	0
   693  1006                     __end_of__stringtab:	
   694  1006                     __stringdata:	
   695  1006                     STR_4:	
   696  1006  340A               	retlw	10
   697  1007  340D               	retlw	13
   698  1008  3420               	retlw	32	;' '
   699  1009  342D               	retlw	45	;'-'
   700  100A  342D               	retlw	45	;'-'
   701  100B  342D               	retlw	45	;'-'
   702  100C  342D               	retlw	45	;'-'
   703  100D  342D               	retlw	45	;'-'
   704  100E  342D               	retlw	45	;'-'
   705  100F  342D               	retlw	45	;'-'
   706  1010  3420               	retlw	32	;' '
   707  1011  3445               	retlw	69	;'E'
   708  1012  3453               	retlw	83	;'S'
   709  1013  3454               	retlw	84	;'T'
   710  1014  344F               	retlw	79	;'O'
   711  1015  3455               	retlw	85	;'U'
   712  1016  3452               	retlw	82	;'R'
   713  1017  344F               	retlw	79	;'O'
   714  1018  3420               	retlw	32	;' '
   715  1019  3444               	retlw	68	;'D'
   716  101A  3445               	retlw	69	;'E'
   717  101B  3420               	retlw	32	;' '
   718  101C  3450               	retlw	80	;'P'
   719  101D  3449               	retlw	73	;'I'
   720  101E  344C               	retlw	76	;'L'
   721  101F  3448               	retlw	72	;'H'
   722  1020  3441               	retlw	65	;'A'
   723  1021  3420               	retlw	32	;' '
   724  1022  342D               	retlw	45	;'-'
   725  1023  342D               	retlw	45	;'-'
   726  1024  342D               	retlw	45	;'-'
   727  1025  342D               	retlw	45	;'-'
   728  1026  342D               	retlw	45	;'-'
   729  1027  342D               	retlw	45	;'-'
   730  1028  342D               	retlw	45	;'-'
   731  1029  3420               	retlw	32	;' '
   732  102A  340A               	retlw	10
   733  102B  340D               	retlw	13
   734  102C  3420               	retlw	32	;' '
   735  102D  3400               	retlw	0
   736  102E                     STR_3:	
   737  102E  3449               	retlw	73	;'I'
   738  102F  3469               	retlw	105	;'i'
   739  1030  346E               	retlw	110	;'n'
   740  1031  3464               	retlw	100	;'d'
   741  1032  3400               	retlw	0
   742  1033                     STR_2:	
   743  1033  3444               	retlw	68	;'D'
   744  1034  3469               	retlw	105	;'i'
   745  1035  3473               	retlw	115	;'s'
   746  1036  3470               	retlw	112	;'p'
   747  1037  3400               	retlw	0
   748  1038                     STR_1:	
   749  1038  3441               	retlw	65	;'A'
   750  1039  3474               	retlw	116	;'t'
   751  103A  3400               	retlw	0
   752  103B                     __end_of__stringdata:	
   753                           
   754                           ; #config settings
   755  0000                     
   756                           	psect	cinit
   757  0015                     start_initialization:	
   758  0015                     __initialization:	
   759                           
   760                           ; Clear objects allocated to BANK0
   761  0015  01E8               	clrf	__pbssBANK0& (0+127)
   762  0016  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   763  0017  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   764  0018  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   765  0019  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   766  001A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   767                           
   768                           ; Clear objects allocated to BANK1
   769  001B  1383               	bcf	3,7	;select IRP bank0
   770  001C  30C8               	movlw	low __pbssBANK1
   771  001D  0084               	movwf	4
   772  001E  30E5               	movlw	low (__pbssBANK1+29)
   773  001F  120A  158A  2000  120A  118A  	fcall	clear_ram0
   774                           
   775                           ; Clear objects allocated to BANK3
   776  0024  1783               	bsf	3,7	;select IRP bank2
   777  0025  3090               	movlw	low __pbssBANK3
   778  0026  0084               	movwf	4
   779  0027  30C0               	movlw	low (__pbssBANK3+48)
   780  0028  120A  158A  2000  120A  118A  	fcall	clear_ram0
   781                           
   782                           ; Clear objects allocated to BANK2
   783  002D  3010               	movlw	low __pbssBANK2
   784  002E  0084               	movwf	4
   785  002F  3070               	movlw	low (__pbssBANK2+96)
   786  0030  120A  158A  2000  120A  118A  	fcall	clear_ram0
   787                           
   788                           ; Initialize objects allocated to BANK1
   789  0035  1683               	bsf	3,5	;RP0=1, select bank1
   790  0036  1303               	bcf	3,6	;RP1=0, select bank1
   791  0037  160A  118A  2040  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   792  003C  00E5               	movwf	__pdataBANK1& (0+127)
   793  003D  160A  118A  2041  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   794  0042  00E6               	movwf	(__pdataBANK1+1)& (0+127)
   795                           
   796                           ; Initialize objects allocated to BANK0
   797  0043  1283               	bcf	3,5	;RP0=0, select bank0
   798  0044  1303               	bcf	3,6	;RP1=0, select bank0
   799  0045  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   800  004A  00EE               	movwf	__pdataBANK0& (0+127)
   801  004B  120A  118A  27FE   	fcall	__pidataBANK0+1	;fetch initializer
   802  004E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   803  004F                     end_of_initialization:	
   804                           ;End of C runtime variable initialization code
   805                           
   806  004F                     __end_of__initialization:	
   807  004F  0183               	clrf	3
   808  0050  120A  158A  2CAA   	ljmp	_main	;jump to C main() function
   809                           
   810                           	psect	bssBANK0
   811  0068                     __pbssBANK0:	
   812  0068                     _contador_rb6:	
   813  0068                     	ds	2
   814  006A                     _kmph:	
   815  006A                     	ds	2
   816  006C                     _tempo_rb6:	
   817  006C                     	ds	2
   818                           
   819                           	psect	dataBANK0
   820  006E                     __pdataBANK0:	
   821  006E                     _velocidadeSetada:	
   822  006E                     	ds	2
   823                           
   824                           	psect	bssBANK1
   825  00C8                     __pbssBANK1:	
   826  00C8                     _buffer:	
   827  00C8                     	ds	9
   828  00D1                     _receivedBuffer:	
   829  00D1                     	ds	5
   830  00D6                     _contagens_tm0:	
   831  00D6                     	ds	2
   832  00D8                     _erro_anterior:	
   833  00D8                     	ds	2
   834  00DA                     _erro_atual:	
   835  00DA                     	ds	2
   836  00DC                     _pulsos:	
   837  00DC                     	ds	2
   838  00DE                     _pwm:	
   839  00DE                     	ds	2
   840  00E0                     _receiveIndex:	
   841  00E0                     	ds	2
   842  00E2                     _rpm:	
   843  00E2                     	ds	2
   844  00E4                     _pilotoAtivo:	
   845  00E4                     	ds	1
   846                           
   847                           	psect	dataBANK1
   848  00E5                     __pdataBANK1:	
   849  00E5                     _setpoint:	
   850  00E5                     	ds	2
   851                           
   852                           	psect	bssBANK3
   853  0190                     __pbssBANK3:	
   854  0190                     _rBaixo:	
   855  0190                     	ds	48
   856                           
   857                           	psect	bssBANK2
   858  0110                     __pbssBANK2:	
   859  0110                     _rGrande:	
   860  0110                     	ds	48
   861  0140                     _rMedio:	
   862  0140                     	ds	48
   863                           
   864                           	psect	clrtext
   865  0800                     clear_ram0:	
   866                           ;	Called with FSR containing the base address, and
   867                           ;	W with the last address+1
   868                           
   869  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
   870  0801                     clrloop0:	
   871  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
   872  0802  0A84               	incf	4,f	;increment pointer
   873  0803  0604               	xorwf	4,w	;XOR with final address
   874  0804  1903               	btfsc	3,2	;have we reached the end yet?
   875  0805  3400               	retlw	0	;all done for this memory range, return
   876  0806  0604               	xorwf	4,w	;XOR again to restore value
   877  0807  2801               	goto	clrloop0	;do the next byte
   878                           
   879                           	psect	cstackBANK3
   880  01C0                     __pcstackBANK3:	
   881  01C0                     ??_TIMER0_Set:	
   882  01C0                     ?_PWM_DutyCycle2:	
   883                           ; 0 bytes @ 0x0
   884                           
   885  01C0                     ??_TIMER0_Init:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  01C0                     ??_PWM_Init:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  01C0                     ?_PWM_DutyCycle1:	
   892                           ; 0 bytes @ 0x0
   893                           
   894  01C0                     ?_LCD_Cursor:	
   895                           ; 0 bytes @ 0x0
   896                           
   897  01C0                     ??_inicia:	
   898                           ; 0 bytes @ 0x0
   899                           
   900  01C0                     ??_res:	
   901                           ; 0 bytes @ 0x0
   902                           
   903  01C0                     ??_set:	
   904                           ; 0 bytes @ 0x0
   905                           
   906  01C0                     ??_LCD_WriteCmd:	
   907                           ; 0 bytes @ 0x0
   908                           
   909  01C0                     ??_LCD_WriteData:	
   910                           ; 0 bytes @ 0x0
   911                           
   912  01C0                     ?___aldiv:	
   913                           ; 0 bytes @ 0x0
   914                           
   915  01C0                     TIMER0_Set@contagens:	
   916                           ; 4 bytes @ 0x0
   917                           
   918  01C0                     LCD_Cursor@Col:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  01C0                     PWM_DutyCycle1@valor:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  01C0                     PWM_DutyCycle2@valor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  01C0                     ___aldiv@divisor:	
   928                           ; 2 bytes @ 0x0
   929                           
   930                           
   931                           ; 4 bytes @ 0x0
   932  01C0                     	ds	1
   933  01C1                     ??_LCD_Cursor:	
   934  01C1                     LCD_WriteCmd@Byte:	
   935                           ; 0 bytes @ 0x1
   936                           
   937  01C1                     LCD_WriteData@Byte:	
   938                           ; 1 bytes @ 0x1
   939                           
   940                           
   941                           ; 1 bytes @ 0x1
   942  01C1                     	ds	1
   943  01C2                     ??_PWM_DutyCycle2:	
   944  01C2                     ??_LCD_Init:	
   945                           ; 0 bytes @ 0x2
   946                           
   947  01C2                     ??_PWM_DutyCycle1:	
   948                           ; 0 bytes @ 0x2
   949                           
   950  01C2                     ??_LCD_Clear:	
   951                           ; 0 bytes @ 0x2
   952                           
   953  01C2                     ??_LCD_WriteString:	
   954                           ; 0 bytes @ 0x2
   955                           
   956  01C2                     LCD_Cursor@Row:	
   957                           ; 0 bytes @ 0x2
   958                           
   959                           
   960                           ; 1 bytes @ 0x2
   961  01C2                     	ds	1
   962  01C3                     LCD_WriteString@Str:	
   963                           
   964                           ; 1 bytes @ 0x3
   965  01C3                     	ds	1
   966  01C4                     ___aldiv@dividend:	
   967                           
   968                           ; 4 bytes @ 0x4
   969  01C4                     	ds	4
   970  01C8                     ??___aldiv:	
   971                           
   972                           ; 0 bytes @ 0x8
   973  01C8                     	ds	1
   974  01C9                     ___aldiv@counter:	
   975                           
   976                           ; 1 bytes @ 0x9
   977  01C9                     	ds	1
   978  01CA                     ___aldiv@sign:	
   979                           
   980                           ; 1 bytes @ 0xA
   981  01CA                     	ds	1
   982  01CB                     ___aldiv@quotient:	
   983                           
   984                           ; 4 bytes @ 0xB
   985  01CB                     	ds	4
   986  01CF                     ?_USART_Init:	
   987  01CF                     USART_Init@BaudRate:	
   988                           ; 0 bytes @ 0xF
   989                           
   990                           
   991                           ; 4 bytes @ 0xF
   992  01CF                     	ds	4
   993  01D3                     ??_USART_Init:	
   994                           
   995                           ; 0 bytes @ 0x13
   996  01D3                     	ds	4
   997  01D7                     ??_main:	
   998                           
   999                           ; 0 bytes @ 0x17
  1000  01D7                     	ds	3
  1001                           
  1002                           	psect	cstackBANK1
  1003  00A0                     __pcstackBANK1:	
  1004  00A0                     ISR@rpmAux:	
  1005                           
  1006                           ; 2 bytes @ 0x0
  1007  00A0                     	ds	2
  1008  00A2                     _ISR$1671:	
  1009                           
  1010                           ; 3 bytes @ 0x2
  1011  00A2                     	ds	3
  1012  00A5                     _ISR$1672:	
  1013                           
  1014                           ; 3 bytes @ 0x5
  1015  00A5                     	ds	3
  1016  00A8                     ISR@reajuste:	
  1017                           
  1018                           ; 3 bytes @ 0x8
  1019  00A8                     	ds	3
  1020  00AB                     _ISR$254:	
  1021                           
  1022                           ; 2 bytes @ 0xB
  1023  00AB                     	ds	2
  1024  00AD                     ISR@checksum:	
  1025                           
  1026                           ; 1 bytes @ 0xD
  1027  00AD                     	ds	1
  1028  00AE                     ISR@byte:	
  1029                           
  1030                           ; 1 bytes @ 0xE
  1031  00AE                     	ds	1
  1032  00AF                     ISR@index:	
  1033                           
  1034                           ; 1 bytes @ 0xF
  1035  00AF                     	ds	1
  1036  00B0                     ISR@delta:	
  1037                           
  1038                           ; 2 bytes @ 0x10
  1039  00B0                     	ds	2
  1040  00B2                     ISR@soma:	
  1041                           
  1042                           ; 3 bytes @ 0x12
  1043  00B2                     	ds	3
  1044  00B5                     ISR@a:	
  1045                           
  1046                           ; 2 bytes @ 0x15
  1047  00B5                     	ds	2
  1048  00B7                     ISR@a_247:	
  1049                           
  1050                           ; 2 bytes @ 0x17
  1051  00B7                     	ds	2
  1052  00B9                     ISR@a_248:	
  1053                           
  1054                           ; 2 bytes @ 0x19
  1055  00B9                     	ds	2
  1056  00BB                     ISR@a_249:	
  1057                           
  1058                           ; 2 bytes @ 0x1B
  1059  00BB                     	ds	2
  1060  00BD                     ISR@total_area:	
  1061                           
  1062                           ; 3 bytes @ 0x1D
  1063  00BD                     	ds	3
  1064  00C0                     ISR@rule:	
  1065                           
  1066                           ; 3 bytes @ 0x20
  1067  00C0                     	ds	3
  1068  00C3                     ISR@a_252:	
  1069                           
  1070                           ; 2 bytes @ 0x23
  1071  00C3                     	ds	2
  1072  00C5                     ISR@x:	
  1073                           
  1074                           ; 3 bytes @ 0x25
  1075  00C5                     	ds	3
  1076                           
  1077                           	psect	cstackCOMMON
  1078  0070                     __pcstackCOMMON:	
  1079  0070                     ?_USART_WriteChar:	
  1080  0070                     ??_USART_WriteChar:	
  1081                           ; 0 bytes @ 0x0
  1082                           
  1083  0070                     ?_TIMER0_Set:	
  1084                           ; 0 bytes @ 0x0
  1085                           
  1086  0070                     ?_TIMER0_Init:	
  1087                           ; 0 bytes @ 0x0
  1088                           
  1089  0070                     ?_PWM_Init:	
  1090                           ; 0 bytes @ 0x0
  1091                           
  1092  0070                     ?_LCD_Init:	
  1093                           ; 0 bytes @ 0x0
  1094                           
  1095  0070                     ?_LCD_Clear:	
  1096                           ; 0 bytes @ 0x0
  1097                           
  1098  0070                     ?_LCD_WriteString:	
  1099                           ; 0 bytes @ 0x0
  1100                           
  1101  0070                     ?_inicia:	
  1102                           ; 0 bytes @ 0x0
  1103                           
  1104  0070                     ?_res:	
  1105                           ; 0 bytes @ 0x0
  1106                           
  1107  0070                     ?_set:	
  1108                           ; 0 bytes @ 0x0
  1109                           
  1110  0070                     ?_send:	
  1111                           ; 0 bytes @ 0x0
  1112                           
  1113  0070                     ?_ISR:	
  1114                           ; 0 bytes @ 0x0
  1115                           
  1116  0070                     ?_main:	
  1117                           ; 0 bytes @ 0x0
  1118                           
  1119  0070                     ?_USART_WriteString:	
  1120                           ; 0 bytes @ 0x0
  1121                           
  1122  0070                     ?_LCD_WriteCmd:	
  1123                           ; 0 bytes @ 0x0
  1124                           
  1125  0070                     ?_LCD_WriteData:	
  1126                           ; 0 bytes @ 0x0
  1127                           
  1128  0070                     ?i1_inicia:	
  1129                           ; 0 bytes @ 0x0
  1130                           
  1131  0070                     ??i1_inicia:	
  1132                           ; 0 bytes @ 0x0
  1133                           
  1134  0070                     ?i1_res:	
  1135                           ; 0 bytes @ 0x0
  1136                           
  1137  0070                     ??i1_res:	
  1138                           ; 0 bytes @ 0x0
  1139                           
  1140  0070                     ?i1_set:	
  1141                           ; 0 bytes @ 0x0
  1142                           
  1143  0070                     ??i1_set:	
  1144                           ; 0 bytes @ 0x0
  1145                           
  1146  0070                     ?i1_TIMER0_Set:	
  1147                           ; 0 bytes @ 0x0
  1148                           
  1149  0070                     ??i1_TIMER0_Set:	
  1150                           ; 0 bytes @ 0x0
  1151                           
  1152  0070                     ?i1_PWM_DutyCycle2:	
  1153                           ; 0 bytes @ 0x0
  1154                           
  1155  0070                     ?_USART_ReceiveChar:	
  1156                           ; 0 bytes @ 0x0
  1157                           
  1158  0070                     ?___bmul:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_abs:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?___lwdiv:	
  1165                           ; 2 bytes @ 0x0
  1166                           
  1167  0070                     ?___ftpack:	
  1168                           ; 2 bytes @ 0x0
  1169                           
  1170  0070                     USART_WriteChar@byte:	
  1171                           ; 3 bytes @ 0x0
  1172                           
  1173  0070                     ___bmul@multiplicand:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     i1TIMER0_Set@contagens:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     abs@a:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ___lwdiv@divisor:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  0070                     i1PWM_DutyCycle2@valor:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188  0070                     ___ftpack@arg:	
  1189                           ; 2 bytes @ 0x0
  1190                           
  1191                           
  1192                           ; 3 bytes @ 0x0
  1193  0070                     	ds	1
  1194  0071                     ??_USART_WriteString:	
  1195  0071                     ??___bmul:	
  1196                           ; 0 bytes @ 0x1
  1197                           
  1198                           
  1199                           ; 0 bytes @ 0x1
  1200  0071                     	ds	1
  1201  0072                     ??_abs:	
  1202  0072                     ??i1_PWM_DutyCycle2:	
  1203                           ; 0 bytes @ 0x2
  1204                           
  1205  0072                     USART_WriteString@str:	
  1206                           ; 0 bytes @ 0x2
  1207                           
  1208  0072                     ___bmul@product:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     ___lwdiv@dividend:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x2
  1216  0072                     	ds	1
  1217  0073                     ??_USART_ReceiveChar:	
  1218  0073                     ___bmul@multiplier:	
  1219                           ; 0 bytes @ 0x3
  1220                           
  1221  0073                     ___ftpack@exp:	
  1222                           ; 1 bytes @ 0x3
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x3
  1226  0073                     	ds	1
  1227  0074                     ?___ftge:	
  1228  0074                     ??___lwdiv:	
  1229                           ; 1 bit 
  1230                           
  1231  0074                     USART_ReceiveChar@byte:	
  1232                           ; 0 bytes @ 0x4
  1233                           
  1234  0074                     ___ftpack@sign:	
  1235                           ; 1 bytes @ 0x4
  1236                           
  1237  0074                     ___ftge@ff1:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240                           
  1241                           ; 3 bytes @ 0x4
  1242  0074                     	ds	1
  1243  0075                     ??___ftpack:	
  1244  0075                     ___lwdiv@quotient:	
  1245                           ; 0 bytes @ 0x5
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x5
  1249  0075                     	ds	2
  1250  0077                     ___lwdiv@counter:	
  1251  0077                     ___ftge@ff2:	
  1252                           ; 1 bytes @ 0x7
  1253                           
  1254                           
  1255                           ; 3 bytes @ 0x7
  1256  0077                     	ds	1
  1257  0078                     ??_send:	
  1258  0078                     ?___awtoft:	
  1259                           ; 0 bytes @ 0x8
  1260                           
  1261  0078                     ___awtoft@c:	
  1262                           ; 3 bytes @ 0x8
  1263                           
  1264                           
  1265                           ; 2 bytes @ 0x8
  1266  0078                     	ds	1
  1267  0079                     send@checksum:	
  1268                           
  1269                           ; 1 bytes @ 0x9
  1270  0079                     	ds	1
  1271  007A                     send@index:	
  1272                           
  1273                           ; 1 bytes @ 0xA
  1274  007A                     	ds	1
  1275  007B                     ??___awtoft:	
  1276                           
  1277                           ; 0 bytes @ 0xB
  1278  007B                     	ds	2
  1279  007D                     ___awtoft@sign:	
  1280                           
  1281                           ; 1 bytes @ 0xD
  1282  007D                     	ds	1
  1283  007E                     ??_maximo:	
  1284  007E                     ??_minimo:	
  1285                           ; 0 bytes @ 0xE
  1286                           
  1287  007E                     ??_trapmf:	
  1288                           ; 0 bytes @ 0xE
  1289                           
  1290  007E                     ??___wmul:	
  1291                           ; 0 bytes @ 0xE
  1292                           
  1293  007E                     ??___ftneg:	
  1294                           ; 0 bytes @ 0xE
  1295                           
  1296                           
  1297                           	psect	cstackBANK0
  1298  0020                     __pcstackBANK0:	
  1299                           ; 0 bytes @ 0xE
  1300                           
  1301  0020                     ??___ftge:	
  1302  0020                     ?___ftneg:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0020                     ___ftneg@f1:	
  1306                           ; 3 bytes @ 0x0
  1307                           
  1308                           
  1309                           ; 3 bytes @ 0x0
  1310  0020                     	ds	3
  1311  0023                     ?___ftadd:	
  1312  0023                     ___ftadd@f1:	
  1313                           ; 3 bytes @ 0x3
  1314                           
  1315                           
  1316                           ; 3 bytes @ 0x3
  1317  0023                     	ds	3
  1318  0026                     ?_minimo:	
  1319  0026                     minimo@a:	
  1320                           ; 3 bytes @ 0x6
  1321                           
  1322  0026                     ___ftadd@f2:	
  1323                           ; 3 bytes @ 0x6
  1324                           
  1325                           
  1326                           ; 3 bytes @ 0x6
  1327  0026                     	ds	3
  1328  0029                     ??___ftadd:	
  1329  0029                     minimo@b:	
  1330                           ; 0 bytes @ 0x9
  1331                           
  1332                           
  1333                           ; 3 bytes @ 0x9
  1334  0029                     	ds	3
  1335  002C                     ?_maximo:	
  1336  002C                     maximo@a:	
  1337                           ; 3 bytes @ 0xC
  1338                           
  1339                           
  1340                           ; 3 bytes @ 0xC
  1341  002C                     	ds	1
  1342  002D                     ___ftadd@sign:	
  1343                           
  1344                           ; 1 bytes @ 0xD
  1345  002D                     	ds	1
  1346  002E                     ___ftadd@exp2:	
  1347                           
  1348                           ; 1 bytes @ 0xE
  1349  002E                     	ds	1
  1350  002F                     ___ftadd@exp1:	
  1351  002F                     maximo@b:	
  1352                           ; 1 bytes @ 0xF
  1353                           
  1354                           
  1355                           ; 3 bytes @ 0xF
  1356  002F                     	ds	1
  1357  0030                     ?___ftdiv:	
  1358  0030                     ___ftdiv@f2:	
  1359                           ; 3 bytes @ 0x10
  1360                           
  1361                           
  1362                           ; 3 bytes @ 0x10
  1363  0030                     	ds	2
  1364  0032                     ?___fttol:	
  1365  0032                     ___fttol@f1:	
  1366                           ; 4 bytes @ 0x12
  1367                           
  1368                           
  1369                           ; 3 bytes @ 0x12
  1370  0032                     	ds	1
  1371  0033                     ___ftdiv@f1:	
  1372                           
  1373                           ; 3 bytes @ 0x13
  1374  0033                     	ds	3
  1375  0036                     ??___ftdiv:	
  1376  0036                     ??___fttol:	
  1377                           ; 0 bytes @ 0x16
  1378                           
  1379                           
  1380                           ; 0 bytes @ 0x16
  1381  0036                     	ds	4
  1382  003A                     ___ftdiv@cntr:	
  1383  003A                     ___fttol@sign1:	
  1384                           ; 1 bytes @ 0x1A
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x1A
  1388  003A                     	ds	1
  1389  003B                     ___ftdiv@f3:	
  1390  003B                     ___fttol@lval:	
  1391                           ; 3 bytes @ 0x1B
  1392                           
  1393                           
  1394                           ; 4 bytes @ 0x1B
  1395  003B                     	ds	3
  1396  003E                     ___ftdiv@exp:	
  1397                           
  1398                           ; 1 bytes @ 0x1E
  1399  003E                     	ds	1
  1400  003F                     ___ftdiv@sign:	
  1401  003F                     ___fttol@exp1:	
  1402                           ; 1 bytes @ 0x1F
  1403                           
  1404                           
  1405                           ; 1 bytes @ 0x1F
  1406  003F                     	ds	1
  1407  0040                     ?___wmul:	
  1408  0040                     ?_trapmf:	
  1409                           ; 2 bytes @ 0x20
  1410                           
  1411  0040                     ___wmul@multiplier:	
  1412                           ; 3 bytes @ 0x20
  1413                           
  1414  0040                     trapmf@x:	
  1415                           ; 2 bytes @ 0x20
  1416                           
  1417                           
  1418                           ; 3 bytes @ 0x20
  1419  0040                     	ds	2
  1420  0042                     ___wmul@multiplicand:	
  1421                           
  1422                           ; 2 bytes @ 0x22
  1423  0042                     	ds	1
  1424  0043                     trapmf@a:	
  1425                           
  1426                           ; 3 bytes @ 0x23
  1427  0043                     	ds	1
  1428  0044                     ___wmul@product:	
  1429                           
  1430                           ; 2 bytes @ 0x24
  1431  0044                     	ds	2
  1432  0046                     ?___lwtoft:	
  1433  0046                     ___lwtoft@c:	
  1434                           ; 3 bytes @ 0x26
  1435                           
  1436  0046                     trapmf@b:	
  1437                           ; 2 bytes @ 0x26
  1438                           
  1439                           
  1440                           ; 3 bytes @ 0x26
  1441  0046                     	ds	3
  1442  0049                     ??___lwtoft:	
  1443  0049                     trapmf@c:	
  1444                           ; 0 bytes @ 0x29
  1445                           
  1446                           
  1447                           ; 3 bytes @ 0x29
  1448  0049                     	ds	3
  1449  004C                     trapmf@d:	
  1450                           
  1451                           ; 3 bytes @ 0x2C
  1452  004C                     	ds	3
  1453  004F                     trapmf@ua:	
  1454                           
  1455                           ; 3 bytes @ 0x2F
  1456  004F                     	ds	3
  1457  0052                     ?___ftmul:	
  1458  0052                     ___ftmul@f1:	
  1459                           ; 3 bytes @ 0x32
  1460                           
  1461                           
  1462                           ; 3 bytes @ 0x32
  1463  0052                     	ds	3
  1464  0055                     ___ftmul@f2:	
  1465                           
  1466                           ; 3 bytes @ 0x35
  1467  0055                     	ds	3
  1468  0058                     ??___ftmul:	
  1469                           
  1470                           ; 0 bytes @ 0x38
  1471  0058                     	ds	4
  1472  005C                     ___ftmul@exp:	
  1473                           
  1474                           ; 1 bytes @ 0x3C
  1475  005C                     	ds	1
  1476  005D                     ___ftmul@f3_as_product:	
  1477                           
  1478                           ; 3 bytes @ 0x3D
  1479  005D                     	ds	3
  1480  0060                     ___ftmul@cntr:	
  1481                           
  1482                           ; 1 bytes @ 0x40
  1483  0060                     	ds	1
  1484  0061                     ___ftmul@sign:	
  1485                           
  1486                           ; 1 bytes @ 0x41
  1487  0061                     	ds	1
  1488  0062                     ??_ISR:	
  1489                           
  1490                           ; 0 bytes @ 0x42
  1491  0062                     	ds	6
  1492                           
  1493                           	psect	maintext
  1494  0CAA                     __pmaintext:	
  1495 ;;
  1496 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1497 ;;
  1498 ;; *************** function _main *****************
  1499 ;; Defined at:
  1500 ;;		line 394 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1501 ;; Parameters:    Size  Location     Type
  1502 ;;		None
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;		None
  1505 ;; Return value:  Size  Location     Type
  1506 ;;		None               void
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 17F/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         0       0       0       0       0
  1515 ;;      Locals:         0       0       0       0       0
  1516 ;;      Temps:          0       0       0       3       0
  1517 ;;      Totals:         0       0       0       3       0
  1518 ;;Total ram usage:        3 bytes
  1519 ;; Hardware stack levels required when called:    6
  1520 ;; This function calls:
  1521 ;;		_LCD_Clear
  1522 ;;		_LCD_Cursor
  1523 ;;		_LCD_Init
  1524 ;;		_LCD_WriteString
  1525 ;;		_PWM_DutyCycle1
  1526 ;;		_PWM_DutyCycle2
  1527 ;;		_PWM_Init
  1528 ;;		_TIMER0_Init
  1529 ;;		_TIMER0_Set
  1530 ;;		_USART_Init
  1531 ;;		_inicia
  1532 ;;		_res
  1533 ;;		_set
  1534 ;; This function is called by:
  1535 ;;		Startup code after reset
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _main
  1541  0CAA                     _main:	
  1542                           
  1543                           ;main.c: 395: TRISA = 0b00000001;
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1547  0CAA  3001               	movlw	1
  1548  0CAB  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0CAC  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0CAD  0085               	movwf	5	;volatile
  1551                           
  1552                           ;main.c: 396: PORTA = 0b00000001;
  1553  0CAE  3001               	movlw	1
  1554  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0CB1  0085               	movwf	5	;volatile
  1557                           
  1558                           ;main.c: 397: TRISB = 0b00001111;
  1559  0CB2  300F               	movlw	15
  1560  0CB3  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0CB4  1303               	bcf	3,6	;RP1=0, select bank1
  1562  0CB5  0086               	movwf	6	;volatile
  1563                           
  1564                           ;main.c: 398: PORTB = 0b00000000;
  1565  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0CB8  0186               	clrf	6	;volatile
  1568                           
  1569                           ;main.c: 399: TRISC = 0b10000001;
  1570  0CB9  3081               	movlw	129
  1571  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0CBC  0087               	movwf	7	;volatile
  1574                           
  1575                           ;main.c: 401: PORTC = 0b11000000;
  1576  0CBD  30C0               	movlw	192
  1577  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0CC0  0087               	movwf	7	;volatile
  1580                           
  1581                           ;main.c: 402: TRISD = 0b00000000;
  1582  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0CC3  0188               	clrf	8	;volatile
  1585                           
  1586                           ;main.c: 403: PORTD = 0b00000000;
  1587  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0CC6  0188               	clrf	8	;volatile
  1590                           
  1591                           ;main.c: 404: TRISE = 0b00000000;
  1592  0CC7  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0CC8  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0CC9  0189               	clrf	9	;volatile
  1595                           
  1596                           ;main.c: 405: PORTE = 0b00000000;
  1597  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0CCC  0189               	clrf	9	;volatile
  1600                           
  1601                           ;main.c: 408: T1CON = 0x03;
  1602  0CCD  3003               	movlw	3
  1603  0CCE  0090               	movwf	16	;volatile
  1604                           
  1605                           ;main.c: 409: TMR1L = 0x00;
  1606  0CCF  018E               	clrf	14	;volatile
  1607                           
  1608                           ;main.c: 410: TMR1H = 0x00;
  1609  0CD0  018F               	clrf	15	;volatile
  1610                           
  1611                           ;main.c: 414: USART_Init(115200);
  1612  0CD1  3000               	movlw	0
  1613  0CD2  1683               	bsf	3,5	;RP0=1, select bank3
  1614  0CD3  1703               	bsf	3,6	;RP1=1, select bank3
  1615  0CD4  00D2               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1616  0CD5  3001               	movlw	1
  1617  0CD6  00D1               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1618  0CD7  30C2               	movlw	194
  1619  0CD8  00D0               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1620  0CD9  3000               	movlw	0
  1621  0CDA  00CF               	movwf	USART_Init@BaudRate^(0+384)
  1622  0CDB  160A  118A  23A5  120A  158A  	fcall	_USART_Init
  1623                           
  1624                           ;main.c: 415: TIMER0_Init();
  1625  0CE0  160A  118A  2074  120A  158A  	fcall	_TIMER0_Init
  1626                           
  1627                           ;main.c: 418: PWM_Init();
  1628  0CE5  160A  118A  21F3  120A  158A  	fcall	_PWM_Init
  1629                           
  1630                           ;main.c: 419: LCD_Init();
  1631  0CEA  120A  158A  2016  120A  158A  	fcall	_LCD_Init
  1632                           
  1633                           ;main.c: 422: INTCONbits.PEIE = 1;
  1634  0CEF  170B               	bsf	11,6	;volatile
  1635                           
  1636                           ;main.c: 423: INTCONbits.GIE = 1;
  1637  0CF0  178B               	bsf	11,7	;volatile
  1638                           
  1639                           ;main.c: 426: PWM_DutyCycle1(0);
  1640  0CF1  3000               	movlw	0
  1641  0CF2  1683               	bsf	3,5	;RP0=1, select bank3
  1642  0CF3  1703               	bsf	3,6	;RP1=1, select bank3
  1643  0CF4  00C0               	movwf	PWM_DutyCycle1@valor^(0+384)
  1644  0CF5  3000               	movlw	0
  1645  0CF6  00C1               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1646  0CF7  160A  118A  21B1  120A  158A  	fcall	_PWM_DutyCycle1
  1647                           
  1648                           ;main.c: 427: PWM_DutyCycle2(100);
  1649  0CFC  3064               	movlw	100
  1650  0CFD  1683               	bsf	3,5	;RP0=1, select bank3
  1651  0CFE  1703               	bsf	3,6	;RP1=1, select bank3
  1652  0CFF  00C0               	movwf	PWM_DutyCycle2@valor^(0+384)
  1653  0D00  3000               	movlw	0
  1654  0D01  00C1               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1655  0D02  160A  118A  21D2  120A  158A  	fcall	_PWM_DutyCycle2
  1656                           
  1657                           ;main.c: 430: TIMER0_Set(238);
  1658  0D07  30EE               	movlw	238
  1659  0D08  160A  118A  2050  120A  158A  	fcall	_TIMER0_Set
  1660                           
  1661                           ;main.c: 433: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1662  0D0D  3018               	movlw	24
  1663  0D0E  1683               	bsf	3,5	;RP0=1, select bank3
  1664  0D0F  1703               	bsf	3,6	;RP1=1, select bank3
  1665  0D10  00D9               	movwf	(??_main^(0+384)+2)
  1666  0D11  3061               	movlw	97
  1667  0D12  00D8               	movwf	(??_main^(0+384)+1)
  1668  0D13  306E               	movlw	110
  1669  0D14  00D7               	movwf	??_main^(0+384)
  1670  0D15                     u5857:	
  1671  0D15  0BD7               	decfsz	??_main^(0+384),f
  1672  0D16  2D15               	goto	u5857
  1673  0D17  0BD8               	decfsz	(??_main^(0+384)+1),f
  1674  0D18  2D15               	goto	u5857
  1675  0D19  0BD9               	decfsz	(??_main^(0+384)+2),f
  1676  0D1A  2D15               	goto	u5857
  1677  0D1B  0000               	nop
  1678  0D1C                     l3266:	
  1679                           ;main.c: 436: while (1) {
  1680                           
  1681                           
  1682                           ;main.c: 438: if(PORTBbits.RB0 == 0){
  1683  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0D1E  1806               	btfsc	6,0	;volatile
  1686  0D1F  2D27               	goto	l3272
  1687  0D20                     l190:	
  1688                           ;main.c: 439: while(PORTBbits.RB0 == 0);
  1689                           
  1690  0D20  1C06               	btfss	6,0	;volatile
  1691  0D21  2D20               	goto	l190
  1692                           
  1693                           ;main.c: 440: inicia();
  1694  0D22  160A  118A  2061  120A  158A  	fcall	_inicia
  1695  0D27                     l3272:	
  1696                           
  1697                           ;main.c: 441: }
  1698                           ;main.c: 442: if(PORTBbits.RB1 == 0){
  1699  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0D29  1886               	btfsc	6,1	;volatile
  1702  0D2A  2D40               	goto	l3280
  1703  0D2B                     l194:	
  1704                           ;main.c: 443: while(PORTBbits.RB1 == 0);
  1705                           
  1706  0D2B  1C86               	btfss	6,1	;volatile
  1707  0D2C  2D2B               	goto	l194
  1708                           
  1709                           ;main.c: 444: _delay((unsigned long)((20)*(18432000/4000.0)));
  1710  0D2D  3078               	movlw	120
  1711  0D2E  1683               	bsf	3,5	;RP0=1, select bank3
  1712  0D2F  1703               	bsf	3,6	;RP1=1, select bank3
  1713  0D30  00D8               	movwf	(??_main^(0+384)+1)
  1714  0D31  30AF               	movlw	175
  1715  0D32  00D7               	movwf	??_main^(0+384)
  1716  0D33                     u5867:	
  1717  0D33  0BD7               	decfsz	??_main^(0+384),f
  1718  0D34  2D33               	goto	u5867
  1719  0D35  0BD8               	decfsz	(??_main^(0+384)+1),f
  1720  0D36  2D33               	goto	u5867
  1721  0D37                     l197:	
  1722                           ;main.c: 445: while(PORTBbits.RB1 == 0);
  1723                           
  1724  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0D39  1C86               	btfss	6,1	;volatile
  1727  0D3A  2D37               	goto	l197
  1728                           
  1729                           ;main.c: 446: res();
  1730  0D3B  160A  118A  22DD  120A  158A  	fcall	_res
  1731  0D40                     l3280:	
  1732                           
  1733                           ;main.c: 447: }
  1734                           ;main.c: 448: if(PORTBbits.RB2 == 0){
  1735  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0D42  1906               	btfsc	6,2	;volatile
  1738  0D43  2D59               	goto	l3288
  1739  0D44                     l201:	
  1740                           ;main.c: 449: while(PORTBbits.RB2 == 0);
  1741                           
  1742  0D44  1D06               	btfss	6,2	;volatile
  1743  0D45  2D44               	goto	l201
  1744                           
  1745                           ;main.c: 450: _delay((unsigned long)((20)*(18432000/4000.0)));
  1746  0D46  3078               	movlw	120
  1747  0D47  1683               	bsf	3,5	;RP0=1, select bank3
  1748  0D48  1703               	bsf	3,6	;RP1=1, select bank3
  1749  0D49  00D8               	movwf	(??_main^(0+384)+1)
  1750  0D4A  30AF               	movlw	175
  1751  0D4B  00D7               	movwf	??_main^(0+384)
  1752  0D4C                     u5877:	
  1753  0D4C  0BD7               	decfsz	??_main^(0+384),f
  1754  0D4D  2D4C               	goto	u5877
  1755  0D4E  0BD8               	decfsz	(??_main^(0+384)+1),f
  1756  0D4F  2D4C               	goto	u5877
  1757  0D50                     l204:	
  1758                           ;main.c: 451: while(PORTBbits.RB2 == 0);
  1759                           
  1760  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0D52  1D06               	btfss	6,2	;volatile
  1763  0D53  2D50               	goto	l204
  1764                           
  1765                           ;main.c: 452: set();
  1766  0D54  160A  118A  235E  120A  158A  	fcall	_set
  1767  0D59                     l3288:	
  1768                           
  1769                           ;main.c: 453: }
  1770                           ;main.c: 454: if(PORTBbits.RB3 == 0){
  1771  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0D5B  1986               	btfsc	6,3	;volatile
  1774  0D5C  2D74               	goto	l3296
  1775  0D5D                     l208:	
  1776                           ;main.c: 455: while(PORTBbits.RB3 == 0);
  1777                           
  1778  0D5D  1D86               	btfss	6,3	;volatile
  1779  0D5E  2D5D               	goto	l208
  1780                           
  1781                           ;main.c: 456: _delay((unsigned long)((20)*(18432000/4000.0)));
  1782  0D5F  3078               	movlw	120
  1783  0D60  1683               	bsf	3,5	;RP0=1, select bank3
  1784  0D61  1703               	bsf	3,6	;RP1=1, select bank3
  1785  0D62  00D8               	movwf	(??_main^(0+384)+1)
  1786  0D63  30AF               	movlw	175
  1787  0D64  00D7               	movwf	??_main^(0+384)
  1788  0D65                     u5887:	
  1789  0D65  0BD7               	decfsz	??_main^(0+384),f
  1790  0D66  2D65               	goto	u5887
  1791  0D67  0BD8               	decfsz	(??_main^(0+384)+1),f
  1792  0D68  2D65               	goto	u5887
  1793                           
  1794                           ;main.c: 457: pilotoAtivo = pilotoAtivo & 0b11111101;
  1795  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  1797  0D6B  0864               	movf	_pilotoAtivo^(0+128),w
  1798  0D6C  39FD               	andlw	253
  1799  0D6D  1683               	bsf	3,5	;RP0=1, select bank3
  1800  0D6E  1703               	bsf	3,6	;RP1=1, select bank3
  1801  0D6F  00D7               	movwf	??_main^(0+384)
  1802  0D70  0857               	movf	??_main^(0+384),w
  1803  0D71  1683               	bsf	3,5	;RP0=1, select bank1
  1804  0D72  1303               	bcf	3,6	;RP1=0, select bank1
  1805  0D73  00E4               	movwf	_pilotoAtivo^(0+128)
  1806  0D74                     l3296:	
  1807                           
  1808                           ;main.c: 458: }
  1809                           ;main.c: 459: LCD_Clear();
  1810  0D74  160A  118A  223C  120A  158A  	fcall	_LCD_Clear
  1811                           
  1812                           ;main.c: 460: LCD_Cursor(0,0);
  1813  0D79  1683               	bsf	3,5	;RP0=1, select bank3
  1814  0D7A  1703               	bsf	3,6	;RP1=1, select bank3
  1815  0D7B  01C0               	clrf	LCD_Cursor@Col^(0+384)
  1816  0D7C  3000               	movlw	0
  1817  0D7D  160A  118A  2150  120A  158A  	fcall	_LCD_Cursor
  1818                           
  1819                           ;main.c: 461: if(pilotoAtivo & 1){
  1820  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0D84  1C64               	btfss	_pilotoAtivo^(0+128),0
  1823  0D85  2D8C               	goto	l3308
  1824                           
  1825                           ;main.c: 462: if(pilotoAtivo & 2){
  1826  0D86  1CE4               	btfss	_pilotoAtivo^(0+128),1
  1827  0D87  2D8A               	goto	l3306
  1828                           
  1829                           ;main.c: 463: LCD_WriteString("At");
  1830  0D88  3033               	movlw	(STR_1-__stringbase)& (0+255)
  1831  0D89  2D8D               	goto	L1
  1832  0D8A                     l3306:	
  1833                           ;main.c: 464: }else{
  1834                           
  1835                           
  1836                           ;main.c: 465: LCD_WriteString("Disp");
  1837  0D8A  302E               	movlw	(STR_2-__stringbase)& (0+255)
  1838  0D8B  2D8D               	goto	L1
  1839  0D8C                     l3308:	
  1840                           ;main.c: 466: }
  1841                           ;main.c: 467: }else{
  1842                           
  1843                           
  1844                           ;main.c: 468: LCD_WriteString("Iind");
  1845  0D8C  3029               	movlw	(STR_3-__stringbase)& (0+255)
  1846  0D8D                     L1:	
  1847  0D8D  160A  118A  2170  120A  158A  	fcall	_LCD_WriteString
  1848                           
  1849                           ;main.c: 469: }
  1850                           ;main.c: 471: _delay((unsigned long)((200)*(18432000/4000.0)));
  1851  0D92  3005               	movlw	5
  1852  0D93  1683               	bsf	3,5	;RP0=1, select bank3
  1853  0D94  1703               	bsf	3,6	;RP1=1, select bank3
  1854  0D95  00D9               	movwf	(??_main^(0+384)+2)
  1855  0D96  30AD               	movlw	173
  1856  0D97  00D8               	movwf	(??_main^(0+384)+1)
  1857  0D98  30E0               	movlw	224
  1858  0D99  00D7               	movwf	??_main^(0+384)
  1859  0D9A                     u5897:	
  1860  0D9A  0BD7               	decfsz	??_main^(0+384),f
  1861  0D9B  2D9A               	goto	u5897
  1862  0D9C  0BD8               	decfsz	(??_main^(0+384)+1),f
  1863  0D9D  2D9A               	goto	u5897
  1864  0D9E  0BD9               	decfsz	(??_main^(0+384)+2),f
  1865  0D9F  2D9A               	goto	u5897
  1866  0DA0  2D1C               	goto	l3266
  1867  0DA1                     __end_of_main:	
  1868                           
  1869                           	psect	text1
  1870  135E                     __ptext1:	
  1871 ;; *************** function _set *****************
  1872 ;; Defined at:
  1873 ;;		line 99 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;		None               void
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0
  1889 ;;      Temps:          0       0       0       1       0
  1890 ;;      Totals:         0       0       0       1       0
  1891 ;;Total ram usage:        1 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _set
  1903  135E                     _set:	
  1904                           
  1905                           ;main.c: 100: if(kmph > 40){
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in _set: [wreg+status,2+status,0]
  1909  135E  3000               	movlw	0
  1910  135F  1283               	bcf	3,5	;RP0=0, select bank0
  1911  1360  1303               	bcf	3,6	;RP1=0, select bank0
  1912  1361  026B               	subwf	_kmph+1,w
  1913  1362  3029               	movlw	41
  1914  1363  1903               	skipnz
  1915  1364  026A               	subwf	_kmph,w
  1916  1365  1C03               	skipc
  1917  1366  0008               	return
  1918                           
  1919                           ;main.c: 102: if(pilotoAtivo == 3 && setpoint > 1640){
  1920  1367  1683               	bsf	3,5	;RP0=1, select bank1
  1921  1368  1303               	bcf	3,6	;RP1=0, select bank1
  1922  1369  0864               	movf	_pilotoAtivo^(0+128),w
  1923  136A  3A03               	xorlw	3
  1924  136B  1D03               	skipz
  1925  136C  2B88               	goto	l2454
  1926  136D  3006               	movlw	6
  1927  136E  0266               	subwf	(_setpoint+1)^(0+128),w
  1928  136F  3069               	movlw	105
  1929  1370  1903               	skipnz
  1930  1371  0265               	subwf	_setpoint^(0+128),w
  1931  1372  1C03               	skipc
  1932  1373  2B88               	goto	l2454
  1933                           
  1934                           ;main.c: 104: setpoint = setpoint - 41;
  1935  1374  0865               	movf	_setpoint^(0+128),w
  1936  1375  3ED7               	addlw	215
  1937  1376  00E5               	movwf	_setpoint^(0+128)
  1938  1377  0866               	movf	(_setpoint+1)^(0+128),w
  1939  1378  1803               	skipnc
  1940  1379  3E01               	addlw	1
  1941  137A  3EFF               	addlw	255
  1942  137B  00E6               	movwf	(_setpoint+1)^(0+128)
  1943                           
  1944                           ;main.c: 105: velocidadeSetada = setpoint;
  1945  137C  0866               	movf	(_setpoint+1)^(0+128),w
  1946  137D  1283               	bcf	3,5	;RP0=0, select bank0
  1947  137E  1303               	bcf	3,6	;RP1=0, select bank0
  1948  137F  01EF               	clrf	_velocidadeSetada+1
  1949  1380  07EF               	addwf	_velocidadeSetada+1,f
  1950  1381  1683               	bsf	3,5	;RP0=1, select bank1
  1951  1382  1303               	bcf	3,6	;RP1=0, select bank1
  1952  1383  0865               	movf	_setpoint^(0+128),w
  1953  1384  1283               	bcf	3,5	;RP0=0, select bank0
  1954  1385  1303               	bcf	3,6	;RP1=0, select bank0
  1955  1386  01EE               	clrf	_velocidadeSetada
  1956  1387  07EE               	addwf	_velocidadeSetada,f
  1957  1388                     l2454:	
  1958                           
  1959                           ;main.c: 106: }
  1960                           ;main.c: 107: if(pilotoAtivo == 1){
  1961  1388  1683               	bsf	3,5	;RP0=1, select bank1
  1962  1389  1303               	bcf	3,6	;RP1=0, select bank1
  1963  138A  0864               	movf	_pilotoAtivo^(0+128),w
  1964  138B  3A01               	xorlw	1
  1965  138C  1D03               	skipz
  1966  138D  0008               	return
  1967                           
  1968                           ;main.c: 109: pilotoAtivo = 3;
  1969  138E  3003               	movlw	3
  1970  138F  1683               	bsf	3,5	;RP0=1, select bank3
  1971  1390  1703               	bsf	3,6	;RP1=1, select bank3
  1972  1391  00C0               	movwf	??_set^(0+384)
  1973  1392  0840               	movf	??_set^(0+384),w
  1974  1393  1683               	bsf	3,5	;RP0=1, select bank1
  1975  1394  1303               	bcf	3,6	;RP1=0, select bank1
  1976  1395  00E4               	movwf	_pilotoAtivo^(0+128)
  1977                           
  1978                           ;main.c: 110: setpoint = velocidadeSetada;
  1979  1396  1283               	bcf	3,5	;RP0=0, select bank0
  1980  1397  1303               	bcf	3,6	;RP1=0, select bank0
  1981  1398  086F               	movf	_velocidadeSetada+1,w
  1982  1399  1683               	bsf	3,5	;RP0=1, select bank1
  1983  139A  1303               	bcf	3,6	;RP1=0, select bank1
  1984  139B  01E6               	clrf	(_setpoint+1)^(0+128)
  1985  139C  07E6               	addwf	(_setpoint+1)^(0+128),f
  1986  139D  1283               	bcf	3,5	;RP0=0, select bank0
  1987  139E  1303               	bcf	3,6	;RP1=0, select bank0
  1988  139F  086E               	movf	_velocidadeSetada,w
  1989  13A0  1683               	bsf	3,5	;RP0=1, select bank1
  1990  13A1  1303               	bcf	3,6	;RP1=0, select bank1
  1991  13A2  01E5               	clrf	_setpoint^(0+128)
  1992  13A3  07E5               	addwf	_setpoint^(0+128),f
  1993  13A4  0008               	return
  1994  13A5                     __end_of_set:	
  1995                           
  1996                           	psect	text2
  1997  12DD                     __ptext2:	
  1998 ;; *************** function _res *****************
  1999 ;; Defined at:
  2000 ;;		line 86 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;		None               void
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          0       0       0       1       0
  2017 ;;      Totals:         0       0       0       1       0
  2018 ;;Total ram usage:        1 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    4
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _res
  2030  12DD                     _res:	
  2031                           
  2032                           ;main.c: 87: if(pilotoAtivo == 3 && setpoint < 9000){
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _res: [wreg+status,2+status,0]
  2036  12DD  1683               	bsf	3,5	;RP0=1, select bank1
  2037  12DE  1303               	bcf	3,6	;RP1=0, select bank1
  2038  12DF  0864               	movf	_pilotoAtivo^(0+128),w
  2039  12E0  3A03               	xorlw	3
  2040  12E1  1D03               	skipz
  2041  12E2  2AFE               	goto	l2440
  2042  12E3  3023               	movlw	35
  2043  12E4  0266               	subwf	(_setpoint+1)^(0+128),w
  2044  12E5  3028               	movlw	40
  2045  12E6  1903               	skipnz
  2046  12E7  0265               	subwf	_setpoint^(0+128),w
  2047  12E8  1803               	skipnc
  2048  12E9  2AFE               	goto	l2440
  2049                           
  2050                           ;main.c: 89: setpoint = setpoint + 41;
  2051  12EA  0865               	movf	_setpoint^(0+128),w
  2052  12EB  3E29               	addlw	41
  2053  12EC  00E5               	movwf	_setpoint^(0+128)
  2054  12ED  0866               	movf	(_setpoint+1)^(0+128),w
  2055  12EE  1803               	skipnc
  2056  12EF  3E01               	addlw	1
  2057  12F0  3E00               	addlw	0
  2058  12F1  00E6               	movwf	(_setpoint+1)^(0+128)
  2059                           
  2060                           ;main.c: 90: velocidadeSetada = setpoint;
  2061  12F2  0866               	movf	(_setpoint+1)^(0+128),w
  2062  12F3  1283               	bcf	3,5	;RP0=0, select bank0
  2063  12F4  1303               	bcf	3,6	;RP1=0, select bank0
  2064  12F5  01EF               	clrf	_velocidadeSetada+1
  2065  12F6  07EF               	addwf	_velocidadeSetada+1,f
  2066  12F7  1683               	bsf	3,5	;RP0=1, select bank1
  2067  12F8  1303               	bcf	3,6	;RP1=0, select bank1
  2068  12F9  0865               	movf	_setpoint^(0+128),w
  2069  12FA  1283               	bcf	3,5	;RP0=0, select bank0
  2070  12FB  1303               	bcf	3,6	;RP1=0, select bank0
  2071  12FC  01EE               	clrf	_velocidadeSetada
  2072  12FD  07EE               	addwf	_velocidadeSetada,f
  2073  12FE                     l2440:	
  2074                           
  2075                           ;main.c: 91: }
  2076                           ;main.c: 92: if(pilotoAtivo == 1){
  2077  12FE  1683               	bsf	3,5	;RP0=1, select bank1
  2078  12FF  1303               	bcf	3,6	;RP1=0, select bank1
  2079  1300  0864               	movf	_pilotoAtivo^(0+128),w
  2080  1301  3A01               	xorlw	1
  2081  1302  1D03               	skipz
  2082  1303  0008               	return
  2083                           
  2084                           ;main.c: 94: pilotoAtivo = 3;
  2085  1304  3003               	movlw	3
  2086  1305  1683               	bsf	3,5	;RP0=1, select bank3
  2087  1306  1703               	bsf	3,6	;RP1=1, select bank3
  2088  1307  00C0               	movwf	??_res^(0+384)
  2089  1308  0840               	movf	??_res^(0+384),w
  2090  1309  1683               	bsf	3,5	;RP0=1, select bank1
  2091  130A  1303               	bcf	3,6	;RP1=0, select bank1
  2092  130B  00E4               	movwf	_pilotoAtivo^(0+128)
  2093                           
  2094                           ;main.c: 95: setpoint = velocidadeSetada;
  2095  130C  1283               	bcf	3,5	;RP0=0, select bank0
  2096  130D  1303               	bcf	3,6	;RP1=0, select bank0
  2097  130E  086F               	movf	_velocidadeSetada+1,w
  2098  130F  1683               	bsf	3,5	;RP0=1, select bank1
  2099  1310  1303               	bcf	3,6	;RP1=0, select bank1
  2100  1311  01E6               	clrf	(_setpoint+1)^(0+128)
  2101  1312  07E6               	addwf	(_setpoint+1)^(0+128),f
  2102  1313  1283               	bcf	3,5	;RP0=0, select bank0
  2103  1314  1303               	bcf	3,6	;RP1=0, select bank0
  2104  1315  086E               	movf	_velocidadeSetada,w
  2105  1316  1683               	bsf	3,5	;RP0=1, select bank1
  2106  1317  1303               	bcf	3,6	;RP1=0, select bank1
  2107  1318  01E5               	clrf	_setpoint^(0+128)
  2108  1319  07E5               	addwf	_setpoint^(0+128),f
  2109  131A  0008               	return
  2110  131B                     __end_of_res:	
  2111                           
  2112                           	psect	text3
  2113  1061                     __ptext3:	
  2114 ;; *************** function _inicia *****************
  2115 ;; Defined at:
  2116 ;;		line 79 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;		None               void
  2123 ;; Registers used:
  2124 ;;		status,2
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    4
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _inicia
  2146  1061                     _inicia:	
  2147                           
  2148                           ;main.c: 80: if(pilotoAtivo & 1){
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _inicia: [status,2]
  2152  1061  1683               	bsf	3,5	;RP0=1, select bank1
  2153  1062  1303               	bcf	3,6	;RP1=0, select bank1
  2154  1063  1C64               	btfss	_pilotoAtivo^(0+128),0
  2155  1064  2867               	goto	l101
  2156                           
  2157                           ;main.c: 81: pilotoAtivo = 0;
  2158  1065  01E4               	clrf	_pilotoAtivo^(0+128)
  2159                           
  2160                           ;main.c: 82: }else{
  2161  1066  0008               	return
  2162  1067                     l101:	
  2163                           
  2164                           ;main.c: 83: pilotoAtivo = 1;
  2165  1067  01E4               	clrf	_pilotoAtivo^(0+128)
  2166  1068  0AE4               	incf	_pilotoAtivo^(0+128),f
  2167  1069  0008               	return
  2168  106A                     __end_of_inicia:	
  2169                           
  2170                           	psect	text4
  2171  13A5                     __ptext4:	
  2172 ;; *************** function _USART_Init *****************
  2173 ;; Defined at:
  2174 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  BaudRate        4   15[BANK3 ] long 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         0       0       0       4       0
  2189 ;;      Locals:         0       0       0       0       0
  2190 ;;      Temps:          0       0       0       4       0
  2191 ;;      Totals:         0       0       0       8       0
  2192 ;;Total ram usage:        8 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    5
  2195 ;; This function calls:
  2196 ;;		___aldiv
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function _USART_Init
  2204  13A5                     _USART_Init:	
  2205                           
  2206                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2210  13A5  1683               	bsf	3,5	;RP0=1, select bank3
  2211  13A6  1703               	bsf	3,6	;RP1=1, select bank3
  2212  13A7  084F               	movf	USART_Init@BaudRate^(0+384),w
  2213  13A8  00D3               	movwf	??_USART_Init^(0+384)
  2214  13A9  0850               	movf	(USART_Init@BaudRate+1)^(0+384),w
  2215  13AA  00D4               	movwf	(??_USART_Init^(0+384)+1)
  2216  13AB  0851               	movf	(USART_Init@BaudRate+2)^(0+384),w
  2217  13AC  00D5               	movwf	(??_USART_Init^(0+384)+2)
  2218  13AD  0852               	movf	(USART_Init@BaudRate+3)^(0+384),w
  2219  13AE  00D6               	movwf	(??_USART_Init^(0+384)+3)
  2220  13AF  3004               	movlw	4
  2221  13B0                     u3025:	
  2222  13B0  1003               	clrc
  2223  13B1  0DD3               	rlf	??_USART_Init^(0+384),f
  2224  13B2  0DD4               	rlf	(??_USART_Init^(0+384)+1),f
  2225  13B3  0DD5               	rlf	(??_USART_Init^(0+384)+2),f
  2226  13B4  0DD6               	rlf	(??_USART_Init^(0+384)+3),f
  2227  13B5  3EFF               	addlw	-1
  2228  13B6  1D03               	skipz
  2229  13B7  2BB0               	goto	u3025
  2230  13B8  0856               	movf	(??_USART_Init+3)^(0+384),w
  2231  13B9  00C3               	movwf	(___aldiv@divisor+3)^(0+384)
  2232  13BA  0855               	movf	(??_USART_Init+2)^(0+384),w
  2233  13BB  00C2               	movwf	(___aldiv@divisor+2)^(0+384)
  2234  13BC  0854               	movf	(??_USART_Init+1)^(0+384),w
  2235  13BD  00C1               	movwf	(___aldiv@divisor+1)^(0+384)
  2236  13BE  0853               	movf	??_USART_Init^(0+384),w
  2237  13BF  00C0               	movwf	___aldiv@divisor^(0+384)
  2238  13C0  3001               	movlw	1
  2239  13C1  00C7               	movwf	(___aldiv@dividend+3)^(0+384)
  2240  13C2  3019               	movlw	25
  2241  13C3  00C6               	movwf	(___aldiv@dividend+2)^(0+384)
  2242  13C4  3040               	movlw	64
  2243  13C5  00C5               	movwf	(___aldiv@dividend+1)^(0+384)
  2244  13C6  3000               	movlw	0
  2245  13C7  00C4               	movwf	___aldiv@dividend^(0+384)
  2246  13C8  160A  118A  26E0   	fcall	___aldiv
  2247  13CB  1683               	bsf	3,5	;RP0=1, select bank3
  2248  13CC  1703               	bsf	3,6	;RP1=1, select bank3
  2249  13CD  0840               	movf	?___aldiv^(0+384),w
  2250  13CE  3EFF               	addlw	255
  2251  13CF  1683               	bsf	3,5	;RP0=1, select bank1
  2252  13D0  1303               	bcf	3,6	;RP1=0, select bank1
  2253  13D1  0099               	movwf	25	;volatile
  2254                           
  2255                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  2256  13D2  1398               	bcf	24,7	;volatile
  2257                           
  2258                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  2259  13D3  1318               	bcf	24,6	;volatile
  2260                           
  2261                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  2262  13D4  1698               	bsf	24,5	;volatile
  2263                           
  2264                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  2265  13D5  1218               	bcf	24,4	;volatile
  2266                           
  2267                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  2268  13D6  1518               	bsf	24,2	;volatile
  2269                           
  2270                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  2271  13D7  1498               	bsf	24,1	;volatile
  2272                           
  2273                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  2274  13D8  1018               	bcf	24,0	;volatile
  2275                           
  2276                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  2277  13D9  1283               	bcf	3,5	;RP0=0, select bank0
  2278  13DA  1303               	bcf	3,6	;RP1=0, select bank0
  2279  13DB  1798               	bsf	24,7	;volatile
  2280                           
  2281                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  2282  13DC  1318               	bcf	24,6	;volatile
  2283                           
  2284                           ;usart.c: 28: RCSTAbits.SREN = 0;
  2285  13DD  1298               	bcf	24,5	;volatile
  2286                           
  2287                           ;usart.c: 29: RCSTAbits.CREN = 1;
  2288  13DE  1618               	bsf	24,4	;volatile
  2289                           
  2290                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  2291  13DF  1198               	bcf	24,3	;volatile
  2292                           
  2293                           ;usart.c: 31: RCSTAbits.FERR = 0;
  2294  13E0  1118               	bcf	24,2	;volatile
  2295                           
  2296                           ;usart.c: 32: RCSTAbits.OERR = 0;
  2297  13E1  1098               	bcf	24,1	;volatile
  2298                           
  2299                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  2300  13E2  1018               	bcf	24,0	;volatile
  2301                           
  2302                           ;usart.c: 36: PIE1bits.TXIE = 0;
  2303  13E3  1683               	bsf	3,5	;RP0=1, select bank1
  2304  13E4  1303               	bcf	3,6	;RP1=0, select bank1
  2305  13E5  120C               	bcf	12,4	;volatile
  2306                           
  2307                           ;usart.c: 37: PIR1bits.TXIF = 0;
  2308  13E6  1283               	bcf	3,5	;RP0=0, select bank0
  2309  13E7  1303               	bcf	3,6	;RP1=0, select bank0
  2310  13E8  120C               	bcf	12,4	;volatile
  2311                           
  2312                           ;usart.c: 38: PIE1bits.RCIE = 1;
  2313  13E9  1683               	bsf	3,5	;RP0=1, select bank1
  2314  13EA  1303               	bcf	3,6	;RP1=0, select bank1
  2315  13EB  168C               	bsf	12,5	;volatile
  2316                           
  2317                           ;usart.c: 39: PIR1bits.RCIF = 0;
  2318  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  2319  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  2320  13EE  128C               	bcf	12,5	;volatile
  2321  13EF  0008               	return
  2322  13F0                     __end_of_USART_Init:	
  2323                           
  2324                           	psect	text5
  2325  16E0                     __ptext5:	
  2326 ;; *************** function ___aldiv *****************
  2327 ;; Defined at:
  2328 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  divisor         4    0[BANK3 ] long 
  2331 ;;  dividend        4    4[BANK3 ] long 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  quotient        4   11[BANK3 ] long 
  2334 ;;  sign            1   10[BANK3 ] unsigned char 
  2335 ;;  counter         1    9[BANK3 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  4    0[BANK3 ] long 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       8       0
  2346 ;;      Locals:         0       0       0       6       0
  2347 ;;      Temps:          0       0       0       1       0
  2348 ;;      Totals:         0       0       0      15       0
  2349 ;;Total ram usage:       15 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    4
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_USART_Init
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function ___aldiv
  2361  16E0                     ___aldiv:	
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2365  16E0  1683               	bsf	3,5	;RP0=1, select bank3
  2366  16E1  1703               	bsf	3,6	;RP1=1, select bank3
  2367  16E2  01CA               	clrf	___aldiv@sign^(0+384)
  2368  16E3  1FC3               	btfss	(___aldiv@divisor+3)^(0+384),7
  2369  16E4  2EF2               	goto	l618
  2370  16E5  09C0               	comf	___aldiv@divisor^(0+384),f
  2371  16E6  09C1               	comf	(___aldiv@divisor+1)^(0+384),f
  2372  16E7  09C2               	comf	(___aldiv@divisor+2)^(0+384),f
  2373  16E8  09C3               	comf	(___aldiv@divisor+3)^(0+384),f
  2374  16E9  0AC0               	incf	___aldiv@divisor^(0+384),f
  2375  16EA  1903               	skipnz
  2376  16EB  0AC1               	incf	(___aldiv@divisor+1)^(0+384),f
  2377  16EC  1903               	skipnz
  2378  16ED  0AC2               	incf	(___aldiv@divisor+2)^(0+384),f
  2379  16EE  1903               	skipnz
  2380  16EF  0AC3               	incf	(___aldiv@divisor+3)^(0+384),f
  2381  16F0  01CA               	clrf	___aldiv@sign^(0+384)
  2382  16F1  0ACA               	incf	___aldiv@sign^(0+384),f
  2383  16F2                     l618:	
  2384  16F2  1FC7               	btfss	(___aldiv@dividend+3)^(0+384),7
  2385  16F3  2F03               	goto	l2216
  2386  16F4  09C4               	comf	___aldiv@dividend^(0+384),f
  2387  16F5  09C5               	comf	(___aldiv@dividend+1)^(0+384),f
  2388  16F6  09C6               	comf	(___aldiv@dividend+2)^(0+384),f
  2389  16F7  09C7               	comf	(___aldiv@dividend+3)^(0+384),f
  2390  16F8  0AC4               	incf	___aldiv@dividend^(0+384),f
  2391  16F9  1903               	skipnz
  2392  16FA  0AC5               	incf	(___aldiv@dividend+1)^(0+384),f
  2393  16FB  1903               	skipnz
  2394  16FC  0AC6               	incf	(___aldiv@dividend+2)^(0+384),f
  2395  16FD  1903               	skipnz
  2396  16FE  0AC7               	incf	(___aldiv@dividend+3)^(0+384),f
  2397  16FF  3001               	movlw	1
  2398  1700  00C8               	movwf	??___aldiv^(0+384)
  2399  1701  0848               	movf	??___aldiv^(0+384),w
  2400  1702  06CA               	xorwf	___aldiv@sign^(0+384),f
  2401  1703                     l2216:	
  2402  1703  3000               	movlw	0
  2403  1704  00CE               	movwf	(___aldiv@quotient+3)^(0+384)
  2404  1705  3000               	movlw	0
  2405  1706  00CD               	movwf	(___aldiv@quotient+2)^(0+384)
  2406  1707  3000               	movlw	0
  2407  1708  00CC               	movwf	(___aldiv@quotient+1)^(0+384)
  2408  1709  3000               	movlw	0
  2409  170A  00CB               	movwf	___aldiv@quotient^(0+384)
  2410  170B  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2411  170C  0442               	iorwf	(___aldiv@divisor+2)^(0+384),w
  2412  170D  0441               	iorwf	(___aldiv@divisor+1)^(0+384),w
  2413  170E  0440               	iorwf	___aldiv@divisor^(0+384),w
  2414  170F  1903               	skipnz
  2415  1710  2F58               	goto	l2238
  2416  1711  01C9               	clrf	___aldiv@counter^(0+384)
  2417  1712  0AC9               	incf	___aldiv@counter^(0+384),f
  2418  1713                     l2224:	
  2419  1713  1BC3               	btfsc	(___aldiv@divisor+3)^(0+384),7
  2420  1714  2F23               	goto	l2226
  2421  1715  3001               	movlw	1
  2422  1716  00C8               	movwf	??___aldiv^(0+384)
  2423  1717                     u2275:	
  2424  1717  1003               	clrc
  2425  1718  0DC0               	rlf	___aldiv@divisor^(0+384),f
  2426  1719  0DC1               	rlf	(___aldiv@divisor+1)^(0+384),f
  2427  171A  0DC2               	rlf	(___aldiv@divisor+2)^(0+384),f
  2428  171B  0DC3               	rlf	(___aldiv@divisor+3)^(0+384),f
  2429  171C  0BC8               	decfsz	??___aldiv^(0+384),f
  2430  171D  2F17               	goto	u2275
  2431  171E  3001               	movlw	1
  2432  171F  00C8               	movwf	??___aldiv^(0+384)
  2433  1720  0848               	movf	??___aldiv^(0+384),w
  2434  1721  07C9               	addwf	___aldiv@counter^(0+384),f
  2435  1722  2F13               	goto	l2224
  2436  1723                     l2226:	
  2437  1723  3001               	movlw	1
  2438  1724  00C8               	movwf	??___aldiv^(0+384)
  2439  1725                     u2295:	
  2440  1725  1003               	clrc
  2441  1726  0DCB               	rlf	___aldiv@quotient^(0+384),f
  2442  1727  0DCC               	rlf	(___aldiv@quotient+1)^(0+384),f
  2443  1728  0DCD               	rlf	(___aldiv@quotient+2)^(0+384),f
  2444  1729  0DCE               	rlf	(___aldiv@quotient+3)^(0+384),f
  2445  172A  0BC8               	decfsz	??___aldiv^(0+384),f
  2446  172B  2F25               	goto	u2295
  2447  172C  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2448  172D  0247               	subwf	(___aldiv@dividend+3)^(0+384),w
  2449  172E  1D03               	skipz
  2450  172F  2F3A               	goto	u2305
  2451  1730  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  2452  1731  0246               	subwf	(___aldiv@dividend+2)^(0+384),w
  2453  1732  1D03               	skipz
  2454  1733  2F3A               	goto	u2305
  2455  1734  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  2456  1735  0245               	subwf	(___aldiv@dividend+1)^(0+384),w
  2457  1736  1D03               	skipz
  2458  1737  2F3A               	goto	u2305
  2459  1738  0840               	movf	___aldiv@divisor^(0+384),w
  2460  1739  0244               	subwf	___aldiv@dividend^(0+384),w
  2461  173A                     u2305:	
  2462  173A  1C03               	skipc
  2463  173B  2F4B               	goto	l2234
  2464  173C  0840               	movf	___aldiv@divisor^(0+384),w
  2465  173D  02C4               	subwf	___aldiv@dividend^(0+384),f
  2466  173E  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  2467  173F  1C03               	skipc
  2468  1740  0F41               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2469  1741  02C5               	subwf	(___aldiv@dividend+1)^(0+384),f
  2470  1742  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  2471  1743  1C03               	skipc
  2472  1744  0F42               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2473  1745  02C6               	subwf	(___aldiv@dividend+2)^(0+384),f
  2474  1746  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2475  1747  1C03               	skipc
  2476  1748  0F43               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2477  1749  02C7               	subwf	(___aldiv@dividend+3)^(0+384),f
  2478  174A  144B               	bsf	___aldiv@quotient^(0+384),0
  2479  174B                     l2234:	
  2480  174B  3001               	movlw	1
  2481  174C                     u2315:	
  2482  174C  1003               	clrc
  2483  174D  0CC3               	rrf	(___aldiv@divisor+3)^(0+384),f
  2484  174E  0CC2               	rrf	(___aldiv@divisor+2)^(0+384),f
  2485  174F  0CC1               	rrf	(___aldiv@divisor+1)^(0+384),f
  2486  1750  0CC0               	rrf	___aldiv@divisor^(0+384),f
  2487  1751  3EFF               	addlw	-1
  2488  1752  1D03               	skipz
  2489  1753  2F4C               	goto	u2315
  2490  1754  3001               	movlw	1
  2491  1755  02C9               	subwf	___aldiv@counter^(0+384),f
  2492  1756  1D03               	btfss	3,2
  2493  1757  2F23               	goto	l2226
  2494  1758                     l2238:	
  2495  1758  084A               	movf	___aldiv@sign^(0+384),w
  2496  1759  1903               	btfsc	3,2
  2497  175A  2F66               	goto	l2242
  2498  175B  09CB               	comf	___aldiv@quotient^(0+384),f
  2499  175C  09CC               	comf	(___aldiv@quotient+1)^(0+384),f
  2500  175D  09CD               	comf	(___aldiv@quotient+2)^(0+384),f
  2501  175E  09CE               	comf	(___aldiv@quotient+3)^(0+384),f
  2502  175F  0ACB               	incf	___aldiv@quotient^(0+384),f
  2503  1760  1903               	skipnz
  2504  1761  0ACC               	incf	(___aldiv@quotient+1)^(0+384),f
  2505  1762  1903               	skipnz
  2506  1763  0ACD               	incf	(___aldiv@quotient+2)^(0+384),f
  2507  1764  1903               	skipnz
  2508  1765  0ACE               	incf	(___aldiv@quotient+3)^(0+384),f
  2509  1766                     l2242:	
  2510  1766  084E               	movf	(___aldiv@quotient+3)^(0+384),w
  2511  1767  00C3               	movwf	(?___aldiv+3)^(0+384)
  2512  1768  084D               	movf	(___aldiv@quotient+2)^(0+384),w
  2513  1769  00C2               	movwf	(?___aldiv+2)^(0+384)
  2514  176A  084C               	movf	(___aldiv@quotient+1)^(0+384),w
  2515  176B  00C1               	movwf	(?___aldiv+1)^(0+384)
  2516  176C  084B               	movf	___aldiv@quotient^(0+384),w
  2517  176D  00C0               	movwf	?___aldiv^(0+384)
  2518  176E  0008               	return
  2519  176F                     __end_of___aldiv:	
  2520                           
  2521                           	psect	text6
  2522  1050                     __ptext6:	
  2523 ;; *************** function _TIMER0_Set *****************
  2524 ;; Defined at:
  2525 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  contagens       1    wreg     unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  contagens       1    0[BANK3 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;		None               void
  2532 ;; Registers used:
  2533 ;;		wreg
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         0       0       0       0       0
  2540 ;;      Locals:         0       0       0       1       0
  2541 ;;      Temps:          0       0       0       0       0
  2542 ;;      Totals:         0       0       0       1       0
  2543 ;;Total ram usage:        1 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    4
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _TIMER0_Set
  2555  1050                     _TIMER0_Set:	
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _TIMER0_Set: [wreg]
  2559                           ;TIMER0_Set@contagens stored from wreg
  2560  1050  1683               	bsf	3,5	;RP0=1, select bank3
  2561  1051  1703               	bsf	3,6	;RP1=1, select bank3
  2562  1052  00C0               	movwf	TIMER0_Set@contagens^(0+384)
  2563                           
  2564                           ;timers.c: 22: TMR0 = contagens;
  2565  1053  0840               	movf	TIMER0_Set@contagens^(0+384),w
  2566  1054  1283               	bcf	3,5	;RP0=0, select bank0
  2567  1055  1303               	bcf	3,6	;RP1=0, select bank0
  2568  1056  0081               	movwf	1	;volatile
  2569  1057  0008               	return
  2570  1058                     __end_of_TIMER0_Set:	
  2571                           
  2572                           	psect	text7
  2573  1074                     __ptext7:	
  2574 ;; *************** function _TIMER0_Init *****************
  2575 ;; Defined at:
  2576 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;		None               void
  2583 ;; Registers used:
  2584 ;;		None
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    4
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function _TIMER0_Init
  2606  1074                     _TIMER0_Init:	
  2607                           
  2608                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _TIMER0_Init: []
  2612  1074  1683               	bsf	3,5	;RP0=1, select bank1
  2613  1075  1303               	bcf	3,6	;RP1=0, select bank1
  2614  1076  1281               	bcf	1,5	;volatile
  2615                           
  2616                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2617  1077  1201               	bcf	1,4	;volatile
  2618                           
  2619                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2620  1078  1181               	bcf	1,3	;volatile
  2621                           
  2622                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2623  1079  1501               	bsf	1,2	;volatile
  2624                           
  2625                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2626  107A  1481               	bsf	1,1	;volatile
  2627                           
  2628                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2629  107B  1401               	bsf	1,0	;volatile
  2630                           
  2631                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2632  107C  110B               	bcf	11,2	;volatile
  2633                           
  2634                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2635  107D  168B               	bsf	11,5	;volatile
  2636  107E  0008               	return
  2637  107F                     __end_of_TIMER0_Init:	
  2638                           
  2639                           	psect	text8
  2640  11F3                     __ptext8:	
  2641 ;; *************** function _PWM_Init *****************
  2642 ;; Defined at:
  2643 ;;		line 5 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0
  2660 ;;      Totals:         0       0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    4
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _PWM_Init
  2673  11F3                     _PWM_Init:	
  2674                           
  2675                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _PWM_Init: [wreg]
  2679  11F3  1283               	bcf	3,5	;RP0=0, select bank0
  2680  11F4  1303               	bcf	3,6	;RP1=0, select bank0
  2681  11F5  1492               	bsf	18,1	;volatile
  2682                           
  2683                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2684  11F6  1012               	bcf	18,0	;volatile
  2685                           
  2686                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2687  11F7  1312               	bcf	18,6	;volatile
  2688                           
  2689                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2690  11F8  1292               	bcf	18,5	;volatile
  2691                           
  2692                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2693  11F9  1212               	bcf	18,4	;volatile
  2694                           
  2695                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2696  11FA  1192               	bcf	18,3	;volatile
  2697                           
  2698                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2699  11FB  1512               	bsf	18,2	;volatile
  2700                           
  2701                           ;pwm.c: 27: PR2 = 255;
  2702  11FC  30FF               	movlw	255
  2703  11FD  1683               	bsf	3,5	;RP0=1, select bank1
  2704  11FE  1303               	bcf	3,6	;RP1=0, select bank1
  2705  11FF  0092               	movwf	18	;volatile
  2706                           
  2707                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2708  1200  1283               	bcf	3,5	;RP0=0, select bank0
  2709  1201  1303               	bcf	3,6	;RP1=0, select bank0
  2710  1202  1597               	bsf	23,3	;volatile
  2711                           
  2712                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2713  1203  1517               	bsf	23,2	;volatile
  2714                           
  2715                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2716  1204  1497               	bsf	23,1	;volatile
  2717                           
  2718                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2719  1205  1417               	bsf	23,0	;volatile
  2720                           
  2721                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2722  1206  1683               	bsf	3,5	;RP0=1, select bank1
  2723  1207  1303               	bcf	3,6	;RP1=0, select bank1
  2724  1208  150C               	bsf	12,2	;volatile
  2725                           
  2726                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2727  1209  1283               	bcf	3,5	;RP0=0, select bank0
  2728  120A  1303               	bcf	3,6	;RP1=0, select bank0
  2729  120B  110C               	bcf	12,2	;volatile
  2730                           
  2731                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2732  120C  159D               	bsf	29,3	;volatile
  2733                           
  2734                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2735  120D  151D               	bsf	29,2	;volatile
  2736                           
  2737                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2738  120E  149D               	bsf	29,1	;volatile
  2739                           
  2740                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2741  120F  141D               	bsf	29,0	;volatile
  2742                           
  2743                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2744  1210  1683               	bsf	3,5	;RP0=1, select bank1
  2745  1211  1303               	bcf	3,6	;RP1=0, select bank1
  2746  1212  140D               	bsf	13,0	;volatile
  2747                           
  2748                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2749  1213  1283               	bcf	3,5	;RP0=0, select bank0
  2750  1214  1303               	bcf	3,6	;RP1=0, select bank0
  2751  1215  100D               	bcf	13,0	;volatile
  2752  1216  0008               	return
  2753  1217                     __end_of_PWM_Init:	
  2754                           
  2755                           	psect	text9
  2756  11D2                     __ptext9:	
  2757 ;; *************** function _PWM_DutyCycle2 *****************
  2758 ;; Defined at:
  2759 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  valor           2    0[BANK3 ] int 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;		None               void
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       2       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       0       0       2       0
  2776 ;;      Totals:         0       0       0       4       0
  2777 ;;Total ram usage:        4 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    4
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _PWM_DutyCycle2
  2789  11D2                     _PWM_DutyCycle2:	
  2790                           
  2791                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2795  11D2  1683               	bsf	3,5	;RP0=1, select bank3
  2796  11D3  1703               	bsf	3,6	;RP1=1, select bank3
  2797  11D4  0841               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2798  11D5  00C3               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2799  11D6  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2800  11D7  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2801  11D8  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2802  11D9  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2803  11DA  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2804  11DB  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2805  11DC  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2806  11DD  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2807  11DE  0842               	movf	??_PWM_DutyCycle2^(0+384),w
  2808  11DF  1283               	bcf	3,5	;RP0=0, select bank0
  2809  11E0  1303               	bcf	3,6	;RP1=0, select bank0
  2810  11E1  009B               	movwf	27	;volatile
  2811                           
  2812                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2813  11E2  1683               	bsf	3,5	;RP0=1, select bank3
  2814  11E3  1703               	bsf	3,6	;RP1=1, select bank3
  2815  11E4  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2816  11E5  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2817  11E6  3003               	movlw	3
  2818  11E7                     u3015:	
  2819  11E7  1003               	clrc
  2820  11E8  0DC2               	rlf	??_PWM_DutyCycle2^(0+384),f
  2821  11E9  3EFF               	addlw	-1
  2822  11EA  1D03               	skipz
  2823  11EB  29E7               	goto	u3015
  2824  11EC  1003               	clrc
  2825  11ED  0D42               	rlf	??_PWM_DutyCycle2^(0+384),w
  2826  11EE  380C               	iorlw	12
  2827  11EF  1283               	bcf	3,5	;RP0=0, select bank0
  2828  11F0  1303               	bcf	3,6	;RP1=0, select bank0
  2829  11F1  009D               	movwf	29	;volatile
  2830  11F2  0008               	return
  2831  11F3                     __end_of_PWM_DutyCycle2:	
  2832                           
  2833                           	psect	text10
  2834  11B1                     __ptext10:	
  2835 ;; *************** function _PWM_DutyCycle1 *****************
  2836 ;; Defined at:
  2837 ;;		line 64 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  valor           2    0[BANK3 ] int 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       0       0       2       0
  2852 ;;      Locals:         0       0       0       0       0
  2853 ;;      Temps:          0       0       0       2       0
  2854 ;;      Totals:         0       0       0       4       0
  2855 ;;Total ram usage:        4 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    4
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _PWM_DutyCycle1
  2867  11B1                     _PWM_DutyCycle1:	
  2868                           
  2869                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2873  11B1  1683               	bsf	3,5	;RP0=1, select bank3
  2874  11B2  1703               	bsf	3,6	;RP1=1, select bank3
  2875  11B3  0841               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2876  11B4  00C3               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2877  11B5  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2878  11B6  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2879  11B7  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2880  11B8  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2881  11B9  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2882  11BA  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2883  11BB  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2884  11BC  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2885  11BD  0842               	movf	??_PWM_DutyCycle1^(0+384),w
  2886  11BE  1283               	bcf	3,5	;RP0=0, select bank0
  2887  11BF  1303               	bcf	3,6	;RP1=0, select bank0
  2888  11C0  0095               	movwf	21	;volatile
  2889                           
  2890                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2891  11C1  1683               	bsf	3,5	;RP0=1, select bank3
  2892  11C2  1703               	bsf	3,6	;RP1=1, select bank3
  2893  11C3  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2894  11C4  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2895  11C5  3003               	movlw	3
  2896  11C6                     u3035:	
  2897  11C6  1003               	clrc
  2898  11C7  0DC2               	rlf	??_PWM_DutyCycle1^(0+384),f
  2899  11C8  3EFF               	addlw	-1
  2900  11C9  1D03               	skipz
  2901  11CA  29C6               	goto	u3035
  2902  11CB  1003               	clrc
  2903  11CC  0D42               	rlf	??_PWM_DutyCycle1^(0+384),w
  2904  11CD  380C               	iorlw	12
  2905  11CE  1283               	bcf	3,5	;RP0=0, select bank0
  2906  11CF  1303               	bcf	3,6	;RP1=0, select bank0
  2907  11D0  0097               	movwf	23	;volatile
  2908  11D1  0008               	return
  2909  11D2                     __end_of_PWM_DutyCycle1:	
  2910                           
  2911                           	psect	text11
  2912  1170                     __ptext11:	
  2913 ;; *************** function _LCD_WriteString *****************
  2914 ;; Defined at:
  2915 ;;		line 61 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\lcd.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  Str             1    wreg     PTR const unsigned char 
  2918 ;;		 -> STR_3(5), STR_2(5), STR_1(3), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  Str             1    3[BANK3 ] PTR const unsigned char 
  2921 ;;		 -> STR_3(5), STR_2(5), STR_1(3), 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;		None               void
  2924 ;; Registers used:
  2925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         0       0       0       0       0
  2932 ;;      Locals:         0       0       0       1       0
  2933 ;;      Temps:          0       0       0       1       0
  2934 ;;      Totals:         0       0       0       2       0
  2935 ;;Total ram usage:        2 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    5
  2938 ;; This function calls:
  2939 ;;		_LCD_WriteData
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _LCD_WriteString
  2947  1170                     _LCD_WriteString:	
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _LCD_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2951                           ;LCD_WriteString@Str stored from wreg
  2952  1170  1683               	bsf	3,5	;RP0=1, select bank3
  2953  1171  1703               	bsf	3,6	;RP1=1, select bank3
  2954  1172  00C3               	movwf	LCD_WriteString@Str^(0+384)
  2955  1173                     l2684:	
  2956                           ;lcd.c: 63: while(*Str != '\0')
  2957                           
  2958  1173  0843               	movf	LCD_WriteString@Str^(0+384),w
  2959  1174  0084               	movwf	4
  2960  1175  160A  118A  2000  160A  118A  	fcall	stringdir
  2961  117A  3800               	iorlw	0
  2962  117B  1903               	btfsc	3,2
  2963  117C  0008               	return
  2964                           
  2965                           ;lcd.c: 64: {
  2966                           ;lcd.c: 65: LCD_WriteData(*Str);
  2967  117D  0843               	movf	LCD_WriteString@Str^(0+384),w
  2968  117E  0084               	movwf	4
  2969  117F  160A  118A  2000  160A  118A  	fcall	stringdir
  2970  1184  160A  118A  2096  160A  118A  	fcall	_LCD_WriteData
  2971                           
  2972                           ;lcd.c: 66: Str++;
  2973  1189  3001               	movlw	1
  2974  118A  1683               	bsf	3,5	;RP0=1, select bank3
  2975  118B  1703               	bsf	3,6	;RP1=1, select bank3
  2976  118C  00C2               	movwf	??_LCD_WriteString^(0+384)
  2977  118D  0842               	movf	??_LCD_WriteString^(0+384),w
  2978  118E  07C3               	addwf	LCD_WriteString@Str^(0+384),f
  2979  118F  2973               	goto	l2684
  2980  1190                     __end_of_LCD_WriteString:	
  2981                           
  2982                           	psect	text12
  2983  1096                     __ptext12:	
  2984 ;; *************** function _LCD_WriteData *****************
  2985 ;; Defined at:
  2986 ;;		line 47 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\lcd.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  Byte            1    wreg     unsigned char 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  Byte            1    1[BANK3 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;		None               void
  2993 ;; Registers used:
  2994 ;;		wreg
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       0       0       0       0
  3001 ;;      Locals:         0       0       0       1       0
  3002 ;;      Temps:          0       0       0       1       0
  3003 ;;      Totals:         0       0       0       2       0
  3004 ;;Total ram usage:        2 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    4
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_LCD_WriteString
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _LCD_WriteData
  3016  1096                     _LCD_WriteData:	
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _LCD_WriteData: [wreg]
  3020                           ;LCD_WriteData@Byte stored from wreg
  3021  1096  1683               	bsf	3,5	;RP0=1, select bank3
  3022  1097  1703               	bsf	3,6	;RP1=1, select bank3
  3023  1098  00C1               	movwf	LCD_WriteData@Byte^(0+384)
  3024                           
  3025                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  3026  1099  1283               	bcf	3,5	;RP0=0, select bank0
  3027  109A  1303               	bcf	3,6	;RP1=0, select bank0
  3028  109B  1409               	bsf	9,0	;volatile
  3029                           
  3030                           ;lcd.c: 51: PORTD = Byte;
  3031  109C  1683               	bsf	3,5	;RP0=1, select bank3
  3032  109D  1703               	bsf	3,6	;RP1=1, select bank3
  3033  109E  0841               	movf	LCD_WriteData@Byte^(0+384),w
  3034  109F  1283               	bcf	3,5	;RP0=0, select bank0
  3035  10A0  1303               	bcf	3,6	;RP1=0, select bank0
  3036  10A1  0088               	movwf	8	;volatile
  3037                           
  3038                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  3039  10A2  1489               	bsf	9,1	;volatile
  3040                           
  3041                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3042  10A3  303D               	movlw	61
  3043  10A4  1683               	bsf	3,5	;RP0=1, select bank3
  3044  10A5  1703               	bsf	3,6	;RP1=1, select bank3
  3045  10A6  00C0               	movwf	??_LCD_WriteData^(0+384)
  3046  10A7                     u5907:	
  3047  10A7  0BC0               	decfsz	??_LCD_WriteData^(0+384),f
  3048  10A8  28A7               	goto	u5907
  3049                           
  3050                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  3051  10A9  1283               	bcf	3,5	;RP0=0, select bank0
  3052  10AA  1303               	bcf	3,6	;RP1=0, select bank0
  3053  10AB  1089               	bcf	9,1	;volatile
  3054  10AC  0008               	return
  3055  10AD                     __end_of_LCD_WriteData:	
  3056                           
  3057                           	psect	text13
  3058  0816                     __ptext13:	
  3059 ;; *************** function _LCD_Init *****************
  3060 ;; Defined at:
  3061 ;;		line 87 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\lcd.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;		None               void
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, pclath, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3075 ;;      Params:         0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0
  3077 ;;      Temps:          0       0       0       2       0
  3078 ;;      Totals:         0       0       0       2       0
  3079 ;;Total ram usage:        2 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    5
  3082 ;; This function calls:
  3083 ;;		_LCD_WriteCmd
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _LCD_Init
  3091  0816                     _LCD_Init:	
  3092                           
  3093                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  3094                           
  3095                           ;incstack = 0
  3096                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3097  0816  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0817  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0818  119F               	bcf	31,3	;volatile
  3100                           
  3101                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  3102  0819  151F               	bsf	31,2	;volatile
  3103                           
  3104                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  3105  081A  109F               	bcf	31,1	;volatile
  3106                           
  3107                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  3108  081B  101F               	bcf	31,0	;volatile
  3109                           
  3110                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  3111  081C  305A               	movlw	90
  3112  081D  1683               	bsf	3,5	;RP0=1, select bank3
  3113  081E  1703               	bsf	3,6	;RP1=1, select bank3
  3114  081F  00C3               	movwf	(??_LCD_Init^(0+384)+1)
  3115  0820  30C3               	movlw	195
  3116  0821  00C2               	movwf	??_LCD_Init^(0+384)
  3117  0822                     u5917:	
  3118  0822  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3119  0823  2822               	goto	u5917
  3120  0824  0BC3               	decfsz	(??_LCD_Init^(0+384)+1),f
  3121  0825  2822               	goto	u5917
  3122                           
  3123                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  3124  0826  3030               	movlw	48
  3125  0827  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3126                           
  3127                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  3128  082C  3018               	movlw	24
  3129  082D  1683               	bsf	3,5	;RP0=1, select bank3
  3130  082E  1703               	bsf	3,6	;RP1=1, select bank3
  3131  082F  00C3               	movwf	(??_LCD_Init^(0+384)+1)
  3132  0830  30EF               	movlw	239
  3133  0831  00C2               	movwf	??_LCD_Init^(0+384)
  3134  0832                     u5927:	
  3135  0832  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3136  0833  2832               	goto	u5927
  3137  0834  0BC3               	decfsz	(??_LCD_Init^(0+384)+1),f
  3138  0835  2832               	goto	u5927
  3139                           
  3140                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  3141  0836  3030               	movlw	48
  3142  0837  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3143                           
  3144                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  3145  083C  3099               	movlw	153
  3146  083D  1683               	bsf	3,5	;RP0=1, select bank3
  3147  083E  1703               	bsf	3,6	;RP1=1, select bank3
  3148  083F  00C2               	movwf	??_LCD_Init^(0+384)
  3149  0840                     u5937:	
  3150  0840  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3151  0841  2840               	goto	u5937
  3152                           
  3153                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  3154  0842  3030               	movlw	48
  3155  0843  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3156                           
  3157                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3158  0848  303D               	movlw	61
  3159  0849  1683               	bsf	3,5	;RP0=1, select bank3
  3160  084A  1703               	bsf	3,6	;RP1=1, select bank3
  3161  084B  00C2               	movwf	??_LCD_Init^(0+384)
  3162  084C                     u5947:	
  3163  084C  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3164  084D  284C               	goto	u5947
  3165                           
  3166                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  3167  084E  3038               	movlw	56
  3168  084F  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3169                           
  3170                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3171  0854  303D               	movlw	61
  3172  0855  1683               	bsf	3,5	;RP0=1, select bank3
  3173  0856  1703               	bsf	3,6	;RP1=1, select bank3
  3174  0857  00C2               	movwf	??_LCD_Init^(0+384)
  3175  0858                     u5957:	
  3176  0858  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3177  0859  2858               	goto	u5957
  3178                           
  3179                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  3180  085A  3001               	movlw	1
  3181  085B  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3182                           
  3183                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  3184  0860  300C               	movlw	12
  3185  0861  1683               	bsf	3,5	;RP0=1, select bank3
  3186  0862  1703               	bsf	3,6	;RP1=1, select bank3
  3187  0863  00C3               	movwf	(??_LCD_Init^(0+384)+1)
  3188  0864  30F7               	movlw	247
  3189  0865  00C2               	movwf	??_LCD_Init^(0+384)
  3190  0866                     u5967:	
  3191  0866  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3192  0867  2866               	goto	u5967
  3193  0868  0BC3               	decfsz	(??_LCD_Init^(0+384)+1),f
  3194  0869  2866               	goto	u5967
  3195                           
  3196                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  3197  086A  300C               	movlw	12
  3198  086B  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3199                           
  3200                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3201  0870  303D               	movlw	61
  3202  0871  1683               	bsf	3,5	;RP0=1, select bank3
  3203  0872  1703               	bsf	3,6	;RP1=1, select bank3
  3204  0873  00C2               	movwf	??_LCD_Init^(0+384)
  3205  0874                     u5977:	
  3206  0874  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3207  0875  2874               	goto	u5977
  3208                           
  3209                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  3210  0876  3006               	movlw	6
  3211  0877  160A  118A  207F  120A  158A  	fcall	_LCD_WriteCmd
  3212                           
  3213                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3214  087C  303D               	movlw	61
  3215  087D  1683               	bsf	3,5	;RP0=1, select bank3
  3216  087E  1703               	bsf	3,6	;RP1=1, select bank3
  3217  087F  00C2               	movwf	??_LCD_Init^(0+384)
  3218  0880                     u5987:	
  3219  0880  0BC2               	decfsz	??_LCD_Init^(0+384),f
  3220  0881  2880               	goto	u5987
  3221  0882  0008               	return
  3222  0883                     __end_of_LCD_Init:	
  3223                           
  3224                           	psect	text14
  3225  1150                     __ptext14:	
  3226 ;; *************** function _LCD_Cursor *****************
  3227 ;; Defined at:
  3228 ;;		line 10 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\lcd.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  Row             1    wreg     unsigned char 
  3231 ;;  Col             1    0[BANK3 ] unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  Row             1    2[BANK3 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       1       0
  3244 ;;      Locals:         0       0       0       1       0
  3245 ;;      Temps:          0       0       0       1       0
  3246 ;;      Totals:         0       0       0       3       0
  3247 ;;Total ram usage:        3 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    4
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _LCD_Cursor
  3259  1150                     _LCD_Cursor:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  3263                           ;LCD_Cursor@Row stored from wreg
  3264  1150  1683               	bsf	3,5	;RP0=1, select bank3
  3265  1151  1703               	bsf	3,6	;RP1=1, select bank3
  3266  1152  00C2               	movwf	LCD_Cursor@Row^(0+384)
  3267                           
  3268                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  3269  1153  1283               	bcf	3,5	;RP0=0, select bank0
  3270  1154  1303               	bcf	3,6	;RP1=0, select bank0
  3271  1155  1009               	bcf	9,0	;volatile
  3272                           
  3273                           ;lcd.c: 14: if (Row == 0)
  3274  1156  1683               	bsf	3,5	;RP0=1, select bank3
  3275  1157  1703               	bsf	3,6	;RP1=1, select bank3
  3276  1158  08C2               	movf	LCD_Cursor@Row^(0+384),f
  3277  1159  1D03               	skipz
  3278  115A  295E               	goto	l2670
  3279                           
  3280                           ;lcd.c: 15: {
  3281                           ;lcd.c: 16: PORTD = 0x80 + Col;
  3282  115B  0840               	movf	LCD_Cursor@Col^(0+384),w
  3283  115C  3E80               	addlw	128
  3284  115D  2962               	goto	L2
  3285  115E                     l2670:	
  3286                           ;lcd.c: 17: }
  3287                           
  3288                           
  3289                           ;lcd.c: 18: else
  3290                           ;lcd.c: 19: {
  3291                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  3292  115E  1683               	bsf	3,5	;RP0=1, select bank3
  3293  115F  1703               	bsf	3,6	;RP1=1, select bank3
  3294  1160  0840               	movf	LCD_Cursor@Col^(0+384),w
  3295  1161  3EC0               	addlw	192
  3296  1162                     L2:	
  3297  1162  1283               	bcf	3,5	;RP0=0, select bank0
  3298  1163  1303               	bcf	3,6	;RP1=0, select bank0
  3299  1164  0088               	movwf	8	;volatile
  3300                           
  3301                           ;lcd.c: 21: }
  3302                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  3303  1165  1489               	bsf	9,1	;volatile
  3304                           
  3305                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3306  1166  303D               	movlw	61
  3307  1167  1683               	bsf	3,5	;RP0=1, select bank3
  3308  1168  1703               	bsf	3,6	;RP1=1, select bank3
  3309  1169  00C1               	movwf	??_LCD_Cursor^(0+384)
  3310  116A                     u5997:	
  3311  116A  0BC1               	decfsz	??_LCD_Cursor^(0+384),f
  3312  116B  296A               	goto	u5997
  3313                           
  3314                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  3315  116C  1283               	bcf	3,5	;RP0=0, select bank0
  3316  116D  1303               	bcf	3,6	;RP1=0, select bank0
  3317  116E  1089               	bcf	9,1	;volatile
  3318  116F  0008               	return
  3319  1170                     __end_of_LCD_Cursor:	
  3320                           
  3321                           	psect	text15
  3322  123C                     __ptext15:	
  3323 ;; *************** function _LCD_Clear *****************
  3324 ;; Defined at:
  3325 ;;		line 71 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\lcd.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;		None               void
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0, pclath, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0
  3341 ;;      Temps:          0       0       0       2       0
  3342 ;;      Totals:         0       0       0       2       0
  3343 ;;Total ram usage:        2 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    5
  3346 ;; This function calls:
  3347 ;;		_LCD_WriteCmd
  3348 ;; This function is called by:
  3349 ;;		_main
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function _LCD_Clear
  3355  123C                     _LCD_Clear:	
  3356                           
  3357                           ;lcd.c: 73: LCD_WriteCmd(0x01);
  3358                           
  3359                           ;incstack = 0
  3360                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3361  123C  3001               	movlw	1
  3362  123D  160A  118A  207F  160A  118A  	fcall	_LCD_WriteCmd
  3363                           
  3364                           ;lcd.c: 75: _delay((unsigned long)((2)*(18432000/4000.0)));
  3365  1242  300C               	movlw	12
  3366  1243  1683               	bsf	3,5	;RP0=1, select bank3
  3367  1244  1703               	bsf	3,6	;RP1=1, select bank3
  3368  1245  00C3               	movwf	(??_LCD_Clear^(0+384)+1)
  3369  1246  30F7               	movlw	247
  3370  1247  00C2               	movwf	??_LCD_Clear^(0+384)
  3371  1248                     u6007:	
  3372  1248  0BC2               	decfsz	??_LCD_Clear^(0+384),f
  3373  1249  2A48               	goto	u6007
  3374  124A  0BC3               	decfsz	(??_LCD_Clear^(0+384)+1),f
  3375  124B  2A48               	goto	u6007
  3376                           
  3377                           ;lcd.c: 77: LCD_WriteCmd(0x0C);
  3378  124C  300C               	movlw	12
  3379  124D  160A  118A  207F  160A  118A  	fcall	_LCD_WriteCmd
  3380                           
  3381                           ;lcd.c: 79: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3382  1252  303D               	movlw	61
  3383  1253  1683               	bsf	3,5	;RP0=1, select bank3
  3384  1254  1703               	bsf	3,6	;RP1=1, select bank3
  3385  1255  00C2               	movwf	??_LCD_Clear^(0+384)
  3386  1256                     u6017:	
  3387  1256  0BC2               	decfsz	??_LCD_Clear^(0+384),f
  3388  1257  2A56               	goto	u6017
  3389                           
  3390                           ;lcd.c: 81: LCD_WriteCmd(0x06);
  3391  1258  3006               	movlw	6
  3392  1259  160A  118A  207F  160A  118A  	fcall	_LCD_WriteCmd
  3393                           
  3394                           ;lcd.c: 83: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3395  125E  303D               	movlw	61
  3396  125F  1683               	bsf	3,5	;RP0=1, select bank3
  3397  1260  1703               	bsf	3,6	;RP1=1, select bank3
  3398  1261  00C2               	movwf	??_LCD_Clear^(0+384)
  3399  1262                     u6027:	
  3400  1262  0BC2               	decfsz	??_LCD_Clear^(0+384),f
  3401  1263  2A62               	goto	u6027
  3402  1264  0008               	return
  3403  1265                     __end_of_LCD_Clear:	
  3404                           
  3405                           	psect	text16
  3406  107F                     __ptext16:	
  3407 ;; *************** function _LCD_WriteCmd *****************
  3408 ;; Defined at:
  3409 ;;		line 32 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\lcd.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  Byte            1    wreg     unsigned char 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  Byte            1    1[BANK3 ] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;		None               void
  3416 ;; Registers used:
  3417 ;;		wreg
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       0       0       0       0
  3424 ;;      Locals:         0       0       0       1       0
  3425 ;;      Temps:          0       0       0       1       0
  3426 ;;      Totals:         0       0       0       2       0
  3427 ;;Total ram usage:        2 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    4
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_LCD_Clear
  3434 ;;		_LCD_Init
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function _LCD_WriteCmd
  3440  107F                     _LCD_WriteCmd:	
  3441                           
  3442                           ;incstack = 0
  3443                           ; Regs used in _LCD_WriteCmd: [wreg]
  3444                           ;LCD_WriteCmd@Byte stored from wreg
  3445  107F  1683               	bsf	3,5	;RP0=1, select bank3
  3446  1080  1703               	bsf	3,6	;RP1=1, select bank3
  3447  1081  00C1               	movwf	LCD_WriteCmd@Byte^(0+384)
  3448                           
  3449                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3450  1082  1283               	bcf	3,5	;RP0=0, select bank0
  3451  1083  1303               	bcf	3,6	;RP1=0, select bank0
  3452  1084  1009               	bcf	9,0	;volatile
  3453                           
  3454                           ;lcd.c: 36: PORTD = Byte;
  3455  1085  1683               	bsf	3,5	;RP0=1, select bank3
  3456  1086  1703               	bsf	3,6	;RP1=1, select bank3
  3457  1087  0841               	movf	LCD_WriteCmd@Byte^(0+384),w
  3458  1088  1283               	bcf	3,5	;RP0=0, select bank0
  3459  1089  1303               	bcf	3,6	;RP1=0, select bank0
  3460  108A  0088               	movwf	8	;volatile
  3461                           
  3462                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3463  108B  1489               	bsf	9,1	;volatile
  3464                           
  3465                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3466  108C  303D               	movlw	61
  3467  108D  1683               	bsf	3,5	;RP0=1, select bank3
  3468  108E  1703               	bsf	3,6	;RP1=1, select bank3
  3469  108F  00C0               	movwf	??_LCD_WriteCmd^(0+384)
  3470  1090                     u6037:	
  3471  1090  0BC0               	decfsz	??_LCD_WriteCmd^(0+384),f
  3472  1091  2890               	goto	u6037
  3473                           
  3474                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3475  1092  1283               	bcf	3,5	;RP0=0, select bank0
  3476  1093  1303               	bcf	3,6	;RP1=0, select bank0
  3477  1094  1089               	bcf	9,1	;volatile
  3478  1095  0008               	return
  3479  1096                     __end_of_LCD_WriteCmd:	
  3480                           
  3481                           	psect	text17
  3482  091C                     __ptext17:	
  3483 ;; *************** function _ISR *****************
  3484 ;; Defined at:
  3485 ;;		line 166 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  index           1   15[BANK1 ] unsigned char 
  3490 ;;  a               2   27[BANK1 ] int 
  3491 ;;  a               2   25[BANK1 ] int 
  3492 ;;  a               2   23[BANK1 ] int 
  3493 ;;  a               2   21[BANK1 ] int 
  3494 ;;  checksum        1   13[BANK1 ] unsigned char 
  3495 ;;  a               2   35[BANK1 ] int 
  3496 ;;  x               3   37[BANK1 ] float 
  3497 ;;  rule            3   32[BANK1 ] float 
  3498 ;;  total_area      3   29[BANK1 ] float 
  3499 ;;  soma            3   18[BANK1 ] float 
  3500 ;;  reajuste        3    8[BANK1 ] float 
  3501 ;;  delta           2   16[BANK1 ] int 
  3502 ;;  rpmAux          2    0[BANK1 ] int 
  3503 ;;  byte            1   14[BANK1 ] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;		None               void
  3506 ;; Registers used:
  3507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         0       0       0       0       0
  3514 ;;      Locals:         0       0      40       0       0
  3515 ;;      Temps:          0       6       0       0       0
  3516 ;;      Totals:         0       6      40       0       0
  3517 ;;Total ram usage:       46 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    3
  3520 ;; This function calls:
  3521 ;;		_USART_ReceiveChar
  3522 ;;		___awtoft
  3523 ;;		___bmul
  3524 ;;		___ftadd
  3525 ;;		___ftdiv
  3526 ;;		___ftge
  3527 ;;		___ftmul
  3528 ;;		___ftneg
  3529 ;;		___fttol
  3530 ;;		___lwdiv
  3531 ;;		___lwtoft
  3532 ;;		___wmul
  3533 ;;		_abs
  3534 ;;		_maximo
  3535 ;;		_minimo
  3536 ;;		_send
  3537 ;;		_trapmf
  3538 ;;		i1_PWM_DutyCycle2
  3539 ;;		i1_TIMER0_Set
  3540 ;;		i1_inicia
  3541 ;;		i1_res
  3542 ;;		i1_set
  3543 ;; This function is called by:
  3544 ;;		Interrupt level 1
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _ISR
  3550  091C                     _ISR:	
  3551                           
  3552                           ;main.c: 168: if (PIR1bits.RCIF) {
  3553  091C  160A  118A  1E8C   	btfss	12,5	;volatile
  3554  091F  2FAD               	goto	i1l3830
  3555                           
  3556                           ;main.c: 171: unsigned char byte = USART_ReceiveChar();
  3557  0920  160A  118A  20AD  120A  158A  	fcall	_USART_ReceiveChar
  3558  0925  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0926  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0927  00E2               	movwf	??_ISR
  3561  0928  0862               	movf	??_ISR,w
  3562  0929  1683               	bsf	3,5	;RP0=1, select bank1
  3563  092A  1303               	bcf	3,6	;RP1=0, select bank1
  3564  092B  00AE               	movwf	ISR@byte^(0+128)
  3565                           
  3566                           ;main.c: 172: if (byte == '#')
  3567  092C  082E               	movf	ISR@byte^(0+128),w
  3568  092D  3A23               	xorlw	35
  3569  092E  1D03               	skipz
  3570  092F  2933               	goto	i1l3772
  3571                           
  3572                           ;main.c: 173: {
  3573                           ;main.c: 174: receiveIndex = 0;
  3574  0930  01E0               	clrf	_receiveIndex^(0+128)
  3575  0931  01E1               	clrf	(_receiveIndex+1)^(0+128)
  3576                           
  3577                           ;main.c: 175: } else {
  3578  0932  2939               	goto	i1l3774
  3579  0933                     i1l3772:	
  3580                           
  3581                           ;main.c: 176: receiveIndex++;
  3582  0933  3001               	movlw	1
  3583  0934  07E0               	addwf	_receiveIndex^(0+128),f
  3584  0935  1803               	skipnc
  3585  0936  0AE1               	incf	(_receiveIndex+1)^(0+128),f
  3586  0937  3000               	movlw	0
  3587  0938  07E1               	addwf	(_receiveIndex+1)^(0+128),f
  3588  0939                     i1l3774:	
  3589                           
  3590                           ;main.c: 177: }
  3591                           ;main.c: 178: receivedBuffer[receiveIndex] = byte;
  3592  0939  082E               	movf	ISR@byte^(0+128),w
  3593  093A  1283               	bcf	3,5	;RP0=0, select bank0
  3594  093B  1303               	bcf	3,6	;RP1=0, select bank0
  3595  093C  00E2               	movwf	??_ISR
  3596  093D  1683               	bsf	3,5	;RP0=1, select bank1
  3597  093E  1303               	bcf	3,6	;RP1=0, select bank1
  3598  093F  0860               	movf	_receiveIndex^(0+128),w
  3599  0940  3ED1               	addlw	_receivedBuffer& (0+255)
  3600  0941  0084               	movwf	4
  3601  0942  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0943  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0944  0862               	movf	??_ISR,w
  3604  0945  1383               	bcf	3,7	;select IRP bank1
  3605  0946  0080               	movwf	0
  3606                           
  3607                           ;main.c: 180: if (receiveIndex == 6) {
  3608  0947  3006               	movlw	6
  3609  0948  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0949  1303               	bcf	3,6	;RP1=0, select bank1
  3611  094A  0660               	xorwf	_receiveIndex^(0+128),w
  3612  094B  0461               	iorwf	(_receiveIndex+1)^(0+128),w
  3613  094C  1D03               	skipz
  3614  094D  2961               	goto	L13
  3615                           
  3616                           ;main.c: 181: receiveIndex = 0;
  3617  094E  01E0               	clrf	_receiveIndex^(0+128)
  3618  094F  01E1               	clrf	(_receiveIndex+1)^(0+128)
  3619                           
  3620                           ;main.c: 183: if (receivedBuffer[1] == 'A' && receivedBuffer[2] == 'A' && receivedBuffer
      +                          [3] == 'A') {
  3621  0950  0852               	movf	(_receivedBuffer^(0+128)+1),w
  3622  0951  3A41               	xorlw	65
  3623  0952  1D03               	skipz
  3624  0953  2964               	goto	i1l3788
  3625  0954  0853               	movf	(_receivedBuffer^(0+128)+2),w
  3626  0955  3A41               	xorlw	65
  3627  0956  1D03               	skipz
  3628  0957  2964               	goto	i1l3788
  3629  0958  0854               	movf	(_receivedBuffer^(0+128)+3),w
  3630  0959  3A41               	xorlw	65
  3631  095A  1D03               	skipz
  3632  095B  2964               	goto	i1l3788
  3633                           
  3634                           ;main.c: 184: send();
  3635  095C  160A  118A  253F  120A  158A  	fcall	_send
  3636  0961                     L13:	
  3637                           
  3638                           ;main.c: 185: } else {
  3639  0961  160A  118A  2FAA   	goto	i1l3828
  3640  0964                     i1l3788:	
  3641                           
  3642                           ;main.c: 186: if (receivedBuffer[0] == '#' && receivedBuffer[1] == '$' && receivedBuffer
      +                          [2] == ':') {
  3643  0964  1683               	bsf	3,5	;RP0=1, select bank1
  3644  0965  1303               	bcf	3,6	;RP1=0, select bank1
  3645  0966  0851               	movf	_receivedBuffer^(0+128),w
  3646  0967  3A23               	xorlw	35
  3647  0968  1D03               	skipz
  3648  0969  2961               	goto	L13
  3649  096A  0852               	movf	(_receivedBuffer^(0+128)+1),w
  3650  096B  3A24               	xorlw	36
  3651  096C  1D03               	skipz
  3652  096D  2961               	goto	L13
  3653  096E  0853               	movf	(_receivedBuffer^(0+128)+2),w
  3654  096F  3A3A               	xorlw	58
  3655  0970  1D03               	skipz
  3656  0971  2961               	goto	L13
  3657                           
  3658                           ;main.c: 187: unsigned char checksum = 0x00;
  3659  0972  01AD               	clrf	ISR@checksum^(0+128)
  3660                           
  3661                           ;main.c: 188: for (unsigned char index = 0; index < 6; index++) {
  3662  0973  01AF               	clrf	ISR@index^(0+128)
  3663  0974  3006               	movlw	6
  3664  0975  022F               	subwf	ISR@index^(0+128),w
  3665  0976  1803               	btfsc	3,0
  3666  0977  2990               	goto	i1l3806
  3667  0978                     i1l3800:	
  3668                           
  3669                           ;main.c: 189: checksum ^= receivedBuffer[index];
  3670  0978  082F               	movf	ISR@index^(0+128),w
  3671  0979  3ED1               	addlw	_receivedBuffer& (0+255)
  3672  097A  0084               	movwf	4
  3673  097B  1383               	bcf	3,7	;select IRP bank1
  3674  097C  0800               	movf	0,w
  3675  097D  1283               	bcf	3,5	;RP0=0, select bank0
  3676  097E  1303               	bcf	3,6	;RP1=0, select bank0
  3677  097F  00E2               	movwf	??_ISR
  3678  0980  0862               	movf	??_ISR,w
  3679  0981  1683               	bsf	3,5	;RP0=1, select bank1
  3680  0982  1303               	bcf	3,6	;RP1=0, select bank1
  3681  0983  06AD               	xorwf	ISR@checksum^(0+128),f
  3682  0984  3001               	movlw	1
  3683  0985  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0986  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0987  00E2               	movwf	??_ISR
  3686  0988  0862               	movf	??_ISR,w
  3687  0989  1683               	bsf	3,5	;RP0=1, select bank1
  3688  098A  1303               	bcf	3,6	;RP1=0, select bank1
  3689  098B  07AF               	addwf	ISR@index^(0+128),f
  3690  098C  3006               	movlw	6
  3691  098D  022F               	subwf	ISR@index^(0+128),w
  3692  098E  1C03               	skipc
  3693  098F  2978               	goto	i1l3800
  3694  0990                     i1l3806:	
  3695                           
  3696                           ;main.c: 190: }
  3697                           ;main.c: 191: if (receivedBuffer[6] == checksum) {
  3698  0990  0857               	movf	(_receivedBuffer^(0+128)+6),w
  3699  0991  062D               	xorwf	ISR@checksum^(0+128),w
  3700  0992  1D03               	skipz
  3701  0993  2961               	goto	L13
  3702                           
  3703                           ;main.c: 192: if(receivedBuffer[3] == 'M'){
  3704  0994  0854               	movf	(_receivedBuffer^(0+128)+3),w
  3705  0995  3A4D               	xorlw	77
  3706  0996  160A  118A  1D03   	skipz
  3707  0999  2F7C               	goto	i1l3812
  3708                           
  3709                           ;main.c: 193: setpoint = ((receivedBuffer[4] << 8) + (receivedBuffer[5])) * 41;
  3710  099A  0855               	movf	(_receivedBuffer^(0+128)+4),w
  3711  099B  1283               	bcf	3,5	;RP0=0, select bank0
  3712  099C  1303               	bcf	3,6	;RP1=0, select bank0
  3713  099D  00E2               	movwf	??_ISR
  3714  099E  01E3               	clrf	??_ISR+1
  3715  099F  0862               	movf	??_ISR,w
  3716  09A0  00E3               	movwf	??_ISR+1
  3717  09A1  01E2               	clrf	??_ISR
  3718  09A2  1683               	bsf	3,5	;RP0=1, select bank1
  3719  09A3  1303               	bcf	3,6	;RP1=0, select bank1
  3720  09A4  0856               	movf	(_receivedBuffer^(0+128)+5),w
  3721  09A5  1283               	bcf	3,5	;RP0=0, select bank0
  3722  09A6  1303               	bcf	3,6	;RP1=0, select bank0
  3723  09A7  0762               	addwf	??_ISR,w
  3724  09A8  00C0               	movwf	___wmul@multiplier
  3725  09A9  3000               	movlw	0
  3726  09AA  1803               	skipnc
  3727  09AB  3001               	movlw	1
  3728  09AC  0763               	addwf	??_ISR+1,w
  3729  09AD  00C1               	movwf	___wmul@multiplier+1
  3730  09AE  3029               	movlw	41
  3731  09AF  00C2               	movwf	___wmul@multiplicand
  3732  09B0  3000               	movlw	0
  3733  09B1  00C3               	movwf	___wmul@multiplicand+1
  3734  09B2  160A  118A  2217   	fcall	___wmul
  3735  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  3736  09B6  160A  118A  2F6F   	ljmp	L12
  3737                           
  3738                           	psect	intentry
  3739  0004                     __pintentry:	
  3740                           ;incstack = 0
  3741                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3742                           
  3743  0004                     interrupt_function:	
  3744  007E                     saved_w	set	btemp
  3745  0004  00FE               	movwf	btemp
  3746  0005  0E03               	swapf	3,w
  3747  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0008  00E4               	movwf	??_ISR+2
  3750  0009  0804               	movf	4,w
  3751  000A  00E5               	movwf	??_ISR+3
  3752  000B  080A               	movf	10,w
  3753  000C  00E6               	movwf	??_ISR+4
  3754  000D  087F               	movf	btemp+1,w
  3755  000E  00E7               	movwf	??_ISR+5
  3756  000F  120A  158A  291C   	ljmp	_ISR
  3757                           
  3758                           	psect	text18
  3759  131B                     __ptext18:	
  3760 ;; *************** function i1_set *****************
  3761 ;; Defined at:
  3762 ;;		line 99 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;		None               void
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0
  3778 ;;      Temps:          1       0       0       0       0
  3779 ;;      Totals:         1       0       0       0       0
  3780 ;;Total ram usage:        1 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_ISR
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           
  3790                           ;psect for function i1_set
  3791  131B                     i1_set:	
  3792                           
  3793                           ;main.c: 100: if(kmph > 40){
  3794                           
  3795                           ;incstack = 0
  3796                           ; Regs used in i1_set: [wreg+status,2+status,0]
  3797  131B  3000               	movlw	0
  3798  131C  1283               	bcf	3,5	;RP0=0, select bank0
  3799  131D  1303               	bcf	3,6	;RP1=0, select bank0
  3800  131E  026B               	subwf	_kmph+1,w
  3801  131F  3029               	movlw	41
  3802  1320  1903               	skipnz
  3803  1321  026A               	subwf	_kmph,w
  3804  1322  1C03               	skipc
  3805  1323  0008               	return
  3806                           
  3807                           ;main.c: 102: if(pilotoAtivo == 3 && setpoint > 1640){
  3808  1324  1683               	bsf	3,5	;RP0=1, select bank1
  3809  1325  1303               	bcf	3,6	;RP1=0, select bank1
  3810  1326  0864               	movf	_pilotoAtivo^(0+128),w
  3811  1327  3A03               	xorlw	3
  3812  1328  1D03               	skipz
  3813  1329  2B45               	goto	i1l2848
  3814  132A  3006               	movlw	6
  3815  132B  0266               	subwf	(_setpoint+1)^(0+128),w
  3816  132C  3069               	movlw	105
  3817  132D  1903               	skipnz
  3818  132E  0265               	subwf	_setpoint^(0+128),w
  3819  132F  1C03               	skipc
  3820  1330  2B45               	goto	i1l2848
  3821                           
  3822                           ;main.c: 104: setpoint = setpoint - 41;
  3823  1331  0865               	movf	_setpoint^(0+128),w
  3824  1332  3ED7               	addlw	215
  3825  1333  00E5               	movwf	_setpoint^(0+128)
  3826  1334  0866               	movf	(_setpoint+1)^(0+128),w
  3827  1335  1803               	skipnc
  3828  1336  3E01               	addlw	1
  3829  1337  3EFF               	addlw	255
  3830  1338  00E6               	movwf	(_setpoint+1)^(0+128)
  3831                           
  3832                           ;main.c: 105: velocidadeSetada = setpoint;
  3833  1339  0866               	movf	(_setpoint+1)^(0+128),w
  3834  133A  1283               	bcf	3,5	;RP0=0, select bank0
  3835  133B  1303               	bcf	3,6	;RP1=0, select bank0
  3836  133C  01EF               	clrf	_velocidadeSetada+1
  3837  133D  07EF               	addwf	_velocidadeSetada+1,f
  3838  133E  1683               	bsf	3,5	;RP0=1, select bank1
  3839  133F  1303               	bcf	3,6	;RP1=0, select bank1
  3840  1340  0865               	movf	_setpoint^(0+128),w
  3841  1341  1283               	bcf	3,5	;RP0=0, select bank0
  3842  1342  1303               	bcf	3,6	;RP1=0, select bank0
  3843  1343  01EE               	clrf	_velocidadeSetada
  3844  1344  07EE               	addwf	_velocidadeSetada,f
  3845  1345                     i1l2848:	
  3846                           
  3847                           ;main.c: 106: }
  3848                           ;main.c: 107: if(pilotoAtivo == 1){
  3849  1345  1683               	bsf	3,5	;RP0=1, select bank1
  3850  1346  1303               	bcf	3,6	;RP1=0, select bank1
  3851  1347  0864               	movf	_pilotoAtivo^(0+128),w
  3852  1348  3A01               	xorlw	1
  3853  1349  1D03               	skipz
  3854  134A  0008               	return
  3855                           
  3856                           ;main.c: 109: pilotoAtivo = 3;
  3857  134B  3003               	movlw	3
  3858  134C  00F0               	movwf	??i1_set
  3859  134D  0870               	movf	??i1_set,w
  3860  134E  00E4               	movwf	_pilotoAtivo^(0+128)
  3861                           
  3862                           ;main.c: 110: setpoint = velocidadeSetada;
  3863  134F  1283               	bcf	3,5	;RP0=0, select bank0
  3864  1350  1303               	bcf	3,6	;RP1=0, select bank0
  3865  1351  086F               	movf	_velocidadeSetada+1,w
  3866  1352  1683               	bsf	3,5	;RP0=1, select bank1
  3867  1353  1303               	bcf	3,6	;RP1=0, select bank1
  3868  1354  01E6               	clrf	(_setpoint+1)^(0+128)
  3869  1355  07E6               	addwf	(_setpoint+1)^(0+128),f
  3870  1356  1283               	bcf	3,5	;RP0=0, select bank0
  3871  1357  1303               	bcf	3,6	;RP1=0, select bank0
  3872  1358  086E               	movf	_velocidadeSetada,w
  3873  1359  1683               	bsf	3,5	;RP0=1, select bank1
  3874  135A  1303               	bcf	3,6	;RP1=0, select bank1
  3875  135B  01E5               	clrf	_setpoint^(0+128)
  3876  135C  07E5               	addwf	_setpoint^(0+128),f
  3877  135D  0008               	return
  3878  135E                     __end_ofi1_set:	
  3879                           
  3880                           	psect	text19
  3881  1265                     __ptext19:	
  3882 ;; *************** function i1_res *****************
  3883 ;; Defined at:
  3884 ;;		line 86 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;		None               void
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          1       0       0       0       0
  3901 ;;      Totals:         1       0       0       0       0
  3902 ;;Total ram usage:        1 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_ISR
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function i1_res
  3913  1265                     i1_res:	
  3914                           
  3915                           ;main.c: 87: if(pilotoAtivo == 3 && setpoint < 9000){
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in i1_res: [wreg+status,2+status,0]
  3919  1265  1683               	bsf	3,5	;RP0=1, select bank1
  3920  1266  1303               	bcf	3,6	;RP1=0, select bank1
  3921  1267  0864               	movf	_pilotoAtivo^(0+128),w
  3922  1268  3A03               	xorlw	3
  3923  1269  1D03               	skipz
  3924  126A  2A86               	goto	i1l2834
  3925  126B  3023               	movlw	35
  3926  126C  0266               	subwf	(_setpoint+1)^(0+128),w
  3927  126D  3028               	movlw	40
  3928  126E  1903               	skipnz
  3929  126F  0265               	subwf	_setpoint^(0+128),w
  3930  1270  1803               	skipnc
  3931  1271  2A86               	goto	i1l2834
  3932                           
  3933                           ;main.c: 89: setpoint = setpoint + 41;
  3934  1272  0865               	movf	_setpoint^(0+128),w
  3935  1273  3E29               	addlw	41
  3936  1274  00E5               	movwf	_setpoint^(0+128)
  3937  1275  0866               	movf	(_setpoint+1)^(0+128),w
  3938  1276  1803               	skipnc
  3939  1277  3E01               	addlw	1
  3940  1278  3E00               	addlw	0
  3941  1279  00E6               	movwf	(_setpoint+1)^(0+128)
  3942                           
  3943                           ;main.c: 90: velocidadeSetada = setpoint;
  3944  127A  0866               	movf	(_setpoint+1)^(0+128),w
  3945  127B  1283               	bcf	3,5	;RP0=0, select bank0
  3946  127C  1303               	bcf	3,6	;RP1=0, select bank0
  3947  127D  01EF               	clrf	_velocidadeSetada+1
  3948  127E  07EF               	addwf	_velocidadeSetada+1,f
  3949  127F  1683               	bsf	3,5	;RP0=1, select bank1
  3950  1280  1303               	bcf	3,6	;RP1=0, select bank1
  3951  1281  0865               	movf	_setpoint^(0+128),w
  3952  1282  1283               	bcf	3,5	;RP0=0, select bank0
  3953  1283  1303               	bcf	3,6	;RP1=0, select bank0
  3954  1284  01EE               	clrf	_velocidadeSetada
  3955  1285  07EE               	addwf	_velocidadeSetada,f
  3956  1286                     i1l2834:	
  3957                           
  3958                           ;main.c: 91: }
  3959                           ;main.c: 92: if(pilotoAtivo == 1){
  3960  1286  1683               	bsf	3,5	;RP0=1, select bank1
  3961  1287  1303               	bcf	3,6	;RP1=0, select bank1
  3962  1288  0864               	movf	_pilotoAtivo^(0+128),w
  3963  1289  3A01               	xorlw	1
  3964  128A  1D03               	skipz
  3965  128B  0008               	return
  3966                           
  3967                           ;main.c: 94: pilotoAtivo = 3;
  3968  128C  3003               	movlw	3
  3969  128D  00F0               	movwf	??i1_res
  3970  128E  0870               	movf	??i1_res,w
  3971  128F  00E4               	movwf	_pilotoAtivo^(0+128)
  3972                           
  3973                           ;main.c: 95: setpoint = velocidadeSetada;
  3974  1290  1283               	bcf	3,5	;RP0=0, select bank0
  3975  1291  1303               	bcf	3,6	;RP1=0, select bank0
  3976  1292  086F               	movf	_velocidadeSetada+1,w
  3977  1293  1683               	bsf	3,5	;RP0=1, select bank1
  3978  1294  1303               	bcf	3,6	;RP1=0, select bank1
  3979  1295  01E6               	clrf	(_setpoint+1)^(0+128)
  3980  1296  07E6               	addwf	(_setpoint+1)^(0+128),f
  3981  1297  1283               	bcf	3,5	;RP0=0, select bank0
  3982  1298  1303               	bcf	3,6	;RP1=0, select bank0
  3983  1299  086E               	movf	_velocidadeSetada,w
  3984  129A  1683               	bsf	3,5	;RP0=1, select bank1
  3985  129B  1303               	bcf	3,6	;RP1=0, select bank1
  3986  129C  01E5               	clrf	_setpoint^(0+128)
  3987  129D  07E5               	addwf	_setpoint^(0+128),f
  3988  129E  0008               	return
  3989  129F                     __end_ofi1_res:	
  3990                           
  3991                           	psect	text20
  3992  1058                     __ptext20:	
  3993 ;; *************** function i1_inicia *****************
  3994 ;; Defined at:
  3995 ;;		line 79 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;		None               void
  4002 ;; Registers used:
  4003 ;;		status,2
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4009 ;;      Params:         0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_ISR
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           
  4023                           ;psect for function i1_inicia
  4024  1058                     i1_inicia:	
  4025                           
  4026                           ;main.c: 80: if(pilotoAtivo & 1){
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in i1_inicia: [status,2]
  4030  1058  1683               	bsf	3,5	;RP0=1, select bank1
  4031  1059  1303               	bcf	3,6	;RP1=0, select bank1
  4032  105A  1C64               	btfss	_pilotoAtivo^(0+128),0
  4033  105B  285E               	goto	i1l101
  4034                           
  4035                           ;main.c: 81: pilotoAtivo = 0;
  4036  105C  01E4               	clrf	_pilotoAtivo^(0+128)
  4037                           
  4038                           ;main.c: 82: }else{
  4039  105D  0008               	return
  4040  105E                     i1l101:	
  4041                           
  4042                           ;main.c: 83: pilotoAtivo = 1;
  4043  105E  01E4               	clrf	_pilotoAtivo^(0+128)
  4044  105F  0AE4               	incf	_pilotoAtivo^(0+128),f
  4045  1060  0008               	return
  4046  1061                     __end_ofi1_inicia:	
  4047                           
  4048                           	psect	text21
  4049  1042                     __ptext21:	
  4050 ;; *************** function i1_TIMER0_Set *****************
  4051 ;; Defined at:
  4052 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  contagens       1    wreg     unsigned char 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  contagens       1    0[COMMON] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;		None               void
  4059 ;; Registers used:
  4060 ;;		wreg
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         1       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0
  4069 ;;      Totals:         1       0       0       0       0
  4070 ;;Total ram usage:        1 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_ISR
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function i1_TIMER0_Set
  4081  1042                     i1_TIMER0_Set:	
  4082                           
  4083                           ;incstack = 0
  4084                           ; Regs used in i1_TIMER0_Set: [wreg]
  4085                           ;i1TIMER0_Set@contagens stored from wreg
  4086  1042  00F0               	movwf	i1TIMER0_Set@contagens
  4087                           
  4088                           ;timers.c: 22: TMR0 = contagens;
  4089  1043  0870               	movf	i1TIMER0_Set@contagens,w
  4090  1044  1283               	bcf	3,5	;RP0=0, select bank0
  4091  1045  1303               	bcf	3,6	;RP1=0, select bank0
  4092  1046  0081               	movwf	1	;volatile
  4093  1047  0008               	return
  4094  1048                     __end_ofi1_TIMER0_Set:	
  4095                           
  4096                           	psect	text22
  4097  10DD                     __ptext22:	
  4098 ;; *************** function i1_PWM_DutyCycle2 *****************
  4099 ;; Defined at:
  4100 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;  valor           2    0[COMMON] int 
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;		None               void
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4114 ;;      Params:         2       0       0       0       0
  4115 ;;      Locals:         0       0       0       0       0
  4116 ;;      Temps:          2       0       0       0       0
  4117 ;;      Totals:         4       0       0       0       0
  4118 ;;Total ram usage:        4 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_ISR
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           
  4128                           ;psect for function i1_PWM_DutyCycle2
  4129  10DD                     i1_PWM_DutyCycle2:	
  4130                           
  4131                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4135  10DD  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4136  10DE  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4137  10DF  0870               	movf	i1PWM_DutyCycle2@valor,w
  4138  10E0  00F2               	movwf	??i1_PWM_DutyCycle2
  4139  10E1  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4140  10E2  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4141  10E3  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4142  10E4  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4143  10E5  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4144  10E6  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4145  10E7  0872               	movf	??i1_PWM_DutyCycle2,w
  4146  10E8  1283               	bcf	3,5	;RP0=0, select bank0
  4147  10E9  1303               	bcf	3,6	;RP1=0, select bank0
  4148  10EA  009B               	movwf	27	;volatile
  4149                           
  4150                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4151  10EB  0870               	movf	i1PWM_DutyCycle2@valor,w
  4152  10EC  00F2               	movwf	??i1_PWM_DutyCycle2
  4153  10ED  3003               	movlw	3
  4154  10EE                     u345_25:	
  4155  10EE  1003               	clrc
  4156  10EF  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4157  10F0  3EFF               	addlw	-1
  4158  10F1  1D03               	skipz
  4159  10F2  28EE               	goto	u345_25
  4160  10F3  1003               	clrc
  4161  10F4  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4162  10F5  380C               	iorlw	12
  4163  10F6  009D               	movwf	29	;volatile
  4164  10F7  0008               	return
  4165  10F8                     __end_ofi1_PWM_DutyCycle2:	
  4166                           
  4167                           	psect	text23
  4168  0EAA                     __ptext23:	
  4169 ;; *************** function _trapmf *****************
  4170 ;; Defined at:
  4171 ;;		line 116 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  x               3   32[BANK0 ] float 
  4174 ;;  a               3   35[BANK0 ] float 
  4175 ;;  b               3   38[BANK0 ] float 
  4176 ;;  c               3   41[BANK0 ] float 
  4177 ;;  d               3   44[BANK0 ] float 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  ua              3   47[BANK0 ] float 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  3   32[BANK0 ] float 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0, pclath, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4189 ;;      Params:         0      15       0       0       0
  4190 ;;      Locals:         0       3       0       0       0
  4191 ;;      Temps:          0       0       0       0       0
  4192 ;;      Totals:         0      18       0       0       0
  4193 ;;Total ram usage:       18 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    2
  4196 ;; This function calls:
  4197 ;;		___ftadd
  4198 ;;		___ftdiv
  4199 ;;		___ftge
  4200 ;;		___ftneg
  4201 ;; This function is called by:
  4202 ;;		_ISR
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _trapmf
  4208  0EAA                     _trapmf:	
  4209                           
  4210                           ;main.c: 117: float ua = 0;
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4214  0EAA  3000               	movlw	0
  4215  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0EAD  00CF               	movwf	trapmf@ua
  4218  0EAE  3000               	movlw	0
  4219  0EAF  00D0               	movwf	trapmf@ua+1
  4220  0EB0  3000               	movlw	0
  4221  0EB1  00D1               	movwf	trapmf@ua+2
  4222                           
  4223                           ;main.c: 119: if (x <= a)
  4224  0EB2  0843               	movf	trapmf@a,w
  4225  0EB3  00F4               	movwf	___ftge@ff1
  4226  0EB4  0844               	movf	trapmf@a+1,w
  4227  0EB5  00F5               	movwf	___ftge@ff1+1
  4228  0EB6  0845               	movf	trapmf@a+2,w
  4229  0EB7  00F6               	movwf	___ftge@ff1+2
  4230  0EB8  0840               	movf	trapmf@x,w
  4231  0EB9  00F7               	movwf	___ftge@ff2
  4232  0EBA  0841               	movf	trapmf@x+1,w
  4233  0EBB  00F8               	movwf	___ftge@ff2+1
  4234  0EBC  0842               	movf	trapmf@x+2,w
  4235  0EBD  00F9               	movwf	___ftge@ff2+2
  4236  0EBE  160A  118A  23F0  120A  158A  	fcall	___ftge
  4237  0EC3  1803               	btfsc	3,0
  4238  0EC4  2FEF               	goto	L8
  4239                           
  4240                           ;main.c: 121: else if ((a < x) && (x <= b))
  4241                           
  4242                           ;main.c: 120: ua = 0;
  4243  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0EC7  0843               	movf	trapmf@a,w
  4246  0EC8  00F4               	movwf	___ftge@ff1
  4247  0EC9  0844               	movf	trapmf@a+1,w
  4248  0ECA  00F5               	movwf	___ftge@ff1+1
  4249  0ECB  0845               	movf	trapmf@a+2,w
  4250  0ECC  00F6               	movwf	___ftge@ff1+2
  4251  0ECD  0840               	movf	trapmf@x,w
  4252  0ECE  00F7               	movwf	___ftge@ff2
  4253  0ECF  0841               	movf	trapmf@x+1,w
  4254  0ED0  00F8               	movwf	___ftge@ff2+1
  4255  0ED1  0842               	movf	trapmf@x+2,w
  4256  0ED2  00F9               	movwf	___ftge@ff2+2
  4257  0ED3  160A  118A  23F0  120A  158A  	fcall	___ftge
  4258  0ED8  1803               	btfsc	3,0
  4259  0ED9  2F23               	goto	i1l3746
  4260  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4261  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0EDC  0846               	movf	trapmf@b,w
  4263  0EDD  00F4               	movwf	___ftge@ff1
  4264  0EDE  0847               	movf	trapmf@b+1,w
  4265  0EDF  00F5               	movwf	___ftge@ff1+1
  4266  0EE0  0848               	movf	trapmf@b+2,w
  4267  0EE1  00F6               	movwf	___ftge@ff1+2
  4268  0EE2  0840               	movf	trapmf@x,w
  4269  0EE3  00F7               	movwf	___ftge@ff2
  4270  0EE4  0841               	movf	trapmf@x+1,w
  4271  0EE5  00F8               	movwf	___ftge@ff2+1
  4272  0EE6  0842               	movf	trapmf@x+2,w
  4273  0EE7  00F9               	movwf	___ftge@ff2+2
  4274  0EE8  160A  118A  23F0  120A  158A  	fcall	___ftge
  4275  0EED  1C03               	btfss	3,0
  4276  0EEE  2F23               	goto	i1l3746
  4277                           
  4278                           ;main.c: 122: ua = ((x - a) / (b - a));
  4279  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  4280  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  4281  0EF1  0846               	movf	trapmf@b,w
  4282  0EF2  00A3               	movwf	___ftadd@f1
  4283  0EF3  0847               	movf	trapmf@b+1,w
  4284  0EF4  00A4               	movwf	___ftadd@f1+1
  4285  0EF5  0848               	movf	trapmf@b+2,w
  4286  0EF6  00A5               	movwf	___ftadd@f1+2
  4287  0EF7  0843               	movf	trapmf@a,w
  4288  0EF8  00A0               	movwf	___ftneg@f1
  4289  0EF9  0844               	movf	trapmf@a+1,w
  4290  0EFA  00A1               	movwf	___ftneg@f1+1
  4291  0EFB  0845               	movf	trapmf@a+2,w
  4292  0EFC  00A2               	movwf	___ftneg@f1+2
  4293  0EFD  160A  118A  206A  120A  158A  	fcall	___ftneg
  4294  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0F04  0820               	movf	?___ftneg,w
  4297  0F05  00A6               	movwf	___ftadd@f2
  4298  0F06  0821               	movf	?___ftneg+1,w
  4299  0F07  00A7               	movwf	___ftadd@f2+1
  4300  0F08  0822               	movf	?___ftneg+2,w
  4301  0F09  00A8               	movwf	___ftadd@f2+2
  4302  0F0A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  4303  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0F11  0823               	movf	?___ftadd,w
  4306  0F12  00B0               	movwf	___ftdiv@f2
  4307  0F13  0824               	movf	?___ftadd+1,w
  4308  0F14  00B1               	movwf	___ftdiv@f2+1
  4309  0F15  0825               	movf	?___ftadd+2,w
  4310  0F16  00B2               	movwf	___ftdiv@f2+2
  4311  0F17  0840               	movf	trapmf@x,w
  4312  0F18  00A3               	movwf	___ftadd@f1
  4313  0F19  0841               	movf	trapmf@x+1,w
  4314  0F1A  00A4               	movwf	___ftadd@f1+1
  4315  0F1B  0842               	movf	trapmf@x+2,w
  4316  0F1C  00A5               	movwf	___ftadd@f1+2
  4317  0F1D  0843               	movf	trapmf@a,w
  4318  0F1E  00A0               	movwf	___ftneg@f1
  4319  0F1F  0844               	movf	trapmf@a+1,w
  4320  0F20  00A1               	movwf	___ftneg@f1+1
  4321  0F21  0845               	movf	trapmf@a+2,w
  4322  0F22  2FB2               	goto	L10
  4323  0F23                     i1l3746:	
  4324                           
  4325                           ;main.c: 123: else if ((b <= x) && (x <= c))
  4326  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0F25  0840               	movf	trapmf@x,w
  4329  0F26  00F4               	movwf	___ftge@ff1
  4330  0F27  0841               	movf	trapmf@x+1,w
  4331  0F28  00F5               	movwf	___ftge@ff1+1
  4332  0F29  0842               	movf	trapmf@x+2,w
  4333  0F2A  00F6               	movwf	___ftge@ff1+2
  4334  0F2B  0846               	movf	trapmf@b,w
  4335  0F2C  00F7               	movwf	___ftge@ff2
  4336  0F2D  0847               	movf	trapmf@b+1,w
  4337  0F2E  00F8               	movwf	___ftge@ff2+1
  4338  0F2F  0848               	movf	trapmf@b+2,w
  4339  0F30  00F9               	movwf	___ftge@ff2+2
  4340  0F31  160A  118A  23F0  120A  158A  	fcall	___ftge
  4341  0F36  1C03               	btfss	3,0
  4342  0F37  2F55               	goto	i1l3752
  4343  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0F3A  0849               	movf	trapmf@c,w
  4346  0F3B  00F4               	movwf	___ftge@ff1
  4347  0F3C  084A               	movf	trapmf@c+1,w
  4348  0F3D  00F5               	movwf	___ftge@ff1+1
  4349  0F3E  084B               	movf	trapmf@c+2,w
  4350  0F3F  00F6               	movwf	___ftge@ff1+2
  4351  0F40  0840               	movf	trapmf@x,w
  4352  0F41  00F7               	movwf	___ftge@ff2
  4353  0F42  0841               	movf	trapmf@x+1,w
  4354  0F43  00F8               	movwf	___ftge@ff2+1
  4355  0F44  0842               	movf	trapmf@x+2,w
  4356  0F45  00F9               	movwf	___ftge@ff2+2
  4357  0F46  160A  118A  23F0  120A  158A  	fcall	___ftge
  4358  0F4B  1C03               	btfss	3,0
  4359  0F4C  2F55               	goto	i1l3752
  4360                           
  4361                           ;main.c: 124: ua = 1;
  4362  0F4D  3000               	movlw	0
  4363  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0F50  00CF               	movwf	trapmf@ua
  4366  0F51  3080               	movlw	128
  4367  0F52  00D0               	movwf	trapmf@ua+1
  4368  0F53  303F               	movlw	63
  4369  0F54  2FF6               	goto	L7
  4370  0F55                     i1l3752:	
  4371                           
  4372                           ;main.c: 125: else if ((c < x) && (x <= d))
  4373  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0F57  0849               	movf	trapmf@c,w
  4376  0F58  00F4               	movwf	___ftge@ff1
  4377  0F59  084A               	movf	trapmf@c+1,w
  4378  0F5A  00F5               	movwf	___ftge@ff1+1
  4379  0F5B  084B               	movf	trapmf@c+2,w
  4380  0F5C  00F6               	movwf	___ftge@ff1+2
  4381  0F5D  0840               	movf	trapmf@x,w
  4382  0F5E  00F7               	movwf	___ftge@ff2
  4383  0F5F  0841               	movf	trapmf@x+1,w
  4384  0F60  00F8               	movwf	___ftge@ff2+1
  4385  0F61  0842               	movf	trapmf@x+2,w
  4386  0F62  00F9               	movwf	___ftge@ff2+2
  4387  0F63  160A  118A  23F0  120A  158A  	fcall	___ftge
  4388  0F68  1803               	btfsc	3,0
  4389  0F69  2FDA               	goto	i1l3758
  4390  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  4391  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  4392  0F6C  084C               	movf	trapmf@d,w
  4393  0F6D  00F4               	movwf	___ftge@ff1
  4394  0F6E  084D               	movf	trapmf@d+1,w
  4395  0F6F  00F5               	movwf	___ftge@ff1+1
  4396  0F70  084E               	movf	trapmf@d+2,w
  4397  0F71  00F6               	movwf	___ftge@ff1+2
  4398  0F72  0840               	movf	trapmf@x,w
  4399  0F73  00F7               	movwf	___ftge@ff2
  4400  0F74  0841               	movf	trapmf@x+1,w
  4401  0F75  00F8               	movwf	___ftge@ff2+1
  4402  0F76  0842               	movf	trapmf@x+2,w
  4403  0F77  00F9               	movwf	___ftge@ff2+2
  4404  0F78  160A  118A  23F0  120A  158A  	fcall	___ftge
  4405  0F7D  1C03               	btfss	3,0
  4406  0F7E  2FDA               	goto	i1l3758
  4407                           
  4408                           ;main.c: 126: ua = ((d - x) / (d - c));
  4409  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0F81  084C               	movf	trapmf@d,w
  4412  0F82  00A3               	movwf	___ftadd@f1
  4413  0F83  084D               	movf	trapmf@d+1,w
  4414  0F84  00A4               	movwf	___ftadd@f1+1
  4415  0F85  084E               	movf	trapmf@d+2,w
  4416  0F86  00A5               	movwf	___ftadd@f1+2
  4417  0F87  0849               	movf	trapmf@c,w
  4418  0F88  00A0               	movwf	___ftneg@f1
  4419  0F89  084A               	movf	trapmf@c+1,w
  4420  0F8A  00A1               	movwf	___ftneg@f1+1
  4421  0F8B  084B               	movf	trapmf@c+2,w
  4422  0F8C  00A2               	movwf	___ftneg@f1+2
  4423  0F8D  160A  118A  206A  120A  158A  	fcall	___ftneg
  4424  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0F94  0820               	movf	?___ftneg,w
  4427  0F95  00A6               	movwf	___ftadd@f2
  4428  0F96  0821               	movf	?___ftneg+1,w
  4429  0F97  00A7               	movwf	___ftadd@f2+1
  4430  0F98  0822               	movf	?___ftneg+2,w
  4431  0F99  00A8               	movwf	___ftadd@f2+2
  4432  0F9A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  4433  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0FA1  0823               	movf	?___ftadd,w
  4436  0FA2  00B0               	movwf	___ftdiv@f2
  4437  0FA3  0824               	movf	?___ftadd+1,w
  4438  0FA4  00B1               	movwf	___ftdiv@f2+1
  4439  0FA5  0825               	movf	?___ftadd+2,w
  4440  0FA6  00B2               	movwf	___ftdiv@f2+2
  4441  0FA7  084C               	movf	trapmf@d,w
  4442  0FA8  00A3               	movwf	___ftadd@f1
  4443  0FA9  084D               	movf	trapmf@d+1,w
  4444  0FAA  00A4               	movwf	___ftadd@f1+1
  4445  0FAB  084E               	movf	trapmf@d+2,w
  4446  0FAC  00A5               	movwf	___ftadd@f1+2
  4447  0FAD  0840               	movf	trapmf@x,w
  4448  0FAE  00A0               	movwf	___ftneg@f1
  4449  0FAF  0841               	movf	trapmf@x+1,w
  4450  0FB0  00A1               	movwf	___ftneg@f1+1
  4451  0FB1  0842               	movf	trapmf@x+2,w
  4452  0FB2                     L10:	
  4453  0FB2  00A2               	movwf	___ftneg@f1+2
  4454  0FB3  160A  118A  206A  120A  158A  	fcall	___ftneg
  4455  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4456  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4457  0FBA  0820               	movf	?___ftneg,w
  4458  0FBB  00A6               	movwf	___ftadd@f2
  4459  0FBC  0821               	movf	?___ftneg+1,w
  4460  0FBD  00A7               	movwf	___ftadd@f2+1
  4461  0FBE  0822               	movf	?___ftneg+2,w
  4462  0FBF  00A8               	movwf	___ftadd@f2+2
  4463  0FC0  120A  158A  25A1  120A  158A  	fcall	___ftadd
  4464  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0FC7  0823               	movf	?___ftadd,w
  4467  0FC8  00B3               	movwf	___ftdiv@f1
  4468  0FC9  0824               	movf	?___ftadd+1,w
  4469  0FCA  00B4               	movwf	___ftdiv@f1+1
  4470  0FCB  0825               	movf	?___ftadd+2,w
  4471  0FCC  00B5               	movwf	___ftdiv@f1+2
  4472  0FCD  120A  158A  231F  120A  158A  	fcall	___ftdiv
  4473  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0FD4  0830               	movf	?___ftdiv,w
  4476  0FD5  00CF               	movwf	trapmf@ua
  4477  0FD6  0831               	movf	?___ftdiv+1,w
  4478  0FD7  00D0               	movwf	trapmf@ua+1
  4479  0FD8  0832               	movf	?___ftdiv+2,w
  4480  0FD9  2FF6               	goto	L7
  4481  0FDA                     i1l3758:	
  4482                           
  4483                           ;main.c: 127: else if (x > d)
  4484  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4485  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4486  0FDC  084C               	movf	trapmf@d,w
  4487  0FDD  00F4               	movwf	___ftge@ff1
  4488  0FDE  084D               	movf	trapmf@d+1,w
  4489  0FDF  00F5               	movwf	___ftge@ff1+1
  4490  0FE0  084E               	movf	trapmf@d+2,w
  4491  0FE1  00F6               	movwf	___ftge@ff1+2
  4492  0FE2  0840               	movf	trapmf@x,w
  4493  0FE3  00F7               	movwf	___ftge@ff2
  4494  0FE4  0841               	movf	trapmf@x+1,w
  4495  0FE5  00F8               	movwf	___ftge@ff2+1
  4496  0FE6  0842               	movf	trapmf@x+2,w
  4497  0FE7  00F9               	movwf	___ftge@ff2+2
  4498  0FE8  160A  118A  23F0  120A  158A  	fcall	___ftge
  4499  0FED  1803               	btfsc	3,0
  4500  0FEE  2FF7               	goto	i1l118
  4501  0FEF                     L8:	
  4502                           
  4503                           ;main.c: 128: ua = 0;
  4504  0FEF  3000               	movlw	0
  4505  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  4506  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  4507  0FF2  00CF               	movwf	trapmf@ua
  4508  0FF3  3000               	movlw	0
  4509  0FF4  00D0               	movwf	trapmf@ua+1
  4510  0FF5  3000               	movlw	0
  4511  0FF6                     L7:	
  4512  0FF6  00D1               	movwf	trapmf@ua+2
  4513  0FF7                     i1l118:	
  4514                           
  4515                           ;main.c: 130: return (ua);
  4516  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0FF9  084F               	movf	trapmf@ua,w
  4519  0FFA  00C0               	movwf	?_trapmf
  4520  0FFB  0850               	movf	trapmf@ua+1,w
  4521  0FFC  00C1               	movwf	?_trapmf+1
  4522  0FFD  0851               	movf	trapmf@ua+2,w
  4523  0FFE  00C2               	movwf	?_trapmf+2
  4524  0FFF  0008               	return
  4525  1000                     __end_of_trapmf:	
  4526                           
  4527                           	psect	text24
  4528  106A                     __ptext24:	
  4529 ;; *************** function ___ftneg *****************
  4530 ;; Defined at:
  4531 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  f1              3    0[BANK0 ] float 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  3    0[BANK0 ] float 
  4538 ;; Registers used:
  4539 ;;		wreg
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4545 ;;      Params:         0       3       0       0       0
  4546 ;;      Locals:         0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0
  4548 ;;      Totals:         0       3       0       0       0
  4549 ;;Total ram usage:        3 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_trapmf
  4555 ;;		_ISR
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           
  4560                           ;psect for function ___ftneg
  4561  106A                     ___ftneg:	
  4562                           
  4563                           ;incstack = 0
  4564                           ; Regs used in ___ftneg: [wreg]
  4565  106A  1283               	bcf	3,5	;RP0=0, select bank0
  4566  106B  1303               	bcf	3,6	;RP1=0, select bank0
  4567  106C  0822               	movf	___ftneg@f1+2,w
  4568  106D  0421               	iorwf	___ftneg@f1+1,w
  4569  106E  0420               	iorwf	___ftneg@f1,w
  4570  106F  1903               	skipnz
  4571  1070  0008               	return
  4572  1071  3080               	movlw	128
  4573  1072  06A2               	xorwf	___ftneg@f1+2,f
  4574  1073  0008               	return
  4575  1074                     __end_of___ftneg:	
  4576                           
  4577                           	psect	text25
  4578  0B1F                     __ptext25:	
  4579 ;; *************** function ___ftdiv *****************
  4580 ;; Defined at:
  4581 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  f2              3   16[BANK0 ] float 
  4584 ;;  f1              3   19[BANK0 ] float 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  f3              3   27[BANK0 ] float 
  4587 ;;  sign            1   31[BANK0 ] unsigned char 
  4588 ;;  exp             1   30[BANK0 ] unsigned char 
  4589 ;;  cntr            1   26[BANK0 ] unsigned char 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  3   16[BANK0 ] float 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0, pclath, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4599 ;;      Params:         0       6       0       0       0
  4600 ;;      Locals:         0       6       0       0       0
  4601 ;;      Temps:          0       4       0       0       0
  4602 ;;      Totals:         0      16       0       0       0
  4603 ;;Total ram usage:       16 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    1
  4606 ;; This function calls:
  4607 ;;		___ftpack
  4608 ;; This function is called by:
  4609 ;;		_trapmf
  4610 ;;		_ISR
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function ___ftdiv
  4616  0B1F                     ___ftdiv:	
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4620  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  4621  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  4622  0B21  0833               	movf	___ftdiv@f1,w
  4623  0B22  00B6               	movwf	??___ftdiv
  4624  0B23  0834               	movf	___ftdiv@f1+1,w
  4625  0B24  00B7               	movwf	??___ftdiv+1
  4626  0B25  0835               	movf	___ftdiv@f1+2,w
  4627  0B26  00B8               	movwf	??___ftdiv+2
  4628  0B27  1003               	clrc
  4629  0B28  0D37               	rlf	??___ftdiv+1,w
  4630  0B29  0D38               	rlf	??___ftdiv+2,w
  4631  0B2A  00B9               	movwf	??___ftdiv+3
  4632  0B2B  0839               	movf	??___ftdiv+3,w
  4633  0B2C  00BE               	movwf	___ftdiv@exp
  4634  0B2D  08BE               	movf	___ftdiv@exp,f
  4635  0B2E  1D03               	skipz
  4636  0B2F  2B37               	goto	i1l2324
  4637  0B30  3000               	movlw	0
  4638  0B31  00B0               	movwf	?___ftdiv
  4639  0B32  3000               	movlw	0
  4640  0B33  00B1               	movwf	?___ftdiv+1
  4641  0B34  3000               	movlw	0
  4642  0B35  00B2               	movwf	?___ftdiv+2
  4643  0B36  0008               	return
  4644  0B37                     i1l2324:	
  4645  0B37  0830               	movf	___ftdiv@f2,w
  4646  0B38  00B6               	movwf	??___ftdiv
  4647  0B39  0831               	movf	___ftdiv@f2+1,w
  4648  0B3A  00B7               	movwf	??___ftdiv+1
  4649  0B3B  0832               	movf	___ftdiv@f2+2,w
  4650  0B3C  00B8               	movwf	??___ftdiv+2
  4651  0B3D  1003               	clrc
  4652  0B3E  0D37               	rlf	??___ftdiv+1,w
  4653  0B3F  0D38               	rlf	??___ftdiv+2,w
  4654  0B40  00B9               	movwf	??___ftdiv+3
  4655  0B41  0839               	movf	??___ftdiv+3,w
  4656  0B42  00BF               	movwf	___ftdiv@sign
  4657  0B43  08BF               	movf	___ftdiv@sign,f
  4658  0B44  1D03               	skipz
  4659  0B45  2B4D               	goto	i1l2330
  4660  0B46  3000               	movlw	0
  4661  0B47  00B0               	movwf	?___ftdiv
  4662  0B48  3000               	movlw	0
  4663  0B49  00B1               	movwf	?___ftdiv+1
  4664  0B4A  3000               	movlw	0
  4665  0B4B  00B2               	movwf	?___ftdiv+2
  4666  0B4C  0008               	return
  4667  0B4D                     i1l2330:	
  4668  0B4D  3000               	movlw	0
  4669  0B4E  00BB               	movwf	___ftdiv@f3
  4670  0B4F  3000               	movlw	0
  4671  0B50  00BC               	movwf	___ftdiv@f3+1
  4672  0B51  3000               	movlw	0
  4673  0B52  00BD               	movwf	___ftdiv@f3+2
  4674  0B53  3089               	movlw	137
  4675  0B54  073F               	addwf	___ftdiv@sign,w
  4676  0B55  00B6               	movwf	??___ftdiv
  4677  0B56  0836               	movf	??___ftdiv,w
  4678  0B57  02BE               	subwf	___ftdiv@exp,f
  4679  0B58  0833               	movf	___ftdiv@f1,w
  4680  0B59  00B6               	movwf	??___ftdiv
  4681  0B5A  0834               	movf	___ftdiv@f1+1,w
  4682  0B5B  00B7               	movwf	??___ftdiv+1
  4683  0B5C  0835               	movf	___ftdiv@f1+2,w
  4684  0B5D  00B8               	movwf	??___ftdiv+2
  4685  0B5E  3010               	movlw	16
  4686  0B5F                     u260_25:	
  4687  0B5F  1003               	clrc
  4688  0B60  0CB8               	rrf	??___ftdiv+2,f
  4689  0B61  0CB7               	rrf	??___ftdiv+1,f
  4690  0B62  0CB6               	rrf	??___ftdiv,f
  4691  0B63  3EFF               	addlw	-1
  4692  0B64  1D03               	skipz
  4693  0B65  2B5F               	goto	u260_25
  4694  0B66  0836               	movf	??___ftdiv,w
  4695  0B67  00B9               	movwf	??___ftdiv+3
  4696  0B68  0839               	movf	??___ftdiv+3,w
  4697  0B69  00BF               	movwf	___ftdiv@sign
  4698  0B6A  0830               	movf	___ftdiv@f2,w
  4699  0B6B  00B6               	movwf	??___ftdiv
  4700  0B6C  0831               	movf	___ftdiv@f2+1,w
  4701  0B6D  00B7               	movwf	??___ftdiv+1
  4702  0B6E  0832               	movf	___ftdiv@f2+2,w
  4703  0B6F  00B8               	movwf	??___ftdiv+2
  4704  0B70  3010               	movlw	16
  4705  0B71                     u261_25:	
  4706  0B71  1003               	clrc
  4707  0B72  0CB8               	rrf	??___ftdiv+2,f
  4708  0B73  0CB7               	rrf	??___ftdiv+1,f
  4709  0B74  0CB6               	rrf	??___ftdiv,f
  4710  0B75  3EFF               	addlw	-1
  4711  0B76  1D03               	skipz
  4712  0B77  2B71               	goto	u261_25
  4713  0B78  0836               	movf	??___ftdiv,w
  4714  0B79  00B9               	movwf	??___ftdiv+3
  4715  0B7A  0839               	movf	??___ftdiv+3,w
  4716  0B7B  06BF               	xorwf	___ftdiv@sign,f
  4717  0B7C  3080               	movlw	128
  4718  0B7D  00B6               	movwf	??___ftdiv
  4719  0B7E  0836               	movf	??___ftdiv,w
  4720  0B7F  05BF               	andwf	___ftdiv@sign,f
  4721  0B80  17B4               	bsf	___ftdiv@f1+1,7
  4722  0B81  30FF               	movlw	255
  4723  0B82  05B3               	andwf	___ftdiv@f1,f
  4724  0B83  30FF               	movlw	255
  4725  0B84  05B4               	andwf	___ftdiv@f1+1,f
  4726  0B85  3000               	movlw	0
  4727  0B86  05B5               	andwf	___ftdiv@f1+2,f
  4728  0B87  17B1               	bsf	___ftdiv@f2+1,7
  4729  0B88  30FF               	movlw	255
  4730  0B89  05B0               	andwf	___ftdiv@f2,f
  4731  0B8A  30FF               	movlw	255
  4732  0B8B  05B1               	andwf	___ftdiv@f2+1,f
  4733  0B8C  3000               	movlw	0
  4734  0B8D  05B2               	andwf	___ftdiv@f2+2,f
  4735  0B8E  3018               	movlw	24
  4736  0B8F  00B6               	movwf	??___ftdiv
  4737  0B90  0836               	movf	??___ftdiv,w
  4738  0B91  00BA               	movwf	___ftdiv@cntr
  4739  0B92                     i1l2344:	
  4740  0B92  3001               	movlw	1
  4741  0B93                     u262_25:	
  4742  0B93  1003               	clrc
  4743  0B94  0DBB               	rlf	___ftdiv@f3,f
  4744  0B95  0DBC               	rlf	___ftdiv@f3+1,f
  4745  0B96  0DBD               	rlf	___ftdiv@f3+2,f
  4746  0B97  3EFF               	addlw	-1
  4747  0B98  1D03               	skipz
  4748  0B99  2B93               	goto	u262_25
  4749  0B9A  0832               	movf	___ftdiv@f2+2,w
  4750  0B9B  0235               	subwf	___ftdiv@f1+2,w
  4751  0B9C  1D03               	skipz
  4752  0B9D  2BA4               	goto	u263_25
  4753  0B9E  0831               	movf	___ftdiv@f2+1,w
  4754  0B9F  0234               	subwf	___ftdiv@f1+1,w
  4755  0BA0  1D03               	skipz
  4756  0BA1  2BA4               	goto	u263_25
  4757  0BA2  0830               	movf	___ftdiv@f2,w
  4758  0BA3  0233               	subwf	___ftdiv@f1,w
  4759  0BA4                     u263_25:	
  4760  0BA4  1C03               	skipc
  4761  0BA5  2BB1               	goto	i1l2352
  4762  0BA6  0830               	movf	___ftdiv@f2,w
  4763  0BA7  02B3               	subwf	___ftdiv@f1,f
  4764  0BA8  0831               	movf	___ftdiv@f2+1,w
  4765  0BA9  1C03               	skipc
  4766  0BAA  0F31               	incfsz	___ftdiv@f2+1,w
  4767  0BAB  02B4               	subwf	___ftdiv@f1+1,f
  4768  0BAC  0832               	movf	___ftdiv@f2+2,w
  4769  0BAD  1C03               	skipc
  4770  0BAE  0A32               	incf	___ftdiv@f2+2,w
  4771  0BAF  02B5               	subwf	___ftdiv@f1+2,f
  4772  0BB0  143B               	bsf	___ftdiv@f3,0
  4773  0BB1                     i1l2352:	
  4774  0BB1  3001               	movlw	1
  4775  0BB2                     u264_25:	
  4776  0BB2  1003               	clrc
  4777  0BB3  0DB3               	rlf	___ftdiv@f1,f
  4778  0BB4  0DB4               	rlf	___ftdiv@f1+1,f
  4779  0BB5  0DB5               	rlf	___ftdiv@f1+2,f
  4780  0BB6  3EFF               	addlw	-1
  4781  0BB7  1D03               	skipz
  4782  0BB8  2BB2               	goto	u264_25
  4783  0BB9  3001               	movlw	1
  4784  0BBA  02BA               	subwf	___ftdiv@cntr,f
  4785  0BBB  1D03               	btfss	3,2
  4786  0BBC  2B92               	goto	i1l2344
  4787  0BBD  083B               	movf	___ftdiv@f3,w
  4788  0BBE  00F0               	movwf	___ftpack@arg
  4789  0BBF  083C               	movf	___ftdiv@f3+1,w
  4790  0BC0  00F1               	movwf	___ftpack@arg+1
  4791  0BC1  083D               	movf	___ftdiv@f3+2,w
  4792  0BC2  00F2               	movwf	___ftpack@arg+2
  4793  0BC3  083E               	movf	___ftdiv@exp,w
  4794  0BC4  00B6               	movwf	??___ftdiv
  4795  0BC5  0836               	movf	??___ftdiv,w
  4796  0BC6  00F3               	movwf	___ftpack@exp
  4797  0BC7  083F               	movf	___ftdiv@sign,w
  4798  0BC8  00B7               	movwf	??___ftdiv+1
  4799  0BC9  0837               	movf	??___ftdiv+1,w
  4800  0BCA  00F4               	movwf	___ftpack@sign
  4801  0BCB  160A  118A  2451   	fcall	___ftpack
  4802  0BCE  0870               	movf	?___ftpack,w
  4803  0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  4804  0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  4805  0BD1  00B0               	movwf	?___ftdiv
  4806  0BD2  0871               	movf	?___ftpack+1,w
  4807  0BD3  00B1               	movwf	?___ftdiv+1
  4808  0BD4  0872               	movf	?___ftpack+2,w
  4809  0BD5  00B2               	movwf	?___ftdiv+2
  4810  0BD6  0008               	return
  4811  0BD7                     __end_of___ftdiv:	
  4812                           
  4813                           	psect	text26
  4814  0DA1                     __ptext26:	
  4815 ;; *************** function ___ftadd *****************
  4816 ;; Defined at:
  4817 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  f1              3    3[BANK0 ] float 
  4820 ;;  f2              3    6[BANK0 ] float 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  exp1            1   15[BANK0 ] unsigned char 
  4823 ;;  exp2            1   14[BANK0 ] unsigned char 
  4824 ;;  sign            1   13[BANK0 ] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  3    3[BANK0 ] float 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, pclath, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         0       6       0       0       0
  4835 ;;      Locals:         0       3       0       0       0
  4836 ;;      Temps:          0       4       0       0       0
  4837 ;;      Totals:         0      13       0       0       0
  4838 ;;Total ram usage:       13 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    1
  4841 ;; This function calls:
  4842 ;;		___ftpack
  4843 ;; This function is called by:
  4844 ;;		_trapmf
  4845 ;;		_ISR
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           
  4850                           ;psect for function ___ftadd
  4851  0DA1                     ___ftadd:	
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4855  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0DA3  0823               	movf	___ftadd@f1,w
  4858  0DA4  00A9               	movwf	??___ftadd
  4859  0DA5  0824               	movf	___ftadd@f1+1,w
  4860  0DA6  00AA               	movwf	??___ftadd+1
  4861  0DA7  0825               	movf	___ftadd@f1+2,w
  4862  0DA8  00AB               	movwf	??___ftadd+2
  4863  0DA9  1003               	clrc
  4864  0DAA  0D2A               	rlf	??___ftadd+1,w
  4865  0DAB  0D2B               	rlf	??___ftadd+2,w
  4866  0DAC  00AC               	movwf	??___ftadd+3
  4867  0DAD  082C               	movf	??___ftadd+3,w
  4868  0DAE  00AF               	movwf	___ftadd@exp1
  4869  0DAF  0826               	movf	___ftadd@f2,w
  4870  0DB0  00A9               	movwf	??___ftadd
  4871  0DB1  0827               	movf	___ftadd@f2+1,w
  4872  0DB2  00AA               	movwf	??___ftadd+1
  4873  0DB3  0828               	movf	___ftadd@f2+2,w
  4874  0DB4  00AB               	movwf	??___ftadd+2
  4875  0DB5  1003               	clrc
  4876  0DB6  0D2A               	rlf	??___ftadd+1,w
  4877  0DB7  0D2B               	rlf	??___ftadd+2,w
  4878  0DB8  00AC               	movwf	??___ftadd+3
  4879  0DB9  082C               	movf	??___ftadd+3,w
  4880  0DBA  00AE               	movwf	___ftadd@exp2
  4881  0DBB  082F               	movf	___ftadd@exp1,w
  4882  0DBC  1903               	btfsc	3,2
  4883  0DBD  2DCA               	goto	i1l3670
  4884  0DBE  082E               	movf	___ftadd@exp2,w
  4885  0DBF  022F               	subwf	___ftadd@exp1,w
  4886  0DC0  1803               	skipnc
  4887  0DC1  2DD1               	goto	i1l3674
  4888  0DC2  032F               	decf	___ftadd@exp1,w
  4889  0DC3  3AFF               	xorlw	255
  4890  0DC4  072E               	addwf	___ftadd@exp2,w
  4891  0DC5  00A9               	movwf	??___ftadd
  4892  0DC6  3019               	movlw	25
  4893  0DC7  0229               	subwf	??___ftadd,w
  4894  0DC8  1C03               	skipc
  4895  0DC9  2DD1               	goto	i1l3674
  4896  0DCA                     i1l3670:	
  4897  0DCA  0826               	movf	___ftadd@f2,w
  4898  0DCB  00A3               	movwf	?___ftadd
  4899  0DCC  0827               	movf	___ftadd@f2+1,w
  4900  0DCD  00A4               	movwf	?___ftadd+1
  4901  0DCE  0828               	movf	___ftadd@f2+2,w
  4902  0DCF  00A5               	movwf	?___ftadd+2
  4903  0DD0  0008               	return
  4904  0DD1                     i1l3674:	
  4905  0DD1  082E               	movf	___ftadd@exp2,w
  4906  0DD2  1903               	btfsc	3,2
  4907  0DD3  0008               	return
  4908  0DD4  082F               	movf	___ftadd@exp1,w
  4909  0DD5  022E               	subwf	___ftadd@exp2,w
  4910  0DD6  1803               	skipnc
  4911  0DD7  2DE0               	goto	i1l3680
  4912  0DD8  032E               	decf	___ftadd@exp2,w
  4913  0DD9  3AFF               	xorlw	255
  4914  0DDA  072F               	addwf	___ftadd@exp1,w
  4915  0DDB  00A9               	movwf	??___ftadd
  4916  0DDC  3019               	movlw	25
  4917  0DDD  0229               	subwf	??___ftadd,w
  4918  0DDE  1803               	btfsc	3,0
  4919  0DDF  0008               	return
  4920  0DE0                     i1l3680:	
  4921  0DE0  3006               	movlw	6
  4922  0DE1  00A9               	movwf	??___ftadd
  4923  0DE2  0829               	movf	??___ftadd,w
  4924  0DE3  00AD               	movwf	___ftadd@sign
  4925  0DE4  1BA5               	btfsc	___ftadd@f1+2,7
  4926  0DE5  17AD               	bsf	___ftadd@sign,7
  4927  0DE6  1BA8               	btfsc	___ftadd@f2+2,7
  4928  0DE7  172D               	bsf	___ftadd@sign,6
  4929  0DE8  17A4               	bsf	___ftadd@f1+1,7
  4930  0DE9  30FF               	movlw	255
  4931  0DEA  05A3               	andwf	___ftadd@f1,f
  4932  0DEB  30FF               	movlw	255
  4933  0DEC  05A4               	andwf	___ftadd@f1+1,f
  4934  0DED  3000               	movlw	0
  4935  0DEE  05A5               	andwf	___ftadd@f1+2,f
  4936  0DEF  17A7               	bsf	___ftadd@f2+1,7
  4937  0DF0  30FF               	movlw	255
  4938  0DF1  05A6               	andwf	___ftadd@f2,f
  4939  0DF2  30FF               	movlw	255
  4940  0DF3  05A7               	andwf	___ftadd@f2+1,f
  4941  0DF4  3000               	movlw	0
  4942  0DF5  05A8               	andwf	___ftadd@f2+2,f
  4943  0DF6  082E               	movf	___ftadd@exp2,w
  4944  0DF7  022F               	subwf	___ftadd@exp1,w
  4945  0DF8  1803               	skipnc
  4946  0DF9  2E20               	goto	i1l3702
  4947  0DFA                     i1l3692:	
  4948  0DFA  3001               	movlw	1
  4949  0DFB                     u512_25:	
  4950  0DFB  1003               	clrc
  4951  0DFC  0DA6               	rlf	___ftadd@f2,f
  4952  0DFD  0DA7               	rlf	___ftadd@f2+1,f
  4953  0DFE  0DA8               	rlf	___ftadd@f2+2,f
  4954  0DFF  3EFF               	addlw	-1
  4955  0E00  1D03               	skipz
  4956  0E01  2DFB               	goto	u512_25
  4957  0E02  3001               	movlw	1
  4958  0E03  02AE               	subwf	___ftadd@exp2,f
  4959  0E04  082E               	movf	___ftadd@exp2,w
  4960  0E05  062F               	xorwf	___ftadd@exp1,w
  4961  0E06  1903               	skipnz
  4962  0E07  2E1B               	goto	i1l3700
  4963  0E08  3001               	movlw	1
  4964  0E09  02AD               	subwf	___ftadd@sign,f
  4965  0E0A  082D               	movf	___ftadd@sign,w
  4966  0E0B  3907               	andlw	7
  4967  0E0C  1903               	btfsc	3,2
  4968  0E0D  2E1B               	goto	i1l3700
  4969  0E0E  2DFA               	goto	i1l3692
  4970  0E0F                     i1l3698:	
  4971  0E0F  3001               	movlw	1
  4972  0E10                     u515_25:	
  4973  0E10  1003               	clrc
  4974  0E11  0CA5               	rrf	___ftadd@f1+2,f
  4975  0E12  0CA4               	rrf	___ftadd@f1+1,f
  4976  0E13  0CA3               	rrf	___ftadd@f1,f
  4977  0E14  3EFF               	addlw	-1
  4978  0E15  1D03               	skipz
  4979  0E16  2E10               	goto	u515_25
  4980  0E17  3001               	movlw	1
  4981  0E18  00A9               	movwf	??___ftadd
  4982  0E19  0829               	movf	??___ftadd,w
  4983  0E1A  07AF               	addwf	___ftadd@exp1,f
  4984  0E1B                     i1l3700:	
  4985  0E1B  082F               	movf	___ftadd@exp1,w
  4986  0E1C  062E               	xorwf	___ftadd@exp2,w
  4987  0E1D  1903               	btfsc	3,2
  4988  0E1E  2E49               	goto	i1l753
  4989  0E1F  2E0F               	goto	i1l3698
  4990  0E20                     i1l3702:	
  4991  0E20  082F               	movf	___ftadd@exp1,w
  4992  0E21  022E               	subwf	___ftadd@exp2,w
  4993  0E22  1803               	skipnc
  4994  0E23  2E49               	goto	i1l753
  4995  0E24                     i1l3704:	
  4996  0E24  3001               	movlw	1
  4997  0E25                     u518_25:	
  4998  0E25  1003               	clrc
  4999  0E26  0DA3               	rlf	___ftadd@f1,f
  5000  0E27  0DA4               	rlf	___ftadd@f1+1,f
  5001  0E28  0DA5               	rlf	___ftadd@f1+2,f
  5002  0E29  3EFF               	addlw	-1
  5003  0E2A  1D03               	skipz
  5004  0E2B  2E25               	goto	u518_25
  5005  0E2C  3001               	movlw	1
  5006  0E2D  02AF               	subwf	___ftadd@exp1,f
  5007  0E2E  082E               	movf	___ftadd@exp2,w
  5008  0E2F  062F               	xorwf	___ftadd@exp1,w
  5009  0E30  1903               	skipnz
  5010  0E31  2E45               	goto	i1l3712
  5011  0E32  3001               	movlw	1
  5012  0E33  02AD               	subwf	___ftadd@sign,f
  5013  0E34  082D               	movf	___ftadd@sign,w
  5014  0E35  3907               	andlw	7
  5015  0E36  1903               	btfsc	3,2
  5016  0E37  2E45               	goto	i1l3712
  5017  0E38  2E24               	goto	i1l3704
  5018  0E39                     i1l3710:	
  5019  0E39  3001               	movlw	1
  5020  0E3A                     u521_25:	
  5021  0E3A  1003               	clrc
  5022  0E3B  0CA8               	rrf	___ftadd@f2+2,f
  5023  0E3C  0CA7               	rrf	___ftadd@f2+1,f
  5024  0E3D  0CA6               	rrf	___ftadd@f2,f
  5025  0E3E  3EFF               	addlw	-1
  5026  0E3F  1D03               	skipz
  5027  0E40  2E3A               	goto	u521_25
  5028  0E41  3001               	movlw	1
  5029  0E42  00A9               	movwf	??___ftadd
  5030  0E43  0829               	movf	??___ftadd,w
  5031  0E44  07AE               	addwf	___ftadd@exp2,f
  5032  0E45                     i1l3712:	
  5033  0E45  082F               	movf	___ftadd@exp1,w
  5034  0E46  062E               	xorwf	___ftadd@exp2,w
  5035  0E47  1D03               	skipz
  5036  0E48  2E39               	goto	i1l3710
  5037  0E49                     i1l753:	
  5038  0E49  1FAD               	btfss	___ftadd@sign,7
  5039  0E4A  2E5B               	goto	i1l3716
  5040  0E4B  30FF               	movlw	255
  5041  0E4C  06A3               	xorwf	___ftadd@f1,f
  5042  0E4D  30FF               	movlw	255
  5043  0E4E  06A4               	xorwf	___ftadd@f1+1,f
  5044  0E4F  30FF               	movlw	255
  5045  0E50  06A5               	xorwf	___ftadd@f1+2,f
  5046  0E51  3001               	movlw	1
  5047  0E52  07A3               	addwf	___ftadd@f1,f
  5048  0E53  3000               	movlw	0
  5049  0E54  1803               	skipnc
  5050  0E55  3001               	movlw	1
  5051  0E56  07A4               	addwf	___ftadd@f1+1,f
  5052  0E57  3000               	movlw	0
  5053  0E58  1803               	skipnc
  5054  0E59  3001               	movlw	1
  5055  0E5A  07A5               	addwf	___ftadd@f1+2,f
  5056  0E5B                     i1l3716:	
  5057  0E5B  1F2D               	btfss	___ftadd@sign,6
  5058  0E5C  2E6D               	goto	i1l3720
  5059  0E5D  30FF               	movlw	255
  5060  0E5E  06A6               	xorwf	___ftadd@f2,f
  5061  0E5F  30FF               	movlw	255
  5062  0E60  06A7               	xorwf	___ftadd@f2+1,f
  5063  0E61  30FF               	movlw	255
  5064  0E62  06A8               	xorwf	___ftadd@f2+2,f
  5065  0E63  3001               	movlw	1
  5066  0E64  07A6               	addwf	___ftadd@f2,f
  5067  0E65  3000               	movlw	0
  5068  0E66  1803               	skipnc
  5069  0E67  3001               	movlw	1
  5070  0E68  07A7               	addwf	___ftadd@f2+1,f
  5071  0E69  3000               	movlw	0
  5072  0E6A  1803               	skipnc
  5073  0E6B  3001               	movlw	1
  5074  0E6C  07A8               	addwf	___ftadd@f2+2,f
  5075  0E6D                     i1l3720:	
  5076  0E6D  01AD               	clrf	___ftadd@sign
  5077  0E6E  0823               	movf	___ftadd@f1,w
  5078  0E6F  07A6               	addwf	___ftadd@f2,f
  5079  0E70  0824               	movf	___ftadd@f1+1,w
  5080  0E71  1103               	clrz
  5081  0E72  1803               	skipnc
  5082  0E73  0A24               	incf	___ftadd@f1+1,w
  5083  0E74  1D03               	btfss	3,2
  5084  0E75  07A7               	addwf	___ftadd@f2+1,f
  5085  0E76  0825               	movf	___ftadd@f1+2,w
  5086  0E77  1103               	clrz
  5087  0E78  1803               	skipnc
  5088  0E79  0A25               	incf	___ftadd@f1+2,w
  5089  0E7A  1D03               	btfss	3,2
  5090  0E7B  07A8               	addwf	___ftadd@f2+2,f
  5091  0E7C  1FA8               	btfss	___ftadd@f2+2,7
  5092  0E7D  2E90               	goto	i1l3730
  5093  0E7E  30FF               	movlw	255
  5094  0E7F  06A6               	xorwf	___ftadd@f2,f
  5095  0E80  30FF               	movlw	255
  5096  0E81  06A7               	xorwf	___ftadd@f2+1,f
  5097  0E82  30FF               	movlw	255
  5098  0E83  06A8               	xorwf	___ftadd@f2+2,f
  5099  0E84  3001               	movlw	1
  5100  0E85  07A6               	addwf	___ftadd@f2,f
  5101  0E86  3000               	movlw	0
  5102  0E87  1803               	skipnc
  5103  0E88  3001               	movlw	1
  5104  0E89  07A7               	addwf	___ftadd@f2+1,f
  5105  0E8A  3000               	movlw	0
  5106  0E8B  1803               	skipnc
  5107  0E8C  3001               	movlw	1
  5108  0E8D  07A8               	addwf	___ftadd@f2+2,f
  5109  0E8E  01AD               	clrf	___ftadd@sign
  5110  0E8F  0AAD               	incf	___ftadd@sign,f
  5111  0E90                     i1l3730:	
  5112  0E90  0826               	movf	___ftadd@f2,w
  5113  0E91  00F0               	movwf	___ftpack@arg
  5114  0E92  0827               	movf	___ftadd@f2+1,w
  5115  0E93  00F1               	movwf	___ftpack@arg+1
  5116  0E94  0828               	movf	___ftadd@f2+2,w
  5117  0E95  00F2               	movwf	___ftpack@arg+2
  5118  0E96  082F               	movf	___ftadd@exp1,w
  5119  0E97  00A9               	movwf	??___ftadd
  5120  0E98  0829               	movf	??___ftadd,w
  5121  0E99  00F3               	movwf	___ftpack@exp
  5122  0E9A  082D               	movf	___ftadd@sign,w
  5123  0E9B  00AA               	movwf	??___ftadd+1
  5124  0E9C  082A               	movf	??___ftadd+1,w
  5125  0E9D  00F4               	movwf	___ftpack@sign
  5126  0E9E  160A  118A  2451   	fcall	___ftpack
  5127  0EA1  0870               	movf	?___ftpack,w
  5128  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  5129  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  5130  0EA4  00A3               	movwf	?___ftadd
  5131  0EA5  0871               	movf	?___ftpack+1,w
  5132  0EA6  00A4               	movwf	?___ftadd+1
  5133  0EA7  0872               	movf	?___ftpack+2,w
  5134  0EA8  00A5               	movwf	?___ftadd+2
  5135  0EA9  0008               	return
  5136  0EAA                     __end_of___ftadd:	
  5137                           
  5138                           	psect	text27
  5139  153F                     __ptext27:	
  5140 ;; *************** function _send *****************
  5141 ;; Defined at:
  5142 ;;		line 134 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  index           1   10[COMMON] unsigned char 
  5147 ;;  checksum        1    9[COMMON] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;		None               void
  5150 ;; Registers used:
  5151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         0       0       0       0       0
  5158 ;;      Locals:         2       0       0       0       0
  5159 ;;      Temps:          1       0       0       0       0
  5160 ;;      Totals:         3       0       0       0       0
  5161 ;;Total ram usage:        3 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    1
  5164 ;; This function calls:
  5165 ;;		_USART_WriteChar
  5166 ;;		___lwdiv
  5167 ;; This function is called by:
  5168 ;;		_ISR
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function _send
  5174  153F                     _send:	
  5175                           
  5176                           ;main.c: 138: buffer[0] = '#';
  5177                           
  5178                           ;incstack = 0
  5179                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5180  153F  3023               	movlw	35
  5181  1540  00F8               	movwf	??_send
  5182  1541  0878               	movf	??_send,w
  5183  1542  1683               	bsf	3,5	;RP0=1, select bank1
  5184  1543  1303               	bcf	3,6	;RP1=0, select bank1
  5185  1544  00C8               	movwf	_buffer^(0+128)
  5186                           
  5187                           ;main.c: 139: buffer[1] = '$';
  5188  1545  3024               	movlw	36
  5189  1546  00F8               	movwf	??_send
  5190  1547  0878               	movf	??_send,w
  5191  1548  00C9               	movwf	(_buffer^(0+128)+1)
  5192                           
  5193                           ;main.c: 140: buffer[2] = ':';
  5194  1549  303A               	movlw	58
  5195  154A  00F8               	movwf	??_send
  5196  154B  0878               	movf	??_send,w
  5197  154C  00CA               	movwf	(_buffer^(0+128)+2)
  5198                           
  5199                           ;main.c: 142: kmph = rpm/41;
  5200  154D  3029               	movlw	41
  5201  154E  00F0               	movwf	___lwdiv@divisor
  5202  154F  3000               	movlw	0
  5203  1550  00F1               	movwf	___lwdiv@divisor+1
  5204  1551  0863               	movf	(_rpm+1)^(0+128),w
  5205  1552  01F3               	clrf	___lwdiv@dividend+1
  5206  1553  07F3               	addwf	___lwdiv@dividend+1,f
  5207  1554  0862               	movf	_rpm^(0+128),w
  5208  1555  01F2               	clrf	___lwdiv@dividend
  5209  1556  07F2               	addwf	___lwdiv@dividend,f
  5210  1557  160A  118A  229F  160A  118A  	fcall	___lwdiv
  5211  155C  0871               	movf	?___lwdiv+1,w
  5212  155D  1283               	bcf	3,5	;RP0=0, select bank0
  5213  155E  1303               	bcf	3,6	;RP1=0, select bank0
  5214  155F  01EB               	clrf	_kmph+1
  5215  1560  07EB               	addwf	_kmph+1,f
  5216  1561  0870               	movf	?___lwdiv,w
  5217  1562  01EA               	clrf	_kmph
  5218  1563  07EA               	addwf	_kmph,f
  5219                           
  5220                           ;main.c: 144: buffer[3] = (kmph >> 8);
  5221  1564  086B               	movf	_kmph+1,w
  5222  1565  00F8               	movwf	??_send
  5223  1566  0878               	movf	??_send,w
  5224  1567  1683               	bsf	3,5	;RP0=1, select bank1
  5225  1568  1303               	bcf	3,6	;RP1=0, select bank1
  5226  1569  00CB               	movwf	(_buffer^(0+128)+3)
  5227                           
  5228                           ;main.c: 145: buffer[4] = kmph;
  5229  156A  1283               	bcf	3,5	;RP0=0, select bank0
  5230  156B  1303               	bcf	3,6	;RP1=0, select bank0
  5231  156C  086A               	movf	_kmph,w
  5232  156D  00F8               	movwf	??_send
  5233  156E  0878               	movf	??_send,w
  5234  156F  1683               	bsf	3,5	;RP0=1, select bank1
  5235  1570  1303               	bcf	3,6	;RP1=0, select bank1
  5236  1571  00CC               	movwf	(_buffer^(0+128)+4)
  5237                           
  5238                           ;main.c: 146: kmph = setpoint/41;
  5239  1572  3029               	movlw	41
  5240  1573  00F0               	movwf	___lwdiv@divisor
  5241  1574  3000               	movlw	0
  5242  1575  00F1               	movwf	___lwdiv@divisor+1
  5243  1576  0866               	movf	(_setpoint+1)^(0+128),w
  5244  1577  01F3               	clrf	___lwdiv@dividend+1
  5245  1578  07F3               	addwf	___lwdiv@dividend+1,f
  5246  1579  0865               	movf	_setpoint^(0+128),w
  5247  157A  01F2               	clrf	___lwdiv@dividend
  5248  157B  07F2               	addwf	___lwdiv@dividend,f
  5249  157C  160A  118A  229F  160A  118A  	fcall	___lwdiv
  5250  1581  0871               	movf	?___lwdiv+1,w
  5251  1582  1283               	bcf	3,5	;RP0=0, select bank0
  5252  1583  1303               	bcf	3,6	;RP1=0, select bank0
  5253  1584  01EB               	clrf	_kmph+1
  5254  1585  07EB               	addwf	_kmph+1,f
  5255  1586  0870               	movf	?___lwdiv,w
  5256  1587  01EA               	clrf	_kmph
  5257  1588  07EA               	addwf	_kmph,f
  5258                           
  5259                           ;main.c: 147: buffer[5] = (kmph >> 8);
  5260  1589  086B               	movf	_kmph+1,w
  5261  158A  00F8               	movwf	??_send
  5262  158B  0878               	movf	??_send,w
  5263  158C  1683               	bsf	3,5	;RP0=1, select bank1
  5264  158D  1303               	bcf	3,6	;RP1=0, select bank1
  5265  158E  00CD               	movwf	(_buffer^(0+128)+5)
  5266                           
  5267                           ;main.c: 148: buffer[6] = kmph;
  5268  158F  1283               	bcf	3,5	;RP0=0, select bank0
  5269  1590  1303               	bcf	3,6	;RP1=0, select bank0
  5270  1591  086A               	movf	_kmph,w
  5271  1592  00F8               	movwf	??_send
  5272  1593  0878               	movf	??_send,w
  5273  1594  1683               	bsf	3,5	;RP0=1, select bank1
  5274  1595  1303               	bcf	3,6	;RP1=0, select bank1
  5275  1596  00CE               	movwf	(_buffer^(0+128)+6)
  5276                           
  5277                           ;main.c: 149: buffer[7] = pilotoAtivo;
  5278  1597  0864               	movf	_pilotoAtivo^(0+128),w
  5279  1598  00F8               	movwf	??_send
  5280  1599  0878               	movf	??_send,w
  5281  159A  00CF               	movwf	(_buffer^(0+128)+7)
  5282                           
  5283                           ;main.c: 152: unsigned char checksum = 0x00;
  5284  159B  01F9               	clrf	send@checksum
  5285                           
  5286                           ;main.c: 153: for (unsigned char index = 0; index < 8; index++)
  5287  159C  01FA               	clrf	send@index
  5288  159D  3008               	movlw	8
  5289  159E  027A               	subwf	send@index,w
  5290  159F  1803               	btfsc	3,0
  5291  15A0  2DBB               	goto	i1l2520
  5292  15A1                     i1l2512:	
  5293                           
  5294                           ;main.c: 154: {
  5295                           ;main.c: 155: USART_WriteChar(buffer[index]);
  5296  15A1  087A               	movf	send@index,w
  5297  15A2  3EC8               	addlw	_buffer& (0+255)
  5298  15A3  0084               	movwf	4
  5299  15A4  1383               	bcf	3,7	;select IRP bank1
  5300  15A5  0800               	movf	0,w
  5301  15A6  160A  118A  2048  160A  118A  	fcall	_USART_WriteChar
  5302                           
  5303                           ;main.c: 156: checksum ^= buffer[index];
  5304  15AB  087A               	movf	send@index,w
  5305  15AC  3EC8               	addlw	_buffer& (0+255)
  5306  15AD  0084               	movwf	4
  5307  15AE  1383               	bcf	3,7	;select IRP bank1
  5308  15AF  0800               	movf	0,w
  5309  15B0  00F8               	movwf	??_send
  5310  15B1  0878               	movf	??_send,w
  5311  15B2  06F9               	xorwf	send@checksum,f
  5312  15B3  3001               	movlw	1
  5313  15B4  00F8               	movwf	??_send
  5314  15B5  0878               	movf	??_send,w
  5315  15B6  07FA               	addwf	send@index,f
  5316  15B7  3008               	movlw	8
  5317  15B8  027A               	subwf	send@index,w
  5318  15B9  1C03               	skipc
  5319  15BA  2DA1               	goto	i1l2512
  5320  15BB                     i1l2520:	
  5321                           
  5322                           ;main.c: 157: }
  5323                           ;main.c: 158: buffer[8] = checksum;
  5324  15BB  0879               	movf	send@checksum,w
  5325  15BC  00F8               	movwf	??_send
  5326  15BD  0878               	movf	??_send,w
  5327  15BE  1683               	bsf	3,5	;RP0=1, select bank1
  5328  15BF  1303               	bcf	3,6	;RP1=0, select bank1
  5329  15C0  00D0               	movwf	(_buffer^(0+128)+8)
  5330                           
  5331                           ;main.c: 159: USART_WriteChar(buffer[8]);
  5332  15C1  0850               	movf	(_buffer^(0+128)+8),w
  5333  15C2  160A  118A  2048   	fcall	_USART_WriteChar
  5334  15C5  0008               	return
  5335  15C6                     __end_of_send:	
  5336                           
  5337                           	psect	text28
  5338  129F                     __ptext28:	
  5339 ;; *************** function ___lwdiv *****************
  5340 ;; Defined at:
  5341 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  divisor         2    0[COMMON] unsigned int 
  5344 ;;  dividend        2    2[COMMON] unsigned int 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  quotient        2    5[COMMON] unsigned int 
  5347 ;;  counter         1    7[COMMON] unsigned char 
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  2    0[COMMON] unsigned int 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5357 ;;      Params:         4       0       0       0       0
  5358 ;;      Locals:         3       0       0       0       0
  5359 ;;      Temps:          1       0       0       0       0
  5360 ;;      Totals:         8       0       0       0       0
  5361 ;;Total ram usage:        8 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_send
  5367 ;;		_ISR
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           
  5372                           ;psect for function ___lwdiv
  5373  129F                     ___lwdiv:	
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5377  129F  01F5               	clrf	___lwdiv@quotient
  5378  12A0  01F6               	clrf	___lwdiv@quotient+1
  5379  12A1  0871               	movf	___lwdiv@divisor+1,w
  5380  12A2  0470               	iorwf	___lwdiv@divisor,w
  5381  12A3  1903               	skipnz
  5382  12A4  2AD6               	goto	i1l2410
  5383  12A5  01F7               	clrf	___lwdiv@counter
  5384  12A6  0AF7               	incf	___lwdiv@counter,f
  5385  12A7                     i1l2398:	
  5386  12A7  1BF1               	btfsc	___lwdiv@divisor+1,7
  5387  12A8  2AB5               	goto	i1l2400
  5388  12A9  3001               	movlw	1
  5389  12AA                     u273_25:	
  5390  12AA  1003               	clrc
  5391  12AB  0DF0               	rlf	___lwdiv@divisor,f
  5392  12AC  0DF1               	rlf	___lwdiv@divisor+1,f
  5393  12AD  3EFF               	addlw	-1
  5394  12AE  1D03               	skipz
  5395  12AF  2AAA               	goto	u273_25
  5396  12B0  3001               	movlw	1
  5397  12B1  00F4               	movwf	??___lwdiv
  5398  12B2  0874               	movf	??___lwdiv,w
  5399  12B3  07F7               	addwf	___lwdiv@counter,f
  5400  12B4  2AA7               	goto	i1l2398
  5401  12B5                     i1l2400:	
  5402  12B5  3001               	movlw	1
  5403  12B6                     u275_25:	
  5404  12B6  1003               	clrc
  5405  12B7  0DF5               	rlf	___lwdiv@quotient,f
  5406  12B8  0DF6               	rlf	___lwdiv@quotient+1,f
  5407  12B9  3EFF               	addlw	-1
  5408  12BA  1D03               	skipz
  5409  12BB  2AB6               	goto	u275_25
  5410  12BC  0871               	movf	___lwdiv@divisor+1,w
  5411  12BD  0273               	subwf	___lwdiv@dividend+1,w
  5412  12BE  1D03               	skipz
  5413  12BF  2AC2               	goto	u276_25
  5414  12C0  0870               	movf	___lwdiv@divisor,w
  5415  12C1  0272               	subwf	___lwdiv@dividend,w
  5416  12C2                     u276_25:	
  5417  12C2  1C03               	skipc
  5418  12C3  2ACB               	goto	i1l2406
  5419  12C4  0870               	movf	___lwdiv@divisor,w
  5420  12C5  02F2               	subwf	___lwdiv@dividend,f
  5421  12C6  0871               	movf	___lwdiv@divisor+1,w
  5422  12C7  1C03               	skipc
  5423  12C8  03F3               	decf	___lwdiv@dividend+1,f
  5424  12C9  02F3               	subwf	___lwdiv@dividend+1,f
  5425  12CA  1475               	bsf	___lwdiv@quotient,0
  5426  12CB                     i1l2406:	
  5427  12CB  3001               	movlw	1
  5428  12CC                     u277_25:	
  5429  12CC  1003               	clrc
  5430  12CD  0CF1               	rrf	___lwdiv@divisor+1,f
  5431  12CE  0CF0               	rrf	___lwdiv@divisor,f
  5432  12CF  3EFF               	addlw	-1
  5433  12D0  1D03               	skipz
  5434  12D1  2ACC               	goto	u277_25
  5435  12D2  3001               	movlw	1
  5436  12D3  02F7               	subwf	___lwdiv@counter,f
  5437  12D4  1D03               	btfss	3,2
  5438  12D5  2AB5               	goto	i1l2400
  5439  12D6                     i1l2410:	
  5440  12D6  0876               	movf	___lwdiv@quotient+1,w
  5441  12D7  01F1               	clrf	?___lwdiv+1
  5442  12D8  07F1               	addwf	?___lwdiv+1,f
  5443  12D9  0875               	movf	___lwdiv@quotient,w
  5444  12DA  01F0               	clrf	?___lwdiv
  5445  12DB  07F0               	addwf	?___lwdiv,f
  5446  12DC  0008               	return
  5447  12DD                     __end_of___lwdiv:	
  5448                           
  5449                           	psect	text29
  5450  1132                     __ptext29:	
  5451 ;; *************** function _minimo *****************
  5452 ;; Defined at:
  5453 ;;		line 25 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  a               3    6[BANK0 ] float 
  5456 ;;  b               3    9[BANK0 ] float 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  3    6[BANK0 ] float 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, pclath, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5468 ;;      Params:         0       6       0       0       0
  5469 ;;      Locals:         0       0       0       0       0
  5470 ;;      Temps:          0       0       0       0       0
  5471 ;;      Totals:         0       6       0       0       0
  5472 ;;Total ram usage:        6 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    1
  5475 ;; This function calls:
  5476 ;;		___ftge
  5477 ;; This function is called by:
  5478 ;;		_ISR
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           
  5483                           ;psect for function _minimo
  5484  1132                     _minimo:	
  5485                           
  5486                           ;main.c: 26: if (a < b) {
  5487                           
  5488                           ;incstack = 0
  5489                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5490  1132  1283               	bcf	3,5	;RP0=0, select bank0
  5491  1133  1303               	bcf	3,6	;RP1=0, select bank0
  5492  1134  0826               	movf	minimo@a,w
  5493  1135  00F4               	movwf	___ftge@ff1
  5494  1136  0827               	movf	minimo@a+1,w
  5495  1137  00F5               	movwf	___ftge@ff1+1
  5496  1138  0828               	movf	minimo@a+2,w
  5497  1139  00F6               	movwf	___ftge@ff1+2
  5498  113A  0829               	movf	minimo@b,w
  5499  113B  00F7               	movwf	___ftge@ff2
  5500  113C  082A               	movf	minimo@b+1,w
  5501  113D  00F8               	movwf	___ftge@ff2+1
  5502  113E  082B               	movf	minimo@b+2,w
  5503  113F  00F9               	movwf	___ftge@ff2+2
  5504  1140  160A  118A  23F0  160A  118A  	fcall	___ftge
  5505  1145  1C03               	btfss	3,0
  5506  1146  0008               	return
  5507                           
  5508                           ;main.c: 28: }
  5509                           ;main.c: 29: return b;
  5510                           
  5511                           ;main.c: 27: return a;
  5512  1147  1283               	bcf	3,5	;RP0=0, select bank0
  5513  1148  1303               	bcf	3,6	;RP1=0, select bank0
  5514  1149  0829               	movf	minimo@b,w
  5515  114A  00A6               	movwf	?_minimo
  5516  114B  082A               	movf	minimo@b+1,w
  5517  114C  00A7               	movwf	?_minimo+1
  5518  114D  082B               	movf	minimo@b+2,w
  5519  114E  00A8               	movwf	?_minimo+2
  5520  114F  0008               	return
  5521  1150                     __end_of_minimo:	
  5522                           
  5523                           	psect	text30
  5524  1114                     __ptext30:	
  5525 ;; *************** function _maximo *****************
  5526 ;; Defined at:
  5527 ;;		line 18 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;  a               3   12[BANK0 ] float 
  5530 ;;  b               3   15[BANK0 ] float 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;		None
  5533 ;; Return value:  Size  Location     Type
  5534 ;;                  3   12[BANK0 ] float 
  5535 ;; Registers used:
  5536 ;;		wreg, status,2, status,0, pclath, cstack
  5537 ;; Tracked objects:
  5538 ;;		On entry : 0/0
  5539 ;;		On exit  : 0/0
  5540 ;;		Unchanged: 0/0
  5541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5542 ;;      Params:         0       6       0       0       0
  5543 ;;      Locals:         0       0       0       0       0
  5544 ;;      Temps:          0       0       0       0       0
  5545 ;;      Totals:         0       6       0       0       0
  5546 ;;Total ram usage:        6 bytes
  5547 ;; Hardware stack levels used:    1
  5548 ;; Hardware stack levels required when called:    1
  5549 ;; This function calls:
  5550 ;;		___ftge
  5551 ;; This function is called by:
  5552 ;;		_ISR
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           
  5557                           ;psect for function _maximo
  5558  1114                     _maximo:	
  5559                           
  5560                           ;main.c: 19: if (a > b) {
  5561                           
  5562                           ;incstack = 0
  5563                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5564  1114  1283               	bcf	3,5	;RP0=0, select bank0
  5565  1115  1303               	bcf	3,6	;RP1=0, select bank0
  5566  1116  082F               	movf	maximo@b,w
  5567  1117  00F4               	movwf	___ftge@ff1
  5568  1118  0830               	movf	maximo@b+1,w
  5569  1119  00F5               	movwf	___ftge@ff1+1
  5570  111A  0831               	movf	maximo@b+2,w
  5571  111B  00F6               	movwf	___ftge@ff1+2
  5572  111C  082C               	movf	maximo@a,w
  5573  111D  00F7               	movwf	___ftge@ff2
  5574  111E  082D               	movf	maximo@a+1,w
  5575  111F  00F8               	movwf	___ftge@ff2+1
  5576  1120  082E               	movf	maximo@a+2,w
  5577  1121  00F9               	movwf	___ftge@ff2+2
  5578  1122  160A  118A  23F0  160A  118A  	fcall	___ftge
  5579  1127  1C03               	btfss	3,0
  5580  1128  0008               	return
  5581                           
  5582                           ;main.c: 21: }
  5583                           ;main.c: 22: return b;
  5584                           
  5585                           ;main.c: 20: return a;
  5586  1129  1283               	bcf	3,5	;RP0=0, select bank0
  5587  112A  1303               	bcf	3,6	;RP1=0, select bank0
  5588  112B  082F               	movf	maximo@b,w
  5589  112C  00AC               	movwf	?_maximo
  5590  112D  0830               	movf	maximo@b+1,w
  5591  112E  00AD               	movwf	?_maximo+1
  5592  112F  0831               	movf	maximo@b+2,w
  5593  1130  00AE               	movwf	?_maximo+2
  5594  1131  0008               	return
  5595  1132                     __end_of_maximo:	
  5596                           
  5597                           	psect	text31
  5598  13F0                     __ptext31:	
  5599 ;; *************** function ___ftge *****************
  5600 ;; Defined at:
  5601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  ff1             3    4[COMMON] float 
  5604 ;;  ff2             3    7[COMMON] float 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;		None               void
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5616 ;;      Params:         6       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0
  5618 ;;      Temps:          0       6       0       0       0
  5619 ;;      Totals:         6       6       0       0       0
  5620 ;;Total ram usage:       12 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_maximo
  5626 ;;		_minimo
  5627 ;;		_trapmf
  5628 ;;		_ISR
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function ___ftge
  5634  13F0                     ___ftge:	
  5635                           
  5636                           ;incstack = 0
  5637                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5638  13F0  1FF6               	btfss	___ftge@ff1+2,7
  5639  13F1  2C19               	goto	i1l2364
  5640  13F2  3000               	movlw	0
  5641  13F3  1283               	bcf	3,5	;RP0=0, select bank0
  5642  13F4  1303               	bcf	3,6	;RP1=0, select bank0
  5643  13F5  00A0               	movwf	??___ftge
  5644  13F6  3000               	movlw	0
  5645  13F7  00A1               	movwf	??___ftge+1
  5646  13F8  3080               	movlw	128
  5647  13F9  00A2               	movwf	??___ftge+2
  5648  13FA  0974               	comf	___ftge@ff1,w
  5649  13FB  00A3               	movwf	??___ftge+3
  5650  13FC  0975               	comf	___ftge@ff1+1,w
  5651  13FD  00A4               	movwf	??___ftge+4
  5652  13FE  0976               	comf	___ftge@ff1+2,w
  5653  13FF  00A5               	movwf	??___ftge+5
  5654  1400  0AA3               	incf	??___ftge+3,f
  5655  1401  1903               	skipnz
  5656  1402  0AA4               	incf	??___ftge+4,f
  5657  1403  1903               	skipnz
  5658  1404  0AA5               	incf	??___ftge+5,f
  5659  1405  0823               	movf	??___ftge+3,w
  5660  1406  07A0               	addwf	??___ftge,f
  5661  1407  0824               	movf	??___ftge+4,w
  5662  1408  1803               	skipnc
  5663  1409  0F24               	incfsz	??___ftge+4,w
  5664  140A  2C0C               	goto	u267_21
  5665  140B  2C0D               	goto	u267_22
  5666  140C                     u267_21:	
  5667  140C  07A1               	addwf	??___ftge+1,f
  5668  140D                     u267_22:	
  5669  140D  0825               	movf	??___ftge+5,w
  5670  140E  1803               	skipnc
  5671  140F  0F25               	incfsz	??___ftge+5,w
  5672  1410  2C12               	goto	u267_23
  5673  1411  2C13               	goto	u267_24
  5674  1412                     u267_23:	
  5675  1412  07A2               	addwf	??___ftge+2,f
  5676  1413                     u267_24:	
  5677  1413  0820               	movf	??___ftge,w
  5678  1414  00F4               	movwf	___ftge@ff1
  5679  1415  0821               	movf	??___ftge+1,w
  5680  1416  00F5               	movwf	___ftge@ff1+1
  5681  1417  0822               	movf	??___ftge+2,w
  5682  1418  00F6               	movwf	___ftge@ff1+2
  5683  1419                     i1l2364:	
  5684  1419  1FF9               	btfss	___ftge@ff2+2,7
  5685  141A  2C42               	goto	i1l2368
  5686  141B  3000               	movlw	0
  5687  141C  1283               	bcf	3,5	;RP0=0, select bank0
  5688  141D  1303               	bcf	3,6	;RP1=0, select bank0
  5689  141E  00A0               	movwf	??___ftge
  5690  141F  3000               	movlw	0
  5691  1420  00A1               	movwf	??___ftge+1
  5692  1421  3080               	movlw	128
  5693  1422  00A2               	movwf	??___ftge+2
  5694  1423  0977               	comf	___ftge@ff2,w
  5695  1424  00A3               	movwf	??___ftge+3
  5696  1425  0978               	comf	___ftge@ff2+1,w
  5697  1426  00A4               	movwf	??___ftge+4
  5698  1427  0979               	comf	___ftge@ff2+2,w
  5699  1428  00A5               	movwf	??___ftge+5
  5700  1429  0AA3               	incf	??___ftge+3,f
  5701  142A  1903               	skipnz
  5702  142B  0AA4               	incf	??___ftge+4,f
  5703  142C  1903               	skipnz
  5704  142D  0AA5               	incf	??___ftge+5,f
  5705  142E  0823               	movf	??___ftge+3,w
  5706  142F  07A0               	addwf	??___ftge,f
  5707  1430  0824               	movf	??___ftge+4,w
  5708  1431  1803               	skipnc
  5709  1432  0F24               	incfsz	??___ftge+4,w
  5710  1433  2C35               	goto	u269_21
  5711  1434  2C36               	goto	u269_22
  5712  1435                     u269_21:	
  5713  1435  07A1               	addwf	??___ftge+1,f
  5714  1436                     u269_22:	
  5715  1436  0825               	movf	??___ftge+5,w
  5716  1437  1803               	skipnc
  5717  1438  0F25               	incfsz	??___ftge+5,w
  5718  1439  2C3B               	goto	u269_23
  5719  143A  2C3C               	goto	u269_24
  5720  143B                     u269_23:	
  5721  143B  07A2               	addwf	??___ftge+2,f
  5722  143C                     u269_24:	
  5723  143C  0820               	movf	??___ftge,w
  5724  143D  00F7               	movwf	___ftge@ff2
  5725  143E  0821               	movf	??___ftge+1,w
  5726  143F  00F8               	movwf	___ftge@ff2+1
  5727  1440  0822               	movf	??___ftge+2,w
  5728  1441  00F9               	movwf	___ftge@ff2+2
  5729  1442                     i1l2368:	
  5730  1442  3080               	movlw	128
  5731  1443  06F6               	xorwf	___ftge@ff1+2,f
  5732  1444  3080               	movlw	128
  5733  1445  06F9               	xorwf	___ftge@ff2+2,f
  5734  1446  0879               	movf	___ftge@ff2+2,w
  5735  1447  0276               	subwf	___ftge@ff1+2,w
  5736  1448  1D03               	skipz
  5737  1449  0008               	return
  5738  144A  0878               	movf	___ftge@ff2+1,w
  5739  144B  0275               	subwf	___ftge@ff1+1,w
  5740  144C  1D03               	skipz
  5741  144D  0008               	return
  5742  144E  0877               	movf	___ftge@ff2,w
  5743  144F  0274               	subwf	___ftge@ff1,w
  5744  1450  0008               	return
  5745  1451                     __end_of___ftge:	
  5746                           
  5747                           	psect	text32
  5748  0808                     __ptext32:	
  5749 ;; *************** function _abs *****************
  5750 ;; Defined at:
  5751 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  a               2    0[COMMON] int 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  2    0[COMMON] int 
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5765 ;;      Params:         2       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0
  5767 ;;      Temps:          2       0       0       0       0
  5768 ;;      Totals:         4       0       0       0       0
  5769 ;;Total ram usage:        4 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_ISR
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           
  5779                           ;psect for function _abs
  5780  0808                     _abs:	
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in _abs: [wreg+status,2+status,0]
  5784  0808  1FF1               	btfss	abs@a+1,7
  5785  0809  0008               	return
  5786  080A  0970               	comf	abs@a,w
  5787  080B  00F2               	movwf	??_abs
  5788  080C  0971               	comf	abs@a+1,w
  5789  080D  00F3               	movwf	??_abs+1
  5790  080E  0AF2               	incf	??_abs,f
  5791  080F  1903               	skipnz
  5792  0810  0AF3               	incf	??_abs+1,f
  5793  0811  0872               	movf	??_abs,w
  5794  0812  00F0               	movwf	?_abs
  5795  0813  0873               	movf	??_abs+1,w
  5796  0814  00F1               	movwf	?_abs+1
  5797  0815  0008               	return
  5798  0816                     __end_of_abs:	
  5799                           
  5800                           	psect	text33
  5801  1217                     __ptext33:	
  5802 ;; *************** function ___wmul *****************
  5803 ;; Defined at:
  5804 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  multiplier      2   32[BANK0 ] unsigned int 
  5807 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  product         2   36[BANK0 ] unsigned int 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  2   32[BANK0 ] unsigned int 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         0       4       0       0       0
  5820 ;;      Locals:         0       2       0       0       0
  5821 ;;      Temps:          0       0       0       0       0
  5822 ;;      Totals:         0       6       0       0       0
  5823 ;;Total ram usage:        6 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_ISR
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function ___wmul
  5834  1217                     ___wmul:	
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5838  1217  1283               	bcf	3,5	;RP0=0, select bank0
  5839  1218  1303               	bcf	3,6	;RP1=0, select bank0
  5840  1219  01C4               	clrf	___wmul@product
  5841  121A  01C5               	clrf	___wmul@product+1
  5842  121B                     i1l2688:	
  5843  121B  1C40               	btfss	___wmul@multiplier,0
  5844  121C  2A23               	goto	i1l559
  5845  121D  0842               	movf	___wmul@multiplicand,w
  5846  121E  07C4               	addwf	___wmul@product,f
  5847  121F  1803               	skipnc
  5848  1220  0AC5               	incf	___wmul@product+1,f
  5849  1221  0843               	movf	___wmul@multiplicand+1,w
  5850  1222  07C5               	addwf	___wmul@product+1,f
  5851  1223                     i1l559:	
  5852  1223  3001               	movlw	1
  5853  1224                     u307_25:	
  5854  1224  1003               	clrc
  5855  1225  0DC2               	rlf	___wmul@multiplicand,f
  5856  1226  0DC3               	rlf	___wmul@multiplicand+1,f
  5857  1227  3EFF               	addlw	-1
  5858  1228  1D03               	skipz
  5859  1229  2A24               	goto	u307_25
  5860  122A  3001               	movlw	1
  5861  122B                     u308_25:	
  5862  122B  1003               	clrc
  5863  122C  0CC1               	rrf	___wmul@multiplier+1,f
  5864  122D  0CC0               	rrf	___wmul@multiplier,f
  5865  122E  3EFF               	addlw	-1
  5866  122F  1D03               	skipz
  5867  1230  2A2B               	goto	u308_25
  5868  1231  0841               	movf	___wmul@multiplier+1,w
  5869  1232  0440               	iorwf	___wmul@multiplier,w
  5870  1233  1D03               	skipz
  5871  1234  2A1B               	goto	i1l2688
  5872  1235  0845               	movf	___wmul@product+1,w
  5873  1236  01C1               	clrf	?___wmul+1
  5874  1237  07C1               	addwf	?___wmul+1,f
  5875  1238  0844               	movf	___wmul@product,w
  5876  1239  01C0               	clrf	?___wmul
  5877  123A  07C0               	addwf	?___wmul,f
  5878  123B  0008               	return
  5879  123C                     __end_of___wmul:	
  5880                           
  5881                           	psect	text34
  5882  10C5                     __ptext34:	
  5883 ;; *************** function ___lwtoft *****************
  5884 ;; Defined at:
  5885 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  c               2   38[BANK0 ] unsigned int 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  3   38[BANK0 ] float 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0, pclath, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5899 ;;      Params:         0       3       0       0       0
  5900 ;;      Locals:         0       0       0       0       0
  5901 ;;      Temps:          0       1       0       0       0
  5902 ;;      Totals:         0       4       0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    1
  5906 ;; This function calls:
  5907 ;;		___ftpack
  5908 ;; This function is called by:
  5909 ;;		_ISR
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function ___lwtoft
  5915  10C5                     ___lwtoft:	
  5916                           
  5917                           ;incstack = 0
  5918                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5919  10C5  1283               	bcf	3,5	;RP0=0, select bank0
  5920  10C6  1303               	bcf	3,6	;RP1=0, select bank0
  5921  10C7  0846               	movf	___lwtoft@c,w
  5922  10C8  00F0               	movwf	___ftpack@arg
  5923  10C9  0847               	movf	___lwtoft@c+1,w
  5924  10CA  00F1               	movwf	___ftpack@arg+1
  5925  10CB  01F2               	clrf	___ftpack@arg+2
  5926  10CC  308E               	movlw	142
  5927  10CD  00C9               	movwf	??___lwtoft
  5928  10CE  0849               	movf	??___lwtoft,w
  5929  10CF  00F3               	movwf	___ftpack@exp
  5930  10D0  01F4               	clrf	___ftpack@sign
  5931  10D1  160A  118A  2451   	fcall	___ftpack
  5932  10D4  0870               	movf	?___ftpack,w
  5933  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  5934  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  5935  10D7  00C6               	movwf	?___lwtoft
  5936  10D8  0871               	movf	?___ftpack+1,w
  5937  10D9  00C7               	movwf	?___lwtoft+1
  5938  10DA  0872               	movf	?___ftpack+2,w
  5939  10DB  00C8               	movwf	?___lwtoft+2
  5940  10DC  0008               	return
  5941  10DD                     __end_of___lwtoft:	
  5942                           
  5943                           	psect	text35
  5944  1652                     __ptext35:	
  5945 ;; *************** function ___fttol *****************
  5946 ;; Defined at:
  5947 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  f1              3   18[BANK0 ] float 
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  lval            4   27[BANK0 ] unsigned long 
  5952 ;;  exp1            1   31[BANK0 ] unsigned char 
  5953 ;;  sign1           1   26[BANK0 ] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  4   18[BANK0 ] long 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5963 ;;      Params:         0       4       0       0       0
  5964 ;;      Locals:         0       6       0       0       0
  5965 ;;      Temps:          0       4       0       0       0
  5966 ;;      Totals:         0      14       0       0       0
  5967 ;;Total ram usage:       14 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_ISR
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function ___fttol
  5978  1652                     ___fttol:	
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5982  1652  1283               	bcf	3,5	;RP0=0, select bank0
  5983  1653  1303               	bcf	3,6	;RP1=0, select bank0
  5984  1654  0832               	movf	___fttol@f1,w
  5985  1655  00B6               	movwf	??___fttol
  5986  1656  0833               	movf	___fttol@f1+1,w
  5987  1657  00B7               	movwf	??___fttol+1
  5988  1658  0834               	movf	___fttol@f1+2,w
  5989  1659  00B8               	movwf	??___fttol+2
  5990  165A  1003               	clrc
  5991  165B  0D37               	rlf	??___fttol+1,w
  5992  165C  0D38               	rlf	??___fttol+2,w
  5993  165D  00B9               	movwf	??___fttol+3
  5994  165E  0839               	movf	??___fttol+3,w
  5995  165F  00BF               	movwf	___fttol@exp1
  5996  1660  08BF               	movf	___fttol@exp1,f
  5997  1661  1D03               	skipz
  5998  1662  2E6C               	goto	i1l2782
  5999  1663  3000               	movlw	0
  6000  1664  00B5               	movwf	?___fttol+3
  6001  1665  3000               	movlw	0
  6002  1666  00B4               	movwf	?___fttol+2
  6003  1667  3000               	movlw	0
  6004  1668  00B3               	movwf	?___fttol+1
  6005  1669  3000               	movlw	0
  6006  166A  00B2               	movwf	?___fttol
  6007  166B  0008               	return
  6008  166C                     i1l2782:	
  6009  166C  0832               	movf	___fttol@f1,w
  6010  166D  00B6               	movwf	??___fttol
  6011  166E  0833               	movf	___fttol@f1+1,w
  6012  166F  00B7               	movwf	??___fttol+1
  6013  1670  0834               	movf	___fttol@f1+2,w
  6014  1671  00B8               	movwf	??___fttol+2
  6015  1672  3017               	movlw	23
  6016  1673                     u328_25:	
  6017  1673  1003               	clrc
  6018  1674  0CB8               	rrf	??___fttol+2,f
  6019  1675  0CB7               	rrf	??___fttol+1,f
  6020  1676  0CB6               	rrf	??___fttol,f
  6021  1677  3EFF               	addlw	-1
  6022  1678  1D03               	skipz
  6023  1679  2E73               	goto	u328_25
  6024  167A  0836               	movf	??___fttol,w
  6025  167B  00B9               	movwf	??___fttol+3
  6026  167C  0839               	movf	??___fttol+3,w
  6027  167D  00BA               	movwf	___fttol@sign1
  6028  167E  17B3               	bsf	___fttol@f1+1,7
  6029  167F  30FF               	movlw	255
  6030  1680  05B2               	andwf	___fttol@f1,f
  6031  1681  30FF               	movlw	255
  6032  1682  05B3               	andwf	___fttol@f1+1,f
  6033  1683  3000               	movlw	0
  6034  1684  05B4               	andwf	___fttol@f1+2,f
  6035  1685  0832               	movf	___fttol@f1,w
  6036  1686  00BB               	movwf	___fttol@lval
  6037  1687  0833               	movf	___fttol@f1+1,w
  6038  1688  00BC               	movwf	___fttol@lval+1
  6039  1689  0834               	movf	___fttol@f1+2,w
  6040  168A  00BD               	movwf	___fttol@lval+2
  6041  168B  01BE               	clrf	___fttol@lval+3
  6042  168C  308E               	movlw	142
  6043  168D  02BF               	subwf	___fttol@exp1,f
  6044  168E  1FBF               	btfss	___fttol@exp1,7
  6045  168F  2EAE               	goto	i1l2802
  6046  1690  083F               	movf	___fttol@exp1,w
  6047  1691  3A80               	xorlw	128
  6048  1692  3E8F               	addlw	143
  6049  1693  1803               	skipnc
  6050  1694  2E9E               	goto	i1l2800
  6051  1695  3000               	movlw	0
  6052  1696  00B5               	movwf	?___fttol+3
  6053  1697  3000               	movlw	0
  6054  1698  00B4               	movwf	?___fttol+2
  6055  1699  3000               	movlw	0
  6056  169A  00B3               	movwf	?___fttol+1
  6057  169B  3000               	movlw	0
  6058  169C  00B2               	movwf	?___fttol
  6059  169D  0008               	return
  6060  169E                     i1l2800:	
  6061  169E  3001               	movlw	1
  6062  169F                     u331_25:	
  6063  169F  1003               	clrc
  6064  16A0  0CBE               	rrf	___fttol@lval+3,f
  6065  16A1  0CBD               	rrf	___fttol@lval+2,f
  6066  16A2  0CBC               	rrf	___fttol@lval+1,f
  6067  16A3  0CBB               	rrf	___fttol@lval,f
  6068  16A4  3EFF               	addlw	-1
  6069  16A5  1D03               	skipz
  6070  16A6  2E9F               	goto	u331_25
  6071  16A7  3001               	movlw	1
  6072  16A8  00B6               	movwf	??___fttol
  6073  16A9  0836               	movf	??___fttol,w
  6074  16AA  07BF               	addwf	___fttol@exp1,f
  6075  16AB  1903               	btfsc	3,2
  6076  16AC  2EC9               	goto	i1l2812
  6077  16AD  2E9E               	goto	i1l2800
  6078  16AE                     i1l2802:	
  6079  16AE  3018               	movlw	24
  6080  16AF  023F               	subwf	___fttol@exp1,w
  6081  16B0  1C03               	skipc
  6082  16B1  2EC6               	goto	i1l2810
  6083  16B2  3000               	movlw	0
  6084  16B3  00B5               	movwf	?___fttol+3
  6085  16B4  3000               	movlw	0
  6086  16B5  00B4               	movwf	?___fttol+2
  6087  16B6  3000               	movlw	0
  6088  16B7  00B3               	movwf	?___fttol+1
  6089  16B8  3000               	movlw	0
  6090  16B9  00B2               	movwf	?___fttol
  6091  16BA  0008               	return
  6092  16BB                     i1l2808:	
  6093  16BB  3001               	movlw	1
  6094  16BC  00B6               	movwf	??___fttol
  6095  16BD                     u334_25:	
  6096  16BD  1003               	clrc
  6097  16BE  0DBB               	rlf	___fttol@lval,f
  6098  16BF  0DBC               	rlf	___fttol@lval+1,f
  6099  16C0  0DBD               	rlf	___fttol@lval+2,f
  6100  16C1  0DBE               	rlf	___fttol@lval+3,f
  6101  16C2  0BB6               	decfsz	??___fttol,f
  6102  16C3  2EBD               	goto	u334_25
  6103  16C4  3001               	movlw	1
  6104  16C5  02BF               	subwf	___fttol@exp1,f
  6105  16C6                     i1l2810:	
  6106  16C6  08BF               	movf	___fttol@exp1,f
  6107  16C7  1D03               	skipz
  6108  16C8  2EBB               	goto	i1l2808
  6109  16C9                     i1l2812:	
  6110  16C9  083A               	movf	___fttol@sign1,w
  6111  16CA  1903               	btfsc	3,2
  6112  16CB  2ED7               	goto	i1l2816
  6113  16CC  09BB               	comf	___fttol@lval,f
  6114  16CD  09BC               	comf	___fttol@lval+1,f
  6115  16CE  09BD               	comf	___fttol@lval+2,f
  6116  16CF  09BE               	comf	___fttol@lval+3,f
  6117  16D0  0ABB               	incf	___fttol@lval,f
  6118  16D1  1903               	skipnz
  6119  16D2  0ABC               	incf	___fttol@lval+1,f
  6120  16D3  1903               	skipnz
  6121  16D4  0ABD               	incf	___fttol@lval+2,f
  6122  16D5  1903               	skipnz
  6123  16D6  0ABE               	incf	___fttol@lval+3,f
  6124  16D7                     i1l2816:	
  6125  16D7  083E               	movf	___fttol@lval+3,w
  6126  16D8  00B5               	movwf	?___fttol+3
  6127  16D9  083D               	movf	___fttol@lval+2,w
  6128  16DA  00B4               	movwf	?___fttol+2
  6129  16DB  083C               	movf	___fttol@lval+1,w
  6130  16DC  00B3               	movwf	?___fttol+1
  6131  16DD  083B               	movf	___fttol@lval,w
  6132  16DE  00B2               	movwf	?___fttol
  6133  16DF  0008               	return
  6134  16E0                     __end_of___fttol:	
  6135                           
  6136                           	psect	text36
  6137  0BD7                     __ptext36:	
  6138 ;; *************** function ___ftmul *****************
  6139 ;; Defined at:
  6140 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  f1              3   50[BANK0 ] float 
  6143 ;;  f2              3   53[BANK0 ] float 
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  6146 ;;  sign            1   65[BANK0 ] unsigned char 
  6147 ;;  cntr            1   64[BANK0 ] unsigned char 
  6148 ;;  exp             1   60[BANK0 ] unsigned char 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  3   50[BANK0 ] float 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0, pclath, cstack
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6158 ;;      Params:         0       6       0       0       0
  6159 ;;      Locals:         0       6       0       0       0
  6160 ;;      Temps:          0       4       0       0       0
  6161 ;;      Totals:         0      16       0       0       0
  6162 ;;Total ram usage:       16 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:    1
  6165 ;; This function calls:
  6166 ;;		___ftpack
  6167 ;; This function is called by:
  6168 ;;		_ISR
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function ___ftmul
  6174  0BD7                     ___ftmul:	
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6178  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  6179  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  6180  0BD9  0852               	movf	___ftmul@f1,w
  6181  0BDA  00D8               	movwf	??___ftmul
  6182  0BDB  0853               	movf	___ftmul@f1+1,w
  6183  0BDC  00D9               	movwf	??___ftmul+1
  6184  0BDD  0854               	movf	___ftmul@f1+2,w
  6185  0BDE  00DA               	movwf	??___ftmul+2
  6186  0BDF  1003               	clrc
  6187  0BE0  0D59               	rlf	??___ftmul+1,w
  6188  0BE1  0D5A               	rlf	??___ftmul+2,w
  6189  0BE2  00DB               	movwf	??___ftmul+3
  6190  0BE3  085B               	movf	??___ftmul+3,w
  6191  0BE4  00DC               	movwf	___ftmul@exp
  6192  0BE5  08DC               	movf	___ftmul@exp,f
  6193  0BE6  1D03               	skipz
  6194  0BE7  2BEF               	goto	i1l2732
  6195  0BE8  3000               	movlw	0
  6196  0BE9  00D2               	movwf	?___ftmul
  6197  0BEA  3000               	movlw	0
  6198  0BEB  00D3               	movwf	?___ftmul+1
  6199  0BEC  3000               	movlw	0
  6200  0BED  00D4               	movwf	?___ftmul+2
  6201  0BEE  0008               	return
  6202  0BEF                     i1l2732:	
  6203  0BEF  0855               	movf	___ftmul@f2,w
  6204  0BF0  00D8               	movwf	??___ftmul
  6205  0BF1  0856               	movf	___ftmul@f2+1,w
  6206  0BF2  00D9               	movwf	??___ftmul+1
  6207  0BF3  0857               	movf	___ftmul@f2+2,w
  6208  0BF4  00DA               	movwf	??___ftmul+2
  6209  0BF5  1003               	clrc
  6210  0BF6  0D59               	rlf	??___ftmul+1,w
  6211  0BF7  0D5A               	rlf	??___ftmul+2,w
  6212  0BF8  00DB               	movwf	??___ftmul+3
  6213  0BF9  085B               	movf	??___ftmul+3,w
  6214  0BFA  00E1               	movwf	___ftmul@sign
  6215  0BFB  08E1               	movf	___ftmul@sign,f
  6216  0BFC  1D03               	skipz
  6217  0BFD  2C05               	goto	i1l2738
  6218  0BFE  3000               	movlw	0
  6219  0BFF  00D2               	movwf	?___ftmul
  6220  0C00  3000               	movlw	0
  6221  0C01  00D3               	movwf	?___ftmul+1
  6222  0C02  3000               	movlw	0
  6223  0C03  00D4               	movwf	?___ftmul+2
  6224  0C04  0008               	return
  6225  0C05                     i1l2738:	
  6226  0C05  0861               	movf	___ftmul@sign,w
  6227  0C06  3E7B               	addlw	123
  6228  0C07  00D8               	movwf	??___ftmul
  6229  0C08  0858               	movf	??___ftmul,w
  6230  0C09  07DC               	addwf	___ftmul@exp,f
  6231  0C0A  0852               	movf	___ftmul@f1,w
  6232  0C0B  00D8               	movwf	??___ftmul
  6233  0C0C  0853               	movf	___ftmul@f1+1,w
  6234  0C0D  00D9               	movwf	??___ftmul+1
  6235  0C0E  0854               	movf	___ftmul@f1+2,w
  6236  0C0F  00DA               	movwf	??___ftmul+2
  6237  0C10  3010               	movlw	16
  6238  0C11                     u315_25:	
  6239  0C11  1003               	clrc
  6240  0C12  0CDA               	rrf	??___ftmul+2,f
  6241  0C13  0CD9               	rrf	??___ftmul+1,f
  6242  0C14  0CD8               	rrf	??___ftmul,f
  6243  0C15  3EFF               	addlw	-1
  6244  0C16  1D03               	skipz
  6245  0C17  2C11               	goto	u315_25
  6246  0C18  0858               	movf	??___ftmul,w
  6247  0C19  00DB               	movwf	??___ftmul+3
  6248  0C1A  085B               	movf	??___ftmul+3,w
  6249  0C1B  00E1               	movwf	___ftmul@sign
  6250  0C1C  0855               	movf	___ftmul@f2,w
  6251  0C1D  00D8               	movwf	??___ftmul
  6252  0C1E  0856               	movf	___ftmul@f2+1,w
  6253  0C1F  00D9               	movwf	??___ftmul+1
  6254  0C20  0857               	movf	___ftmul@f2+2,w
  6255  0C21  00DA               	movwf	??___ftmul+2
  6256  0C22  3010               	movlw	16
  6257  0C23                     u316_25:	
  6258  0C23  1003               	clrc
  6259  0C24  0CDA               	rrf	??___ftmul+2,f
  6260  0C25  0CD9               	rrf	??___ftmul+1,f
  6261  0C26  0CD8               	rrf	??___ftmul,f
  6262  0C27  3EFF               	addlw	-1
  6263  0C28  1D03               	skipz
  6264  0C29  2C23               	goto	u316_25
  6265  0C2A  0858               	movf	??___ftmul,w
  6266  0C2B  00DB               	movwf	??___ftmul+3
  6267  0C2C  085B               	movf	??___ftmul+3,w
  6268  0C2D  06E1               	xorwf	___ftmul@sign,f
  6269  0C2E  3080               	movlw	128
  6270  0C2F  00D8               	movwf	??___ftmul
  6271  0C30  0858               	movf	??___ftmul,w
  6272  0C31  05E1               	andwf	___ftmul@sign,f
  6273  0C32  17D3               	bsf	___ftmul@f1+1,7
  6274  0C33  17D6               	bsf	___ftmul@f2+1,7
  6275  0C34  30FF               	movlw	255
  6276  0C35  05D5               	andwf	___ftmul@f2,f
  6277  0C36  30FF               	movlw	255
  6278  0C37  05D6               	andwf	___ftmul@f2+1,f
  6279  0C38  3000               	movlw	0
  6280  0C39  05D7               	andwf	___ftmul@f2+2,f
  6281  0C3A  3000               	movlw	0
  6282  0C3B  00DD               	movwf	___ftmul@f3_as_product
  6283  0C3C  3000               	movlw	0
  6284  0C3D  00DE               	movwf	___ftmul@f3_as_product+1
  6285  0C3E  3000               	movlw	0
  6286  0C3F  00DF               	movwf	___ftmul@f3_as_product+2
  6287  0C40  3007               	movlw	7
  6288  0C41  00D8               	movwf	??___ftmul
  6289  0C42  0858               	movf	??___ftmul,w
  6290  0C43  00E0               	movwf	___ftmul@cntr
  6291  0C44                     i1l2750:	
  6292  0C44  1C52               	btfss	___ftmul@f1,0
  6293  0C45  2C54               	goto	i1l2754
  6294  0C46  0855               	movf	___ftmul@f2,w
  6295  0C47  07DD               	addwf	___ftmul@f3_as_product,f
  6296  0C48  0856               	movf	___ftmul@f2+1,w
  6297  0C49  1103               	clrz
  6298  0C4A  1803               	skipnc
  6299  0C4B  0A56               	incf	___ftmul@f2+1,w
  6300  0C4C  1D03               	btfss	3,2
  6301  0C4D  07DE               	addwf	___ftmul@f3_as_product+1,f
  6302  0C4E  0857               	movf	___ftmul@f2+2,w
  6303  0C4F  1103               	clrz
  6304  0C50  1803               	skipnc
  6305  0C51  0A57               	incf	___ftmul@f2+2,w
  6306  0C52  1D03               	btfss	3,2
  6307  0C53  07DF               	addwf	___ftmul@f3_as_product+2,f
  6308  0C54                     i1l2754:	
  6309  0C54  3001               	movlw	1
  6310  0C55                     u319_25:	
  6311  0C55  1003               	clrc
  6312  0C56  0CD4               	rrf	___ftmul@f1+2,f
  6313  0C57  0CD3               	rrf	___ftmul@f1+1,f
  6314  0C58  0CD2               	rrf	___ftmul@f1,f
  6315  0C59  3EFF               	addlw	-1
  6316  0C5A  1D03               	skipz
  6317  0C5B  2C55               	goto	u319_25
  6318  0C5C  3001               	movlw	1
  6319  0C5D                     u320_25:	
  6320  0C5D  1003               	clrc
  6321  0C5E  0DD5               	rlf	___ftmul@f2,f
  6322  0C5F  0DD6               	rlf	___ftmul@f2+1,f
  6323  0C60  0DD7               	rlf	___ftmul@f2+2,f
  6324  0C61  3EFF               	addlw	-1
  6325  0C62  1D03               	skipz
  6326  0C63  2C5D               	goto	u320_25
  6327  0C64  3001               	movlw	1
  6328  0C65  02E0               	subwf	___ftmul@cntr,f
  6329  0C66  1D03               	btfss	3,2
  6330  0C67  2C44               	goto	i1l2750
  6331  0C68  3009               	movlw	9
  6332  0C69  00D8               	movwf	??___ftmul
  6333  0C6A  0858               	movf	??___ftmul,w
  6334  0C6B  00E0               	movwf	___ftmul@cntr
  6335  0C6C                     i1l2762:	
  6336  0C6C  1C52               	btfss	___ftmul@f1,0
  6337  0C6D  2C7C               	goto	i1l2766
  6338  0C6E  0855               	movf	___ftmul@f2,w
  6339  0C6F  07DD               	addwf	___ftmul@f3_as_product,f
  6340  0C70  0856               	movf	___ftmul@f2+1,w
  6341  0C71  1103               	clrz
  6342  0C72  1803               	skipnc
  6343  0C73  0A56               	incf	___ftmul@f2+1,w
  6344  0C74  1D03               	btfss	3,2
  6345  0C75  07DE               	addwf	___ftmul@f3_as_product+1,f
  6346  0C76  0857               	movf	___ftmul@f2+2,w
  6347  0C77  1103               	clrz
  6348  0C78  1803               	skipnc
  6349  0C79  0A57               	incf	___ftmul@f2+2,w
  6350  0C7A  1D03               	btfss	3,2
  6351  0C7B  07DF               	addwf	___ftmul@f3_as_product+2,f
  6352  0C7C                     i1l2766:	
  6353  0C7C  3001               	movlw	1
  6354  0C7D                     u324_25:	
  6355  0C7D  1003               	clrc
  6356  0C7E  0CD4               	rrf	___ftmul@f1+2,f
  6357  0C7F  0CD3               	rrf	___ftmul@f1+1,f
  6358  0C80  0CD2               	rrf	___ftmul@f1,f
  6359  0C81  3EFF               	addlw	-1
  6360  0C82  1D03               	skipz
  6361  0C83  2C7D               	goto	u324_25
  6362  0C84  3001               	movlw	1
  6363  0C85                     u325_25:	
  6364  0C85  1003               	clrc
  6365  0C86  0CDF               	rrf	___ftmul@f3_as_product+2,f
  6366  0C87  0CDE               	rrf	___ftmul@f3_as_product+1,f
  6367  0C88  0CDD               	rrf	___ftmul@f3_as_product,f
  6368  0C89  3EFF               	addlw	-1
  6369  0C8A  1D03               	skipz
  6370  0C8B  2C85               	goto	u325_25
  6371  0C8C  3001               	movlw	1
  6372  0C8D  02E0               	subwf	___ftmul@cntr,f
  6373  0C8E  1D03               	btfss	3,2
  6374  0C8F  2C6C               	goto	i1l2762
  6375  0C90  085D               	movf	___ftmul@f3_as_product,w
  6376  0C91  00F0               	movwf	___ftpack@arg
  6377  0C92  085E               	movf	___ftmul@f3_as_product+1,w
  6378  0C93  00F1               	movwf	___ftpack@arg+1
  6379  0C94  085F               	movf	___ftmul@f3_as_product+2,w
  6380  0C95  00F2               	movwf	___ftpack@arg+2
  6381  0C96  085C               	movf	___ftmul@exp,w
  6382  0C97  00D8               	movwf	??___ftmul
  6383  0C98  0858               	movf	??___ftmul,w
  6384  0C99  00F3               	movwf	___ftpack@exp
  6385  0C9A  0861               	movf	___ftmul@sign,w
  6386  0C9B  00D9               	movwf	??___ftmul+1
  6387  0C9C  0859               	movf	??___ftmul+1,w
  6388  0C9D  00F4               	movwf	___ftpack@sign
  6389  0C9E  160A  118A  2451   	fcall	___ftpack
  6390  0CA1  0870               	movf	?___ftpack,w
  6391  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  6392  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  6393  0CA4  00D2               	movwf	?___ftmul
  6394  0CA5  0871               	movf	?___ftpack+1,w
  6395  0CA6  00D3               	movwf	?___ftmul+1
  6396  0CA7  0872               	movf	?___ftpack+2,w
  6397  0CA8  00D4               	movwf	?___ftmul+2
  6398  0CA9  0008               	return
  6399  0CAA                     __end_of___ftmul:	
  6400                           
  6401                           	psect	text37
  6402  07EC                     __ptext37:	
  6403 ;; *************** function ___bmul *****************
  6404 ;; Defined at:
  6405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  multiplier      1    wreg     unsigned char 
  6408 ;;  multiplicand    1    0[COMMON] unsigned char 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  multiplier      1    3[COMMON] unsigned char 
  6411 ;;  product         1    2[COMMON] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6421 ;;      Params:         1       0       0       0       0
  6422 ;;      Locals:         2       0       0       0       0
  6423 ;;      Temps:          1       0       0       0       0
  6424 ;;      Totals:         4       0       0       0       0
  6425 ;;Total ram usage:        4 bytes
  6426 ;; Hardware stack levels used:    1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_ISR
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           
  6435                           ;psect for function ___bmul
  6436  07EC                     ___bmul:	
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6440                           ;___bmul@multiplier stored from wreg
  6441  07EC  00F3               	movwf	___bmul@multiplier
  6442  07ED  01F2               	clrf	___bmul@product
  6443  07EE                     i1l2700:	
  6444  07EE  1C73               	btfss	___bmul@multiplier,0
  6445  07EF  2FF4               	goto	i1l2704
  6446  07F0  0870               	movf	___bmul@multiplicand,w
  6447  07F1  00F1               	movwf	??___bmul
  6448  07F2  0871               	movf	??___bmul,w
  6449  07F3  07F2               	addwf	___bmul@product,f
  6450  07F4                     i1l2704:	
  6451  07F4  1003               	clrc
  6452  07F5  0DF0               	rlf	___bmul@multiplicand,f
  6453  07F6  1003               	clrc
  6454  07F7  0CF3               	rrf	___bmul@multiplier,f
  6455  07F8  08F3               	movf	___bmul@multiplier,f
  6456  07F9  1D03               	skipz
  6457  07FA  2FEE               	goto	i1l2700
  6458  07FB  0872               	movf	___bmul@product,w
  6459  07FC  0008               	return
  6460  07FD                     __end_of___bmul:	
  6461                           
  6462                           	psect	text38
  6463  1190                     __ptext38:	
  6464 ;; *************** function ___awtoft *****************
  6465 ;; Defined at:
  6466 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  c               2    8[COMMON] int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  sign            1   13[COMMON] unsigned char 
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  3    8[COMMON] float 
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0, pclath, cstack
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6480 ;;      Params:         3       0       0       0       0
  6481 ;;      Locals:         1       0       0       0       0
  6482 ;;      Temps:          2       0       0       0       0
  6483 ;;      Totals:         6       0       0       0       0
  6484 ;;Total ram usage:        6 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; Hardware stack levels required when called:    1
  6487 ;; This function calls:
  6488 ;;		___ftpack
  6489 ;; This function is called by:
  6490 ;;		_ISR
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           
  6495                           ;psect for function ___awtoft
  6496  1190                     ___awtoft:	
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6500  1190  01FD               	clrf	___awtoft@sign
  6501  1191  1FF9               	btfss	___awtoft@c+1,7
  6502  1192  299A               	goto	i1l2722
  6503  1193  09F8               	comf	___awtoft@c,f
  6504  1194  09F9               	comf	___awtoft@c+1,f
  6505  1195  0AF8               	incf	___awtoft@c,f
  6506  1196  1903               	skipnz
  6507  1197  0AF9               	incf	___awtoft@c+1,f
  6508  1198  01FD               	clrf	___awtoft@sign
  6509  1199  0AFD               	incf	___awtoft@sign,f
  6510  119A                     i1l2722:	
  6511  119A  0878               	movf	___awtoft@c,w
  6512  119B  00F0               	movwf	___ftpack@arg
  6513  119C  0879               	movf	___awtoft@c+1,w
  6514  119D  00F1               	movwf	___ftpack@arg+1
  6515  119E  01F2               	clrf	___ftpack@arg+2
  6516  119F  308E               	movlw	142
  6517  11A0  00FB               	movwf	??___awtoft
  6518  11A1  087B               	movf	??___awtoft,w
  6519  11A2  00F3               	movwf	___ftpack@exp
  6520  11A3  087D               	movf	___awtoft@sign,w
  6521  11A4  00FC               	movwf	??___awtoft+1
  6522  11A5  087C               	movf	??___awtoft+1,w
  6523  11A6  00F4               	movwf	___ftpack@sign
  6524  11A7  160A  118A  2451   	fcall	___ftpack
  6525  11AA  0870               	movf	?___ftpack,w
  6526  11AB  00F8               	movwf	?___awtoft
  6527  11AC  0871               	movf	?___ftpack+1,w
  6528  11AD  00F9               	movwf	?___awtoft+1
  6529  11AE  0872               	movf	?___ftpack+2,w
  6530  11AF  00FA               	movwf	?___awtoft+2
  6531  11B0  0008               	return
  6532  11B1                     __end_of___awtoft:	
  6533                           
  6534                           	psect	text39
  6535  1451                     __ptext39:	
  6536 ;; *************** function ___ftpack *****************
  6537 ;; Defined at:
  6538 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  arg             3    0[COMMON] unsigned um
  6541 ;;  exp             1    3[COMMON] unsigned char 
  6542 ;;  sign            1    4[COMMON] unsigned char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  3    0[COMMON] float 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6554 ;;      Params:         5       0       0       0       0
  6555 ;;      Locals:         0       0       0       0       0
  6556 ;;      Temps:          3       0       0       0       0
  6557 ;;      Totals:         8       0       0       0       0
  6558 ;;Total ram usage:        8 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		___awtoft
  6564 ;;		___ftadd
  6565 ;;		___ftdiv
  6566 ;;		___ftmul
  6567 ;;		___lwtoft
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           
  6572                           ;psect for function ___ftpack
  6573  1451                     ___ftpack:	
  6574                           
  6575                           ;incstack = 0
  6576                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6577  1451  0873               	movf	___ftpack@exp,w
  6578  1452  1903               	btfsc	3,2
  6579  1453  2C59               	goto	i1l2156
  6580  1454  0872               	movf	___ftpack@arg+2,w
  6581  1455  0471               	iorwf	___ftpack@arg+1,w
  6582  1456  0470               	iorwf	___ftpack@arg,w
  6583  1457  1D03               	skipz
  6584  1458  2C6C               	goto	i1l2162
  6585  1459                     i1l2156:	
  6586  1459  3000               	movlw	0
  6587  145A  00F0               	movwf	?___ftpack
  6588  145B  3000               	movlw	0
  6589  145C  00F1               	movwf	?___ftpack+1
  6590  145D  3000               	movlw	0
  6591  145E  00F2               	movwf	?___ftpack+2
  6592  145F  0008               	return
  6593  1460                     i1l2160:	
  6594  1460  3001               	movlw	1
  6595  1461  00F5               	movwf	??___ftpack
  6596  1462  0875               	movf	??___ftpack,w
  6597  1463  07F3               	addwf	___ftpack@exp,f
  6598  1464  3001               	movlw	1
  6599  1465                     u214_25:	
  6600  1465  1003               	clrc
  6601  1466  0CF2               	rrf	___ftpack@arg+2,f
  6602  1467  0CF1               	rrf	___ftpack@arg+1,f
  6603  1468  0CF0               	rrf	___ftpack@arg,f
  6604  1469  3EFF               	addlw	-1
  6605  146A  1D03               	skipz
  6606  146B  2C65               	goto	u214_25
  6607  146C                     i1l2162:	
  6608  146C  30FE               	movlw	254
  6609  146D  0572               	andwf	___ftpack@arg+2,w
  6610  146E  1903               	btfsc	3,2
  6611  146F  2C87               	goto	i1l724
  6612  1470  2C60               	goto	i1l2160
  6613  1471                     i1l2164:	
  6614  1471  3001               	movlw	1
  6615  1472  00F5               	movwf	??___ftpack
  6616  1473  0875               	movf	??___ftpack,w
  6617  1474  07F3               	addwf	___ftpack@exp,f
  6618  1475  3001               	movlw	1
  6619  1476  07F0               	addwf	___ftpack@arg,f
  6620  1477  3000               	movlw	0
  6621  1478  1803               	skipnc
  6622  1479  3001               	movlw	1
  6623  147A  07F1               	addwf	___ftpack@arg+1,f
  6624  147B  3000               	movlw	0
  6625  147C  1803               	skipnc
  6626  147D  3001               	movlw	1
  6627  147E  07F2               	addwf	___ftpack@arg+2,f
  6628  147F  3001               	movlw	1
  6629  1480                     u216_25:	
  6630  1480  1003               	clrc
  6631  1481  0CF2               	rrf	___ftpack@arg+2,f
  6632  1482  0CF1               	rrf	___ftpack@arg+1,f
  6633  1483  0CF0               	rrf	___ftpack@arg,f
  6634  1484  3EFF               	addlw	-1
  6635  1485  1D03               	skipz
  6636  1486  2C80               	goto	u216_25
  6637  1487                     i1l724:	
  6638  1487  30FF               	movlw	255
  6639  1488  0572               	andwf	___ftpack@arg+2,w
  6640  1489  1903               	btfsc	3,2
  6641  148A  2C96               	goto	i1l2172
  6642  148B  2C71               	goto	i1l2164
  6643  148C                     i1l2170:	
  6644  148C  3001               	movlw	1
  6645  148D  02F3               	subwf	___ftpack@exp,f
  6646  148E  3001               	movlw	1
  6647  148F                     u218_25:	
  6648  148F  1003               	clrc
  6649  1490  0DF0               	rlf	___ftpack@arg,f
  6650  1491  0DF1               	rlf	___ftpack@arg+1,f
  6651  1492  0DF2               	rlf	___ftpack@arg+2,f
  6652  1493  3EFF               	addlw	-1
  6653  1494  1D03               	skipz
  6654  1495  2C8F               	goto	u218_25
  6655  1496                     i1l2172:	
  6656  1496  1FF1               	btfss	___ftpack@arg+1,7
  6657  1497  2C8C               	goto	i1l2170
  6658  1498  1873               	btfsc	___ftpack@exp,0
  6659  1499  2CA0               	goto	i1l730
  6660  149A  30FF               	movlw	255
  6661  149B  05F0               	andwf	___ftpack@arg,f
  6662  149C  307F               	movlw	127
  6663  149D  05F1               	andwf	___ftpack@arg+1,f
  6664  149E  30FF               	movlw	255
  6665  149F  05F2               	andwf	___ftpack@arg+2,f
  6666  14A0                     i1l730:	
  6667  14A0  1003               	clrc
  6668  14A1  0CF3               	rrf	___ftpack@exp,f
  6669  14A2  0873               	movf	___ftpack@exp,w
  6670  14A3  00F5               	movwf	??___ftpack
  6671  14A4  01F6               	clrf	??___ftpack+1
  6672  14A5  01F7               	clrf	??___ftpack+2
  6673  14A6  3010               	movlw	16
  6674  14A7                     u221_25:	
  6675  14A7  1003               	clrc
  6676  14A8  0DF5               	rlf	??___ftpack,f
  6677  14A9  0DF6               	rlf	??___ftpack+1,f
  6678  14AA  0DF7               	rlf	??___ftpack+2,f
  6679  14AB  3EFF               	addlw	-1
  6680  14AC  1D03               	skipz
  6681  14AD  2CA7               	goto	u221_25
  6682  14AE  0875               	movf	??___ftpack,w
  6683  14AF  04F0               	iorwf	___ftpack@arg,f
  6684  14B0  0876               	movf	??___ftpack+1,w
  6685  14B1  04F1               	iorwf	___ftpack@arg+1,f
  6686  14B2  0877               	movf	??___ftpack+2,w
  6687  14B3  04F2               	iorwf	___ftpack@arg+2,f
  6688  14B4  0874               	movf	___ftpack@sign,w
  6689  14B5  1903               	btfsc	3,2
  6690  14B6  0008               	return
  6691  14B7  17F2               	bsf	___ftpack@arg+2,7
  6692  14B8  0008               	return
  6693  14B9                     __end_of___ftpack:	
  6694                           
  6695                           	psect	text40
  6696  10AD                     __ptext40:	
  6697 ;; *************** function _USART_ReceiveChar *****************
  6698 ;; Defined at:
  6699 ;;		line 63 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  byte            1    4[COMMON] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      unsigned char 
  6706 ;; Registers used:
  6707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6713 ;;      Params:         0       0       0       0       0
  6714 ;;      Locals:         1       0       0       0       0
  6715 ;;      Temps:          1       0       0       0       0
  6716 ;;      Totals:         2       0       0       0       0
  6717 ;;Total ram usage:        2 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:    2
  6720 ;; This function calls:
  6721 ;;		_USART_WriteString
  6722 ;; This function is called by:
  6723 ;;		_ISR
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           
  6728                           ;psect for function _USART_ReceiveChar
  6729  10AD                     _USART_ReceiveChar:	
  6730                           
  6731                           ;usart.c: 65: unsigned char byte;
  6732                           ;usart.c: 67: if (!OERR)
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6736  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  6737  10AE  1303               	bcf	3,6	;RP1=0, select bank0
  6738  10AF  1898               	btfsc	24,1	;volatile
  6739  10B0  28B6               	goto	i1l2530
  6740                           
  6741                           ;usart.c: 68: {
  6742                           ;usart.c: 69: byte = RCREG;
  6743  10B1  081A               	movf	26,w	;volatile
  6744  10B2  00F3               	movwf	??_USART_ReceiveChar
  6745  10B3  0873               	movf	??_USART_ReceiveChar,w
  6746  10B4  00F4               	movwf	USART_ReceiveChar@byte
  6747  10B5  28C2               	goto	i1l2538
  6748  10B6                     i1l2530:	
  6749                           ;usart.c: 71: }
  6750                           
  6751                           ;usart.c: 70: PIR1bits.RCIF = 0;
  6752                           
  6753                           
  6754                           ;usart.c: 72: else
  6755                           ;usart.c: 73: {
  6756                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  6757  10B6  3001               	movlw	(STR_4-__stringbase)& (0+255)
  6758  10B7  160A  118A  20F8   	fcall	_USART_WriteString
  6759                           
  6760                           ;usart.c: 76: RCSTAbits.CREN = 0;
  6761  10BA  1283               	bcf	3,5	;RP0=0, select bank0
  6762  10BB  1303               	bcf	3,6	;RP1=0, select bank0
  6763  10BC  1218               	bcf	24,4	;volatile
  6764                           
  6765                           ;usart.c: 77: byte = RCREG;
  6766  10BD  081A               	movf	26,w	;volatile
  6767  10BE  00F3               	movwf	??_USART_ReceiveChar
  6768  10BF  0873               	movf	??_USART_ReceiveChar,w
  6769  10C0  00F4               	movwf	USART_ReceiveChar@byte
  6770                           
  6771                           ;usart.c: 78: RCSTAbits.CREN = 1;
  6772  10C1  1618               	bsf	24,4	;volatile
  6773  10C2                     i1l2538:	
  6774                           
  6775                           ;usart.c: 79: PIR1bits.RCIF = 0;
  6776  10C2  128C               	bcf	12,5	;volatile
  6777                           
  6778                           ;usart.c: 80: }
  6779                           ;usart.c: 82: return(byte);
  6780  10C3  0874               	movf	USART_ReceiveChar@byte,w
  6781  10C4  0008               	return
  6782  10C5                     __end_of_USART_ReceiveChar:	
  6783                           
  6784                           	psect	text41
  6785  10F8                     __ptext41:	
  6786 ;; *************** function _USART_WriteString *****************
  6787 ;; Defined at:
  6788 ;;		line 52 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  str             1    wreg     PTR const unsigned char 
  6791 ;;		 -> STR_4(40), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  str             1    2[COMMON] PTR const unsigned char 
  6794 ;;		 -> STR_4(40), 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;		None               void
  6797 ;; Registers used:
  6798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6804 ;;      Params:         0       0       0       0       0
  6805 ;;      Locals:         1       0       0       0       0
  6806 ;;      Temps:          1       0       0       0       0
  6807 ;;      Totals:         2       0       0       0       0
  6808 ;;Total ram usage:        2 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    1
  6811 ;; This function calls:
  6812 ;;		_USART_WriteChar
  6813 ;; This function is called by:
  6814 ;;		_USART_ReceiveChar
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           
  6819                           ;psect for function _USART_WriteString
  6820  10F8                     _USART_WriteString:	
  6821                           
  6822                           ;incstack = 0
  6823                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6824                           ;USART_WriteString@str stored from wreg
  6825  10F8  00F2               	movwf	USART_WriteString@str
  6826  10F9                     i1l2188:	
  6827                           ;usart.c: 54: while(*str != '\0')
  6828                           
  6829  10F9  0872               	movf	USART_WriteString@str,w
  6830  10FA  0084               	movwf	4
  6831  10FB  160A  118A  2000  160A  118A  	fcall	stringdir
  6832  1100  3800               	iorlw	0
  6833  1101  1903               	btfsc	3,2
  6834  1102  0008               	return
  6835                           
  6836                           ;usart.c: 55: {
  6837                           ;usart.c: 56: USART_WriteChar(*str);
  6838  1103  0872               	movf	USART_WriteString@str,w
  6839  1104  0084               	movwf	4
  6840  1105  160A  118A  2000  160A  118A  	fcall	stringdir
  6841  110A  160A  118A  2048  160A  118A  	fcall	_USART_WriteChar
  6842                           
  6843                           ;usart.c: 57: str++;
  6844  110F  3001               	movlw	1
  6845  1110  00F1               	movwf	??_USART_WriteString
  6846  1111  0871               	movf	??_USART_WriteString,w
  6847  1112  07F2               	addwf	USART_WriteString@str,f
  6848  1113  28F9               	goto	i1l2188
  6849  1114                     __end_of_USART_WriteString:	
  6850                           
  6851                           	psect	text42
  6852  1048                     __ptext42:	
  6853 ;; *************** function _USART_WriteChar *****************
  6854 ;; Defined at:
  6855 ;;		line 44 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  byte            1    wreg     unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  byte            1    0[COMMON] unsigned char 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;		None               void
  6862 ;; Registers used:
  6863 ;;		wreg
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6869 ;;      Params:         0       0       0       0       0
  6870 ;;      Locals:         1       0       0       0       0
  6871 ;;      Temps:          0       0       0       0       0
  6872 ;;      Totals:         1       0       0       0       0
  6873 ;;Total ram usage:        1 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_send
  6879 ;;		_USART_WriteString
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           
  6884                           ;psect for function _USART_WriteChar
  6885  1048                     _USART_WriteChar:	
  6886                           
  6887                           ;incstack = 0
  6888                           ; Regs used in _USART_WriteChar: [wreg]
  6889                           ;USART_WriteChar@byte stored from wreg
  6890  1048  00F0               	movwf	USART_WriteChar@byte
  6891  1049                     i1l239:	
  6892                           ;usart.c: 46: while(!PIR1bits.TXIF);
  6893                           
  6894  1049  1283               	bcf	3,5	;RP0=0, select bank0
  6895  104A  1303               	bcf	3,6	;RP1=0, select bank0
  6896  104B  1E0C               	btfss	12,4	;volatile
  6897  104C  2849               	goto	i1l239
  6898                           
  6899                           ;usart.c: 47: TXREG = byte;
  6900  104D  0870               	movf	USART_WriteChar@byte,w
  6901  104E  0099               	movwf	25	;volatile
  6902  104F  0008               	return
  6903  1050                     __end_of_USART_WriteChar:	
  6904  007E                     btemp	set	126	;btemp
  6905  007E                     wtemp	set	126
  6906  007E                     wtemp0	set	126
  6907  0080                     wtemp1	set	128
  6908  0082                     wtemp2	set	130
  6909  0084                     wtemp3	set	132
  6910  0086                     wtemp4	set	134
  6911  0088                     wtemp5	set	136
  6912  007F                     wtemp6	set	127
  6913  007E                     ttemp	set	126
  6914  007E                     ttemp0	set	126
  6915  0081                     ttemp1	set	129
  6916  0084                     ttemp2	set	132
  6917  0087                     ttemp3	set	135
  6918  007F                     ttemp4	set	127
  6919  007E                     ltemp	set	126
  6920  007E                     ltemp0	set	126
  6921  0082                     ltemp1	set	130
  6922  0086                     ltemp2	set	134
  6923  0080                     ltemp3	set	128
  6924                           
  6925                           	psect	text17_split_1
  6926  176F                     L12:	
  6927  176F  1303               	bcf	3,6	;RP1=0, select bank0
  6928  1770  0841               	movf	?___wmul+1,w
  6929  1771  1683               	bsf	3,5	;RP0=1, select bank1
  6930  1772  1303               	bcf	3,6	;RP1=0, select bank1
  6931  1773  01E6               	clrf	(_setpoint+1)^(0+128)
  6932  1774  07E6               	addwf	(_setpoint+1)^(0+128),f
  6933  1775  1283               	bcf	3,5	;RP0=0, select bank0
  6934  1776  1303               	bcf	3,6	;RP1=0, select bank0
  6935  1777  0840               	movf	?___wmul,w
  6936  1778  1683               	bsf	3,5	;RP0=1, select bank1
  6937  1779  1303               	bcf	3,6	;RP1=0, select bank1
  6938  177A  01E5               	clrf	_setpoint^(0+128)
  6939  177B  07E5               	addwf	_setpoint^(0+128),f
  6940  177C                     i1l3812:	
  6941                           
  6942                           ;main.c: 194: }
  6943                           ;main.c: 195: if(receivedBuffer[3] == 'I'){
  6944  177C  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6945  177D  3A49               	xorlw	73
  6946  177E  1D03               	skipz
  6947  177F  2F85               	goto	i1l3816
  6948                           
  6949                           ;main.c: 196: inicia();
  6950  1780  160A  118A  2058  160A  118A  	fcall	i1_inicia
  6951  1785                     i1l3816:	
  6952                           
  6953                           ;main.c: 197: }
  6954                           ;main.c: 198: if(receivedBuffer[3] == 'S'){
  6955  1785  1683               	bsf	3,5	;RP0=1, select bank1
  6956  1786  1303               	bcf	3,6	;RP1=0, select bank1
  6957  1787  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6958  1788  3A53               	xorlw	83
  6959  1789  1D03               	skipz
  6960  178A  2F90               	goto	i1l3820
  6961                           
  6962                           ;main.c: 199: set();
  6963  178B  160A  118A  231B  160A  118A  	fcall	i1_set
  6964  1790                     i1l3820:	
  6965                           
  6966                           ;main.c: 200: }
  6967                           ;main.c: 201: if(receivedBuffer[3] == 'R'){
  6968  1790  1683               	bsf	3,5	;RP0=1, select bank1
  6969  1791  1303               	bcf	3,6	;RP1=0, select bank1
  6970  1792  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6971  1793  3A52               	xorlw	82
  6972  1794  1D03               	skipz
  6973  1795  2F9B               	goto	i1l3824
  6974                           
  6975                           ;main.c: 202: res();
  6976  1796  160A  118A  2265  160A  118A  	fcall	i1_res
  6977  179B                     i1l3824:	
  6978                           
  6979                           ;main.c: 203: }
  6980                           ;main.c: 204: if(receivedBuffer[3] == 'F'){
  6981  179B  1683               	bsf	3,5	;RP0=1, select bank1
  6982  179C  1303               	bcf	3,6	;RP1=0, select bank1
  6983  179D  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6984  179E  3A46               	xorlw	70
  6985  179F  1D03               	skipz
  6986  17A0  2FAA               	goto	i1l3828
  6987                           
  6988                           ;main.c: 205: pilotoAtivo = pilotoAtivo & 0b11111101;
  6989  17A1  0864               	movf	_pilotoAtivo^(0+128),w
  6990  17A2  39FD               	andlw	253
  6991  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  6992  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  6993  17A5  00E2               	movwf	??_ISR
  6994  17A6  0862               	movf	??_ISR,w
  6995  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  6996  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  6997  17A9  00E4               	movwf	_pilotoAtivo^(0+128)
  6998  17AA                     i1l3828:	
  6999                           
  7000                           ;main.c: 206: }
  7001                           ;main.c: 208: }
  7002                           ;main.c: 209: }
  7003                           ;main.c: 210: }
  7004                           ;main.c: 211: }
  7005                           ;main.c: 212: PIR1bits.RCIF = 0;
  7006  17AA  1283               	bcf	3,5	;RP0=0, select bank0
  7007  17AB  1303               	bcf	3,6	;RP1=0, select bank0
  7008  17AC  128C               	bcf	12,5	;volatile
  7009  17AD                     i1l3830:	
  7010                           
  7011                           ;main.c: 213: }
  7012                           ;main.c: 227: if (INTCONbits.T0IF) {
  7013  17AD  120A  118A  1D0B   	btfss	11,2	;volatile
  7014  17B0  2FDC               	goto	i1l4008
  7015                           
  7016                           ;main.c: 229: TIMER0_Set(238);
  7017  17B1  30EE               	movlw	238
  7018  17B2  160A  118A  2042  160A  118A  	fcall	i1_TIMER0_Set
  7019                           
  7020                           ;main.c: 232: if (contagens_tm0 < 499) {
  7021  17B7  3001               	movlw	1
  7022  17B8  1683               	bsf	3,5	;RP0=1, select bank1
  7023  17B9  1303               	bcf	3,6	;RP1=0, select bank1
  7024  17BA  0257               	subwf	(_contagens_tm0+1)^(0+128),w
  7025  17BB  30F3               	movlw	243
  7026  17BC  1903               	skipnz
  7027  17BD  0256               	subwf	_contagens_tm0^(0+128),w
  7028  17BE  1803               	skipnc
  7029  17BF  2FCC               	goto	i1l3840
  7030                           
  7031                           ;main.c: 234: contagens_tm0++;
  7032  17C0  3001               	movlw	1
  7033  17C1  07D6               	addwf	_contagens_tm0^(0+128),f
  7034  17C2  1803               	skipnc
  7035  17C3  0AD7               	incf	(_contagens_tm0+1)^(0+128),f
  7036  17C4  3000               	movlw	0
  7037  17C5  07D7               	addwf	(_contagens_tm0+1)^(0+128),f
  7038                           
  7039                           ;main.c: 237: PORTBbits.RB6 = 1;
  7040  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  7041  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  7042  17C8  1706               	bsf	6,6	;volatile
  7043                           
  7044                           ;main.c: 238: } else {
  7045  17C9  120A  118A  2FDB   	goto	i1l4006
  7046  17CC                     i1l3840:	
  7047                           
  7048                           ;main.c: 240: contagens_tm0 = 0;
  7049  17CC  1683               	bsf	3,5	;RP0=1, select bank1
  7050  17CD  1303               	bcf	3,6	;RP1=0, select bank1
  7051  17CE  01D6               	clrf	_contagens_tm0^(0+128)
  7052  17CF  01D7               	clrf	(_contagens_tm0+1)^(0+128)
  7053                           
  7054                           ;main.c: 243: pulsos = (TMR1H << 8) + TMR1L;
  7055  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  7056  17D1  1303               	bcf	3,6	;RP1=0, select bank0
  7057  17D2  080F               	movf	15,w	;volatile
  7058  17D3  1683               	bsf	3,5	;RP0=1, select bank1
  7059  17D4  1303               	bcf	3,6	;RP1=0, select bank1
  7060  17D5  01DD               	clrf	(_pulsos+1)^(0+128)
  7061  17D6  07DD               	addwf	(_pulsos+1)^(0+128),f
  7062  17D7  1283               	bcf	3,5	;RP0=0, select bank0
  7063  17D8  1303               	bcf	3,6	;RP1=0, select bank0
  7064  17D9  080E               	movf	14,w	;volatile
  7065  17DA  1683               	bsf	3,5	;RP0=1, select bank1
  7066  17DB  1303               	bcf	3,6	;RP1=0, select bank1
  7067  17DC  01DC               	clrf	_pulsos^(0+128)
  7068  17DD  07DC               	addwf	_pulsos^(0+128),f
  7069                           
  7070                           ;main.c: 244: rpm = ((pulsos / 7) * 120);
  7071  17DE  3007               	movlw	7
  7072  17DF  00F0               	movwf	___lwdiv@divisor
  7073  17E0  3000               	movlw	0
  7074  17E1  00F1               	movwf	___lwdiv@divisor+1
  7075  17E2  085D               	movf	(_pulsos+1)^(0+128),w
  7076  17E3  01F3               	clrf	___lwdiv@dividend+1
  7077  17E4  07F3               	addwf	___lwdiv@dividend+1,f
  7078  17E5  085C               	movf	_pulsos^(0+128),w
  7079  17E6  01F2               	clrf	___lwdiv@dividend
  7080  17E7  07F2               	addwf	___lwdiv@dividend,f
  7081  17E8  160A  118A  229F  160A  118A  	fcall	___lwdiv
  7082  17ED  0871               	movf	?___lwdiv+1,w
  7083  17EE  1283               	bcf	3,5	;RP0=0, select bank0
  7084  17EF  1303               	bcf	3,6	;RP1=0, select bank0
  7085  17F0  01C1               	clrf	___wmul@multiplier+1
  7086  17F1  07C1               	addwf	___wmul@multiplier+1,f
  7087  17F2  0870               	movf	?___lwdiv,w
  7088  17F3  01C0               	clrf	___wmul@multiplier
  7089  17F4  07C0               	addwf	___wmul@multiplier,f
  7090  17F5  3078               	movlw	120
  7091  17F6  00C2               	movwf	___wmul@multiplicand
  7092  17F7  3000               	movlw	0
  7093  17F8  00C3               	movwf	___wmul@multiplicand+1
  7094  17F9  160A  118A  2217   	fcall	___wmul
  7095  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  7096  17FD  120A  158A  29B9   	ljmp	L14
  7097                           
  7098                           	psect	text17_split_2
  7099  09B9                     L14:	
  7100  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  7101  09BA  0841               	movf	?___wmul+1,w
  7102  09BB  1683               	bsf	3,5	;RP0=1, select bank1
  7103  09BC  1303               	bcf	3,6	;RP1=0, select bank1
  7104  09BD  01E3               	clrf	(_rpm+1)^(0+128)
  7105  09BE  07E3               	addwf	(_rpm+1)^(0+128),f
  7106  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  7107  09C0  1303               	bcf	3,6	;RP1=0, select bank0
  7108  09C1  0840               	movf	?___wmul,w
  7109  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  7110  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  7111  09C4  01E2               	clrf	_rpm^(0+128)
  7112  09C5  07E2               	addwf	_rpm^(0+128),f
  7113                           
  7114                           ;main.c: 246: TMR1L = 0x00;
  7115  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  7116  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  7117  09C8  018E               	clrf	14	;volatile
  7118                           
  7119                           ;main.c: 247: TMR1H = 0x00;
  7120  09C9  018F               	clrf	15	;volatile
  7121                           
  7122                           ;main.c: 249: int rpmAux = rpm;
  7123  09CA  1683               	bsf	3,5	;RP0=1, select bank1
  7124  09CB  1303               	bcf	3,6	;RP1=0, select bank1
  7125  09CC  0863               	movf	(_rpm+1)^(0+128),w
  7126  09CD  01A1               	clrf	(ISR@rpmAux+1)^(0+128)
  7127  09CE  07A1               	addwf	(ISR@rpmAux+1)^(0+128),f
  7128  09CF  0862               	movf	_rpm^(0+128),w
  7129  09D0  01A0               	clrf	ISR@rpmAux^(0+128)
  7130  09D1  07A0               	addwf	ISR@rpmAux^(0+128),f
  7131                           
  7132                           ;main.c: 252: erro_anterior = erro_atual;
  7133  09D2  085B               	movf	(_erro_atual+1)^(0+128),w
  7134  09D3  01D9               	clrf	(_erro_anterior+1)^(0+128)
  7135  09D4  07D9               	addwf	(_erro_anterior+1)^(0+128),f
  7136  09D5  085A               	movf	_erro_atual^(0+128),w
  7137  09D6  01D8               	clrf	_erro_anterior^(0+128)
  7138  09D7  07D8               	addwf	_erro_anterior^(0+128),f
  7139                           
  7140                           ;main.c: 253: erro_atual = minimo(abs(setpoint - rpm), 2000);
  7141  09D8  3000               	movlw	0
  7142  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  7143  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  7144  09DB  00A9               	movwf	minimo@b
  7145  09DC  30FA               	movlw	250
  7146  09DD  00AA               	movwf	minimo@b+1
  7147  09DE  3044               	movlw	68
  7148  09DF  00AB               	movwf	minimo@b+2
  7149  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  7150  09E1  1303               	bcf	3,6	;RP1=0, select bank1
  7151  09E2  0962               	comf	_rpm^(0+128),w
  7152  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  7153  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  7154  09E5  00E2               	movwf	??_ISR
  7155  09E6  1683               	bsf	3,5	;RP0=1, select bank1
  7156  09E7  1303               	bcf	3,6	;RP1=0, select bank1
  7157  09E8  0963               	comf	(_rpm+1)^(0+128),w
  7158  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  7159  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  7160  09EB  00E3               	movwf	??_ISR+1
  7161  09EC  0AE2               	incf	??_ISR,f
  7162  09ED  1903               	skipnz
  7163  09EE  0AE3               	incf	??_ISR+1,f
  7164  09EF  1683               	bsf	3,5	;RP0=1, select bank1
  7165  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  7166  09F1  0865               	movf	_setpoint^(0+128),w
  7167  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  7168  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  7169  09F4  0762               	addwf	??_ISR,w
  7170  09F5  00F0               	movwf	abs@a
  7171  09F6  1683               	bsf	3,5	;RP0=1, select bank1
  7172  09F7  1303               	bcf	3,6	;RP1=0, select bank1
  7173  09F8  0866               	movf	(_setpoint+1)^(0+128),w
  7174  09F9  1803               	skipnc
  7175  09FA  0A66               	incf	(_setpoint+1)^(0+128),w
  7176  09FB  1283               	bcf	3,5	;RP0=0, select bank0
  7177  09FC  1303               	bcf	3,6	;RP1=0, select bank0
  7178  09FD  0763               	addwf	??_ISR+1,w
  7179  09FE  00F1               	movwf	abs@a+1
  7180  09FF  120A  158A  2008  120A  158A  	fcall	_abs
  7181  0A04  0871               	movf	?_abs+1,w
  7182  0A05  01F9               	clrf	___awtoft@c+1
  7183  0A06  07F9               	addwf	___awtoft@c+1,f
  7184  0A07  0870               	movf	?_abs,w
  7185  0A08  01F8               	clrf	___awtoft@c
  7186  0A09  07F8               	addwf	___awtoft@c,f
  7187  0A0A  160A  118A  2190  120A  158A  	fcall	___awtoft
  7188  0A0F  0878               	movf	?___awtoft,w
  7189  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  7190  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  7191  0A12  00A6               	movwf	minimo@a
  7192  0A13  0879               	movf	?___awtoft+1,w
  7193  0A14  00A7               	movwf	minimo@a+1
  7194  0A15  087A               	movf	?___awtoft+2,w
  7195  0A16  00A8               	movwf	minimo@a+2
  7196  0A17  160A  118A  2132  120A  158A  	fcall	_minimo
  7197  0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  7198  0A1D  1303               	bcf	3,6	;RP1=0, select bank0
  7199  0A1E  0826               	movf	?_minimo,w
  7200  0A1F  00B2               	movwf	___fttol@f1
  7201  0A20  0827               	movf	?_minimo+1,w
  7202  0A21  00B3               	movwf	___fttol@f1+1
  7203  0A22  0828               	movf	?_minimo+2,w
  7204  0A23  00B4               	movwf	___fttol@f1+2
  7205  0A24  160A  118A  2652  120A  158A  	fcall	___fttol
  7206  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  7207  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  7208  0A2B  0833               	movf	?___fttol+1,w
  7209  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  7210  0A2D  1303               	bcf	3,6	;RP1=0, select bank1
  7211  0A2E  01DB               	clrf	(_erro_atual+1)^(0+128)
  7212  0A2F  07DB               	addwf	(_erro_atual+1)^(0+128),f
  7213  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  7214  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  7215  0A32  0832               	movf	?___fttol,w
  7216  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  7217  0A34  1303               	bcf	3,6	;RP1=0, select bank1
  7218  0A35  01DA               	clrf	_erro_atual^(0+128)
  7219  0A36  07DA               	addwf	_erro_atual^(0+128),f
  7220                           
  7221                           ;main.c: 254: int delta = maximo(minimo(abs(erro_atual - erro_anterior), 1000), 1);
  7222  0A37  3000               	movlw	0
  7223  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  7224  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  7225  0A3A  00AF               	movwf	maximo@b
  7226  0A3B  3080               	movlw	128
  7227  0A3C  00B0               	movwf	maximo@b+1
  7228  0A3D  303F               	movlw	63
  7229  0A3E  00B1               	movwf	maximo@b+2
  7230  0A3F  3000               	movlw	0
  7231  0A40  00A9               	movwf	minimo@b
  7232  0A41  307A               	movlw	122
  7233  0A42  00AA               	movwf	minimo@b+1
  7234  0A43  3044               	movlw	68
  7235  0A44  00AB               	movwf	minimo@b+2
  7236  0A45  1683               	bsf	3,5	;RP0=1, select bank1
  7237  0A46  1303               	bcf	3,6	;RP1=0, select bank1
  7238  0A47  0958               	comf	_erro_anterior^(0+128),w
  7239  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  7240  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  7241  0A4A  00E2               	movwf	??_ISR
  7242  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  7243  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  7244  0A4D  0959               	comf	(_erro_anterior+1)^(0+128),w
  7245  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  7246  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  7247  0A50  00E3               	movwf	??_ISR+1
  7248  0A51  0AE2               	incf	??_ISR,f
  7249  0A52  1903               	skipnz
  7250  0A53  0AE3               	incf	??_ISR+1,f
  7251  0A54  1683               	bsf	3,5	;RP0=1, select bank1
  7252  0A55  1303               	bcf	3,6	;RP1=0, select bank1
  7253  0A56  085A               	movf	_erro_atual^(0+128),w
  7254  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  7255  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  7256  0A59  0762               	addwf	??_ISR,w
  7257  0A5A  00F0               	movwf	abs@a
  7258  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  7259  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  7260  0A5D  085B               	movf	(_erro_atual+1)^(0+128),w
  7261  0A5E  1803               	skipnc
  7262  0A5F  0A5B               	incf	(_erro_atual+1)^(0+128),w
  7263  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  7264  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  7265  0A62  0763               	addwf	??_ISR+1,w
  7266  0A63  00F1               	movwf	abs@a+1
  7267  0A64  120A  158A  2008   	fcall	_abs
  7268  0A67  0871               	movf	?_abs+1,w
  7269  0A68  160A  118A  2DC6   	ljmp	L15
  7270                           
  7271                           	psect	text17_split_3
  7272  15C6                     L15:	
  7273  15C6  01F9               	clrf	___awtoft@c+1
  7274  15C7  07F9               	addwf	___awtoft@c+1,f
  7275  15C8  0870               	movf	?_abs,w
  7276  15C9  01F8               	clrf	___awtoft@c
  7277  15CA  07F8               	addwf	___awtoft@c,f
  7278  15CB  160A  118A  2190  160A  118A  	fcall	___awtoft
  7279  15D0  0878               	movf	?___awtoft,w
  7280  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  7281  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  7282  15D3  00A6               	movwf	minimo@a
  7283  15D4  0879               	movf	?___awtoft+1,w
  7284  15D5  00A7               	movwf	minimo@a+1
  7285  15D6  087A               	movf	?___awtoft+2,w
  7286  15D7  00A8               	movwf	minimo@a+2
  7287  15D8  160A  118A  2132  160A  118A  	fcall	_minimo
  7288  15DD  1283               	bcf	3,5	;RP0=0, select bank0
  7289  15DE  1303               	bcf	3,6	;RP1=0, select bank0
  7290  15DF  0826               	movf	?_minimo,w
  7291  15E0  00AC               	movwf	maximo@a
  7292  15E1  0827               	movf	?_minimo+1,w
  7293  15E2  00AD               	movwf	maximo@a+1
  7294  15E3  0828               	movf	?_minimo+2,w
  7295  15E4  00AE               	movwf	maximo@a+2
  7296  15E5  160A  118A  2114  160A  118A  	fcall	_maximo
  7297  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  7298  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  7299  15EC  082C               	movf	?_maximo,w
  7300  15ED  00B2               	movwf	___fttol@f1
  7301  15EE  082D               	movf	?_maximo+1,w
  7302  15EF  00B3               	movwf	___fttol@f1+1
  7303  15F0  082E               	movf	?_maximo+2,w
  7304  15F1  00B4               	movwf	___fttol@f1+2
  7305  15F2  160A  118A  2652  160A  118A  	fcall	___fttol
  7306  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  7307  15F8  1303               	bcf	3,6	;RP1=0, select bank0
  7308  15F9  0833               	movf	?___fttol+1,w
  7309  15FA  1683               	bsf	3,5	;RP0=1, select bank1
  7310  15FB  1303               	bcf	3,6	;RP1=0, select bank1
  7311  15FC  01B1               	clrf	(ISR@delta+1)^(0+128)
  7312  15FD  07B1               	addwf	(ISR@delta+1)^(0+128),f
  7313  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  7314  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  7315  1600  0832               	movf	?___fttol,w
  7316  1601  1683               	bsf	3,5	;RP0=1, select bank1
  7317  1602  1303               	bcf	3,6	;RP1=0, select bank1
  7318  1603  01B0               	clrf	ISR@delta^(0+128)
  7319  1604  07B0               	addwf	ISR@delta^(0+128),f
  7320                           
  7321                           ;main.c: 255: float x = 0;
  7322  1605  3000               	movlw	0
  7323  1606  00C5               	movwf	ISR@x^(0+128)
  7324  1607  3000               	movlw	0
  7325  1608  00C6               	movwf	(ISR@x+1)^(0+128)
  7326  1609  3000               	movlw	0
  7327  160A  00C7               	movwf	(ISR@x+2)^(0+128)
  7328                           
  7329                           ;main.c: 256: float rule = 0;
  7330  160B  3000               	movlw	0
  7331  160C  00C0               	movwf	ISR@rule^(0+128)
  7332  160D  3000               	movlw	0
  7333  160E  00C1               	movwf	(ISR@rule+1)^(0+128)
  7334  160F  3000               	movlw	0
  7335  1610  00C2               	movwf	(ISR@rule+2)^(0+128)
  7336                           
  7337                           ;main.c: 259: if (erro_atual <= 100) {
  7338  1611  085B               	movf	(_erro_atual+1)^(0+128),w
  7339  1612  3A80               	xorlw	128
  7340  1613  00FF               	movwf	127
  7341  1614  3080               	movlw	128
  7342  1615  027F               	subwf	127,w
  7343  1616  1D03               	skipz
  7344  1617  2E1A               	goto	u554_25
  7345  1618  3065               	movlw	101
  7346  1619  025A               	subwf	_erro_atual^(0+128),w
  7347  161A                     u554_25:	
  7348  161A  120A  158A  1803   	skipnc
  7349  161D  2AC9               	goto	i1l3884
  7350                           
  7351                           ;main.c: 262: rule = trapmf(erro_atual, -1, 0, 1, 100);
  7352  161E  1683               	bsf	3,5	;RP0=1, select bank1
  7353  161F  1303               	bcf	3,6	;RP1=0, select bank1
  7354  1620  085B               	movf	(_erro_atual+1)^(0+128),w
  7355  1621  01F9               	clrf	___awtoft@c+1
  7356  1622  07F9               	addwf	___awtoft@c+1,f
  7357  1623  085A               	movf	_erro_atual^(0+128),w
  7358  1624  01F8               	clrf	___awtoft@c
  7359  1625  07F8               	addwf	___awtoft@c,f
  7360  1626  160A  118A  2190  160A  118A  	fcall	___awtoft
  7361  162B  0878               	movf	?___awtoft,w
  7362  162C  1283               	bcf	3,5	;RP0=0, select bank0
  7363  162D  1303               	bcf	3,6	;RP1=0, select bank0
  7364  162E  00C0               	movwf	trapmf@x
  7365  162F  0879               	movf	?___awtoft+1,w
  7366  1630  00C1               	movwf	trapmf@x+1
  7367  1631  087A               	movf	?___awtoft+2,w
  7368  1632  00C2               	movwf	trapmf@x+2
  7369  1633  3000               	movlw	0
  7370  1634  00C3               	movwf	trapmf@a
  7371  1635  3080               	movlw	128
  7372  1636  00C4               	movwf	trapmf@a+1
  7373  1637  30BF               	movlw	191
  7374  1638  00C5               	movwf	trapmf@a+2
  7375  1639  3000               	movlw	0
  7376  163A  00C6               	movwf	trapmf@b
  7377  163B  3000               	movlw	0
  7378  163C  00C7               	movwf	trapmf@b+1
  7379  163D  3000               	movlw	0
  7380  163E  00C8               	movwf	trapmf@b+2
  7381  163F  3000               	movlw	0
  7382  1640  00C9               	movwf	trapmf@c
  7383  1641  3080               	movlw	128
  7384  1642  00CA               	movwf	trapmf@c+1
  7385  1643  303F               	movlw	63
  7386  1644  00CB               	movwf	trapmf@c+2
  7387  1645  3000               	movlw	0
  7388  1646  00CC               	movwf	trapmf@d
  7389  1647  30C8               	movlw	200
  7390  1648  00CD               	movwf	trapmf@d+1
  7391  1649  3042               	movlw	66
  7392  164A  00CE               	movwf	trapmf@d+2
  7393  164B  120A  158A  26AA   	fcall	_trapmf
  7394  164E  1283               	bcf	3,5	;RP0=0, select bank0
  7395  164F  120A  158A  2883   	ljmp	L16
  7396                           
  7397                           	psect	text17_split_4
  7398  0883                     L16:	
  7399  0883  1303               	bcf	3,6	;RP1=0, select bank0
  7400  0884  0840               	movf	?_trapmf,w
  7401  0885  1683               	bsf	3,5	;RP0=1, select bank1
  7402  0886  1303               	bcf	3,6	;RP1=0, select bank1
  7403  0887  00C0               	movwf	ISR@rule^(0+128)
  7404  0888  1283               	bcf	3,5	;RP0=0, select bank0
  7405  0889  1303               	bcf	3,6	;RP1=0, select bank0
  7406  088A  0841               	movf	?_trapmf+1,w
  7407  088B  1683               	bsf	3,5	;RP0=1, select bank1
  7408  088C  1303               	bcf	3,6	;RP1=0, select bank1
  7409  088D  00C1               	movwf	(ISR@rule+1)^(0+128)
  7410  088E  1283               	bcf	3,5	;RP0=0, select bank0
  7411  088F  1303               	bcf	3,6	;RP1=0, select bank0
  7412  0890  0842               	movf	?_trapmf+2,w
  7413  0891  1683               	bsf	3,5	;RP0=1, select bank1
  7414  0892  1303               	bcf	3,6	;RP1=0, select bank1
  7415  0893  00C2               	movwf	(ISR@rule+2)^(0+128)
  7416                           
  7417                           ;main.c: 264: x = 0;
  7418  0894  3000               	movlw	0
  7419  0895  00C5               	movwf	ISR@x^(0+128)
  7420  0896  3000               	movlw	0
  7421  0897  00C6               	movwf	(ISR@x+1)^(0+128)
  7422  0898  3000               	movlw	0
  7423  0899  00C7               	movwf	(ISR@x+2)^(0+128)
  7424                           
  7425                           ;main.c: 265: for (int a = 0; a <= 15; a++) {
  7426  089A  01B5               	clrf	ISR@a^(0+128)
  7427  089B  01B6               	clrf	(ISR@a+1)^(0+128)
  7428  089C  0836               	movf	(ISR@a+1)^(0+128),w
  7429  089D  3A80               	xorlw	128
  7430  089E  00FF               	movwf	127
  7431  089F  3080               	movlw	128
  7432  08A0  027F               	subwf	127,w
  7433  08A1  1D03               	skipz
  7434  08A2  28A5               	goto	u555_25
  7435  08A3  3010               	movlw	16
  7436  08A4  0235               	subwf	ISR@a^(0+128),w
  7437  08A5                     u555_25:	
  7438  08A5  120A  158A  1803   	btfsc	3,0
  7439  08A8  2AC9               	goto	i1l3884
  7440  08A9                     i1l3874:	
  7441                           
  7442                           ;main.c: 266: rBaixo[a] = trapmf(x, -1, 0, 0, 5);
  7443  08A9  3003               	movlw	3
  7444  08AA  1283               	bcf	3,5	;RP0=0, select bank0
  7445  08AB  1303               	bcf	3,6	;RP1=0, select bank0
  7446  08AC  00E2               	movwf	??_ISR
  7447  08AD  0862               	movf	??_ISR,w
  7448  08AE  00F0               	movwf	___bmul@multiplicand
  7449  08AF  1683               	bsf	3,5	;RP0=1, select bank1
  7450  08B0  1303               	bcf	3,6	;RP1=0, select bank1
  7451  08B1  0835               	movf	ISR@a^(0+128),w
  7452  08B2  120A  118A  27EC  120A  158A  	fcall	___bmul
  7453  08B7  3E90               	addlw	_rBaixo& (0+255)
  7454  08B8  0084               	movwf	4
  7455  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  7456  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  7457  08BB  0845               	movf	ISR@x^(0+128),w
  7458  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  7459  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  7460  08BE  00C0               	movwf	trapmf@x
  7461  08BF  1683               	bsf	3,5	;RP0=1, select bank1
  7462  08C0  1303               	bcf	3,6	;RP1=0, select bank1
  7463  08C1  0846               	movf	(ISR@x+1)^(0+128),w
  7464  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7465  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  7466  08C4  00C1               	movwf	trapmf@x+1
  7467  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  7468  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  7469  08C7  0847               	movf	(ISR@x+2)^(0+128),w
  7470  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  7471  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  7472  08CA  00C2               	movwf	trapmf@x+2
  7473  08CB  3000               	movlw	0
  7474  08CC  00C3               	movwf	trapmf@a
  7475  08CD  3080               	movlw	128
  7476  08CE  00C4               	movwf	trapmf@a+1
  7477  08CF  30BF               	movlw	191
  7478  08D0  00C5               	movwf	trapmf@a+2
  7479  08D1  3000               	movlw	0
  7480  08D2  00C6               	movwf	trapmf@b
  7481  08D3  3000               	movlw	0
  7482  08D4  00C7               	movwf	trapmf@b+1
  7483  08D5  3000               	movlw	0
  7484  08D6  00C8               	movwf	trapmf@b+2
  7485  08D7  3000               	movlw	0
  7486  08D8  00C9               	movwf	trapmf@c
  7487  08D9  3000               	movlw	0
  7488  08DA  00CA               	movwf	trapmf@c+1
  7489  08DB  3000               	movlw	0
  7490  08DC  00CB               	movwf	trapmf@c+2
  7491  08DD  3000               	movlw	0
  7492  08DE  00CC               	movwf	trapmf@d
  7493  08DF  30A0               	movlw	160
  7494  08E0  00CD               	movwf	trapmf@d+1
  7495  08E1  3040               	movlw	64
  7496  08E2  00CE               	movwf	trapmf@d+2
  7497  08E3  120A  158A  26AA  120A  158A  	fcall	_trapmf
  7498  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  7499  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  7500  08EA  0840               	movf	?_trapmf,w
  7501  08EB  1783               	bsf	3,7	;select IRP bank3
  7502  08EC  0080               	movwf	0
  7503  08ED  0A84               	incf	4,f
  7504  08EE  0841               	movf	?_trapmf+1,w
  7505  08EF  0080               	movwf	0
  7506  08F0  0A84               	incf	4,f
  7507  08F1  0842               	movf	?_trapmf+2,w
  7508  08F2  0080               	movwf	0
  7509                           
  7510                           ;main.c: 267: if (rBaixo[a] >= rule) {
  7511  08F3  3003               	movlw	3
  7512  08F4  00E2               	movwf	??_ISR
  7513  08F5  0862               	movf	??_ISR,w
  7514  08F6  00F0               	movwf	___bmul@multiplicand
  7515  08F7  1683               	bsf	3,5	;RP0=1, select bank1
  7516  08F8  1303               	bcf	3,6	;RP1=0, select bank1
  7517  08F9  0835               	movf	ISR@a^(0+128),w
  7518  08FA  120A  118A  27EC  120A  158A  	fcall	___bmul
  7519  08FF  3E90               	addlw	_rBaixo& (0+255)
  7520  0900  0084               	movwf	4
  7521  0901  1783               	bsf	3,7	;select IRP bank3
  7522  0902  0800               	movf	0,w
  7523  0903  00F4               	movwf	___ftge@ff1
  7524  0904  0A84               	incf	4,f
  7525  0905  0800               	movf	0,w
  7526  0906  00F5               	movwf	___ftge@ff1+1
  7527  0907  0A84               	incf	4,f
  7528  0908  0800               	movf	0,w
  7529  0909  00F6               	movwf	___ftge@ff1+2
  7530  090A  1683               	bsf	3,5	;RP0=1, select bank1
  7531  090B  1303               	bcf	3,6	;RP1=0, select bank1
  7532  090C  0840               	movf	ISR@rule^(0+128),w
  7533  090D  00F7               	movwf	___ftge@ff2
  7534  090E  0841               	movf	(ISR@rule+1)^(0+128),w
  7535  090F  00F8               	movwf	___ftge@ff2+1
  7536  0910  0842               	movf	(ISR@rule+2)^(0+128),w
  7537  0911  00F9               	movwf	___ftge@ff2+2
  7538  0912  160A  118A  23F0  120A  158A  	fcall	___ftge
  7539  0917  1C03               	btfss	3,0
  7540  0918  2919               	ljmp	L19
  7541  0919                     L19:	
  7542  0919  120A  158A  2A6B   	ljmp	L17
  7543                           
  7544                           	psect	text17_split_5
  7545  0A6B                     L17:	
  7546  0A6B  2A87               	goto	i1l3878
  7547                           
  7548                           ;main.c: 268: rBaixo[a] = rule;
  7549  0A6C  3003               	movlw	3
  7550  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  7551  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  7552  0A6F  00E2               	movwf	??_ISR
  7553  0A70  0862               	movf	??_ISR,w
  7554  0A71  00F0               	movwf	___bmul@multiplicand
  7555  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  7556  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  7557  0A74  0835               	movf	ISR@a^(0+128),w
  7558  0A75  120A  118A  27EC  120A  158A  	fcall	___bmul
  7559  0A7A  3E90               	addlw	_rBaixo& (0+255)
  7560  0A7B  0084               	movwf	4
  7561  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
  7562  0A7D  1303               	bcf	3,6	;RP1=0, select bank1
  7563  0A7E  0840               	movf	ISR@rule^(0+128),w
  7564  0A7F  1783               	bsf	3,7	;select IRP bank3
  7565  0A80  0080               	movwf	0
  7566  0A81  0A84               	incf	4,f
  7567  0A82  0841               	movf	(ISR@rule+1)^(0+128),w
  7568  0A83  0080               	movwf	0
  7569  0A84  0A84               	incf	4,f
  7570  0A85  0842               	movf	(ISR@rule+2)^(0+128),w
  7571  0A86  0080               	movwf	0
  7572  0A87                     i1l3878:	
  7573                           
  7574                           ;main.c: 269: }
  7575                           ;main.c: 271: x += 1;
  7576  0A87  3000               	movlw	0
  7577  0A88  1283               	bcf	3,5	;RP0=0, select bank0
  7578  0A89  1303               	bcf	3,6	;RP1=0, select bank0
  7579  0A8A  00A3               	movwf	___ftadd@f1
  7580  0A8B  3080               	movlw	128
  7581  0A8C  00A4               	movwf	___ftadd@f1+1
  7582  0A8D  303F               	movlw	63
  7583  0A8E  00A5               	movwf	___ftadd@f1+2
  7584  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  7585  0A90  1303               	bcf	3,6	;RP1=0, select bank1
  7586  0A91  0845               	movf	ISR@x^(0+128),w
  7587  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  7588  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  7589  0A94  00A6               	movwf	___ftadd@f2
  7590  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  7591  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  7592  0A97  0846               	movf	(ISR@x+1)^(0+128),w
  7593  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  7594  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  7595  0A9A  00A7               	movwf	___ftadd@f2+1
  7596  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  7597  0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  7598  0A9D  0847               	movf	(ISR@x+2)^(0+128),w
  7599  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  7600  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  7601  0AA0  00A8               	movwf	___ftadd@f2+2
  7602  0AA1  120A  158A  25A1  120A  158A  	fcall	___ftadd
  7603  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  7604  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  7605  0AA8  0823               	movf	?___ftadd,w
  7606  0AA9  1683               	bsf	3,5	;RP0=1, select bank1
  7607  0AAA  1303               	bcf	3,6	;RP1=0, select bank1
  7608  0AAB  00C5               	movwf	ISR@x^(0+128)
  7609  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  7610  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  7611  0AAE  0824               	movf	?___ftadd+1,w
  7612  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  7613  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  7614  0AB1  00C6               	movwf	(ISR@x+1)^(0+128)
  7615  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  7616  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  7617  0AB4  0825               	movf	?___ftadd+2,w
  7618  0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  7619  0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  7620  0AB7  00C7               	movwf	(ISR@x+2)^(0+128)
  7621  0AB8  3001               	movlw	1
  7622  0AB9  07B5               	addwf	ISR@a^(0+128),f
  7623  0ABA  1803               	skipnc
  7624  0ABB  0AB6               	incf	(ISR@a+1)^(0+128),f
  7625  0ABC  3000               	movlw	0
  7626  0ABD  07B6               	addwf	(ISR@a+1)^(0+128),f
  7627  0ABE  0836               	movf	(ISR@a+1)^(0+128),w
  7628  0ABF  3A80               	xorlw	128
  7629  0AC0  00FF               	movwf	127
  7630  0AC1  3080               	movlw	128
  7631  0AC2  027F               	subwf	127,w
  7632  0AC3  1D03               	skipz
  7633  0AC4  2AC7               	goto	u557_25
  7634  0AC5  3010               	movlw	16
  7635  0AC6  0235               	subwf	ISR@a^(0+128),w
  7636  0AC7                     u557_25:	
  7637  0AC7  1C03               	skipc
  7638  0AC8  2B19               	goto	L23
  7639  0AC9                     i1l3884:	
  7640                           
  7641                           ;main.c: 272: }
  7642                           ;main.c: 273: }
  7643                           ;main.c: 277: if (erro_atual >= 100 && erro_atual <= 1001 && delta <= 200) {
  7644  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  7645  0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  7646  0ACB  085B               	movf	(_erro_atual+1)^(0+128),w
  7647  0ACC  3A80               	xorlw	128
  7648  0ACD  00FF               	movwf	127
  7649  0ACE  3080               	movlw	128
  7650  0ACF  027F               	subwf	127,w
  7651  0AD0  1D03               	skipz
  7652  0AD1  2AD4               	goto	u558_25
  7653  0AD2  3064               	movlw	100
  7654  0AD3  025A               	subwf	_erro_atual^(0+128),w
  7655  0AD4                     u558_25:	
  7656  0AD4  1C03               	skipc
  7657  0AD5  2B1C               	goto	L25
  7658  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  7659  0AD7  1303               	bcf	3,6	;RP1=0, select bank1
  7660  0AD8  085B               	movf	(_erro_atual+1)^(0+128),w
  7661  0AD9  3A80               	xorlw	128
  7662  0ADA  00FF               	movwf	127
  7663  0ADB  3083               	movlw	131
  7664  0ADC  027F               	subwf	127,w
  7665  0ADD  1D03               	skipz
  7666  0ADE  2AE1               	goto	u559_25
  7667  0ADF  30EA               	movlw	234
  7668  0AE0  025A               	subwf	_erro_atual^(0+128),w
  7669  0AE1                     u559_25:	
  7670  0AE1  1803               	skipnc
  7671  0AE2  2B1C               	goto	L25
  7672  0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  7673  0AE4  1303               	bcf	3,6	;RP1=0, select bank1
  7674  0AE5  0831               	movf	(ISR@delta+1)^(0+128),w
  7675  0AE6  3A80               	xorlw	128
  7676  0AE7  00FF               	movwf	127
  7677  0AE8  3080               	movlw	128
  7678  0AE9  027F               	subwf	127,w
  7679  0AEA  1D03               	skipz
  7680  0AEB  2AEE               	goto	u560_25
  7681  0AEC  30C9               	movlw	201
  7682  0AED  0230               	subwf	ISR@delta^(0+128),w
  7683  0AEE                     u560_25:	
  7684  0AEE  1803               	skipnc
  7685  0AEF  2B1C               	goto	L25
  7686                           
  7687                           ;main.c: 279: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  7688                           ;main.c: 280: (1 - trapmf(delta, -1, 0, 1, 200));
  7689  0AF0  3000               	movlw	0
  7690  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  7691  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  7692  0AF3  00CC               	movwf	trapmf@d
  7693  0AF4  3048               	movlw	72
  7694  0AF5  00CD               	movwf	trapmf@d+1
  7695  0AF6  3043               	movlw	67
  7696  0AF7  00CE               	movwf	trapmf@d+2
  7697  0AF8  3000               	movlw	0
  7698  0AF9  00C9               	movwf	trapmf@c
  7699  0AFA  3080               	movlw	128
  7700  0AFB  00CA               	movwf	trapmf@c+1
  7701  0AFC  303F               	movlw	63
  7702  0AFD  00CB               	movwf	trapmf@c+2
  7703  0AFE  3000               	movlw	0
  7704  0AFF  00C6               	movwf	trapmf@b
  7705  0B00  3000               	movlw	0
  7706  0B01  00C7               	movwf	trapmf@b+1
  7707  0B02  3000               	movlw	0
  7708  0B03  00C8               	movwf	trapmf@b+2
  7709  0B04  3000               	movlw	0
  7710  0B05  00C3               	movwf	trapmf@a
  7711  0B06  3080               	movlw	128
  7712  0B07  00C4               	movwf	trapmf@a+1
  7713  0B08  30BF               	movlw	191
  7714  0B09  00C5               	movwf	trapmf@a+2
  7715  0B0A  1683               	bsf	3,5	;RP0=1, select bank1
  7716  0B0B  1303               	bcf	3,6	;RP1=0, select bank1
  7717  0B0C  0831               	movf	(ISR@delta+1)^(0+128),w
  7718  0B0D  01F9               	clrf	___awtoft@c+1
  7719  0B0E  07F9               	addwf	___awtoft@c+1,f
  7720  0B0F  0830               	movf	ISR@delta^(0+128),w
  7721  0B10  01F8               	clrf	___awtoft@c
  7722  0B11  07F8               	addwf	___awtoft@c,f
  7723  0B12  160A  118A  2190   	fcall	___awtoft
  7724  0B15  0878               	movf	?___awtoft,w
  7725  0B16  160A  118A  2CB9   	ljmp	L21
  7726  0B19                     L23:	
  7727  0B19  120A  118A  2FE9   	ljmp	L20
  7728  0B1C                     L25:	
  7729  0B1C  120A  118A  2951   	ljmp	i1l3910
  7730                           
  7731                           	psect	text17_split_6
  7732  14B9                     L21:	
  7733  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  7734  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  7735  14BB  00C0               	movwf	trapmf@x
  7736  14BC  0879               	movf	?___awtoft+1,w
  7737  14BD  00C1               	movwf	trapmf@x+1
  7738  14BE  087A               	movf	?___awtoft+2,w
  7739  14BF  00C2               	movwf	trapmf@x+2
  7740  14C0  120A  158A  26AA  160A  118A  	fcall	_trapmf
  7741  14C5  1283               	bcf	3,5	;RP0=0, select bank0
  7742  14C6  1303               	bcf	3,6	;RP1=0, select bank0
  7743  14C7  0840               	movf	?_trapmf,w
  7744  14C8  1683               	bsf	3,5	;RP0=1, select bank1
  7745  14C9  1303               	bcf	3,6	;RP1=0, select bank1
  7746  14CA  00A2               	movwf	_ISR$1671^(0+128)
  7747  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  7748  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  7749  14CD  0841               	movf	?_trapmf+1,w
  7750  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  7751  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  7752  14D0  00A3               	movwf	(_ISR$1671+1)^(0+128)
  7753  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  7754  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  7755  14D3  0842               	movf	?_trapmf+2,w
  7756  14D4  1683               	bsf	3,5	;RP0=1, select bank1
  7757  14D5  1303               	bcf	3,6	;RP1=0, select bank1
  7758  14D6  00A4               	movwf	(_ISR$1671+2)^(0+128)
  7759                           
  7760                           ;main.c: 279: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  7761                           ;main.c: 280: (1 - trapmf(delta, -1, 0, 1, 200));
  7762  14D7  30C0               	movlw	192
  7763  14D8  1283               	bcf	3,5	;RP0=0, select bank0
  7764  14D9  1303               	bcf	3,6	;RP1=0, select bank0
  7765  14DA  00CC               	movwf	trapmf@d
  7766  14DB  30C1               	movlw	193
  7767  14DC  00CD               	movwf	trapmf@d+1
  7768  14DD  3044               	movlw	68
  7769  14DE  00CE               	movwf	trapmf@d+2
  7770  14DF  3000               	movlw	0
  7771  14E0  00C9               	movwf	trapmf@c
  7772  14E1  3048               	movlw	72
  7773  14E2  00CA               	movwf	trapmf@c+1
  7774  14E3  3044               	movlw	68
  7775  14E4  00CB               	movwf	trapmf@c+2
  7776  14E5  3000               	movlw	0
  7777  14E6  00C6               	movwf	trapmf@b
  7778  14E7  3048               	movlw	72
  7779  14E8  00C7               	movwf	trapmf@b+1
  7780  14E9  3044               	movlw	68
  7781  14EA  00C8               	movwf	trapmf@b+2
  7782  14EB  3000               	movlw	0
  7783  14EC  00C3               	movwf	trapmf@a
  7784  14ED  3048               	movlw	72
  7785  14EE  00C4               	movwf	trapmf@a+1
  7786  14EF  3042               	movlw	66
  7787  14F0  00C5               	movwf	trapmf@a+2
  7788  14F1  1683               	bsf	3,5	;RP0=1, select bank1
  7789  14F2  1303               	bcf	3,6	;RP1=0, select bank1
  7790  14F3  085B               	movf	(_erro_atual+1)^(0+128),w
  7791  14F4  01F9               	clrf	___awtoft@c+1
  7792  14F5  07F9               	addwf	___awtoft@c+1,f
  7793  14F6  085A               	movf	_erro_atual^(0+128),w
  7794  14F7  01F8               	clrf	___awtoft@c
  7795  14F8  07F8               	addwf	___awtoft@c,f
  7796  14F9  160A  118A  2190  160A  118A  	fcall	___awtoft
  7797  14FE  0878               	movf	?___awtoft,w
  7798  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  7799  1500  1303               	bcf	3,6	;RP1=0, select bank0
  7800  1501  00C0               	movwf	trapmf@x
  7801  1502  0879               	movf	?___awtoft+1,w
  7802  1503  00C1               	movwf	trapmf@x+1
  7803  1504  087A               	movf	?___awtoft+2,w
  7804  1505  00C2               	movwf	trapmf@x+2
  7805  1506  120A  158A  26AA  160A  118A  	fcall	_trapmf
  7806  150B  1283               	bcf	3,5	;RP0=0, select bank0
  7807  150C  1303               	bcf	3,6	;RP1=0, select bank0
  7808  150D  0840               	movf	?_trapmf,w
  7809  150E  00D2               	movwf	___ftmul@f1
  7810  150F  0841               	movf	?_trapmf+1,w
  7811  1510  00D3               	movwf	___ftmul@f1+1
  7812  1511  0842               	movf	?_trapmf+2,w
  7813  1512  00D4               	movwf	___ftmul@f1+2
  7814  1513  3000               	movlw	0
  7815  1514  00A3               	movwf	___ftadd@f1
  7816  1515  3080               	movlw	128
  7817  1516  00A4               	movwf	___ftadd@f1+1
  7818  1517  303F               	movlw	63
  7819  1518  00A5               	movwf	___ftadd@f1+2
  7820  1519  1683               	bsf	3,5	;RP0=1, select bank1
  7821  151A  1303               	bcf	3,6	;RP1=0, select bank1
  7822  151B  0822               	movf	_ISR$1671^(0+128),w
  7823  151C  1283               	bcf	3,5	;RP0=0, select bank0
  7824  151D  1303               	bcf	3,6	;RP1=0, select bank0
  7825  151E  00A0               	movwf	___ftneg@f1
  7826  151F  1683               	bsf	3,5	;RP0=1, select bank1
  7827  1520  1303               	bcf	3,6	;RP1=0, select bank1
  7828  1521  0823               	movf	(_ISR$1671+1)^(0+128),w
  7829  1522  1283               	bcf	3,5	;RP0=0, select bank0
  7830  1523  1303               	bcf	3,6	;RP1=0, select bank0
  7831  1524  00A1               	movwf	___ftneg@f1+1
  7832  1525  1683               	bsf	3,5	;RP0=1, select bank1
  7833  1526  1303               	bcf	3,6	;RP1=0, select bank1
  7834  1527  0824               	movf	(_ISR$1671+2)^(0+128),w
  7835  1528  1283               	bcf	3,5	;RP0=0, select bank0
  7836  1529  1303               	bcf	3,6	;RP1=0, select bank0
  7837  152A  00A2               	movwf	___ftneg@f1+2
  7838  152B  160A  118A  206A  160A  118A  	fcall	___ftneg
  7839  1530  1283               	bcf	3,5	;RP0=0, select bank0
  7840  1531  1303               	bcf	3,6	;RP1=0, select bank0
  7841  1532  0820               	movf	?___ftneg,w
  7842  1533  00A6               	movwf	___ftadd@f2
  7843  1534  0821               	movf	?___ftneg+1,w
  7844  1535  00A7               	movwf	___ftadd@f2+1
  7845  1536  0822               	movf	?___ftneg+2,w
  7846  1537  00A8               	movwf	___ftadd@f2+2
  7847  1538  120A  158A  25A1   	fcall	___ftadd
  7848  153B  1283               	bcf	3,5	;RP0=0, select bank0
  7849  153C  120A  118A  2853   	ljmp	L26
  7850                           
  7851                           	psect	text17_split_7
  7852  0053                     L26:	
  7853  0053  1303               	bcf	3,6	;RP1=0, select bank0
  7854  0054  0823               	movf	?___ftadd,w
  7855  0055  00D5               	movwf	___ftmul@f2
  7856  0056  0824               	movf	?___ftadd+1,w
  7857  0057  00D6               	movwf	___ftmul@f2+1
  7858  0058  0825               	movf	?___ftadd+2,w
  7859  0059  00D7               	movwf	___ftmul@f2+2
  7860  005A  120A  158A  23D7  120A  118A  	fcall	___ftmul
  7861  005F  1283               	bcf	3,5	;RP0=0, select bank0
  7862  0060  1303               	bcf	3,6	;RP1=0, select bank0
  7863  0061  0852               	movf	?___ftmul,w
  7864  0062  1683               	bsf	3,5	;RP0=1, select bank1
  7865  0063  1303               	bcf	3,6	;RP1=0, select bank1
  7866  0064  00C0               	movwf	ISR@rule^(0+128)
  7867  0065  1283               	bcf	3,5	;RP0=0, select bank0
  7868  0066  1303               	bcf	3,6	;RP1=0, select bank0
  7869  0067  0853               	movf	?___ftmul+1,w
  7870  0068  1683               	bsf	3,5	;RP0=1, select bank1
  7871  0069  1303               	bcf	3,6	;RP1=0, select bank1
  7872  006A  00C1               	movwf	(ISR@rule+1)^(0+128)
  7873  006B  1283               	bcf	3,5	;RP0=0, select bank0
  7874  006C  1303               	bcf	3,6	;RP1=0, select bank0
  7875  006D  0854               	movf	?___ftmul+2,w
  7876  006E  1683               	bsf	3,5	;RP0=1, select bank1
  7877  006F  1303               	bcf	3,6	;RP1=0, select bank1
  7878  0070  00C2               	movwf	(ISR@rule+2)^(0+128)
  7879                           
  7880                           ;main.c: 282: x = 0;
  7881  0071  3000               	movlw	0
  7882  0072  00C5               	movwf	ISR@x^(0+128)
  7883  0073  3000               	movlw	0
  7884  0074  00C6               	movwf	(ISR@x+1)^(0+128)
  7885  0075  3000               	movlw	0
  7886  0076  00C7               	movwf	(ISR@x+2)^(0+128)
  7887                           
  7888                           ;main.c: 283: for (int a = 0; a <= 15; a++) {
  7889  0077  01B7               	clrf	ISR@a_247^(0+128)
  7890  0078  01B8               	clrf	(ISR@a_247+1)^(0+128)
  7891  0079  0838               	movf	(ISR@a_247+1)^(0+128),w
  7892  007A  3A80               	xorlw	128
  7893  007B  00FF               	movwf	127
  7894  007C  3080               	movlw	128
  7895  007D  027F               	subwf	127,w
  7896  007E  1D03               	skipz
  7897  007F  2882               	goto	u561_25
  7898  0080  3010               	movlw	16
  7899  0081  0237               	subwf	ISR@a_247^(0+128),w
  7900  0082                     u561_25:	
  7901  0082  1803               	btfsc	3,0
  7902  0083  2951               	goto	i1l3910
  7903  0084                     i1l3900:	
  7904                           
  7905                           ;main.c: 284: rBaixo[a] = trapmf(x, 2, 5, 5, 10);
  7906  0084  3003               	movlw	3
  7907  0085  1283               	bcf	3,5	;RP0=0, select bank0
  7908  0086  1303               	bcf	3,6	;RP1=0, select bank0
  7909  0087  00E2               	movwf	??_ISR
  7910  0088  0862               	movf	??_ISR,w
  7911  0089  00F0               	movwf	___bmul@multiplicand
  7912  008A  1683               	bsf	3,5	;RP0=1, select bank1
  7913  008B  1303               	bcf	3,6	;RP1=0, select bank1
  7914  008C  0837               	movf	ISR@a_247^(0+128),w
  7915  008D  120A  118A  27EC  120A  118A  	fcall	___bmul
  7916  0092  3E90               	addlw	_rBaixo& (0+255)
  7917  0093  0084               	movwf	4
  7918  0094  1683               	bsf	3,5	;RP0=1, select bank1
  7919  0095  1303               	bcf	3,6	;RP1=0, select bank1
  7920  0096  0845               	movf	ISR@x^(0+128),w
  7921  0097  1283               	bcf	3,5	;RP0=0, select bank0
  7922  0098  1303               	bcf	3,6	;RP1=0, select bank0
  7923  0099  00C0               	movwf	trapmf@x
  7924  009A  1683               	bsf	3,5	;RP0=1, select bank1
  7925  009B  1303               	bcf	3,6	;RP1=0, select bank1
  7926  009C  0846               	movf	(ISR@x+1)^(0+128),w
  7927  009D  1283               	bcf	3,5	;RP0=0, select bank0
  7928  009E  1303               	bcf	3,6	;RP1=0, select bank0
  7929  009F  00C1               	movwf	trapmf@x+1
  7930  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  7931  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  7932  00A2  0847               	movf	(ISR@x+2)^(0+128),w
  7933  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  7934  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  7935  00A5  00C2               	movwf	trapmf@x+2
  7936  00A6  3000               	movlw	0
  7937  00A7  00C3               	movwf	trapmf@a
  7938  00A8  3000               	movlw	0
  7939  00A9  00C4               	movwf	trapmf@a+1
  7940  00AA  3040               	movlw	64
  7941  00AB  00C5               	movwf	trapmf@a+2
  7942  00AC  3000               	movlw	0
  7943  00AD  00C6               	movwf	trapmf@b
  7944  00AE  30A0               	movlw	160
  7945  00AF  00C7               	movwf	trapmf@b+1
  7946  00B0  3040               	movlw	64
  7947  00B1  00C8               	movwf	trapmf@b+2
  7948  00B2  3000               	movlw	0
  7949  00B3  00C9               	movwf	trapmf@c
  7950  00B4  30A0               	movlw	160
  7951  00B5  00CA               	movwf	trapmf@c+1
  7952  00B6  3040               	movlw	64
  7953  00B7  00CB               	movwf	trapmf@c+2
  7954  00B8  3000               	movlw	0
  7955  00B9  00CC               	movwf	trapmf@d
  7956  00BA  3020               	movlw	32
  7957  00BB  00CD               	movwf	trapmf@d+1
  7958  00BC  3041               	movlw	65
  7959  00BD  00CE               	movwf	trapmf@d+2
  7960  00BE  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7961  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  7962  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  7963  00C5  0840               	movf	?_trapmf,w
  7964  00C6  1783               	bsf	3,7	;select IRP bank3
  7965  00C7  0080               	movwf	0
  7966  00C8  0A84               	incf	4,f
  7967  00C9  0841               	movf	?_trapmf+1,w
  7968  00CA  0080               	movwf	0
  7969  00CB  0A84               	incf	4,f
  7970  00CC  0842               	movf	?_trapmf+2,w
  7971  00CD  0080               	movwf	0
  7972                           
  7973                           ;main.c: 285: if (rBaixo[a] >= rule) {
  7974  00CE  3003               	movlw	3
  7975  00CF  00E2               	movwf	??_ISR
  7976  00D0  0862               	movf	??_ISR,w
  7977  00D1  00F0               	movwf	___bmul@multiplicand
  7978  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  7979  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  7980  00D4  0837               	movf	ISR@a_247^(0+128),w
  7981  00D5  120A  118A  27EC  120A  118A  	fcall	___bmul
  7982  00DA  3E90               	addlw	_rBaixo& (0+255)
  7983  00DB  0084               	movwf	4
  7984  00DC  1783               	bsf	3,7	;select IRP bank3
  7985  00DD  0800               	movf	0,w
  7986  00DE  00F4               	movwf	___ftge@ff1
  7987  00DF  0A84               	incf	4,f
  7988  00E0  0800               	movf	0,w
  7989  00E1  00F5               	movwf	___ftge@ff1+1
  7990  00E2  0A84               	incf	4,f
  7991  00E3  0800               	movf	0,w
  7992  00E4  00F6               	movwf	___ftge@ff1+2
  7993  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  7994  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  7995  00E7  0840               	movf	ISR@rule^(0+128),w
  7996  00E8  00F7               	movwf	___ftge@ff2
  7997  00E9  0841               	movf	(ISR@rule+1)^(0+128),w
  7998  00EA  00F8               	movwf	___ftge@ff2+1
  7999  00EB  0842               	movf	(ISR@rule+2)^(0+128),w
  8000  00EC  00F9               	movwf	___ftge@ff2+2
  8001  00ED  160A  118A  23F0  120A  118A  	fcall	___ftge
  8002  00F2  1C03               	btfss	3,0
  8003  00F3  290F               	goto	i1l3904
  8004                           
  8005                           ;main.c: 286: rBaixo[a] = rule;
  8006  00F4  3003               	movlw	3
  8007  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  8008  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  8009  00F7  00E2               	movwf	??_ISR
  8010  00F8  0862               	movf	??_ISR,w
  8011  00F9  00F0               	movwf	___bmul@multiplicand
  8012  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  8013  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  8014  00FC  0837               	movf	ISR@a_247^(0+128),w
  8015  00FD  120A  118A  27EC  120A  118A  	fcall	___bmul
  8016  0102  3E90               	addlw	_rBaixo& (0+255)
  8017  0103  0084               	movwf	4
  8018  0104  1683               	bsf	3,5	;RP0=1, select bank1
  8019  0105  1303               	bcf	3,6	;RP1=0, select bank1
  8020  0106  0840               	movf	ISR@rule^(0+128),w
  8021  0107  1783               	bsf	3,7	;select IRP bank3
  8022  0108  0080               	movwf	0
  8023  0109  0A84               	incf	4,f
  8024  010A  0841               	movf	(ISR@rule+1)^(0+128),w
  8025  010B  0080               	movwf	0
  8026  010C  0A84               	incf	4,f
  8027  010D  0842               	movf	(ISR@rule+2)^(0+128),w
  8028  010E  0080               	movwf	0
  8029  010F                     i1l3904:	
  8030                           
  8031                           ;main.c: 287: }
  8032                           ;main.c: 289: x += 1;
  8033  010F  3000               	movlw	0
  8034  0110  1283               	bcf	3,5	;RP0=0, select bank0
  8035  0111  1303               	bcf	3,6	;RP1=0, select bank0
  8036  0112  00A3               	movwf	___ftadd@f1
  8037  0113  3080               	movlw	128
  8038  0114  00A4               	movwf	___ftadd@f1+1
  8039  0115  303F               	movlw	63
  8040  0116  00A5               	movwf	___ftadd@f1+2
  8041  0117  1683               	bsf	3,5	;RP0=1, select bank1
  8042  0118  1303               	bcf	3,6	;RP1=0, select bank1
  8043  0119  0845               	movf	ISR@x^(0+128),w
  8044  011A  1283               	bcf	3,5	;RP0=0, select bank0
  8045  011B  1303               	bcf	3,6	;RP1=0, select bank0
  8046  011C  00A6               	movwf	___ftadd@f2
  8047  011D  1683               	bsf	3,5	;RP0=1, select bank1
  8048  011E  1303               	bcf	3,6	;RP1=0, select bank1
  8049  011F  0846               	movf	(ISR@x+1)^(0+128),w
  8050  0120  1283               	bcf	3,5	;RP0=0, select bank0
  8051  0121  1303               	bcf	3,6	;RP1=0, select bank0
  8052  0122  00A7               	movwf	___ftadd@f2+1
  8053  0123  1683               	bsf	3,5	;RP0=1, select bank1
  8054  0124  1303               	bcf	3,6	;RP1=0, select bank1
  8055  0125  0847               	movf	(ISR@x+2)^(0+128),w
  8056  0126  1283               	bcf	3,5	;RP0=0, select bank0
  8057  0127  1303               	bcf	3,6	;RP1=0, select bank0
  8058  0128  00A8               	movwf	___ftadd@f2+2
  8059  0129  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8060  012E  1283               	bcf	3,5	;RP0=0, select bank0
  8061  012F  1303               	bcf	3,6	;RP1=0, select bank0
  8062  0130  0823               	movf	?___ftadd,w
  8063  0131  1683               	bsf	3,5	;RP0=1, select bank1
  8064  0132  1303               	bcf	3,6	;RP1=0, select bank1
  8065  0133  00C5               	movwf	ISR@x^(0+128)
  8066  0134  1283               	bcf	3,5	;RP0=0, select bank0
  8067  0135  1303               	bcf	3,6	;RP1=0, select bank0
  8068  0136  0824               	movf	?___ftadd+1,w
  8069  0137  1683               	bsf	3,5	;RP0=1, select bank1
  8070  0138  1303               	bcf	3,6	;RP1=0, select bank1
  8071  0139  00C6               	movwf	(ISR@x+1)^(0+128)
  8072  013A  1283               	bcf	3,5	;RP0=0, select bank0
  8073  013B  1303               	bcf	3,6	;RP1=0, select bank0
  8074  013C  0825               	movf	?___ftadd+2,w
  8075  013D  1683               	bsf	3,5	;RP0=1, select bank1
  8076  013E  1303               	bcf	3,6	;RP1=0, select bank1
  8077  013F  00C7               	movwf	(ISR@x+2)^(0+128)
  8078  0140  3001               	movlw	1
  8079  0141  07B7               	addwf	ISR@a_247^(0+128),f
  8080  0142  1803               	skipnc
  8081  0143  0AB8               	incf	(ISR@a_247+1)^(0+128),f
  8082  0144  3000               	movlw	0
  8083  0145  07B8               	addwf	(ISR@a_247+1)^(0+128),f
  8084  0146  0838               	movf	(ISR@a_247+1)^(0+128),w
  8085  0147  3A80               	xorlw	128
  8086  0148  00FF               	movwf	127
  8087  0149  3080               	movlw	128
  8088  014A  027F               	subwf	127,w
  8089  014B  1D03               	skipz
  8090  014C  294F               	goto	u563_25
  8091  014D  3010               	movlw	16
  8092  014E  0237               	subwf	ISR@a_247^(0+128),w
  8093  014F                     u563_25:	
  8094  014F  1C03               	skipc
  8095  0150  2884               	goto	i1l3900
  8096  0151                     i1l3910:	
  8097                           
  8098                           ;main.c: 290: }
  8099                           ;main.c: 291: }
  8100                           ;main.c: 295: if (erro_atual >= 100 && erro_atual <= 1001 && delta >= 201) {
  8101  0151  1683               	bsf	3,5	;RP0=1, select bank1
  8102  0152  1303               	bcf	3,6	;RP1=0, select bank1
  8103  0153  085B               	movf	(_erro_atual+1)^(0+128),w
  8104  0154  3A80               	xorlw	128
  8105  0155  00FF               	movwf	127
  8106  0156  3080               	movlw	128
  8107  0157  027F               	subwf	127,w
  8108  0158  1D03               	skipz
  8109  0159  295C               	goto	u564_25
  8110  015A  3064               	movlw	100
  8111  015B  025A               	subwf	_erro_atual^(0+128),w
  8112  015C                     u564_25:	
  8113  015C  1C03               	skipc
  8114  015D  2AE5               	goto	i1l3936
  8115  015E  1683               	bsf	3,5	;RP0=1, select bank1
  8116  015F  1303               	bcf	3,6	;RP1=0, select bank1
  8117  0160  085B               	movf	(_erro_atual+1)^(0+128),w
  8118  0161  3A80               	xorlw	128
  8119  0162  00FF               	movwf	127
  8120  0163  3083               	movlw	131
  8121  0164  027F               	subwf	127,w
  8122  0165  1D03               	skipz
  8123  0166  2969               	goto	u565_25
  8124  0167  30EA               	movlw	234
  8125  0168  025A               	subwf	_erro_atual^(0+128),w
  8126  0169                     u565_25:	
  8127  0169  1803               	skipnc
  8128  016A  2AE5               	goto	i1l3936
  8129  016B  1683               	bsf	3,5	;RP0=1, select bank1
  8130  016C  1303               	bcf	3,6	;RP1=0, select bank1
  8131  016D  0831               	movf	(ISR@delta+1)^(0+128),w
  8132  016E  3A80               	xorlw	128
  8133  016F  00FF               	movwf	127
  8134  0170  3080               	movlw	128
  8135  0171  027F               	subwf	127,w
  8136  0172  1D03               	skipz
  8137  0173  2976               	goto	u566_25
  8138  0174  30C9               	movlw	201
  8139  0175  0230               	subwf	ISR@delta^(0+128),w
  8140  0176                     u566_25:	
  8141  0176  1C03               	skipc
  8142  0177  2AE5               	goto	i1l3936
  8143                           
  8144                           ;main.c: 297: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  8145                           ;main.c: 298: trapmf(delta, 200, 500, 2000, 2001);
  8146  0178  3020               	movlw	32
  8147  0179  1283               	bcf	3,5	;RP0=0, select bank0
  8148  017A  1303               	bcf	3,6	;RP1=0, select bank0
  8149  017B  00CC               	movwf	trapmf@d
  8150  017C  30FA               	movlw	250
  8151  017D  00CD               	movwf	trapmf@d+1
  8152  017E  3044               	movlw	68
  8153  017F  00CE               	movwf	trapmf@d+2
  8154  0180  3000               	movlw	0
  8155  0181  00C9               	movwf	trapmf@c
  8156  0182  30FA               	movlw	250
  8157  0183  00CA               	movwf	trapmf@c+1
  8158  0184  3044               	movlw	68
  8159  0185  00CB               	movwf	trapmf@c+2
  8160  0186  3000               	movlw	0
  8161  0187  00C6               	movwf	trapmf@b
  8162  0188  30FA               	movlw	250
  8163  0189  00C7               	movwf	trapmf@b+1
  8164  018A  3043               	movlw	67
  8165  018B  00C8               	movwf	trapmf@b+2
  8166  018C  3000               	movlw	0
  8167  018D  00C3               	movwf	trapmf@a
  8168  018E  3048               	movlw	72
  8169  018F  00C4               	movwf	trapmf@a+1
  8170  0190  3043               	movlw	67
  8171  0191  00C5               	movwf	trapmf@a+2
  8172  0192  1683               	bsf	3,5	;RP0=1, select bank1
  8173  0193  1303               	bcf	3,6	;RP1=0, select bank1
  8174  0194  0831               	movf	(ISR@delta+1)^(0+128),w
  8175  0195  01F9               	clrf	___awtoft@c+1
  8176  0196  07F9               	addwf	___awtoft@c+1,f
  8177  0197  0830               	movf	ISR@delta^(0+128),w
  8178  0198  01F8               	clrf	___awtoft@c
  8179  0199  07F8               	addwf	___awtoft@c,f
  8180  019A  160A  118A  2190  120A  118A  	fcall	___awtoft
  8181  019F  0878               	movf	?___awtoft,w
  8182  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  8183  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  8184  01A2  00C0               	movwf	trapmf@x
  8185  01A3  0879               	movf	?___awtoft+1,w
  8186  01A4  00C1               	movwf	trapmf@x+1
  8187  01A5  087A               	movf	?___awtoft+2,w
  8188  01A6  00C2               	movwf	trapmf@x+2
  8189  01A7  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8190  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  8191  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  8192  01AE  0840               	movf	?_trapmf,w
  8193  01AF  00D2               	movwf	___ftmul@f1
  8194  01B0  0841               	movf	?_trapmf+1,w
  8195  01B1  00D3               	movwf	___ftmul@f1+1
  8196  01B2  0842               	movf	?_trapmf+2,w
  8197  01B3  00D4               	movwf	___ftmul@f1+2
  8198  01B4  30C0               	movlw	192
  8199  01B5  00CC               	movwf	trapmf@d
  8200  01B6  30C1               	movlw	193
  8201  01B7  00CD               	movwf	trapmf@d+1
  8202  01B8  3044               	movlw	68
  8203  01B9  00CE               	movwf	trapmf@d+2
  8204  01BA  3000               	movlw	0
  8205  01BB  00C9               	movwf	trapmf@c
  8206  01BC  3048               	movlw	72
  8207  01BD  00CA               	movwf	trapmf@c+1
  8208  01BE  3044               	movlw	68
  8209  01BF  00CB               	movwf	trapmf@c+2
  8210  01C0  3000               	movlw	0
  8211  01C1  00C6               	movwf	trapmf@b
  8212  01C2  3048               	movlw	72
  8213  01C3  00C7               	movwf	trapmf@b+1
  8214  01C4  3044               	movlw	68
  8215  01C5  00C8               	movwf	trapmf@b+2
  8216  01C6  3000               	movlw	0
  8217  01C7  00C3               	movwf	trapmf@a
  8218  01C8  3048               	movlw	72
  8219  01C9  00C4               	movwf	trapmf@a+1
  8220  01CA  3042               	movlw	66
  8221  01CB  00C5               	movwf	trapmf@a+2
  8222  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  8223  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  8224  01CE  085B               	movf	(_erro_atual+1)^(0+128),w
  8225  01CF  01F9               	clrf	___awtoft@c+1
  8226  01D0  07F9               	addwf	___awtoft@c+1,f
  8227  01D1  085A               	movf	_erro_atual^(0+128),w
  8228  01D2  01F8               	clrf	___awtoft@c
  8229  01D3  07F8               	addwf	___awtoft@c,f
  8230  01D4  160A  118A  2190  120A  118A  	fcall	___awtoft
  8231  01D9  0878               	movf	?___awtoft,w
  8232  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  8233  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  8234  01DC  00C0               	movwf	trapmf@x
  8235  01DD  0879               	movf	?___awtoft+1,w
  8236  01DE  00C1               	movwf	trapmf@x+1
  8237  01DF  087A               	movf	?___awtoft+2,w
  8238  01E0  00C2               	movwf	trapmf@x+2
  8239  01E1  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8240  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  8241  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  8242  01E8  0840               	movf	?_trapmf,w
  8243  01E9  00D5               	movwf	___ftmul@f2
  8244  01EA  0841               	movf	?_trapmf+1,w
  8245  01EB  00D6               	movwf	___ftmul@f2+1
  8246  01EC  0842               	movf	?_trapmf+2,w
  8247  01ED  00D7               	movwf	___ftmul@f2+2
  8248  01EE  120A  158A  23D7  120A  118A  	fcall	___ftmul
  8249  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  8250  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  8251  01F5  0852               	movf	?___ftmul,w
  8252  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  8253  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  8254  01F8  00C0               	movwf	ISR@rule^(0+128)
  8255  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  8256  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  8257  01FB  0853               	movf	?___ftmul+1,w
  8258  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  8259  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  8260  01FE  00C1               	movwf	(ISR@rule+1)^(0+128)
  8261  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  8262  0200  1303               	bcf	3,6	;RP1=0, select bank0
  8263  0201  0854               	movf	?___ftmul+2,w
  8264  0202  1683               	bsf	3,5	;RP0=1, select bank1
  8265  0203  1303               	bcf	3,6	;RP1=0, select bank1
  8266  0204  00C2               	movwf	(ISR@rule+2)^(0+128)
  8267                           
  8268                           ;main.c: 300: x = 0;
  8269  0205  3000               	movlw	0
  8270  0206  00C5               	movwf	ISR@x^(0+128)
  8271  0207  3000               	movlw	0
  8272  0208  00C6               	movwf	(ISR@x+1)^(0+128)
  8273  0209  3000               	movlw	0
  8274  020A  00C7               	movwf	(ISR@x+2)^(0+128)
  8275                           
  8276                           ;main.c: 301: for (int a = 0; a <= 15; a++) {
  8277  020B  01B9               	clrf	ISR@a_248^(0+128)
  8278  020C  01BA               	clrf	(ISR@a_248+1)^(0+128)
  8279  020D  083A               	movf	(ISR@a_248+1)^(0+128),w
  8280  020E  3A80               	xorlw	128
  8281  020F  00FF               	movwf	127
  8282  0210  3080               	movlw	128
  8283  0211  027F               	subwf	127,w
  8284  0212  1D03               	skipz
  8285  0213  2A16               	goto	u567_25
  8286  0214  3010               	movlw	16
  8287  0215  0239               	subwf	ISR@a_248^(0+128),w
  8288  0216                     u567_25:	
  8289  0216  1803               	btfsc	3,0
  8290  0217  2AE5               	goto	i1l3936
  8291  0218                     i1l3926:	
  8292                           
  8293                           ;main.c: 302: rMedio[a] = trapmf(x, 2, 5, 5, 10);
  8294  0218  3003               	movlw	3
  8295  0219  1283               	bcf	3,5	;RP0=0, select bank0
  8296  021A  1303               	bcf	3,6	;RP1=0, select bank0
  8297  021B  00E2               	movwf	??_ISR
  8298  021C  0862               	movf	??_ISR,w
  8299  021D  00F0               	movwf	___bmul@multiplicand
  8300  021E  1683               	bsf	3,5	;RP0=1, select bank1
  8301  021F  1303               	bcf	3,6	;RP1=0, select bank1
  8302  0220  0839               	movf	ISR@a_248^(0+128),w
  8303  0221  120A  118A  27EC  120A  118A  	fcall	___bmul
  8304  0226  3E40               	addlw	_rMedio& (0+255)
  8305  0227  0084               	movwf	4
  8306  0228  1683               	bsf	3,5	;RP0=1, select bank1
  8307  0229  1303               	bcf	3,6	;RP1=0, select bank1
  8308  022A  0845               	movf	ISR@x^(0+128),w
  8309  022B  1283               	bcf	3,5	;RP0=0, select bank0
  8310  022C  1303               	bcf	3,6	;RP1=0, select bank0
  8311  022D  00C0               	movwf	trapmf@x
  8312  022E  1683               	bsf	3,5	;RP0=1, select bank1
  8313  022F  1303               	bcf	3,6	;RP1=0, select bank1
  8314  0230  0846               	movf	(ISR@x+1)^(0+128),w
  8315  0231  1283               	bcf	3,5	;RP0=0, select bank0
  8316  0232  1303               	bcf	3,6	;RP1=0, select bank0
  8317  0233  00C1               	movwf	trapmf@x+1
  8318  0234  1683               	bsf	3,5	;RP0=1, select bank1
  8319  0235  1303               	bcf	3,6	;RP1=0, select bank1
  8320  0236  0847               	movf	(ISR@x+2)^(0+128),w
  8321  0237  1283               	bcf	3,5	;RP0=0, select bank0
  8322  0238  1303               	bcf	3,6	;RP1=0, select bank0
  8323  0239  00C2               	movwf	trapmf@x+2
  8324  023A  3000               	movlw	0
  8325  023B  00C3               	movwf	trapmf@a
  8326  023C  3000               	movlw	0
  8327  023D  00C4               	movwf	trapmf@a+1
  8328  023E  3040               	movlw	64
  8329  023F  00C5               	movwf	trapmf@a+2
  8330  0240  3000               	movlw	0
  8331  0241  00C6               	movwf	trapmf@b
  8332  0242  30A0               	movlw	160
  8333  0243  00C7               	movwf	trapmf@b+1
  8334  0244  3040               	movlw	64
  8335  0245  00C8               	movwf	trapmf@b+2
  8336  0246  3000               	movlw	0
  8337  0247  00C9               	movwf	trapmf@c
  8338  0248  30A0               	movlw	160
  8339  0249  00CA               	movwf	trapmf@c+1
  8340  024A  3040               	movlw	64
  8341  024B  00CB               	movwf	trapmf@c+2
  8342  024C  3000               	movlw	0
  8343  024D  00CC               	movwf	trapmf@d
  8344  024E  3020               	movlw	32
  8345  024F  00CD               	movwf	trapmf@d+1
  8346  0250  3041               	movlw	65
  8347  0251  00CE               	movwf	trapmf@d+2
  8348  0252  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8349  0257  1283               	bcf	3,5	;RP0=0, select bank0
  8350  0258  1303               	bcf	3,6	;RP1=0, select bank0
  8351  0259  0840               	movf	?_trapmf,w
  8352  025A  1783               	bsf	3,7	;select IRP bank2
  8353  025B  0080               	movwf	0
  8354  025C  0A84               	incf	4,f
  8355  025D  0841               	movf	?_trapmf+1,w
  8356  025E  0080               	movwf	0
  8357  025F  0A84               	incf	4,f
  8358  0260  0842               	movf	?_trapmf+2,w
  8359  0261  0080               	movwf	0
  8360                           
  8361                           ;main.c: 304: if (rMedio[a] >= rule) {
  8362  0262  3003               	movlw	3
  8363  0263  00E2               	movwf	??_ISR
  8364  0264  0862               	movf	??_ISR,w
  8365  0265  00F0               	movwf	___bmul@multiplicand
  8366  0266  1683               	bsf	3,5	;RP0=1, select bank1
  8367  0267  1303               	bcf	3,6	;RP1=0, select bank1
  8368  0268  0839               	movf	ISR@a_248^(0+128),w
  8369  0269  120A  118A  27EC  120A  118A  	fcall	___bmul
  8370  026E  3E40               	addlw	_rMedio& (0+255)
  8371  026F  0084               	movwf	4
  8372  0270  1783               	bsf	3,7	;select IRP bank2
  8373  0271  0800               	movf	0,w
  8374  0272  00F4               	movwf	___ftge@ff1
  8375  0273  0A84               	incf	4,f
  8376  0274  0800               	movf	0,w
  8377  0275  00F5               	movwf	___ftge@ff1+1
  8378  0276  0A84               	incf	4,f
  8379  0277  0800               	movf	0,w
  8380  0278  00F6               	movwf	___ftge@ff1+2
  8381  0279  1683               	bsf	3,5	;RP0=1, select bank1
  8382  027A  1303               	bcf	3,6	;RP1=0, select bank1
  8383  027B  0840               	movf	ISR@rule^(0+128),w
  8384  027C  00F7               	movwf	___ftge@ff2
  8385  027D  0841               	movf	(ISR@rule+1)^(0+128),w
  8386  027E  00F8               	movwf	___ftge@ff2+1
  8387  027F  0842               	movf	(ISR@rule+2)^(0+128),w
  8388  0280  00F9               	movwf	___ftge@ff2+2
  8389  0281  160A  118A  23F0  120A  118A  	fcall	___ftge
  8390  0286  1C03               	btfss	3,0
  8391  0287  2AA3               	goto	i1l3930
  8392                           
  8393                           ;main.c: 305: rMedio[a] = rule;
  8394  0288  3003               	movlw	3
  8395  0289  1283               	bcf	3,5	;RP0=0, select bank0
  8396  028A  1303               	bcf	3,6	;RP1=0, select bank0
  8397  028B  00E2               	movwf	??_ISR
  8398  028C  0862               	movf	??_ISR,w
  8399  028D  00F0               	movwf	___bmul@multiplicand
  8400  028E  1683               	bsf	3,5	;RP0=1, select bank1
  8401  028F  1303               	bcf	3,6	;RP1=0, select bank1
  8402  0290  0839               	movf	ISR@a_248^(0+128),w
  8403  0291  120A  118A  27EC  120A  118A  	fcall	___bmul
  8404  0296  3E40               	addlw	_rMedio& (0+255)
  8405  0297  0084               	movwf	4
  8406  0298  1683               	bsf	3,5	;RP0=1, select bank1
  8407  0299  1303               	bcf	3,6	;RP1=0, select bank1
  8408  029A  0840               	movf	ISR@rule^(0+128),w
  8409  029B  1783               	bsf	3,7	;select IRP bank2
  8410  029C  0080               	movwf	0
  8411  029D  0A84               	incf	4,f
  8412  029E  0841               	movf	(ISR@rule+1)^(0+128),w
  8413  029F  0080               	movwf	0
  8414  02A0  0A84               	incf	4,f
  8415  02A1  0842               	movf	(ISR@rule+2)^(0+128),w
  8416  02A2  0080               	movwf	0
  8417  02A3                     i1l3930:	
  8418                           
  8419                           ;main.c: 306: }
  8420                           ;main.c: 308: x += 1;
  8421  02A3  3000               	movlw	0
  8422  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  8423  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  8424  02A6  00A3               	movwf	___ftadd@f1
  8425  02A7  3080               	movlw	128
  8426  02A8  00A4               	movwf	___ftadd@f1+1
  8427  02A9  303F               	movlw	63
  8428  02AA  00A5               	movwf	___ftadd@f1+2
  8429  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  8430  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  8431  02AD  0845               	movf	ISR@x^(0+128),w
  8432  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  8433  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  8434  02B0  00A6               	movwf	___ftadd@f2
  8435  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  8436  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  8437  02B3  0846               	movf	(ISR@x+1)^(0+128),w
  8438  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  8439  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  8440  02B6  00A7               	movwf	___ftadd@f2+1
  8441  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  8442  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  8443  02B9  0847               	movf	(ISR@x+2)^(0+128),w
  8444  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  8445  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  8446  02BC  00A8               	movwf	___ftadd@f2+2
  8447  02BD  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8448  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  8449  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  8450  02C4  0823               	movf	?___ftadd,w
  8451  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  8452  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  8453  02C7  00C5               	movwf	ISR@x^(0+128)
  8454  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  8455  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  8456  02CA  0824               	movf	?___ftadd+1,w
  8457  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  8458  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  8459  02CD  00C6               	movwf	(ISR@x+1)^(0+128)
  8460  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  8461  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  8462  02D0  0825               	movf	?___ftadd+2,w
  8463  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  8464  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  8465  02D3  00C7               	movwf	(ISR@x+2)^(0+128)
  8466  02D4  3001               	movlw	1
  8467  02D5  07B9               	addwf	ISR@a_248^(0+128),f
  8468  02D6  1803               	skipnc
  8469  02D7  0ABA               	incf	(ISR@a_248+1)^(0+128),f
  8470  02D8  3000               	movlw	0
  8471  02D9  07BA               	addwf	(ISR@a_248+1)^(0+128),f
  8472  02DA  083A               	movf	(ISR@a_248+1)^(0+128),w
  8473  02DB  3A80               	xorlw	128
  8474  02DC  00FF               	movwf	127
  8475  02DD  3080               	movlw	128
  8476  02DE  027F               	subwf	127,w
  8477  02DF  1D03               	skipz
  8478  02E0  2AE3               	goto	u569_25
  8479  02E1  3010               	movlw	16
  8480  02E2  0239               	subwf	ISR@a_248^(0+128),w
  8481  02E3                     u569_25:	
  8482  02E3  1C03               	skipc
  8483  02E4  2A18               	goto	i1l3926
  8484  02E5                     i1l3936:	
  8485                           
  8486                           ;main.c: 309: }
  8487                           ;main.c: 310: }
  8488                           ;main.c: 313: if (erro_atual >= 1001) {
  8489  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  8490  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  8491  02E7  085B               	movf	(_erro_atual+1)^(0+128),w
  8492  02E8  3A80               	xorlw	128
  8493  02E9  00FF               	movwf	127
  8494  02EA  3083               	movlw	131
  8495  02EB  027F               	subwf	127,w
  8496  02EC  1D03               	skipz
  8497  02ED  2AF0               	goto	u570_25
  8498  02EE  30E9               	movlw	233
  8499  02EF  025A               	subwf	_erro_atual^(0+128),w
  8500  02F0                     u570_25:	
  8501  02F0  1C03               	skipc
  8502  02F1  2C16               	goto	i1l3958
  8503                           
  8504                           ;main.c: 315: rule = trapmf(erro_atual, 1001, 1500, 2000, 2001);
  8505  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  8506  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  8507  02F4  085B               	movf	(_erro_atual+1)^(0+128),w
  8508  02F5  01F9               	clrf	___awtoft@c+1
  8509  02F6  07F9               	addwf	___awtoft@c+1,f
  8510  02F7  085A               	movf	_erro_atual^(0+128),w
  8511  02F8  01F8               	clrf	___awtoft@c
  8512  02F9  07F8               	addwf	___awtoft@c,f
  8513  02FA  160A  118A  2190  120A  118A  	fcall	___awtoft
  8514  02FF  0878               	movf	?___awtoft,w
  8515  0300  1283               	bcf	3,5	;RP0=0, select bank0
  8516  0301  1303               	bcf	3,6	;RP1=0, select bank0
  8517  0302  00C0               	movwf	trapmf@x
  8518  0303  0879               	movf	?___awtoft+1,w
  8519  0304  00C1               	movwf	trapmf@x+1
  8520  0305  087A               	movf	?___awtoft+2,w
  8521  0306  00C2               	movwf	trapmf@x+2
  8522  0307  3040               	movlw	64
  8523  0308  00C3               	movwf	trapmf@a
  8524  0309  307A               	movlw	122
  8525  030A  00C4               	movwf	trapmf@a+1
  8526  030B  3044               	movlw	68
  8527  030C  00C5               	movwf	trapmf@a+2
  8528  030D  3080               	movlw	128
  8529  030E  00C6               	movwf	trapmf@b
  8530  030F  30BB               	movlw	187
  8531  0310  00C7               	movwf	trapmf@b+1
  8532  0311  3044               	movlw	68
  8533  0312  00C8               	movwf	trapmf@b+2
  8534  0313  3000               	movlw	0
  8535  0314  00C9               	movwf	trapmf@c
  8536  0315  30FA               	movlw	250
  8537  0316  00CA               	movwf	trapmf@c+1
  8538  0317  3044               	movlw	68
  8539  0318  00CB               	movwf	trapmf@c+2
  8540  0319  3020               	movlw	32
  8541  031A  00CC               	movwf	trapmf@d
  8542  031B  30FA               	movlw	250
  8543  031C  00CD               	movwf	trapmf@d+1
  8544  031D  3044               	movlw	68
  8545  031E  00CE               	movwf	trapmf@d+2
  8546  031F  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8547  0324  1283               	bcf	3,5	;RP0=0, select bank0
  8548  0325  1303               	bcf	3,6	;RP1=0, select bank0
  8549  0326  0840               	movf	?_trapmf,w
  8550  0327  1683               	bsf	3,5	;RP0=1, select bank1
  8551  0328  1303               	bcf	3,6	;RP1=0, select bank1
  8552  0329  00C0               	movwf	ISR@rule^(0+128)
  8553  032A  1283               	bcf	3,5	;RP0=0, select bank0
  8554  032B  1303               	bcf	3,6	;RP1=0, select bank0
  8555  032C  0841               	movf	?_trapmf+1,w
  8556  032D  1683               	bsf	3,5	;RP0=1, select bank1
  8557  032E  1303               	bcf	3,6	;RP1=0, select bank1
  8558  032F  00C1               	movwf	(ISR@rule+1)^(0+128)
  8559  0330  1283               	bcf	3,5	;RP0=0, select bank0
  8560  0331  1303               	bcf	3,6	;RP1=0, select bank0
  8561  0332  0842               	movf	?_trapmf+2,w
  8562  0333  1683               	bsf	3,5	;RP0=1, select bank1
  8563  0334  1303               	bcf	3,6	;RP1=0, select bank1
  8564  0335  00C2               	movwf	(ISR@rule+2)^(0+128)
  8565                           
  8566                           ;main.c: 317: x = 0;
  8567  0336  3000               	movlw	0
  8568  0337  00C5               	movwf	ISR@x^(0+128)
  8569  0338  3000               	movlw	0
  8570  0339  00C6               	movwf	(ISR@x+1)^(0+128)
  8571  033A  3000               	movlw	0
  8572  033B  00C7               	movwf	(ISR@x+2)^(0+128)
  8573                           
  8574                           ;main.c: 318: for (int a = 0; a <= 15; a++) {
  8575  033C  01BB               	clrf	ISR@a_249^(0+128)
  8576  033D  01BC               	clrf	(ISR@a_249+1)^(0+128)
  8577  033E  083C               	movf	(ISR@a_249+1)^(0+128),w
  8578  033F  3A80               	xorlw	128
  8579  0340  00FF               	movwf	127
  8580  0341  3080               	movlw	128
  8581  0342  027F               	subwf	127,w
  8582  0343  1D03               	skipz
  8583  0344  2B47               	goto	u571_25
  8584  0345  3010               	movlw	16
  8585  0346  023B               	subwf	ISR@a_249^(0+128),w
  8586  0347                     u571_25:	
  8587  0347  1803               	btfsc	3,0
  8588  0348  2C16               	goto	i1l3958
  8589  0349                     i1l3948:	
  8590                           
  8591                           ;main.c: 319: rGrande[a] = trapmf(x, 5, 10, 15, 16);
  8592  0349  3003               	movlw	3
  8593  034A  1283               	bcf	3,5	;RP0=0, select bank0
  8594  034B  1303               	bcf	3,6	;RP1=0, select bank0
  8595  034C  00E2               	movwf	??_ISR
  8596  034D  0862               	movf	??_ISR,w
  8597  034E  00F0               	movwf	___bmul@multiplicand
  8598  034F  1683               	bsf	3,5	;RP0=1, select bank1
  8599  0350  1303               	bcf	3,6	;RP1=0, select bank1
  8600  0351  083B               	movf	ISR@a_249^(0+128),w
  8601  0352  120A  118A  27EC  120A  118A  	fcall	___bmul
  8602  0357  3E10               	addlw	_rGrande& (0+255)
  8603  0358  0084               	movwf	4
  8604  0359  1683               	bsf	3,5	;RP0=1, select bank1
  8605  035A  1303               	bcf	3,6	;RP1=0, select bank1
  8606  035B  0845               	movf	ISR@x^(0+128),w
  8607  035C  1283               	bcf	3,5	;RP0=0, select bank0
  8608  035D  1303               	bcf	3,6	;RP1=0, select bank0
  8609  035E  00C0               	movwf	trapmf@x
  8610  035F  1683               	bsf	3,5	;RP0=1, select bank1
  8611  0360  1303               	bcf	3,6	;RP1=0, select bank1
  8612  0361  0846               	movf	(ISR@x+1)^(0+128),w
  8613  0362  1283               	bcf	3,5	;RP0=0, select bank0
  8614  0363  1303               	bcf	3,6	;RP1=0, select bank0
  8615  0364  00C1               	movwf	trapmf@x+1
  8616  0365  1683               	bsf	3,5	;RP0=1, select bank1
  8617  0366  1303               	bcf	3,6	;RP1=0, select bank1
  8618  0367  0847               	movf	(ISR@x+2)^(0+128),w
  8619  0368  1283               	bcf	3,5	;RP0=0, select bank0
  8620  0369  1303               	bcf	3,6	;RP1=0, select bank0
  8621  036A  00C2               	movwf	trapmf@x+2
  8622  036B  3000               	movlw	0
  8623  036C  00C3               	movwf	trapmf@a
  8624  036D  30A0               	movlw	160
  8625  036E  00C4               	movwf	trapmf@a+1
  8626  036F  3040               	movlw	64
  8627  0370  00C5               	movwf	trapmf@a+2
  8628  0371  3000               	movlw	0
  8629  0372  00C6               	movwf	trapmf@b
  8630  0373  3020               	movlw	32
  8631  0374  00C7               	movwf	trapmf@b+1
  8632  0375  3041               	movlw	65
  8633  0376  00C8               	movwf	trapmf@b+2
  8634  0377  3000               	movlw	0
  8635  0378  00C9               	movwf	trapmf@c
  8636  0379  3070               	movlw	112
  8637  037A  00CA               	movwf	trapmf@c+1
  8638  037B  3041               	movlw	65
  8639  037C  00CB               	movwf	trapmf@c+2
  8640  037D  3000               	movlw	0
  8641  037E  00CC               	movwf	trapmf@d
  8642  037F  3080               	movlw	128
  8643  0380  00CD               	movwf	trapmf@d+1
  8644  0381  3041               	movlw	65
  8645  0382  00CE               	movwf	trapmf@d+2
  8646  0383  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8647  0388  1283               	bcf	3,5	;RP0=0, select bank0
  8648  0389  1303               	bcf	3,6	;RP1=0, select bank0
  8649  038A  0840               	movf	?_trapmf,w
  8650  038B  1783               	bsf	3,7	;select IRP bank2
  8651  038C  0080               	movwf	0
  8652  038D  0A84               	incf	4,f
  8653  038E  0841               	movf	?_trapmf+1,w
  8654  038F  0080               	movwf	0
  8655  0390  0A84               	incf	4,f
  8656  0391  0842               	movf	?_trapmf+2,w
  8657  0392  0080               	movwf	0
  8658                           
  8659                           ;main.c: 321: if (rGrande[a] >= rule) {
  8660  0393  3003               	movlw	3
  8661  0394  00E2               	movwf	??_ISR
  8662  0395  0862               	movf	??_ISR,w
  8663  0396  00F0               	movwf	___bmul@multiplicand
  8664  0397  1683               	bsf	3,5	;RP0=1, select bank1
  8665  0398  1303               	bcf	3,6	;RP1=0, select bank1
  8666  0399  083B               	movf	ISR@a_249^(0+128),w
  8667  039A  120A  118A  27EC  120A  118A  	fcall	___bmul
  8668  039F  3E10               	addlw	_rGrande& (0+255)
  8669  03A0  0084               	movwf	4
  8670  03A1  1783               	bsf	3,7	;select IRP bank2
  8671  03A2  0800               	movf	0,w
  8672  03A3  00F4               	movwf	___ftge@ff1
  8673  03A4  0A84               	incf	4,f
  8674  03A5  0800               	movf	0,w
  8675  03A6  00F5               	movwf	___ftge@ff1+1
  8676  03A7  0A84               	incf	4,f
  8677  03A8  0800               	movf	0,w
  8678  03A9  00F6               	movwf	___ftge@ff1+2
  8679  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  8680  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  8681  03AC  0840               	movf	ISR@rule^(0+128),w
  8682  03AD  00F7               	movwf	___ftge@ff2
  8683  03AE  0841               	movf	(ISR@rule+1)^(0+128),w
  8684  03AF  00F8               	movwf	___ftge@ff2+1
  8685  03B0  0842               	movf	(ISR@rule+2)^(0+128),w
  8686  03B1  00F9               	movwf	___ftge@ff2+2
  8687  03B2  160A  118A  23F0  120A  118A  	fcall	___ftge
  8688  03B7  1C03               	btfss	3,0
  8689  03B8  2BD4               	goto	i1l3952
  8690                           
  8691                           ;main.c: 322: rGrande[a] = rule;
  8692  03B9  3003               	movlw	3
  8693  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  8694  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  8695  03BC  00E2               	movwf	??_ISR
  8696  03BD  0862               	movf	??_ISR,w
  8697  03BE  00F0               	movwf	___bmul@multiplicand
  8698  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  8699  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  8700  03C1  083B               	movf	ISR@a_249^(0+128),w
  8701  03C2  120A  118A  27EC  120A  118A  	fcall	___bmul
  8702  03C7  3E10               	addlw	_rGrande& (0+255)
  8703  03C8  0084               	movwf	4
  8704  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  8705  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  8706  03CB  0840               	movf	ISR@rule^(0+128),w
  8707  03CC  1783               	bsf	3,7	;select IRP bank2
  8708  03CD  0080               	movwf	0
  8709  03CE  0A84               	incf	4,f
  8710  03CF  0841               	movf	(ISR@rule+1)^(0+128),w
  8711  03D0  0080               	movwf	0
  8712  03D1  0A84               	incf	4,f
  8713  03D2  0842               	movf	(ISR@rule+2)^(0+128),w
  8714  03D3  0080               	movwf	0
  8715  03D4                     i1l3952:	
  8716                           
  8717                           ;main.c: 323: }
  8718                           ;main.c: 325: x += 1;
  8719  03D4  3000               	movlw	0
  8720  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  8721  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  8722  03D7  00A3               	movwf	___ftadd@f1
  8723  03D8  3080               	movlw	128
  8724  03D9  00A4               	movwf	___ftadd@f1+1
  8725  03DA  303F               	movlw	63
  8726  03DB  00A5               	movwf	___ftadd@f1+2
  8727  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  8728  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  8729  03DE  0845               	movf	ISR@x^(0+128),w
  8730  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  8731  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  8732  03E1  00A6               	movwf	___ftadd@f2
  8733  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  8734  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  8735  03E4  0846               	movf	(ISR@x+1)^(0+128),w
  8736  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  8737  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  8738  03E7  00A7               	movwf	___ftadd@f2+1
  8739  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  8740  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  8741  03EA  0847               	movf	(ISR@x+2)^(0+128),w
  8742  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  8743  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  8744  03ED  00A8               	movwf	___ftadd@f2+2
  8745  03EE  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8746  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  8747  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  8748  03F5  0823               	movf	?___ftadd,w
  8749  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  8750  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  8751  03F8  00C5               	movwf	ISR@x^(0+128)
  8752  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  8753  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  8754  03FB  0824               	movf	?___ftadd+1,w
  8755  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  8756  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  8757  03FE  00C6               	movwf	(ISR@x+1)^(0+128)
  8758  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  8759  0400  1303               	bcf	3,6	;RP1=0, select bank0
  8760  0401  0825               	movf	?___ftadd+2,w
  8761  0402  1683               	bsf	3,5	;RP0=1, select bank1
  8762  0403  1303               	bcf	3,6	;RP1=0, select bank1
  8763  0404  00C7               	movwf	(ISR@x+2)^(0+128)
  8764  0405  3001               	movlw	1
  8765  0406  07BB               	addwf	ISR@a_249^(0+128),f
  8766  0407  1803               	skipnc
  8767  0408  0ABC               	incf	(ISR@a_249+1)^(0+128),f
  8768  0409  3000               	movlw	0
  8769  040A  07BC               	addwf	(ISR@a_249+1)^(0+128),f
  8770  040B  083C               	movf	(ISR@a_249+1)^(0+128),w
  8771  040C  3A80               	xorlw	128
  8772  040D  00FF               	movwf	127
  8773  040E  3080               	movlw	128
  8774  040F  027F               	subwf	127,w
  8775  0410  1D03               	skipz
  8776  0411  2C14               	goto	u573_25
  8777  0412  3010               	movlw	16
  8778  0413  023B               	subwf	ISR@a_249^(0+128),w
  8779  0414                     u573_25:	
  8780  0414  1C03               	skipc
  8781  0415  2B49               	goto	i1l3948
  8782  0416                     i1l3958:	
  8783                           
  8784                           ;main.c: 326: }
  8785                           ;main.c: 327: }
  8786                           ;main.c: 331: x = 0;
  8787  0416  3000               	movlw	0
  8788  0417  1683               	bsf	3,5	;RP0=1, select bank1
  8789  0418  1303               	bcf	3,6	;RP1=0, select bank1
  8790  0419  00C5               	movwf	ISR@x^(0+128)
  8791  041A  3000               	movlw	0
  8792  041B  00C6               	movwf	(ISR@x+1)^(0+128)
  8793  041C  3000               	movlw	0
  8794  041D  00C7               	movwf	(ISR@x+2)^(0+128)
  8795                           
  8796                           ;main.c: 332: float total_area = 0;
  8797  041E  3000               	movlw	0
  8798  041F  00BD               	movwf	ISR@total_area^(0+128)
  8799  0420  3000               	movlw	0
  8800  0421  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8801  0422  3000               	movlw	0
  8802  0423  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8803                           
  8804                           ;main.c: 333: float soma = 0;
  8805  0424  3000               	movlw	0
  8806  0425  00B2               	movwf	ISR@soma^(0+128)
  8807  0426  3000               	movlw	0
  8808  0427  00B3               	movwf	(ISR@soma+1)^(0+128)
  8809  0428  3000               	movlw	0
  8810  0429  00B4               	movwf	(ISR@soma+2)^(0+128)
  8811                           
  8812                           ;main.c: 334: for (int a = 0; a <= 15; a++) {
  8813  042A  01C3               	clrf	ISR@a_252^(0+128)
  8814  042B  01C4               	clrf	(ISR@a_252+1)^(0+128)
  8815  042C  0844               	movf	(ISR@a_252+1)^(0+128),w
  8816  042D  3A80               	xorlw	128
  8817  042E  00FF               	movwf	127
  8818  042F  3080               	movlw	128
  8819  0430  027F               	subwf	127,w
  8820  0431  1D03               	skipz
  8821  0432  2C35               	goto	u574_25
  8822  0433  3010               	movlw	16
  8823  0434  0243               	subwf	ISR@a_252^(0+128),w
  8824  0435                     u574_25:	
  8825  0435  1803               	btfsc	3,0
  8826  0436  2EB1               	goto	i1l3988
  8827  0437                     i1l174:	
  8828                           
  8829                           ;main.c: 335: if (a >= 0 && a <= 5) {
  8830  0437  1683               	bsf	3,5	;RP0=1, select bank1
  8831  0438  1303               	bcf	3,6	;RP1=0, select bank1
  8832  0439  1BC4               	btfsc	(ISR@a_252+1)^(0+128),7
  8833  043A  2CED               	goto	i1l3970
  8834  043B  0844               	movf	(ISR@a_252+1)^(0+128),w
  8835  043C  3A80               	xorlw	128
  8836  043D  00FF               	movwf	127
  8837  043E  3080               	movlw	128
  8838  043F  027F               	subwf	127,w
  8839  0440  1D03               	skipz
  8840  0441  2C44               	goto	u576_25
  8841  0442  3006               	movlw	6
  8842  0443  0243               	subwf	ISR@a_252^(0+128),w
  8843  0444                     u576_25:	
  8844  0444  1803               	skipnc
  8845  0445  2CED               	goto	i1l3970
  8846                           
  8847                           ;main.c: 336: total_area += rBaixo[a];
  8848  0446  3003               	movlw	3
  8849  0447  1283               	bcf	3,5	;RP0=0, select bank0
  8850  0448  1303               	bcf	3,6	;RP1=0, select bank0
  8851  0449  00E2               	movwf	??_ISR
  8852  044A  0862               	movf	??_ISR,w
  8853  044B  00F0               	movwf	___bmul@multiplicand
  8854  044C  1683               	bsf	3,5	;RP0=1, select bank1
  8855  044D  1303               	bcf	3,6	;RP1=0, select bank1
  8856  044E  0843               	movf	ISR@a_252^(0+128),w
  8857  044F  120A  118A  27EC  120A  118A  	fcall	___bmul
  8858  0454  3E90               	addlw	_rBaixo& (0+255)
  8859  0455  0084               	movwf	4
  8860  0456  1783               	bsf	3,7	;select IRP bank3
  8861  0457  0800               	movf	0,w
  8862  0458  1283               	bcf	3,5	;RP0=0, select bank0
  8863  0459  1303               	bcf	3,6	;RP1=0, select bank0
  8864  045A  00A3               	movwf	___ftadd@f1
  8865  045B  0A84               	incf	4,f
  8866  045C  0800               	movf	0,w
  8867  045D  00A4               	movwf	___ftadd@f1+1
  8868  045E  0A84               	incf	4,f
  8869  045F  0800               	movf	0,w
  8870  0460  00A5               	movwf	___ftadd@f1+2
  8871  0461  1683               	bsf	3,5	;RP0=1, select bank1
  8872  0462  1303               	bcf	3,6	;RP1=0, select bank1
  8873  0463  083D               	movf	ISR@total_area^(0+128),w
  8874  0464  1283               	bcf	3,5	;RP0=0, select bank0
  8875  0465  1303               	bcf	3,6	;RP1=0, select bank0
  8876  0466  00A6               	movwf	___ftadd@f2
  8877  0467  1683               	bsf	3,5	;RP0=1, select bank1
  8878  0468  1303               	bcf	3,6	;RP1=0, select bank1
  8879  0469  083E               	movf	(ISR@total_area+1)^(0+128),w
  8880  046A  1283               	bcf	3,5	;RP0=0, select bank0
  8881  046B  1303               	bcf	3,6	;RP1=0, select bank0
  8882  046C  00A7               	movwf	___ftadd@f2+1
  8883  046D  1683               	bsf	3,5	;RP0=1, select bank1
  8884  046E  1303               	bcf	3,6	;RP1=0, select bank1
  8885  046F  083F               	movf	(ISR@total_area+2)^(0+128),w
  8886  0470  1283               	bcf	3,5	;RP0=0, select bank0
  8887  0471  1303               	bcf	3,6	;RP1=0, select bank0
  8888  0472  00A8               	movwf	___ftadd@f2+2
  8889  0473  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8890  0478  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0479  1303               	bcf	3,6	;RP1=0, select bank0
  8892  047A  0823               	movf	?___ftadd,w
  8893  047B  1683               	bsf	3,5	;RP0=1, select bank1
  8894  047C  1303               	bcf	3,6	;RP1=0, select bank1
  8895  047D  00BD               	movwf	ISR@total_area^(0+128)
  8896  047E  1283               	bcf	3,5	;RP0=0, select bank0
  8897  047F  1303               	bcf	3,6	;RP1=0, select bank0
  8898  0480  0824               	movf	?___ftadd+1,w
  8899  0481  1683               	bsf	3,5	;RP0=1, select bank1
  8900  0482  1303               	bcf	3,6	;RP1=0, select bank1
  8901  0483  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8902  0484  1283               	bcf	3,5	;RP0=0, select bank0
  8903  0485  1303               	bcf	3,6	;RP1=0, select bank0
  8904  0486  0825               	movf	?___ftadd+2,w
  8905  0487  1683               	bsf	3,5	;RP0=1, select bank1
  8906  0488  1303               	bcf	3,6	;RP1=0, select bank1
  8907  0489  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8908                           
  8909                           ;main.c: 337: soma += (x * rBaixo[a]);
  8910  048A  3003               	movlw	3
  8911  048B  1283               	bcf	3,5	;RP0=0, select bank0
  8912  048C  1303               	bcf	3,6	;RP1=0, select bank0
  8913  048D  00E2               	movwf	??_ISR
  8914  048E  0862               	movf	??_ISR,w
  8915  048F  00F0               	movwf	___bmul@multiplicand
  8916  0490  1683               	bsf	3,5	;RP0=1, select bank1
  8917  0491  1303               	bcf	3,6	;RP1=0, select bank1
  8918  0492  0843               	movf	ISR@a_252^(0+128),w
  8919  0493  120A  118A  27EC  120A  118A  	fcall	___bmul
  8920  0498  3E90               	addlw	_rBaixo& (0+255)
  8921  0499  0084               	movwf	4
  8922  049A  1783               	bsf	3,7	;select IRP bank3
  8923  049B  0800               	movf	0,w
  8924  049C  1283               	bcf	3,5	;RP0=0, select bank0
  8925  049D  1303               	bcf	3,6	;RP1=0, select bank0
  8926  049E  00D5               	movwf	___ftmul@f2
  8927  049F  0A84               	incf	4,f
  8928  04A0  0800               	movf	0,w
  8929  04A1  00D6               	movwf	___ftmul@f2+1
  8930  04A2  0A84               	incf	4,f
  8931  04A3  0800               	movf	0,w
  8932  04A4  00D7               	movwf	___ftmul@f2+2
  8933  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  8934  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  8935  04A7  0845               	movf	ISR@x^(0+128),w
  8936  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  8937  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  8938  04AA  00D2               	movwf	___ftmul@f1
  8939  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  8940  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  8941  04AD  0846               	movf	(ISR@x+1)^(0+128),w
  8942  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  8943  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  8944  04B0  00D3               	movwf	___ftmul@f1+1
  8945  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  8946  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  8947  04B3  0847               	movf	(ISR@x+2)^(0+128),w
  8948  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  8949  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  8950  04B6  00D4               	movwf	___ftmul@f1+2
  8951  04B7  120A  158A  23D7  120A  118A  	fcall	___ftmul
  8952  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  8953  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  8954  04BE  0852               	movf	?___ftmul,w
  8955  04BF  00A3               	movwf	___ftadd@f1
  8956  04C0  0853               	movf	?___ftmul+1,w
  8957  04C1  00A4               	movwf	___ftadd@f1+1
  8958  04C2  0854               	movf	?___ftmul+2,w
  8959  04C3  00A5               	movwf	___ftadd@f1+2
  8960  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  8961  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  8962  04C6  0832               	movf	ISR@soma^(0+128),w
  8963  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  8964  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  8965  04C9  00A6               	movwf	___ftadd@f2
  8966  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  8967  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  8968  04CC  0833               	movf	(ISR@soma+1)^(0+128),w
  8969  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8970  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8971  04CF  00A7               	movwf	___ftadd@f2+1
  8972  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  8973  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  8974  04D2  0834               	movf	(ISR@soma+2)^(0+128),w
  8975  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  8976  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  8977  04D5  00A8               	movwf	___ftadd@f2+2
  8978  04D6  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8979  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  8980  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  8981  04DD  0823               	movf	?___ftadd,w
  8982  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  8983  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  8984  04E0  00B2               	movwf	ISR@soma^(0+128)
  8985  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  8986  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  8987  04E3  0824               	movf	?___ftadd+1,w
  8988  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  8989  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  8990  04E6  00B3               	movwf	(ISR@soma+1)^(0+128)
  8991  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  8992  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  8993  04E9  0825               	movf	?___ftadd+2,w
  8994  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  8995  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  8996  04EC  00B4               	movwf	(ISR@soma+2)^(0+128)
  8997  04ED                     i1l3970:	
  8998                           
  8999                           ;main.c: 338: }
  9000                           ;main.c: 340: if (a >= 5 && a <= 10) {
  9001  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  9002  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  9003  04EF  0844               	movf	(ISR@a_252+1)^(0+128),w
  9004  04F0  3A80               	xorlw	128
  9005  04F1  00FF               	movwf	127
  9006  04F2  3080               	movlw	128
  9007  04F3  027F               	subwf	127,w
  9008  04F4  1D03               	skipz
  9009  04F5  2CF8               	goto	u577_25
  9010  04F6  3005               	movlw	5
  9011  04F7  0243               	subwf	ISR@a_252^(0+128),w
  9012  04F8                     u577_25:	
  9013  04F8  1C03               	skipc
  9014  04F9  2DAE               	goto	i1l3976
  9015  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  9016  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  9017  04FC  0844               	movf	(ISR@a_252+1)^(0+128),w
  9018  04FD  3A80               	xorlw	128
  9019  04FE  00FF               	movwf	127
  9020  04FF  3080               	movlw	128
  9021  0500  027F               	subwf	127,w
  9022  0501  1D03               	skipz
  9023  0502  2D05               	goto	u578_25
  9024  0503  300B               	movlw	11
  9025  0504  0243               	subwf	ISR@a_252^(0+128),w
  9026  0505                     u578_25:	
  9027  0505  1803               	skipnc
  9028  0506  2DAE               	goto	i1l3976
  9029                           
  9030                           ;main.c: 341: total_area += rMedio[a];
  9031  0507  3003               	movlw	3
  9032  0508  1283               	bcf	3,5	;RP0=0, select bank0
  9033  0509  1303               	bcf	3,6	;RP1=0, select bank0
  9034  050A  00E2               	movwf	??_ISR
  9035  050B  0862               	movf	??_ISR,w
  9036  050C  00F0               	movwf	___bmul@multiplicand
  9037  050D  1683               	bsf	3,5	;RP0=1, select bank1
  9038  050E  1303               	bcf	3,6	;RP1=0, select bank1
  9039  050F  0843               	movf	ISR@a_252^(0+128),w
  9040  0510  120A  118A  27EC  120A  118A  	fcall	___bmul
  9041  0515  3E40               	addlw	_rMedio& (0+255)
  9042  0516  0084               	movwf	4
  9043  0517  1783               	bsf	3,7	;select IRP bank2
  9044  0518  0800               	movf	0,w
  9045  0519  1283               	bcf	3,5	;RP0=0, select bank0
  9046  051A  1303               	bcf	3,6	;RP1=0, select bank0
  9047  051B  00A3               	movwf	___ftadd@f1
  9048  051C  0A84               	incf	4,f
  9049  051D  0800               	movf	0,w
  9050  051E  00A4               	movwf	___ftadd@f1+1
  9051  051F  0A84               	incf	4,f
  9052  0520  0800               	movf	0,w
  9053  0521  00A5               	movwf	___ftadd@f1+2
  9054  0522  1683               	bsf	3,5	;RP0=1, select bank1
  9055  0523  1303               	bcf	3,6	;RP1=0, select bank1
  9056  0524  083D               	movf	ISR@total_area^(0+128),w
  9057  0525  1283               	bcf	3,5	;RP0=0, select bank0
  9058  0526  1303               	bcf	3,6	;RP1=0, select bank0
  9059  0527  00A6               	movwf	___ftadd@f2
  9060  0528  1683               	bsf	3,5	;RP0=1, select bank1
  9061  0529  1303               	bcf	3,6	;RP1=0, select bank1
  9062  052A  083E               	movf	(ISR@total_area+1)^(0+128),w
  9063  052B  1283               	bcf	3,5	;RP0=0, select bank0
  9064  052C  1303               	bcf	3,6	;RP1=0, select bank0
  9065  052D  00A7               	movwf	___ftadd@f2+1
  9066  052E  1683               	bsf	3,5	;RP0=1, select bank1
  9067  052F  1303               	bcf	3,6	;RP1=0, select bank1
  9068  0530  083F               	movf	(ISR@total_area+2)^(0+128),w
  9069  0531  1283               	bcf	3,5	;RP0=0, select bank0
  9070  0532  1303               	bcf	3,6	;RP1=0, select bank0
  9071  0533  00A8               	movwf	___ftadd@f2+2
  9072  0534  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9073  0539  1283               	bcf	3,5	;RP0=0, select bank0
  9074  053A  1303               	bcf	3,6	;RP1=0, select bank0
  9075  053B  0823               	movf	?___ftadd,w
  9076  053C  1683               	bsf	3,5	;RP0=1, select bank1
  9077  053D  1303               	bcf	3,6	;RP1=0, select bank1
  9078  053E  00BD               	movwf	ISR@total_area^(0+128)
  9079  053F  1283               	bcf	3,5	;RP0=0, select bank0
  9080  0540  1303               	bcf	3,6	;RP1=0, select bank0
  9081  0541  0824               	movf	?___ftadd+1,w
  9082  0542  1683               	bsf	3,5	;RP0=1, select bank1
  9083  0543  1303               	bcf	3,6	;RP1=0, select bank1
  9084  0544  00BE               	movwf	(ISR@total_area+1)^(0+128)
  9085  0545  1283               	bcf	3,5	;RP0=0, select bank0
  9086  0546  1303               	bcf	3,6	;RP1=0, select bank0
  9087  0547  0825               	movf	?___ftadd+2,w
  9088  0548  1683               	bsf	3,5	;RP0=1, select bank1
  9089  0549  1303               	bcf	3,6	;RP1=0, select bank1
  9090  054A  00BF               	movwf	(ISR@total_area+2)^(0+128)
  9091                           
  9092                           ;main.c: 342: soma += (x * rMedio[a]);
  9093  054B  3003               	movlw	3
  9094  054C  1283               	bcf	3,5	;RP0=0, select bank0
  9095  054D  1303               	bcf	3,6	;RP1=0, select bank0
  9096  054E  00E2               	movwf	??_ISR
  9097  054F  0862               	movf	??_ISR,w
  9098  0550  00F0               	movwf	___bmul@multiplicand
  9099  0551  1683               	bsf	3,5	;RP0=1, select bank1
  9100  0552  1303               	bcf	3,6	;RP1=0, select bank1
  9101  0553  0843               	movf	ISR@a_252^(0+128),w
  9102  0554  120A  118A  27EC  120A  118A  	fcall	___bmul
  9103  0559  3E40               	addlw	_rMedio& (0+255)
  9104  055A  0084               	movwf	4
  9105  055B  1783               	bsf	3,7	;select IRP bank2
  9106  055C  0800               	movf	0,w
  9107  055D  1283               	bcf	3,5	;RP0=0, select bank0
  9108  055E  1303               	bcf	3,6	;RP1=0, select bank0
  9109  055F  00D5               	movwf	___ftmul@f2
  9110  0560  0A84               	incf	4,f
  9111  0561  0800               	movf	0,w
  9112  0562  00D6               	movwf	___ftmul@f2+1
  9113  0563  0A84               	incf	4,f
  9114  0564  0800               	movf	0,w
  9115  0565  00D7               	movwf	___ftmul@f2+2
  9116  0566  1683               	bsf	3,5	;RP0=1, select bank1
  9117  0567  1303               	bcf	3,6	;RP1=0, select bank1
  9118  0568  0845               	movf	ISR@x^(0+128),w
  9119  0569  1283               	bcf	3,5	;RP0=0, select bank0
  9120  056A  1303               	bcf	3,6	;RP1=0, select bank0
  9121  056B  00D2               	movwf	___ftmul@f1
  9122  056C  1683               	bsf	3,5	;RP0=1, select bank1
  9123  056D  1303               	bcf	3,6	;RP1=0, select bank1
  9124  056E  0846               	movf	(ISR@x+1)^(0+128),w
  9125  056F  1283               	bcf	3,5	;RP0=0, select bank0
  9126  0570  1303               	bcf	3,6	;RP1=0, select bank0
  9127  0571  00D3               	movwf	___ftmul@f1+1
  9128  0572  1683               	bsf	3,5	;RP0=1, select bank1
  9129  0573  1303               	bcf	3,6	;RP1=0, select bank1
  9130  0574  0847               	movf	(ISR@x+2)^(0+128),w
  9131  0575  1283               	bcf	3,5	;RP0=0, select bank0
  9132  0576  1303               	bcf	3,6	;RP1=0, select bank0
  9133  0577  00D4               	movwf	___ftmul@f1+2
  9134  0578  120A  158A  23D7  120A  118A  	fcall	___ftmul
  9135  057D  1283               	bcf	3,5	;RP0=0, select bank0
  9136  057E  1303               	bcf	3,6	;RP1=0, select bank0
  9137  057F  0852               	movf	?___ftmul,w
  9138  0580  00A3               	movwf	___ftadd@f1
  9139  0581  0853               	movf	?___ftmul+1,w
  9140  0582  00A4               	movwf	___ftadd@f1+1
  9141  0583  0854               	movf	?___ftmul+2,w
  9142  0584  00A5               	movwf	___ftadd@f1+2
  9143  0585  1683               	bsf	3,5	;RP0=1, select bank1
  9144  0586  1303               	bcf	3,6	;RP1=0, select bank1
  9145  0587  0832               	movf	ISR@soma^(0+128),w
  9146  0588  1283               	bcf	3,5	;RP0=0, select bank0
  9147  0589  1303               	bcf	3,6	;RP1=0, select bank0
  9148  058A  00A6               	movwf	___ftadd@f2
  9149  058B  1683               	bsf	3,5	;RP0=1, select bank1
  9150  058C  1303               	bcf	3,6	;RP1=0, select bank1
  9151  058D  0833               	movf	(ISR@soma+1)^(0+128),w
  9152  058E  1283               	bcf	3,5	;RP0=0, select bank0
  9153  058F  1303               	bcf	3,6	;RP1=0, select bank0
  9154  0590  00A7               	movwf	___ftadd@f2+1
  9155  0591  1683               	bsf	3,5	;RP0=1, select bank1
  9156  0592  1303               	bcf	3,6	;RP1=0, select bank1
  9157  0593  0834               	movf	(ISR@soma+2)^(0+128),w
  9158  0594  1283               	bcf	3,5	;RP0=0, select bank0
  9159  0595  1303               	bcf	3,6	;RP1=0, select bank0
  9160  0596  00A8               	movwf	___ftadd@f2+2
  9161  0597  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9162  059C  1283               	bcf	3,5	;RP0=0, select bank0
  9163  059D  1303               	bcf	3,6	;RP1=0, select bank0
  9164  059E  0823               	movf	?___ftadd,w
  9165  059F  1683               	bsf	3,5	;RP0=1, select bank1
  9166  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  9167  05A1  00B2               	movwf	ISR@soma^(0+128)
  9168  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  9169  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  9170  05A4  0824               	movf	?___ftadd+1,w
  9171  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  9172  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  9173  05A7  00B3               	movwf	(ISR@soma+1)^(0+128)
  9174  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  9175  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  9176  05AA  0825               	movf	?___ftadd+2,w
  9177  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  9178  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  9179  05AD  00B4               	movwf	(ISR@soma+2)^(0+128)
  9180  05AE                     i1l3976:	
  9181                           
  9182                           ;main.c: 343: }
  9183                           ;main.c: 345: if (a >= 10 && a <= 15) {
  9184  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  9185  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  9186  05B0  0844               	movf	(ISR@a_252+1)^(0+128),w
  9187  05B1  3A80               	xorlw	128
  9188  05B2  00FF               	movwf	127
  9189  05B3  3080               	movlw	128
  9190  05B4  027F               	subwf	127,w
  9191  05B5  1D03               	skipz
  9192  05B6  2DB9               	goto	u579_25
  9193  05B7  300A               	movlw	10
  9194  05B8  0243               	subwf	ISR@a_252^(0+128),w
  9195  05B9                     u579_25:	
  9196  05B9  1C03               	skipc
  9197  05BA  2E6F               	goto	i1l3982
  9198  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  9199  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  9200  05BD  0844               	movf	(ISR@a_252+1)^(0+128),w
  9201  05BE  3A80               	xorlw	128
  9202  05BF  00FF               	movwf	127
  9203  05C0  3080               	movlw	128
  9204  05C1  027F               	subwf	127,w
  9205  05C2  1D03               	skipz
  9206  05C3  2DC6               	goto	u580_25
  9207  05C4  3010               	movlw	16
  9208  05C5  0243               	subwf	ISR@a_252^(0+128),w
  9209  05C6                     u580_25:	
  9210  05C6  1803               	skipnc
  9211  05C7  2E6F               	goto	i1l3982
  9212                           
  9213                           ;main.c: 346: total_area += rGrande[a];
  9214  05C8  3003               	movlw	3
  9215  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  9216  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  9217  05CB  00E2               	movwf	??_ISR
  9218  05CC  0862               	movf	??_ISR,w
  9219  05CD  00F0               	movwf	___bmul@multiplicand
  9220  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  9221  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  9222  05D0  0843               	movf	ISR@a_252^(0+128),w
  9223  05D1  120A  118A  27EC  120A  118A  	fcall	___bmul
  9224  05D6  3E10               	addlw	_rGrande& (0+255)
  9225  05D7  0084               	movwf	4
  9226  05D8  1783               	bsf	3,7	;select IRP bank2
  9227  05D9  0800               	movf	0,w
  9228  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  9229  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  9230  05DC  00A3               	movwf	___ftadd@f1
  9231  05DD  0A84               	incf	4,f
  9232  05DE  0800               	movf	0,w
  9233  05DF  00A4               	movwf	___ftadd@f1+1
  9234  05E0  0A84               	incf	4,f
  9235  05E1  0800               	movf	0,w
  9236  05E2  00A5               	movwf	___ftadd@f1+2
  9237  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  9238  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  9239  05E5  083D               	movf	ISR@total_area^(0+128),w
  9240  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  9241  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  9242  05E8  00A6               	movwf	___ftadd@f2
  9243  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  9244  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  9245  05EB  083E               	movf	(ISR@total_area+1)^(0+128),w
  9246  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  9247  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  9248  05EE  00A7               	movwf	___ftadd@f2+1
  9249  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  9250  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  9251  05F1  083F               	movf	(ISR@total_area+2)^(0+128),w
  9252  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  9253  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  9254  05F4  00A8               	movwf	___ftadd@f2+2
  9255  05F5  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9256  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  9257  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  9258  05FC  0823               	movf	?___ftadd,w
  9259  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  9260  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  9261  05FF  00BD               	movwf	ISR@total_area^(0+128)
  9262  0600  1283               	bcf	3,5	;RP0=0, select bank0
  9263  0601  1303               	bcf	3,6	;RP1=0, select bank0
  9264  0602  0824               	movf	?___ftadd+1,w
  9265  0603  1683               	bsf	3,5	;RP0=1, select bank1
  9266  0604  1303               	bcf	3,6	;RP1=0, select bank1
  9267  0605  00BE               	movwf	(ISR@total_area+1)^(0+128)
  9268  0606  1283               	bcf	3,5	;RP0=0, select bank0
  9269  0607  1303               	bcf	3,6	;RP1=0, select bank0
  9270  0608  0825               	movf	?___ftadd+2,w
  9271  0609  1683               	bsf	3,5	;RP0=1, select bank1
  9272  060A  1303               	bcf	3,6	;RP1=0, select bank1
  9273  060B  00BF               	movwf	(ISR@total_area+2)^(0+128)
  9274                           
  9275                           ;main.c: 347: soma += (x * rGrande[a]);
  9276  060C  3003               	movlw	3
  9277  060D  1283               	bcf	3,5	;RP0=0, select bank0
  9278  060E  1303               	bcf	3,6	;RP1=0, select bank0
  9279  060F  00E2               	movwf	??_ISR
  9280  0610  0862               	movf	??_ISR,w
  9281  0611  00F0               	movwf	___bmul@multiplicand
  9282  0612  1683               	bsf	3,5	;RP0=1, select bank1
  9283  0613  1303               	bcf	3,6	;RP1=0, select bank1
  9284  0614  0843               	movf	ISR@a_252^(0+128),w
  9285  0615  120A  118A  27EC  120A  118A  	fcall	___bmul
  9286  061A  3E10               	addlw	_rGrande& (0+255)
  9287  061B  0084               	movwf	4
  9288  061C  1783               	bsf	3,7	;select IRP bank2
  9289  061D  0800               	movf	0,w
  9290  061E  1283               	bcf	3,5	;RP0=0, select bank0
  9291  061F  1303               	bcf	3,6	;RP1=0, select bank0
  9292  0620  00D5               	movwf	___ftmul@f2
  9293  0621  0A84               	incf	4,f
  9294  0622  0800               	movf	0,w
  9295  0623  00D6               	movwf	___ftmul@f2+1
  9296  0624  0A84               	incf	4,f
  9297  0625  0800               	movf	0,w
  9298  0626  00D7               	movwf	___ftmul@f2+2
  9299  0627  1683               	bsf	3,5	;RP0=1, select bank1
  9300  0628  1303               	bcf	3,6	;RP1=0, select bank1
  9301  0629  0845               	movf	ISR@x^(0+128),w
  9302  062A  1283               	bcf	3,5	;RP0=0, select bank0
  9303  062B  1303               	bcf	3,6	;RP1=0, select bank0
  9304  062C  00D2               	movwf	___ftmul@f1
  9305  062D  1683               	bsf	3,5	;RP0=1, select bank1
  9306  062E  1303               	bcf	3,6	;RP1=0, select bank1
  9307  062F  0846               	movf	(ISR@x+1)^(0+128),w
  9308  0630  1283               	bcf	3,5	;RP0=0, select bank0
  9309  0631  1303               	bcf	3,6	;RP1=0, select bank0
  9310  0632  00D3               	movwf	___ftmul@f1+1
  9311  0633  1683               	bsf	3,5	;RP0=1, select bank1
  9312  0634  1303               	bcf	3,6	;RP1=0, select bank1
  9313  0635  0847               	movf	(ISR@x+2)^(0+128),w
  9314  0636  1283               	bcf	3,5	;RP0=0, select bank0
  9315  0637  1303               	bcf	3,6	;RP1=0, select bank0
  9316  0638  00D4               	movwf	___ftmul@f1+2
  9317  0639  120A  158A  23D7  120A  118A  	fcall	___ftmul
  9318  063E  1283               	bcf	3,5	;RP0=0, select bank0
  9319  063F  1303               	bcf	3,6	;RP1=0, select bank0
  9320  0640  0852               	movf	?___ftmul,w
  9321  0641  00A3               	movwf	___ftadd@f1
  9322  0642  0853               	movf	?___ftmul+1,w
  9323  0643  00A4               	movwf	___ftadd@f1+1
  9324  0644  0854               	movf	?___ftmul+2,w
  9325  0645  00A5               	movwf	___ftadd@f1+2
  9326  0646  1683               	bsf	3,5	;RP0=1, select bank1
  9327  0647  1303               	bcf	3,6	;RP1=0, select bank1
  9328  0648  0832               	movf	ISR@soma^(0+128),w
  9329  0649  1283               	bcf	3,5	;RP0=0, select bank0
  9330  064A  1303               	bcf	3,6	;RP1=0, select bank0
  9331  064B  00A6               	movwf	___ftadd@f2
  9332  064C  1683               	bsf	3,5	;RP0=1, select bank1
  9333  064D  1303               	bcf	3,6	;RP1=0, select bank1
  9334  064E  0833               	movf	(ISR@soma+1)^(0+128),w
  9335  064F  1283               	bcf	3,5	;RP0=0, select bank0
  9336  0650  1303               	bcf	3,6	;RP1=0, select bank0
  9337  0651  00A7               	movwf	___ftadd@f2+1
  9338  0652  1683               	bsf	3,5	;RP0=1, select bank1
  9339  0653  1303               	bcf	3,6	;RP1=0, select bank1
  9340  0654  0834               	movf	(ISR@soma+2)^(0+128),w
  9341  0655  1283               	bcf	3,5	;RP0=0, select bank0
  9342  0656  1303               	bcf	3,6	;RP1=0, select bank0
  9343  0657  00A8               	movwf	___ftadd@f2+2
  9344  0658  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9345  065D  1283               	bcf	3,5	;RP0=0, select bank0
  9346  065E  1303               	bcf	3,6	;RP1=0, select bank0
  9347  065F  0823               	movf	?___ftadd,w
  9348  0660  1683               	bsf	3,5	;RP0=1, select bank1
  9349  0661  1303               	bcf	3,6	;RP1=0, select bank1
  9350  0662  00B2               	movwf	ISR@soma^(0+128)
  9351  0663  1283               	bcf	3,5	;RP0=0, select bank0
  9352  0664  1303               	bcf	3,6	;RP1=0, select bank0
  9353  0665  0824               	movf	?___ftadd+1,w
  9354  0666  1683               	bsf	3,5	;RP0=1, select bank1
  9355  0667  1303               	bcf	3,6	;RP1=0, select bank1
  9356  0668  00B3               	movwf	(ISR@soma+1)^(0+128)
  9357  0669  1283               	bcf	3,5	;RP0=0, select bank0
  9358  066A  1303               	bcf	3,6	;RP1=0, select bank0
  9359  066B  0825               	movf	?___ftadd+2,w
  9360  066C  1683               	bsf	3,5	;RP0=1, select bank1
  9361  066D  1303               	bcf	3,6	;RP1=0, select bank1
  9362  066E  00B4               	movwf	(ISR@soma+2)^(0+128)
  9363  066F                     i1l3982:	
  9364                           
  9365                           ;main.c: 348: }
  9366                           ;main.c: 349: x += 1;
  9367  066F  3000               	movlw	0
  9368  0670  1283               	bcf	3,5	;RP0=0, select bank0
  9369  0671  1303               	bcf	3,6	;RP1=0, select bank0
  9370  0672  00A3               	movwf	___ftadd@f1
  9371  0673  3080               	movlw	128
  9372  0674  00A4               	movwf	___ftadd@f1+1
  9373  0675  303F               	movlw	63
  9374  0676  00A5               	movwf	___ftadd@f1+2
  9375  0677  1683               	bsf	3,5	;RP0=1, select bank1
  9376  0678  1303               	bcf	3,6	;RP1=0, select bank1
  9377  0679  0845               	movf	ISR@x^(0+128),w
  9378  067A  1283               	bcf	3,5	;RP0=0, select bank0
  9379  067B  1303               	bcf	3,6	;RP1=0, select bank0
  9380  067C  00A6               	movwf	___ftadd@f2
  9381  067D  1683               	bsf	3,5	;RP0=1, select bank1
  9382  067E  1303               	bcf	3,6	;RP1=0, select bank1
  9383  067F  0846               	movf	(ISR@x+1)^(0+128),w
  9384  0680  1283               	bcf	3,5	;RP0=0, select bank0
  9385  0681  1303               	bcf	3,6	;RP1=0, select bank0
  9386  0682  00A7               	movwf	___ftadd@f2+1
  9387  0683  1683               	bsf	3,5	;RP0=1, select bank1
  9388  0684  1303               	bcf	3,6	;RP1=0, select bank1
  9389  0685  0847               	movf	(ISR@x+2)^(0+128),w
  9390  0686  1283               	bcf	3,5	;RP0=0, select bank0
  9391  0687  1303               	bcf	3,6	;RP1=0, select bank0
  9392  0688  00A8               	movwf	___ftadd@f2+2
  9393  0689  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9394  068E  1283               	bcf	3,5	;RP0=0, select bank0
  9395  068F  1303               	bcf	3,6	;RP1=0, select bank0
  9396  0690  0823               	movf	?___ftadd,w
  9397  0691  1683               	bsf	3,5	;RP0=1, select bank1
  9398  0692  1303               	bcf	3,6	;RP1=0, select bank1
  9399  0693  00C5               	movwf	ISR@x^(0+128)
  9400  0694  1283               	bcf	3,5	;RP0=0, select bank0
  9401  0695  1303               	bcf	3,6	;RP1=0, select bank0
  9402  0696  0824               	movf	?___ftadd+1,w
  9403  0697  1683               	bsf	3,5	;RP0=1, select bank1
  9404  0698  1303               	bcf	3,6	;RP1=0, select bank1
  9405  0699  00C6               	movwf	(ISR@x+1)^(0+128)
  9406  069A  1283               	bcf	3,5	;RP0=0, select bank0
  9407  069B  1303               	bcf	3,6	;RP1=0, select bank0
  9408  069C  0825               	movf	?___ftadd+2,w
  9409  069D  1683               	bsf	3,5	;RP0=1, select bank1
  9410  069E  1303               	bcf	3,6	;RP1=0, select bank1
  9411  069F  00C7               	movwf	(ISR@x+2)^(0+128)
  9412  06A0  3001               	movlw	1
  9413  06A1  07C3               	addwf	ISR@a_252^(0+128),f
  9414  06A2  1803               	skipnc
  9415  06A3  0AC4               	incf	(ISR@a_252+1)^(0+128),f
  9416  06A4  3000               	movlw	0
  9417  06A5  07C4               	addwf	(ISR@a_252+1)^(0+128),f
  9418  06A6  0844               	movf	(ISR@a_252+1)^(0+128),w
  9419  06A7  3A80               	xorlw	128
  9420  06A8  00FF               	movwf	127
  9421  06A9  3080               	movlw	128
  9422  06AA  027F               	subwf	127,w
  9423  06AB  1D03               	skipz
  9424  06AC  2EAF               	goto	u581_25
  9425  06AD  3010               	movlw	16
  9426  06AE  0243               	subwf	ISR@a_252^(0+128),w
  9427  06AF                     u581_25:	
  9428  06AF  1C03               	skipc
  9429  06B0  2C37               	goto	i1l174
  9430  06B1                     i1l3988:	
  9431                           
  9432                           ;main.c: 350: }
  9433                           ;main.c: 353: float reajuste = 0;
  9434  06B1  3000               	movlw	0
  9435  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  9436  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  9437  06B4  00A8               	movwf	ISR@reajuste^(0+128)
  9438  06B5  3000               	movlw	0
  9439  06B6  00A9               	movwf	(ISR@reajuste+1)^(0+128)
  9440  06B7  3000               	movlw	0
  9441  06B8  00AA               	movwf	(ISR@reajuste+2)^(0+128)
  9442                           
  9443                           ;main.c: 354: if (total_area != 0) {
  9444  06B9  083F               	movf	(ISR@total_area+2)^(0+128),w
  9445  06BA  043E               	iorwf	(ISR@total_area+1)^(0+128),w
  9446  06BB  043D               	iorwf	ISR@total_area^(0+128),w
  9447  06BC  1903               	skipnz
  9448  06BD  2EF7               	goto	i1l3992
  9449                           
  9450                           ;main.c: 355: reajuste = soma / total_area;
  9451  06BE  083D               	movf	ISR@total_area^(0+128),w
  9452  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  9453  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  9454  06C1  00B0               	movwf	___ftdiv@f2
  9455  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  9456  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  9457  06C4  083E               	movf	(ISR@total_area+1)^(0+128),w
  9458  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  9459  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  9460  06C7  00B1               	movwf	___ftdiv@f2+1
  9461  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  9462  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  9463  06CA  083F               	movf	(ISR@total_area+2)^(0+128),w
  9464  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  9465  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  9466  06CD  00B2               	movwf	___ftdiv@f2+2
  9467  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  9468  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  9469  06D0  0832               	movf	ISR@soma^(0+128),w
  9470  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  9471  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  9472  06D3  00B3               	movwf	___ftdiv@f1
  9473  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  9474  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  9475  06D6  0833               	movf	(ISR@soma+1)^(0+128),w
  9476  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  9477  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  9478  06D9  00B4               	movwf	___ftdiv@f1+1
  9479  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  9480  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  9481  06DC  0834               	movf	(ISR@soma+2)^(0+128),w
  9482  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  9483  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  9484  06DF  00B5               	movwf	___ftdiv@f1+2
  9485  06E0  120A  158A  231F  120A  118A  	fcall	___ftdiv
  9486  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  9487  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  9488  06E7  0830               	movf	?___ftdiv,w
  9489  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  9490  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  9491  06EA  00A8               	movwf	ISR@reajuste^(0+128)
  9492  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  9493  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  9494  06ED  0831               	movf	?___ftdiv+1,w
  9495  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  9496  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  9497  06F0  00A9               	movwf	(ISR@reajuste+1)^(0+128)
  9498  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  9499  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  9500  06F3  0832               	movf	?___ftdiv+2,w
  9501  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  9502  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  9503  06F6  00AA               	movwf	(ISR@reajuste+2)^(0+128)
  9504  06F7                     i1l3992:	
  9505                           
  9506                           ;main.c: 356: }
  9507                           ;main.c: 360: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, erro_atual)) * (setpoint 
      +                          > rpm ? 1 : -1), 1023), 0);
  9508  06F7  0866               	movf	(_setpoint+1)^(0+128),w
  9509  06F8  0263               	subwf	(_rpm+1)^(0+128),w
  9510  06F9  1D03               	skipz
  9511  06FA  2EFD               	goto	u583_25
  9512  06FB  0865               	movf	_setpoint^(0+128),w
  9513  06FC  0262               	subwf	_rpm^(0+128),w
  9514  06FD                     u583_25:	
  9515  06FD  1C03               	skipc
  9516  06FE  2F03               	goto	i1l3996
  9517  06FF  30FF               	movlw	255
  9518  0700  00AB               	movwf	_ISR$254^(0+128)
  9519  0701  30FF               	movlw	255
  9520  0702  2F06               	goto	L3
  9521  0703                     i1l3996:	
  9522  0703  3001               	movlw	1
  9523  0704  00AB               	movwf	_ISR$254^(0+128)
  9524  0705  3000               	movlw	0
  9525  0706                     L3:	
  9526  0706  00AC               	movwf	(_ISR$254^(0+128)+1)
  9527  0707  082C               	movf	(_ISR$254+1)^(0+128),w
  9528  0708  1283               	bcf	3,5	;RP0=0, select bank0
  9529  0709  1303               	bcf	3,6	;RP1=0, select bank0
  9530  070A  01C3               	clrf	___wmul@multiplicand+1
  9531  070B  07C3               	addwf	___wmul@multiplicand+1,f
  9532  070C  1683               	bsf	3,5	;RP0=1, select bank1
  9533  070D  1303               	bcf	3,6	;RP1=0, select bank1
  9534  070E  082B               	movf	_ISR$254^(0+128),w
  9535  070F  1283               	bcf	3,5	;RP0=0, select bank0
  9536  0710  1303               	bcf	3,6	;RP1=0, select bank0
  9537  0711  01C2               	clrf	___wmul@multiplicand
  9538  0712  07C2               	addwf	___wmul@multiplicand,f
  9539  0713  1683               	bsf	3,5	;RP0=1, select bank1
  9540  0714  1303               	bcf	3,6	;RP1=0, select bank1
  9541  0715  085B               	movf	(_erro_atual+1)^(0+128),w
  9542  0716  01F9               	clrf	___awtoft@c+1
  9543  0717  07F9               	addwf	___awtoft@c+1,f
  9544  0718  085A               	movf	_erro_atual^(0+128),w
  9545  0719  01F8               	clrf	___awtoft@c
  9546  071A  07F8               	addwf	___awtoft@c,f
  9547  071B  160A  118A  2190  120A  118A  	fcall	___awtoft
  9548  0720  0878               	movf	?___awtoft,w
  9549  0721  1283               	bcf	3,5	;RP0=0, select bank0
  9550  0722  1303               	bcf	3,6	;RP1=0, select bank0
  9551  0723  00A9               	movwf	minimo@b
  9552  0724  0879               	movf	?___awtoft+1,w
  9553  0725  00AA               	movwf	minimo@b+1
  9554  0726  087A               	movf	?___awtoft+2,w
  9555  0727  00AB               	movwf	minimo@b+2
  9556  0728  1683               	bsf	3,5	;RP0=1, select bank1
  9557  0729  1303               	bcf	3,6	;RP1=0, select bank1
  9558  072A  0828               	movf	ISR@reajuste^(0+128),w
  9559  072B  1283               	bcf	3,5	;RP0=0, select bank0
  9560  072C  1303               	bcf	3,6	;RP1=0, select bank0
  9561  072D  00A6               	movwf	minimo@a
  9562  072E  1683               	bsf	3,5	;RP0=1, select bank1
  9563  072F  1303               	bcf	3,6	;RP1=0, select bank1
  9564  0730  0829               	movf	(ISR@reajuste+1)^(0+128),w
  9565  0731  1283               	bcf	3,5	;RP0=0, select bank0
  9566  0732  1303               	bcf	3,6	;RP1=0, select bank0
  9567  0733  00A7               	movwf	minimo@a+1
  9568  0734  1683               	bsf	3,5	;RP0=1, select bank1
  9569  0735  1303               	bcf	3,6	;RP1=0, select bank1
  9570  0736  082A               	movf	(ISR@reajuste+2)^(0+128),w
  9571  0737  1283               	bcf	3,5	;RP0=0, select bank0
  9572  0738  1303               	bcf	3,6	;RP1=0, select bank0
  9573  0739  00A8               	movwf	minimo@a+2
  9574  073A  160A  118A  2132  120A  118A  	fcall	_minimo
  9575  073F  1283               	bcf	3,5	;RP0=0, select bank0
  9576  0740  1303               	bcf	3,6	;RP1=0, select bank0
  9577  0741  0826               	movf	?_minimo,w
  9578  0742  00B2               	movwf	___fttol@f1
  9579  0743  0827               	movf	?_minimo+1,w
  9580  0744  00B3               	movwf	___fttol@f1+1
  9581  0745  0828               	movf	?_minimo+2,w
  9582  0746  00B4               	movwf	___fttol@f1+2
  9583  0747  160A  118A  2652  120A  118A  	fcall	___fttol
  9584  074C  1283               	bcf	3,5	;RP0=0, select bank0
  9585  074D  1303               	bcf	3,6	;RP1=0, select bank0
  9586  074E  0833               	movf	?___fttol+1,w
  9587  074F  01C1               	clrf	___wmul@multiplier+1
  9588  0750  07C1               	addwf	___wmul@multiplier+1,f
  9589  0751  0832               	movf	?___fttol,w
  9590  0752  01C0               	clrf	___wmul@multiplier
  9591  0753  07C0               	addwf	___wmul@multiplier,f
  9592  0754  160A  118A  2217  120A  118A  	fcall	___wmul
  9593  0759  1683               	bsf	3,5	;RP0=1, select bank1
  9594  075A  1303               	bcf	3,6	;RP1=0, select bank1
  9595  075B  085E               	movf	_pwm^(0+128),w
  9596  075C  1283               	bcf	3,5	;RP0=0, select bank0
  9597  075D  1303               	bcf	3,6	;RP1=0, select bank0
  9598  075E  0740               	addwf	?___wmul,w
  9599  075F  00C6               	movwf	___lwtoft@c
  9600  0760  1683               	bsf	3,5	;RP0=1, select bank1
  9601  0761  1303               	bcf	3,6	;RP1=0, select bank1
  9602  0762  085F               	movf	(_pwm+1)^(0+128),w
  9603  0763  1803               	skipnc
  9604  0764  0A5F               	incf	(_pwm+1)^(0+128),w
  9605  0765  1283               	bcf	3,5	;RP0=0, select bank0
  9606  0766  1303               	bcf	3,6	;RP1=0, select bank0
  9607  0767  0741               	addwf	?___wmul+1,w
  9608  0768  00C7               	movwf	___lwtoft@c+1
  9609  0769  160A  118A  20C5  120A  118A  	fcall	___lwtoft
  9610  076E  1283               	bcf	3,5	;RP0=0, select bank0
  9611  076F  1303               	bcf	3,6	;RP1=0, select bank0
  9612  0770  0846               	movf	?___lwtoft,w
  9613  0771  1683               	bsf	3,5	;RP0=1, select bank1
  9614  0772  1303               	bcf	3,6	;RP1=0, select bank1
  9615  0773  00A5               	movwf	_ISR$1672^(0+128)
  9616  0774  1283               	bcf	3,5	;RP0=0, select bank0
  9617  0775  1303               	bcf	3,6	;RP1=0, select bank0
  9618  0776  0847               	movf	?___lwtoft+1,w
  9619  0777  1683               	bsf	3,5	;RP0=1, select bank1
  9620  0778  1303               	bcf	3,6	;RP1=0, select bank1
  9621  0779  00A6               	movwf	(_ISR$1672+1)^(0+128)
  9622  077A  1283               	bcf	3,5	;RP0=0, select bank0
  9623  077B  1303               	bcf	3,6	;RP1=0, select bank0
  9624  077C  0848               	movf	?___lwtoft+2,w
  9625  077D  1683               	bsf	3,5	;RP0=1, select bank1
  9626  077E  1303               	bcf	3,6	;RP1=0, select bank1
  9627  077F  00A7               	movwf	(_ISR$1672+2)^(0+128)
  9628  0780  3000               	movlw	0
  9629  0781  1283               	bcf	3,5	;RP0=0, select bank0
  9630  0782  1303               	bcf	3,6	;RP1=0, select bank0
  9631  0783  00AF               	movwf	maximo@b
  9632  0784  3000               	movlw	0
  9633  0785  00B0               	movwf	maximo@b+1
  9634  0786  3000               	movlw	0
  9635  0787  00B1               	movwf	maximo@b+2
  9636  0788  30C0               	movlw	192
  9637  0789  00A9               	movwf	minimo@b
  9638  078A  307F               	movlw	127
  9639  078B  00AA               	movwf	minimo@b+1
  9640  078C  3044               	movlw	68
  9641  078D  00AB               	movwf	minimo@b+2
  9642  078E  1683               	bsf	3,5	;RP0=1, select bank1
  9643  078F  1303               	bcf	3,6	;RP1=0, select bank1
  9644  0790  0825               	movf	_ISR$1672^(0+128),w
  9645  0791  1283               	bcf	3,5	;RP0=0, select bank0
  9646  0792  1303               	bcf	3,6	;RP1=0, select bank0
  9647  0793  00A6               	movwf	minimo@a
  9648  0794  1683               	bsf	3,5	;RP0=1, select bank1
  9649  0795  1303               	bcf	3,6	;RP1=0, select bank1
  9650  0796  0826               	movf	(_ISR$1672+1)^(0+128),w
  9651  0797  1283               	bcf	3,5	;RP0=0, select bank0
  9652  0798  1303               	bcf	3,6	;RP1=0, select bank0
  9653  0799  00A7               	movwf	minimo@a+1
  9654  079A  1683               	bsf	3,5	;RP0=1, select bank1
  9655  079B  1303               	bcf	3,6	;RP1=0, select bank1
  9656  079C  0827               	movf	(_ISR$1672+2)^(0+128),w
  9657  079D  1283               	bcf	3,5	;RP0=0, select bank0
  9658  079E  1303               	bcf	3,6	;RP1=0, select bank0
  9659  079F  00A8               	movwf	minimo@a+2
  9660  07A0  160A  118A  2132  120A  118A  	fcall	_minimo
  9661  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  9662  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  9663  07A7  0826               	movf	?_minimo,w
  9664  07A8  00AC               	movwf	maximo@a
  9665  07A9  0827               	movf	?_minimo+1,w
  9666  07AA  00AD               	movwf	maximo@a+1
  9667  07AB  0828               	movf	?_minimo+2,w
  9668  07AC  00AE               	movwf	maximo@a+2
  9669  07AD  160A  118A  2114  120A  118A  	fcall	_maximo
  9670  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  9671  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  9672  07B4  082C               	movf	?_maximo,w
  9673  07B5  00B2               	movwf	___fttol@f1
  9674  07B6  082D               	movf	?_maximo+1,w
  9675  07B7  00B3               	movwf	___fttol@f1+1
  9676  07B8  082E               	movf	?_maximo+2,w
  9677  07B9  00B4               	movwf	___fttol@f1+2
  9678  07BA  160A  118A  2652  120A  118A  	fcall	___fttol
  9679  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  9680  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  9681  07C1  0833               	movf	?___fttol+1,w
  9682  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  9683  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  9684  07C4  01DF               	clrf	(_pwm+1)^(0+128)
  9685  07C5  07DF               	addwf	(_pwm+1)^(0+128),f
  9686  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  9687  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  9688  07C8  0832               	movf	?___fttol,w
  9689  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  9690  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  9691  07CB  01DE               	clrf	_pwm^(0+128)
  9692  07CC  07DE               	addwf	_pwm^(0+128),f
  9693                           
  9694                           ;main.c: 362: PWM_DutyCycle2(pwm);
  9695  07CD  085F               	movf	(_pwm+1)^(0+128),w
  9696  07CE  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  9697  07CF  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  9698  07D0  085E               	movf	_pwm^(0+128),w
  9699  07D1  01F0               	clrf	i1PWM_DutyCycle2@valor
  9700  07D2  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  9701  07D3  160A  118A  20DD  120A  118A  	fcall	i1_PWM_DutyCycle2
  9702                           
  9703                           ;main.c: 365: PORTBbits.RB6 = 0;
  9704  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  9705  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  9706  07DA  1306               	bcf	6,6	;volatile
  9707  07DB                     i1l4006:	
  9708                           
  9709                           ;main.c: 366: }
  9710                           ;main.c: 369: INTCONbits.T0IF = 0;
  9711  07DB  110B               	bcf	11,2	;volatile
  9712  07DC                     i1l4008:	
  9713                           
  9714                           ;main.c: 370: }
  9715                           ;main.c: 373: if (PIR1bits.TMR1IF) {
  9716  07DC  180C               	btfsc	12,0	;volatile
  9717                           
  9718                           ;main.c: 378: PIR1bits.TMR1IF = 0;
  9719  07DD  100C               	bcf	12,0	;volatile
  9720  07DE  0867               	movf	??_ISR+5,w
  9721  07DF  00FF               	movwf	127
  9722  07E0  0866               	movf	??_ISR+4,w
  9723  07E1  008A               	movwf	10
  9724  07E2  0865               	movf	??_ISR+3,w
  9725  07E3  0084               	movwf	4
  9726  07E4  0E64               	swapf	(??_ISR+2)^0,w
  9727  07E5  0083               	movwf	3
  9728  07E6  0EFE               	swapf	126,f
  9729  07E7  0E7E               	swapf	126,w
  9730  07E8  0009               	retfie
  9731  07E9                     L20:	
  9732  07E9                     __end_of_ISR:	
  9733  07E9  120A  158A  28A9   	ljmp	i1l3874


Data Sizes:
    Strings     53
    Constant    0
    Data        4
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     40      71
    BANK3            96     26      74
    BANK2            96      0      96

Pointer List with Targets:

    LCD_WriteString@Str	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[3]), 

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_4(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _send->___lwdiv
    _minimo->___awtoft
    _maximo->___awtoft
    ___ftge->___bmul
    ___wmul->___awtoft
    ___lwtoft->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _minimo->___ftge
    _maximo->_minimo
    ___wmul->___fttol
    ___lwtoft->___wmul
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_WriteString->_LCD_WriteData
    _LCD_Init->_LCD_WriteCmd
    _LCD_Clear->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1130
                                             23 BANK3      3     3      0
                          _LCD_Clear
                         _LCD_Cursor
                           _LCD_Init
                    _LCD_WriteString
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                             _inicia
                                _res
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  1     1      0       0
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _res                                                  1     1      0       0
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicia                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     146
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      2     2      0     157
                                              2 BANK3      2     2      0
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteData                                        2     2      0      22
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           3     2      1     130
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      22
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 46    46      0   50351
                                             66 BANK0      6     6      0
                                              0 BANK1     40    40      0
                  _USART_ReceiveChar
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                               _send
                             _trapmf
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                           i1_inicia
                              i1_res
                              i1_set
 ---------------------------------------------------------------------------------
 (4) i1_set                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_res                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_inicia                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _trapmf                                              18     3     15   17597
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     365
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2751
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    6867
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     682
                                              8 COMMON     3     3      0
                    _USART_WriteChar
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _minimo                                               6     0      6    2528
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (4) _maximo                                               6     0      6    2272
                                             12 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1928
                                              4 COMMON     6     0      6
                                              0 BANK0      6     6      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1844
                                             32 BANK0      6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                             38 BANK0      4     1      3
                           ___awtoft (ARG)
                           ___ftpack
                            ___fttol (ARG)
                             ___wmul (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     508
                                             18 BANK0     14    10      4
                           ___awtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     560
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2754
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_WriteCmd
   _LCD_Cursor
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteData
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _inicia
   _res
   _set

 _ISR (ROOT)
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   ___awtoft
     ___ftpack
     _abs (ARG)
   ___bmul
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftge
     ___bmul (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
     _trapmf (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___lwdiv
   ___lwtoft
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___wmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
               ___bmul (ARG)
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       ___lwdiv (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___wmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___lwdiv (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _abs
   _maximo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _minimo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
   _send
     _USART_WriteChar
     ___lwdiv
   _trapmf
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_inicia
   i1_res
   i1_set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      11      100.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     28      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     14F      12        0.0%
ABS                  0      0     14F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 10:28:48 2022

         ?i1_PWM_DutyCycle2 0070                           pc 0002                 ?_LCD_Cursor 01C0  
            ___bmul@product 0072     __size_of_PWM_DutyCycle1 0021     __size_of_PWM_DutyCycle2 0021  
               __CFG_CP$OFF 0000                 _SSPSTATbits 0094                          fsr 0004  
       ___wmul@multiplicand 0042          ??i1_PWM_DutyCycle2 0072                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00D6                ___ftadd@sign 002D  
                       l101 1067                         l201 0D44                         l204 0D50  
                       l208 0D5D                         l190 0D20                         l194 0D2B  
                       l197 0D37                         l618 16F2                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 091C                         _abs 0808  
                       _res 12DD                         _set 135E                         _rpm 00E2  
                       fsr0 0004                         _pwm 00DE  __size_of_USART_WriteString 001C  
                       indf 0000                __CFG_FOSC$HS 0000           ??_LCD_WriteString 01C2  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
                      ISR@a 00B5                        ISR@x 00C5                ___ftdiv@sign 003F  
                      ?_abs 0070          LCD_WriteString@Str 01C3                        l2224 1713  
                      l2216 1703                        l2242 1766                        l2234 174B  
                      l2226 1723                        l2238 1758                        l2440 12FE  
                      l3306 0D8A                        l3308 0D8C                        l2454 1388  
                      l3280 0D40                        l3272 0D27                        l3266 0D1C  
                      l2670 115E                        l3296 0D74                        l3288 0D59  
                      l2684 1173                        ?_res 0070                        ?_set 0070  
                      STR_1 1038                        STR_2 1033                        STR_3 102E  
                      STR_4 1006                        u3015 11E7                        u2305 173A  
                      u3025 13B0                        u3035 11C6                        u2315 174C  
                      u2275 1717                        u2295 1725                        u6007 1248  
                      u6017 1256                        u6027 1262                        u6037 1090  
                      _OERR 00C1                        u5907 10A7                        u5917 0822  
                      u5927 0832                        u5937 0840                        u5857 0D15  
                      u5947 084C                        u5867 0D33                        u5957 0858  
                      u5877 0D4C                        u5967 0866                        u5887 0D65  
                      u5977 0874                        u5897 0D9A                        u5987 0880  
                      u5997 116A                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 0CAA                ___ftpack@arg 0070  
                      _kmph 006A          __size_of_LCD_Clear 0029                ___ftpack@exp 0073  
                      _send 153F                        btemp 007E                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
             ?_LCD_WriteCmd 0070               _LCD_WriteData 1096           ___bmul@multiplier 0073  
              ___ftmul@cntr 0060                ___ftmul@sign 0061     __end_of_USART_WriteChar 1050  
                     ??_ISR 0062                ___fttol@exp1 003F                       ??_abs 0072  
              ___fttol@lval 003B                       ??_res 01C0                       ??_set 01C0  
               ?_TIMER0_Set 0070            __end_of_LCD_Init 0883             __end_of___aldiv 176F  
                     ?_main 0070                       _EEADR 010D             __end_of___ftadd 0EAA  
                     ?_send 0070               __CFG_WDTE$OFF 0000             __end_of___ftdiv 0BD7  
           __end_of___ftneg 1074             __end_of___ftmul 0CAA                       _T1CON 0010  
           __end_of___fttol 16E0             __end_of___lwdiv 12DD                       i1l101 105E  
                     i1l118 0FF7                       i1l174 0437                       i1l239 1049  
                     i1l730 14A0                       i1l724 1487                       i1l559 1223  
                     i1l753 0E49                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019                       i1_res 1265                       i1_set 131B  
             __CFG_PWRTE$ON 0000               ___awtoft@sign 007D               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0020                       pclath 000A  
          __end_of_PWM_Init 1217                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
          __end_ofi1_inicia 1061              ??_LCD_WriteCmd 01C0              ?_LCD_WriteData 0070  
               ?_USART_Init 01CF       i1TIMER0_Set@contagens 0070             __initialization 0015  
          _velocidadeSetada 006E                __end_of_main 0DA1                __end_of_send 15C6  
                    ??_main 01D7               ___fttol@sign1 003A                      ??_send 0078  
              ?_TIMER0_Init 0070           __end_of_LCD_Clear 1265                      ?i1_res 0070  
                    ?i1_set 0070                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            __end_of___awtoft 11B1            __end_of___ftpack 14B9  
                    i1l2160 1460                      i1l2400 12B5                      i1l2170 148C  
                    i1l2162 146C                      i1l2410 12D6                      i1l2330 0B4D  
                    i1l2172 1496                      i1l2164 1471                      i1l2156 1459  
                    i1l2324 0B37                      i1l2406 12CB                      i1l4006 07DB  
                    i1l2520 15BB                      i1l2512 15A1                      i1l2352 0BB1  
                    i1l2344 0B92                      i1l4008 07DC                      i1l2530 10B6  
                    i1l2188 10F9                      i1l2700 07EE                      i1l2364 1419  
                    i1l2704 07F4                      i1l2800 169E                      i1l2368 1442  
                    i1l2538 10C2                      i1l2722 119A                      i1l2810 16C6  
                    i1l2802 16AE                      i1l2732 0BEF                      i1l2812 16C9  
                    i1l3700 0E1B                      i1l2750 0C44                      i1l2398 12A7  
                    i1l3710 0E39                      i1l3702 0E20                      i1l2816 16D7  
                    i1l2808 16BB                      i1l3720 0E6D                      i1l3712 0E45  
                    i1l3704 0E24                      i1l3800 0978                      i1l2762 0C6C  
                    i1l2754 0C54                      i1l2738 0C05                      i1l3730 0E90  
                    i1l2834 1286                      i1l3716 0E5B                      i1l3900 0084  
                    i1l3820 1790                      i1l3812 177C                      i1l2766 0C7C  
                    i1l2782 166C                      i1l3670 0DCA                      i1l3910 0151  
                    i1l3806 0990                      i1l3830 17AD                      i1l2688 121B  
                    i1l3680 0DE0                      i1l3752 0F55                      i1l2848 1345  
                    i1l3904 010F                      i1l3840 17CC                      i1l3824 179B  
                    i1l3816 1785                      i1l3674 0DD1                      i1l3746 0F23  
                    i1l3930 02A3                      i1l3692 0DFA                      i1l3828 17AA  
                    i1l3772 0933                      i1l3758 0FDA                      i1l3926 0218  
                    i1l3774 0939                      i1l3952 03D4                      i1l3936 02E5  
                    i1l3698 0E0F                      i1l3970 04ED                      i1l3874 08A9  
                    i1l3948 0349                      i1l3884 0AC9                      i1l3788 0964  
                    u221_25 14A7                      i1l3982 066F                      i1l3958 0416  
                    i1l3878 0A87                      i1l3992 06F7                      i1l3976 05AE  
                    i1l3996 0703                      i1l3988 06B1                      u214_25 1465  
                    u216_25 1480                      u320_25 0C5D                      u218_25 148F  
                    u315_25 0C11                      u331_25 169F                      u307_25 1224  
                    u324_25 0C7D                      u316_25 0C23                      u308_25 122B  
                    u260_25 0B5F                      u325_25 0C85                      u261_25 0B71  
                    u334_25 16BD                      u262_25 0B93                      u319_25 0C55  
                    u263_25 0BA4                      u328_25 1673                      u512_25 0DFB  
                    u264_25 0BB2                      u273_25 12AA                      u521_25 0E3A  
                    u345_25 10EE            __end_of___lwtoft 10DD                      u267_21 140C  
                    u267_22 140D                      u267_23 1412                      u267_24 1413  
                    u275_25 12B6                      u515_25 0E10                      u276_25 12C2  
                    u269_21 1435                      u269_22 1436                      u269_23 143B  
                    u269_24 143C                      u277_25 12CC         __size_of_TIMER0_Set 0008  
                    u518_25 0E25                      u560_25 0AEE                      u561_25 0082  
                    u570_25 02F0                      u554_25 161A                      u571_25 0347  
                    u563_25 014F                      u555_25 08A5                      u580_25 05C6  
                    u564_25 015C                      u581_25 06AF                      u573_25 0414  
                    u565_25 0169                      u557_25 0AC7                      u574_25 0435  
                    u566_25 0176                      u558_25 0AD4                      u583_25 06FD  
                    u567_25 0216                      u559_25 0AE1                      u576_25 0444  
                    u577_25 04F8                      u569_25 02E3                      u578_25 0505  
                    u579_25 05B9                      _SSPADD 0093                      _SSPBUF 0013  
          LCD_WriteCmd@Byte 01C1                      ___bmul 07EC                      ___ftge 13F0  
                 ??___aldiv 01C8                      _rBaixo 0190                      ___wmul 1217  
                 ??___ftadd 0029              _PWM_DutyCycle1 11B1              _PWM_DutyCycle2 11D2  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007E  
                    _rMedio 0140                   ??___ftmul 0058                   ??___fttol 0036  
                 ??___lwdiv 0074                      _buffer 00C8                      _inicia 1061  
                    _maximo 1114                      _minimo 1132       USART_ReceiveChar@byte 0074  
                    _trapmf 0EAA                      _pulsos 00DC       ___ftmul@f3_as_product 005D  
                    saved_w 007E         __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070  
   __end_of__initialization 004F                   ?_LCD_Init 0070                  ___ftadd@f1 0023  
                ___ftadd@f2 0026             ??_LCD_WriteData 01C0                  ___ftge@ff1 0074  
                ___ftge@ff2 0077                  ___ftdiv@f1 0033                  ___ftdiv@f2 0030  
                ___ftdiv@f3 003B                  ___ftneg@f1 0020                  ___awtoft@c 0078  
       ___bmul@multiplicand 0070      __end_of_PWM_DutyCycle1 11D2      __end_of_PWM_DutyCycle2 11F3  
             __end_ofi1_res 129F               __end_ofi1_set 135E                  ___ftmul@f1 0052  
                ___ftmul@f2 0055                  ___fttol@f1 0032              __pcstackCOMMON 0070  
               ISR@checksum 00AD                __pidataBANK0 07FD                __pidataBANK1 1040  
             LCD_Cursor@Col 01C0               _erro_anterior 00D8               LCD_Cursor@Row 01C2  
             ISR@total_area 00BD                ??_LCD_Cursor 01C1             _LCD_WriteString 1170  
                ___lwtoft@c 0046                   ?_PWM_Init 0070                   ?i1_inicia 0070  
            _OPTION_REGbits 0081                     ??i1_res 0070                     ??i1_set 0070  
      __end_of_LCD_WriteCmd 1096                 ISR@reajuste 00A8   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 0068                  __pbssBANK1 00C8  
                __pbssBANK2 0110                  __pbssBANK3 0190          __end_of_LCD_Cursor 1170  
                ??_LCD_Init 01C2                   ISR@rpmAux 00A0                     ISR@byte 00AE  
                   ISR@soma 00B2                     ISR@rule 00C0             ?_PWM_DutyCycle1 01C0  
           ?_PWM_DutyCycle2 01C0                  __pmaintext 0CAA                     ?___bmul 0070  
                   ?___ftge 0074                     ?___wmul 0040                  __pintentry 0004  
              ??_TIMER0_Set 01C0                     _CCP1CON 0017                     _CCP2CON 001D  
                   ?_inicia 0070                     ?_maximo 002C                     ?_minimo 0026  
                 ?___awtoft 0078                   ?___ftpack 0070                     ?_trapmf 0040  
                ??_PWM_Init 01C0                   ?___lwtoft 0046                     _ISR$254 00AB  
                ??i1_inicia 0070        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 1000          __end_of_TIMER0_Set 1058     __end_of_LCD_WriteString 1190  
              ??_USART_Init 01D3           LCD_WriteData@Byte 01C1                     ___aldiv 16E0  
           __size_of___bmul 0011             __size_of___ftge 0061                     ___ftadd 0DA1  
                   ___ftdiv 0B1F                     ___ftneg 106A             __size_of___wmul 0025  
                   ___ftmul 0BD7                     ___fttol 1652                  _erro_atual 00DA  
                   ___lwdiv 129F             __size_of_inicia 0009                  ??___awtoft 007B  
                ??___ftpack 0075                     _rGrande 0110             __size_of_maximo 001E  
           __size_of_minimo 001E                     __ptext1 135E                     __ptext2 12DD  
                   __ptext3 1061                     __ptext4 13A5                     __ptext5 16E0  
                   __ptext6 1050                     __ptext7 1074                     __ptext8 11F3  
                   __ptext9 11D2                  ??___lwtoft 0049             __size_of_trapmf 0156  
              __size_of_ISR FECD                   _T1CONbits 0010                   _T2CONbits 0012  
              __size_of_abs 000E                __size_of_res 003E                __size_of_set 0047  
          ___aldiv@dividend 01C4                   _LCD_Clear 123C          __end_of_USART_Init 13F0  
                   clrloop0 0801        end_of_initialization 004F                     maximo@a 002C  
                   maximo@b 002F                     minimo@a 0026                     minimo@b 0029  
                 _RCSTAbits 0018            ___aldiv@quotient 01CB                     psplit$0 22003D  
                   psplit$1 3D003E                     psplit$2 3E003F                     psplit$3 3F0040  
                   psplit$4 400041                     psplit$5 410042                     psplit$6 420043  
                   trapmf@a 0043                     trapmf@b 0046                     trapmf@c 0049  
                   trapmf@d 004C                     trapmf@x 0040        __end_ofi1_TIMER0_Set 1048  
     __size_of_LCD_WriteCmd 0017                   _PORTBbits 0006                   _PORTEbits 0009  
                ?_LCD_Clear 0070            i1_PWM_DutyCycle2 10DD                _contador_rb6 0068  
       PWM_DutyCycle1@valor 01C0         PWM_DutyCycle2@valor 01C0                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          ?_LCD_WriteString 0070           __size_of_LCD_Init 006D                _LCD_WriteCmd 107F  
               ___ftmul@exp 005C              __end_of___bmul 07FD              __end_of___ftge 1451  
            __end_of___wmul 123C              __end_of_inicia 106A              __end_of_maximo 1132  
            __end_of_minimo 1150              __end_of_trapmf 1000    __size_of_USART_WriteChar 0008  
         __size_of_PWM_Init 0024         start_initialization 0015                 __end_of_ISR 07E9  
               __end_of_abs 0816                 __end_of_res 131B                 __end_of_set 13A5  
         __size_ofi1_inicia 0009            ??_PWM_DutyCycle1 01C2            ??_PWM_DutyCycle2 01C2  
     __end_of_LCD_WriteData 10AD           _USART_ReceiveChar 10AD                    ??___bmul 0071  
                  ??___ftge 0020          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK0 006E                 __pdataBANK1 00E5                    ??_inicia 01C0  
              send@checksum 0079                    ??_maximo 007E                    ??_minimo 007E  
                  ??_trapmf 007E         ??_USART_ReceiveChar 0073           __size_of___awtoft 0021  
         __size_of___ftpack 0068                   ___latbits 0002           __size_of___lwtoft 0018  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               __pcstackBANK3 01C0  
               ??_LCD_Clear 01C2         __end_of__stringdata 103B                    ISR@a_252 00C3  
                  ISR@a_247 00B7                    ISR@a_248 00B9                    ISR@a_249 00BB  
 __end_of_USART_ReceiveChar 10C5                    ISR@delta 00B0                    ISR@index 00AF  
     __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072         TIMER0_Set@contagens 01C0  
                  ?___aldiv 01C0                    ?___ftadd 0023                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0052                    ?___fttol 0032  
                  ?___lwdiv 0070                   __pstrings 1000               ??_TIMER0_Init 01C0  
        USART_Init@BaudRate 01CF              __size_ofi1_res 003A              __size_ofi1_set 0043  
          ___lwdiv@quotient 0075                  pnum$text17 0022                    _ISR$1671 00A2  
         ??_USART_WriteChar 0070                    _ISR$1672 00A5                i1_TIMER0_Set 1042  
              _receiveIndex 00E0             ___aldiv@divisor 01C0           interrupt_function 0004  
           ___aldiv@counter 01C9                    _LCD_Init 0816              ___wmul@product 0044  
                 clear_ram0 0800                    _PIE1bits 008C                    _PIE2bits 008D  
                  _PIR1bits 000C                    _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 10F8  
                 _tempo_rb6 006C                  _ADCON0bits 001F                 __stringbase 1005  
                _ADCON1bits 009F                 __stringdata 1006                    _PWM_Init 11F3  
         ___wmul@multiplier 0040                    i1_inicia 1058         __end_of_TIMER0_Init 107F  
__size_of_USART_ReceiveChar 0018                  _EECON1bits 018C            __size_of___aldiv 008F  
          __size_of___ftadd 0109            __size_of___ftdiv 00B8            __size_of___ftneg 000A  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
                  ___awtoft 1190                    ___ftpack 1451          __end_of__stringtab 1006  
                  ___lwtoft 10C5                   send@index 007A             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077           _USART_WriteString 10F8                    __ptext10 11B1  
                  __ptext11 1170                    __ptext20 1058                    __ptext12 1096  
                  __ptext21 1042                    __ptext13 0816                    __ptext30 1114  
                  __ptext22 10DD                    __ptext14 1150                    __ptext31 13F0  
                  __ptext23 0EAA                    __ptext15 123C                    __ptext40 10AD  
                  __ptext32 0808                    __ptext24 106A                    __ptext16 107F  
                  __ptext41 10F8                    __ptext33 1217                    __ptext25 0B1F  
                  __ptext17 091C                    __ptext42 1048                    __ptext34 10C5  
                  __ptext26 0DA1                    __ptext18 131B                    __ptext35 1652  
                  __ptext27 153F                    __ptext19 1265                    __ptext36 0BD7  
                  __ptext28 129F                    __ptext37 07EC                    __ptext29 1132  
                  __ptext38 1190                    __ptext39 1451          ?_USART_WriteString 0070  
             __size_of_main 00F7               __size_of_send 0087         USART_WriteChar@byte 0070  
       ??_USART_WriteString 0071              _receivedBuffer 00D1                    _setpoint 00E5  
                _LCD_Cursor 1150    __size_of_LCD_WriteString 0020                 _TIMER0_Init 1074  
        pnum$text17_split_1 003D          pnum$text17_split_2 003E          pnum$text17_split_3 003F  
        pnum$text17_split_4 0040          pnum$text17_split_5 0041          pnum$text17_split_6 0042  
        pnum$text17_split_7 0043                  _INTCONbits 000B   __end_of_USART_WriteString 1114  
                  intlevel1 0000                 _pilotoAtivo 00E4                   stringcode 1000  
      USART_WriteString@str 0072                  _TIMER0_Set 1050                    trapmf@ua 004F  
           _USART_WriteChar 1048                    stringdir 1000                    stringtab 1000  
              ___aldiv@sign 01CA      __size_of_LCD_WriteData 0017                 _SSPCON2bits 0091  
     i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014                  _USART_Init 13A5  
