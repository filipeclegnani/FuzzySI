

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 02 00:50:02 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
    51                           	psect	text8_split_2,local,class=CODE,merge=1,delta=2
    52                           	psect	text8_split_3,local,class=CODE,merge=1,delta=2
    53                           	psect	text8_split_4,local,class=CODE,merge=1,delta=2
    54                           	psect	text8_split_5,local,class=CODE,merge=1,delta=2
    55                           	psect	text8_split_6,local,class=CODE,merge=1,delta=2
    56                           	psect	text8_split_7,local,class=CODE,merge=1,delta=2
    57                           	psect	text8_split_8,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  000E                     	;# 
   375  000F                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001D                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  0081                     	;# 
   395  0085                     	;# 
   396  0086                     	;# 
   397  0087                     	;# 
   398  0088                     	;# 
   399  0089                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0094                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001D                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  0081                     	;# 
   575  0085                     	;# 
   576  0086                     	;# 
   577  0087                     	;# 
   578  0088                     	;# 
   579  0089                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  009F                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599                           
   600                           	psect	idataBANK1
   601  0803                     __pidataBANK1:	
   602                           
   603                           ;initializer for _setpoint
   604  0803  3488               	retlw	136
   605  0804  3413               	retlw	19
   606  000E                     _TMR1	set	14
   607  001F                     _ADCON0bits	set	31
   608  001E                     _ADRESH	set	30
   609  0017                     _CCP1CON	set	23
   610  0017                     _CCP1CONbits	set	23
   611  001D                     _CCP2CON	set	29
   612  001D                     _CCP2CONbits	set	29
   613  0015                     _CCPR1L	set	21
   614  001B                     _CCPR2L	set	27
   615  000B                     _INTCONbits	set	11
   616  000C                     _PIR1bits	set	12
   617  000D                     _PIR2bits	set	13
   618  0005                     _PORTA	set	5
   619  0006                     _PORTB	set	6
   620  0006                     _PORTBbits	set	6
   621  0007                     _PORTC	set	7
   622  0008                     _PORTD	set	8
   623  0009                     _PORTE	set	9
   624  0009                     _PORTEbits	set	9
   625  001A                     _RCREG	set	26
   626  0018                     _RCSTAbits	set	24
   627  0013                     _SSPBUF	set	19
   628  0014                     _SSPCONbits	set	20
   629  0010                     _T1CON	set	16
   630  0010                     _T1CONbits	set	16
   631  0012                     _T2CONbits	set	18
   632  0001                     _TMR0	set	1
   633  000F                     _TMR1H	set	15
   634  000E                     _TMR1L	set	14
   635  0019                     _TXREG	set	25
   636  00C1                     _OERR	set	193
   637  009F                     _ADCON1bits	set	159
   638  009E                     _ADRESL	set	158
   639  0081                     _OPTION_REGbits	set	129
   640  008C                     _PIE1bits	set	140
   641  008D                     _PIE2bits	set	141
   642  0092                     _PR2	set	146
   643  0099                     _SPBRG	set	153
   644  0093                     _SSPADD	set	147
   645  0091                     _SSPCON2	set	145
   646  0091                     _SSPCON2bits	set	145
   647  0094                     _SSPSTATbits	set	148
   648  0085                     _TRISA	set	133
   649  0086                     _TRISB	set	134
   650  0087                     _TRISC	set	135
   651  0088                     _TRISD	set	136
   652  0089                     _TRISE	set	137
   653  0098                     _TXSTAbits	set	152
   654  010D                     _EEADR	set	269
   655  010C                     _EEDATA	set	268
   656  018C                     _EECON1bits	set	396
   657  018D                     _EECON2	set	397
   658                           
   659                           	psect	strings
   660  1000                     __pstrings:	
   661  1000                     stringtab:	
   662  1000                     __stringtab:	
   663  1000                     stringcode:	
   664                           ;	String table - string pointers are 1 byte each
   665                           
   666  1000                     stringdir:	
   667  1000  3010               	movlw	high stringdir
   668  1001  008A               	movwf	10
   669  1002  0804               	movf	4,w
   670  1003  0A84               	incf	4,f
   671  1004  0782               	addwf	2,f
   672  1005                     __stringbase:	
   673  1005  3400               	retlw	0
   674  1006                     __end_of__stringtab:	
   675  1006                     __stringdata:	
   676  1006                     STR_1:	
   677  1006  340A               	retlw	10
   678  1007  340D               	retlw	13
   679  1008  3420               	retlw	32	;' '
   680  1009  342D               	retlw	45	;'-'
   681  100A  342D               	retlw	45	;'-'
   682  100B  342D               	retlw	45	;'-'
   683  100C  342D               	retlw	45	;'-'
   684  100D  342D               	retlw	45	;'-'
   685  100E  342D               	retlw	45	;'-'
   686  100F  342D               	retlw	45	;'-'
   687  1010  3420               	retlw	32	;' '
   688  1011  3445               	retlw	69	;'E'
   689  1012  3453               	retlw	83	;'S'
   690  1013  3454               	retlw	84	;'T'
   691  1014  344F               	retlw	79	;'O'
   692  1015  3455               	retlw	85	;'U'
   693  1016  3452               	retlw	82	;'R'
   694  1017  344F               	retlw	79	;'O'
   695  1018  3420               	retlw	32	;' '
   696  1019  3444               	retlw	68	;'D'
   697  101A  3445               	retlw	69	;'E'
   698  101B  3420               	retlw	32	;' '
   699  101C  3450               	retlw	80	;'P'
   700  101D  3449               	retlw	73	;'I'
   701  101E  344C               	retlw	76	;'L'
   702  101F  3448               	retlw	72	;'H'
   703  1020  3441               	retlw	65	;'A'
   704  1021  3420               	retlw	32	;' '
   705  1022  342D               	retlw	45	;'-'
   706  1023  342D               	retlw	45	;'-'
   707  1024  342D               	retlw	45	;'-'
   708  1025  342D               	retlw	45	;'-'
   709  1026  342D               	retlw	45	;'-'
   710  1027  342D               	retlw	45	;'-'
   711  1028  342D               	retlw	45	;'-'
   712  1029  3420               	retlw	32	;' '
   713  102A  340A               	retlw	10
   714  102B  340D               	retlw	13
   715  102C  3420               	retlw	32	;' '
   716  102D  3400               	retlw	0
   717  102E                     __end_of__stringdata:	
   718                           
   719                           ; #config settings
   720  0000                     
   721                           	psect	cinit
   722  0015                     start_initialization:	
   723  0015                     __initialization:	
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0015  01E8               	clrf	__pbssBANK0& (0+127)
   727  0016  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   728  0017  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   729  0018  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   730  0019  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   731  001A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   732                           
   733                           ; Clear objects allocated to BANK1
   734  001B  1383               	bcf	3,7	;select IRP bank0
   735  001C  30C5               	movlw	low __pbssBANK1
   736  001D  0084               	movwf	4
   737  001E  30D8               	movlw	low (__pbssBANK1+19)
   738  001F  160A  118A  224E  120A  118A  	fcall	clear_ram0
   739                           
   740                           ; Clear objects allocated to BANK3
   741  0024  1783               	bsf	3,7	;select IRP bank2
   742  0025  3090               	movlw	low __pbssBANK3
   743  0026  0084               	movwf	4
   744  0027  30C0               	movlw	low (__pbssBANK3+48)
   745  0028  160A  118A  224E  120A  118A  	fcall	clear_ram0
   746                           
   747                           ; Clear objects allocated to BANK2
   748  002D  3010               	movlw	low __pbssBANK2
   749  002E  0084               	movwf	4
   750  002F  3070               	movlw	low (__pbssBANK2+96)
   751  0030  160A  118A  224E  120A  118A  	fcall	clear_ram0
   752                           
   753                           ; Initialize objects allocated to BANK1
   754  0035  1683               	bsf	3,5	;RP0=1, select bank1
   755  0036  1303               	bcf	3,6	;RP1=0, select bank1
   756  0037  120A  158A  2003  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   757  003C  00D8               	movwf	__pdataBANK1& (0+127)
   758  003D  120A  158A  2004   	fcall	__pidataBANK1+1	;fetch initializer
   759  0040  00D9               	movwf	(__pdataBANK1+1)& (0+127)
   760  0041                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  0041                     __end_of__initialization:	
   764  0041  0183               	clrf	3
   765  0042  160A  118A  2D57   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssBANK0
   768  0068                     __pbssBANK0:	
   769  0068                     _contador_rb6:	
   770  0068                     	ds	2
   771  006A                     _receiveIndex:	
   772  006A                     	ds	2
   773  006C                     _tempo_rb6:	
   774  006C                     	ds	2
   775                           
   776                           	psect	bssBANK1
   777  00C5                     __pbssBANK1:	
   778  00C5                     _buffer:	
   779  00C5                     	ds	7
   780  00CC                     _contagens_tm0:	
   781  00CC                     	ds	2
   782  00CE                     _erro_anterior:	
   783  00CE                     	ds	2
   784  00D0                     _erro_atual:	
   785  00D0                     	ds	2
   786  00D2                     _pulsos:	
   787  00D2                     	ds	2
   788  00D4                     _pwm:	
   789  00D4                     	ds	2
   790  00D6                     _rpm:	
   791  00D6                     	ds	2
   792                           
   793                           	psect	dataBANK1
   794  00D8                     __pdataBANK1:	
   795  00D8                     _setpoint:	
   796  00D8                     	ds	2
   797                           
   798                           	psect	bssBANK3
   799  0190                     __pbssBANK3:	
   800  0190                     _rBaixo:	
   801  0190                     	ds	48
   802                           
   803                           	psect	bssBANK2
   804  0110                     __pbssBANK2:	
   805  0110                     _rGrande:	
   806  0110                     	ds	48
   807  0140                     _rMedio:	
   808  0140                     	ds	48
   809                           
   810                           	psect	clrtext
   811  124E                     clear_ram0:	
   812                           ;	Called with FSR containing the base address, and
   813                           ;	W with the last address+1
   814                           
   815  124E  0064               	clrwdt	;clear the watchdog before getting into this loop
   816  124F                     clrloop0:	
   817  124F  0180               	clrf	0	;clear RAM location pointed to by FSR
   818  1250  0A84               	incf	4,f	;increment pointer
   819  1251  0604               	xorwf	4,w	;XOR with final address
   820  1252  1903               	btfsc	3,2	;have we reached the end yet?
   821  1253  3400               	retlw	0	;all done for this memory range, return
   822  1254  0604               	xorwf	4,w	;XOR again to restore value
   823  1255  2A4F               	goto	clrloop0	;do the next byte
   824                           
   825                           	psect	cstackBANK3
   826  01C0                     __pcstackBANK3:	
   827  01C0                     ??_TIMER0_Set:	
   828  01C0                     ?_PWM_DutyCycle2:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  01C0                     ??_TIMER0_Init:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  01C0                     ??_PWM_Init:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  01C0                     ?_PWM_DutyCycle1:	
   838                           ; 0 bytes @ 0x0
   839                           
   840  01C0                     ?___aldiv:	
   841                           ; 0 bytes @ 0x0
   842                           
   843  01C0                     TIMER0_Set@contagens:	
   844                           ; 4 bytes @ 0x0
   845                           
   846  01C0                     PWM_DutyCycle1@valor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  01C0                     PWM_DutyCycle2@valor:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  01C0                     ___aldiv@divisor:	
   853                           ; 2 bytes @ 0x0
   854                           
   855                           
   856                           ; 4 bytes @ 0x0
   857  01C0                     	ds	2
   858  01C2                     ??_PWM_DutyCycle2:	
   859  01C2                     ??_PWM_DutyCycle1:	
   860                           ; 0 bytes @ 0x2
   861                           
   862                           
   863                           ; 0 bytes @ 0x2
   864  01C2                     	ds	2
   865  01C4                     ___aldiv@dividend:	
   866                           
   867                           ; 4 bytes @ 0x4
   868  01C4                     	ds	4
   869  01C8                     ??___aldiv:	
   870                           
   871                           ; 0 bytes @ 0x8
   872  01C8                     	ds	1
   873  01C9                     ___aldiv@counter:	
   874                           
   875                           ; 1 bytes @ 0x9
   876  01C9                     	ds	1
   877  01CA                     ___aldiv@sign:	
   878                           
   879                           ; 1 bytes @ 0xA
   880  01CA                     	ds	1
   881  01CB                     ___aldiv@quotient:	
   882                           
   883                           ; 4 bytes @ 0xB
   884  01CB                     	ds	4
   885  01CF                     ?_USART_Init:	
   886  01CF                     USART_Init@BaudRate:	
   887                           ; 0 bytes @ 0xF
   888                           
   889                           
   890                           ; 4 bytes @ 0xF
   891  01CF                     	ds	4
   892  01D3                     ??_USART_Init:	
   893                           
   894                           ; 0 bytes @ 0x13
   895  01D3                     	ds	4
   896  01D7                     ??_main:	
   897                           
   898                           ; 0 bytes @ 0x17
   899  01D7                     	ds	3
   900                           
   901                           	psect	cstackBANK1
   902  00A0                     __pcstackBANK1:	
   903  00A0                     _ISR$1636:	
   904                           
   905                           ; 3 bytes @ 0x0
   906  00A0                     	ds	3
   907  00A3                     _ISR$1637:	
   908                           
   909                           ; 3 bytes @ 0x3
   910  00A3                     	ds	3
   911  00A6                     ISR@reajuste:	
   912                           
   913                           ; 3 bytes @ 0x6
   914  00A6                     	ds	3
   915  00A9                     _ISR$218:	
   916                           
   917                           ; 2 bytes @ 0x9
   918  00A9                     	ds	2
   919  00AB                     ISR@delta:	
   920                           
   921                           ; 2 bytes @ 0xB
   922  00AB                     	ds	2
   923  00AD                     ISR@soma:	
   924                           
   925                           ; 3 bytes @ 0xD
   926  00AD                     	ds	3
   927  00B0                     ISR@a:	
   928                           
   929                           ; 2 bytes @ 0x10
   930  00B0                     	ds	2
   931  00B2                     ISR@a_211:	
   932                           
   933                           ; 2 bytes @ 0x12
   934  00B2                     	ds	2
   935  00B4                     ISR@a_212:	
   936                           
   937                           ; 2 bytes @ 0x14
   938  00B4                     	ds	2
   939  00B6                     ISR@a_213:	
   940                           
   941                           ; 2 bytes @ 0x16
   942  00B6                     	ds	2
   943  00B8                     ISR@total_area:	
   944                           
   945                           ; 3 bytes @ 0x18
   946  00B8                     	ds	3
   947  00BB                     ISR@rule:	
   948                           
   949                           ; 3 bytes @ 0x1B
   950  00BB                     	ds	3
   951  00BE                     ISR@a_216:	
   952                           
   953                           ; 2 bytes @ 0x1E
   954  00BE                     	ds	2
   955  00C0                     ISR@rpmAux:	
   956                           
   957                           ; 2 bytes @ 0x20
   958  00C0                     	ds	2
   959  00C2                     ISR@x:	
   960                           
   961                           ; 3 bytes @ 0x22
   962  00C2                     	ds	3
   963                           
   964                           	psect	cstackCOMMON
   965  0070                     __pcstackCOMMON:	
   966  0070                     ?_TIMER0_Set:	
   967  0070                     ?_USART_WriteChar:	
   968                           ; 0 bytes @ 0x0
   969                           
   970  0070                     ??_USART_WriteChar:	
   971                           ; 0 bytes @ 0x0
   972                           
   973  0070                     ?_TIMER0_Init:	
   974                           ; 0 bytes @ 0x0
   975                           
   976  0070                     ?_PWM_Init:	
   977                           ; 0 bytes @ 0x0
   978                           
   979  0070                     ?_ISR:	
   980                           ; 0 bytes @ 0x0
   981                           
   982  0070                     ?_main:	
   983                           ; 0 bytes @ 0x0
   984                           
   985  0070                     ?_USART_WriteString:	
   986                           ; 0 bytes @ 0x0
   987                           
   988  0070                     ?i1_TIMER0_Set:	
   989                           ; 0 bytes @ 0x0
   990                           
   991  0070                     ??i1_TIMER0_Set:	
   992                           ; 0 bytes @ 0x0
   993                           
   994  0070                     ?i1_PWM_DutyCycle2:	
   995                           ; 0 bytes @ 0x0
   996                           
   997  0070                     ?_USART_ReceiveChar:	
   998                           ; 0 bytes @ 0x0
   999                           
  1000  0070                     ?___bmul:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_abs:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?___awdiv:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009  0070                     ?___awmod:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0070                     ?___lwdiv:	
  1013                           ; 2 bytes @ 0x0
  1014                           
  1015  0070                     ?___ftpack:	
  1016                           ; 2 bytes @ 0x0
  1017                           
  1018  0070                     USART_WriteChar@byte:	
  1019                           ; 3 bytes @ 0x0
  1020                           
  1021  0070                     ___bmul@multiplicand:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     i1TIMER0_Set@contagens:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     abs@a:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ___awdiv@divisor:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0070                     ___awmod@divisor:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0070                     ___lwdiv@divisor:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039  0070                     i1PWM_DutyCycle2@valor:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042  0070                     ___ftpack@arg:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 3 bytes @ 0x0
  1047  0070                     	ds	1
  1048  0071                     ??_USART_WriteString:	
  1049  0071                     ??___bmul:	
  1050                           ; 0 bytes @ 0x1
  1051                           
  1052                           
  1053                           ; 0 bytes @ 0x1
  1054  0071                     	ds	1
  1055  0072                     ??_abs:	
  1056  0072                     ??i1_PWM_DutyCycle2:	
  1057                           ; 0 bytes @ 0x2
  1058                           
  1059  0072                     USART_WriteString@str:	
  1060                           ; 0 bytes @ 0x2
  1061                           
  1062  0072                     ___bmul@product:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065  0072                     ___awdiv@dividend:	
  1066                           ; 1 bytes @ 0x2
  1067                           
  1068  0072                     ___awmod@dividend:	
  1069                           ; 2 bytes @ 0x2
  1070                           
  1071  0072                     ___lwdiv@dividend:	
  1072                           ; 2 bytes @ 0x2
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x2
  1076  0072                     	ds	1
  1077  0073                     ??_USART_ReceiveChar:	
  1078  0073                     ___bmul@multiplier:	
  1079                           ; 0 bytes @ 0x3
  1080                           
  1081  0073                     ___ftpack@exp:	
  1082                           ; 1 bytes @ 0x3
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x3
  1086  0073                     	ds	1
  1087  0074                     ??___awdiv:	
  1088  0074                     ??___awmod:	
  1089                           ; 0 bytes @ 0x4
  1090                           
  1091  0074                     ?___ftge:	
  1092                           ; 0 bytes @ 0x4
  1093                           
  1094  0074                     ??___lwdiv:	
  1095                           ; 1 bit 
  1096                           
  1097  0074                     USART_ReceiveChar@byte:	
  1098                           ; 0 bytes @ 0x4
  1099                           
  1100  0074                     ___ftpack@sign:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103  0074                     ___ftge@ff1:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106                           
  1107                           ; 3 bytes @ 0x4
  1108  0074                     	ds	1
  1109  0075                     ??___ftpack:	
  1110  0075                     ___awdiv@counter:	
  1111                           ; 0 bytes @ 0x5
  1112                           
  1113  0075                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116  0075                     ___lwdiv@quotient:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x5
  1121  0075                     	ds	1
  1122  0076                     ___awdiv@sign:	
  1123  0076                     ___awmod@sign:	
  1124                           ; 1 bytes @ 0x6
  1125                           
  1126                           
  1127                           ; 1 bytes @ 0x6
  1128  0076                     	ds	1
  1129  0077                     ___lwdiv@counter:	
  1130  0077                     ___awdiv@quotient:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133  0077                     ___ftge@ff2:	
  1134                           ; 2 bytes @ 0x7
  1135                           
  1136                           
  1137                           ; 3 bytes @ 0x7
  1138  0077                     	ds	1
  1139  0078                     ?___awtoft:	
  1140  0078                     ___awtoft@c:	
  1141                           ; 3 bytes @ 0x8
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x8
  1145  0078                     	ds	3
  1146  007B                     ??___awtoft:	
  1147                           
  1148                           ; 0 bytes @ 0xB
  1149  007B                     	ds	2
  1150  007D                     ___awtoft@sign:	
  1151                           
  1152                           ; 1 bytes @ 0xD
  1153  007D                     	ds	1
  1154  007E                     ??_maximo:	
  1155  007E                     ??_minimo:	
  1156                           ; 0 bytes @ 0xE
  1157                           
  1158  007E                     ??_trapmf:	
  1159                           ; 0 bytes @ 0xE
  1160                           
  1161  007E                     ??___wmul:	
  1162                           ; 0 bytes @ 0xE
  1163                           
  1164  007E                     ??___ftneg:	
  1165                           ; 0 bytes @ 0xE
  1166                           
  1167                           
  1168                           	psect	cstackBANK0
  1169  0020                     __pcstackBANK0:	
  1170                           ; 0 bytes @ 0xE
  1171                           
  1172  0020                     ??___ftge:	
  1173  0020                     ?___ftneg:	
  1174                           ; 0 bytes @ 0x0
  1175                           
  1176  0020                     ___ftneg@f1:	
  1177                           ; 3 bytes @ 0x0
  1178                           
  1179                           
  1180                           ; 3 bytes @ 0x0
  1181  0020                     	ds	3
  1182  0023                     ?___ftadd:	
  1183  0023                     ___ftadd@f1:	
  1184                           ; 3 bytes @ 0x3
  1185                           
  1186                           
  1187                           ; 3 bytes @ 0x3
  1188  0023                     	ds	3
  1189  0026                     ?_minimo:	
  1190  0026                     minimo@a:	
  1191                           ; 3 bytes @ 0x6
  1192                           
  1193  0026                     ___ftadd@f2:	
  1194                           ; 3 bytes @ 0x6
  1195                           
  1196                           
  1197                           ; 3 bytes @ 0x6
  1198  0026                     	ds	3
  1199  0029                     ??___ftadd:	
  1200  0029                     minimo@b:	
  1201                           ; 0 bytes @ 0x9
  1202                           
  1203                           
  1204                           ; 3 bytes @ 0x9
  1205  0029                     	ds	3
  1206  002C                     ?_maximo:	
  1207  002C                     maximo@a:	
  1208                           ; 3 bytes @ 0xC
  1209                           
  1210                           
  1211                           ; 3 bytes @ 0xC
  1212  002C                     	ds	1
  1213  002D                     ___ftadd@sign:	
  1214                           
  1215                           ; 1 bytes @ 0xD
  1216  002D                     	ds	1
  1217  002E                     ___ftadd@exp2:	
  1218                           
  1219                           ; 1 bytes @ 0xE
  1220  002E                     	ds	1
  1221  002F                     ___ftadd@exp1:	
  1222  002F                     maximo@b:	
  1223                           ; 1 bytes @ 0xF
  1224                           
  1225                           
  1226                           ; 3 bytes @ 0xF
  1227  002F                     	ds	1
  1228  0030                     ?___ftdiv:	
  1229  0030                     ___ftdiv@f2:	
  1230                           ; 3 bytes @ 0x10
  1231                           
  1232                           
  1233                           ; 3 bytes @ 0x10
  1234  0030                     	ds	2
  1235  0032                     ?___fttol:	
  1236  0032                     ___fttol@f1:	
  1237                           ; 4 bytes @ 0x12
  1238                           
  1239                           
  1240                           ; 3 bytes @ 0x12
  1241  0032                     	ds	1
  1242  0033                     ___ftdiv@f1:	
  1243                           
  1244                           ; 3 bytes @ 0x13
  1245  0033                     	ds	3
  1246  0036                     ??___ftdiv:	
  1247  0036                     ??___fttol:	
  1248                           ; 0 bytes @ 0x16
  1249                           
  1250                           
  1251                           ; 0 bytes @ 0x16
  1252  0036                     	ds	4
  1253  003A                     ___ftdiv@cntr:	
  1254  003A                     ___fttol@sign1:	
  1255                           ; 1 bytes @ 0x1A
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x1A
  1259  003A                     	ds	1
  1260  003B                     ___ftdiv@f3:	
  1261  003B                     ___fttol@lval:	
  1262                           ; 3 bytes @ 0x1B
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x1B
  1266  003B                     	ds	3
  1267  003E                     ___ftdiv@exp:	
  1268                           
  1269                           ; 1 bytes @ 0x1E
  1270  003E                     	ds	1
  1271  003F                     ___ftdiv@sign:	
  1272  003F                     ___fttol@exp1:	
  1273                           ; 1 bytes @ 0x1F
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x1F
  1277  003F                     	ds	1
  1278  0040                     ?___wmul:	
  1279  0040                     ?_trapmf:	
  1280                           ; 2 bytes @ 0x20
  1281                           
  1282  0040                     ___wmul@multiplier:	
  1283                           ; 3 bytes @ 0x20
  1284                           
  1285  0040                     trapmf@x:	
  1286                           ; 2 bytes @ 0x20
  1287                           
  1288                           
  1289                           ; 3 bytes @ 0x20
  1290  0040                     	ds	2
  1291  0042                     ___wmul@multiplicand:	
  1292                           
  1293                           ; 2 bytes @ 0x22
  1294  0042                     	ds	1
  1295  0043                     trapmf@a:	
  1296                           
  1297                           ; 3 bytes @ 0x23
  1298  0043                     	ds	1
  1299  0044                     ___wmul@product:	
  1300                           
  1301                           ; 2 bytes @ 0x24
  1302  0044                     	ds	2
  1303  0046                     ?___lwtoft:	
  1304  0046                     ___lwtoft@c:	
  1305                           ; 3 bytes @ 0x26
  1306                           
  1307  0046                     trapmf@b:	
  1308                           ; 2 bytes @ 0x26
  1309                           
  1310                           
  1311                           ; 3 bytes @ 0x26
  1312  0046                     	ds	3
  1313  0049                     ??___lwtoft:	
  1314  0049                     trapmf@c:	
  1315                           ; 0 bytes @ 0x29
  1316                           
  1317                           
  1318                           ; 3 bytes @ 0x29
  1319  0049                     	ds	3
  1320  004C                     trapmf@d:	
  1321                           
  1322                           ; 3 bytes @ 0x2C
  1323  004C                     	ds	3
  1324  004F                     trapmf@ua:	
  1325                           
  1326                           ; 3 bytes @ 0x2F
  1327  004F                     	ds	3
  1328  0052                     ?___ftmul:	
  1329  0052                     ___ftmul@f1:	
  1330                           ; 3 bytes @ 0x32
  1331                           
  1332                           
  1333                           ; 3 bytes @ 0x32
  1334  0052                     	ds	3
  1335  0055                     ___ftmul@f2:	
  1336                           
  1337                           ; 3 bytes @ 0x35
  1338  0055                     	ds	3
  1339  0058                     ??___ftmul:	
  1340                           
  1341                           ; 0 bytes @ 0x38
  1342  0058                     	ds	4
  1343  005C                     ___ftmul@exp:	
  1344                           
  1345                           ; 1 bytes @ 0x3C
  1346  005C                     	ds	1
  1347  005D                     ___ftmul@f3_as_product:	
  1348                           
  1349                           ; 3 bytes @ 0x3D
  1350  005D                     	ds	3
  1351  0060                     ___ftmul@cntr:	
  1352                           
  1353                           ; 1 bytes @ 0x40
  1354  0060                     	ds	1
  1355  0061                     ___ftmul@sign:	
  1356                           
  1357                           ; 1 bytes @ 0x41
  1358  0061                     	ds	1
  1359  0062                     ??_ISR:	
  1360                           
  1361                           ; 0 bytes @ 0x42
  1362  0062                     	ds	6
  1363                           
  1364                           	psect	maintext
  1365  1557                     __pmaintext:	
  1366 ;;
  1367 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1368 ;;
  1369 ;; *************** function _main *****************
  1370 ;; Defined at:
  1371 ;;		line 295 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;		None               void
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 17F/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       0       0       3       0
  1388 ;;      Totals:         0       0       0       3       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels required when called:    6
  1391 ;; This function calls:
  1392 ;;		_PWM_DutyCycle1
  1393 ;;		_PWM_DutyCycle2
  1394 ;;		_PWM_Init
  1395 ;;		_TIMER0_Init
  1396 ;;		_TIMER0_Set
  1397 ;;		_USART_Init
  1398 ;; This function is called by:
  1399 ;;		Startup code after reset
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _main
  1405  1557                     _main:	
  1406                           
  1407                           ;main.c: 296: TRISA = 0b00000001;
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1411  1557  3001               	movlw	1
  1412  1558  1683               	bsf	3,5	;RP0=1, select bank1
  1413  1559  1303               	bcf	3,6	;RP1=0, select bank1
  1414  155A  0085               	movwf	5	;volatile
  1415                           
  1416                           ;main.c: 297: PORTA = 0b00000001;
  1417  155B  3001               	movlw	1
  1418  155C  1283               	bcf	3,5	;RP0=0, select bank0
  1419  155D  1303               	bcf	3,6	;RP1=0, select bank0
  1420  155E  0085               	movwf	5	;volatile
  1421                           
  1422                           ;main.c: 298: TRISB =
  1423                           ;main.c: 299: 0b00000000;
  1424  155F  1683               	bsf	3,5	;RP0=1, select bank1
  1425  1560  1303               	bcf	3,6	;RP1=0, select bank1
  1426  1561  0186               	clrf	6	;volatile
  1427                           
  1428                           ;main.c: 300: PORTB = 0b00000000;
  1429  1562  1283               	bcf	3,5	;RP0=0, select bank0
  1430  1563  1303               	bcf	3,6	;RP1=0, select bank0
  1431  1564  0186               	clrf	6	;volatile
  1432                           
  1433                           ;main.c: 301: TRISC = 0b10000001;
  1434  1565  3081               	movlw	129
  1435  1566  1683               	bsf	3,5	;RP0=1, select bank1
  1436  1567  1303               	bcf	3,6	;RP1=0, select bank1
  1437  1568  0087               	movwf	7	;volatile
  1438                           
  1439                           ;main.c: 303: PORTC =
  1440                           ;main.c: 304: 0b11000000;
  1441  1569  30C0               	movlw	192
  1442  156A  1283               	bcf	3,5	;RP0=0, select bank0
  1443  156B  1303               	bcf	3,6	;RP1=0, select bank0
  1444  156C  0087               	movwf	7	;volatile
  1445                           
  1446                           ;main.c: 305: TRISD = 0b00000000;
  1447  156D  1683               	bsf	3,5	;RP0=1, select bank1
  1448  156E  1303               	bcf	3,6	;RP1=0, select bank1
  1449  156F  0188               	clrf	8	;volatile
  1450                           
  1451                           ;main.c: 306: PORTD = 0b00000000;
  1452  1570  1283               	bcf	3,5	;RP0=0, select bank0
  1453  1571  1303               	bcf	3,6	;RP1=0, select bank0
  1454  1572  0188               	clrf	8	;volatile
  1455                           
  1456                           ;main.c: 307: TRISE = 0b00000000;
  1457  1573  1683               	bsf	3,5	;RP0=1, select bank1
  1458  1574  1303               	bcf	3,6	;RP1=0, select bank1
  1459  1575  0189               	clrf	9	;volatile
  1460                           
  1461                           ;main.c: 308: PORTE = 0b00000000;
  1462  1576  1283               	bcf	3,5	;RP0=0, select bank0
  1463  1577  1303               	bcf	3,6	;RP1=0, select bank0
  1464  1578  0189               	clrf	9	;volatile
  1465                           
  1466                           ;main.c: 311: T1CON = 0x03;
  1467  1579  3003               	movlw	3
  1468  157A  0090               	movwf	16	;volatile
  1469                           
  1470                           ;main.c: 312: TMR1L = 0x00;
  1471  157B  018E               	clrf	14	;volatile
  1472                           
  1473                           ;main.c: 313: TMR1H = 0x00;
  1474  157C  018F               	clrf	15	;volatile
  1475                           
  1476                           ;main.c: 316: USART_Init(115200);
  1477  157D  3000               	movlw	0
  1478  157E  1683               	bsf	3,5	;RP0=1, select bank3
  1479  157F  1703               	bsf	3,6	;RP1=1, select bank3
  1480  1580  00D2               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1481  1581  3001               	movlw	1
  1482  1582  00D1               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1483  1583  30C2               	movlw	194
  1484  1584  00D0               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1485  1585  3000               	movlw	0
  1486  1586  00CF               	movwf	USART_Init@BaudRate^(0+384)
  1487  1587  160A  118A  23F6  160A  118A  	fcall	_USART_Init
  1488                           
  1489                           ;main.c: 317: TIMER0_Init();
  1490  158C  160A  118A  2260  160A  118A  	fcall	_TIMER0_Init
  1491                           
  1492                           ;main.c: 320: PWM_Init();
  1493  1591  160A  118A  236F  160A  118A  	fcall	_PWM_Init
  1494                           
  1495                           ;main.c: 324: INTCONbits.PEIE =
  1496                           ;main.c: 325: 1;
  1497  1596  170B               	bsf	11,6	;volatile
  1498                           
  1499                           ;main.c: 326: INTCONbits.GIE = 1;
  1500  1597  178B               	bsf	11,7	;volatile
  1501                           
  1502                           ;main.c: 329: PWM_DutyCycle1(0);
  1503  1598  3000               	movlw	0
  1504  1599  1683               	bsf	3,5	;RP0=1, select bank3
  1505  159A  1703               	bsf	3,6	;RP1=1, select bank3
  1506  159B  00C0               	movwf	PWM_DutyCycle1@valor^(0+384)
  1507  159C  3000               	movlw	0
  1508  159D  00C1               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1509  159E  160A  118A  234E  160A  118A  	fcall	_PWM_DutyCycle1
  1510                           
  1511                           ;main.c: 330: PWM_DutyCycle2(0);
  1512  15A3  3000               	movlw	0
  1513  15A4  1683               	bsf	3,5	;RP0=1, select bank3
  1514  15A5  1703               	bsf	3,6	;RP1=1, select bank3
  1515  15A6  00C0               	movwf	PWM_DutyCycle2@valor^(0+384)
  1516  15A7  3000               	movlw	0
  1517  15A8  00C1               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1518  15A9  120A  118A  27DE  160A  118A  	fcall	_PWM_DutyCycle2
  1519                           
  1520                           ;main.c: 333: TIMER0_Set(238);
  1521  15AE  30EE               	movlw	238
  1522  15AF  160A  118A  2246  160A  118A  	fcall	_TIMER0_Set
  1523                           
  1524                           ;main.c: 336: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1525  15B4  3018               	movlw	24
  1526  15B5  1683               	bsf	3,5	;RP0=1, select bank3
  1527  15B6  1703               	bsf	3,6	;RP1=1, select bank3
  1528  15B7  00D9               	movwf	(??_main^(0+384)+2)
  1529  15B8  3061               	movlw	97
  1530  15B9  00D8               	movwf	(??_main^(0+384)+1)
  1531  15BA  306E               	movlw	110
  1532  15BB  00D7               	movwf	??_main^(0+384)
  1533  15BC                     u4977:	
  1534  15BC  0BD7               	decfsz	??_main^(0+384),f
  1535  15BD  2DBC               	goto	u4977
  1536  15BE  0BD8               	decfsz	(??_main^(0+384)+1),f
  1537  15BF  2DBC               	goto	u4977
  1538  15C0  0BD9               	decfsz	(??_main^(0+384)+2),f
  1539  15C1  2DBC               	goto	u4977
  1540  15C2  0000               	nop
  1541  15C3                     l3013:	
  1542                           ;main.c: 339: while (1) {
  1543                           
  1544                           
  1545                           ;main.c: 340: _delay((unsigned long)((200)*(18432000/4000.0)));
  1546  15C3  3005               	movlw	5
  1547  15C4  1683               	bsf	3,5	;RP0=1, select bank3
  1548  15C5  1703               	bsf	3,6	;RP1=1, select bank3
  1549  15C6  00D9               	movwf	(??_main^(0+384)+2)
  1550  15C7  30AD               	movlw	173
  1551  15C8  00D8               	movwf	(??_main^(0+384)+1)
  1552  15C9  30E0               	movlw	224
  1553  15CA  00D7               	movwf	??_main^(0+384)
  1554  15CB                     u4987:	
  1555  15CB  0BD7               	decfsz	??_main^(0+384),f
  1556  15CC  2DCB               	goto	u4987
  1557  15CD  0BD8               	decfsz	(??_main^(0+384)+1),f
  1558  15CE  2DCB               	goto	u4987
  1559  15CF  0BD9               	decfsz	(??_main^(0+384)+2),f
  1560  15D0  2DCB               	goto	u4987
  1561  15D1  2DC3               	goto	l3013
  1562  15D2                     __end_of_main:	
  1563                           
  1564                           	psect	text1
  1565  13F6                     __ptext1:	
  1566 ;; *************** function _USART_Init *****************
  1567 ;; Defined at:
  1568 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  BaudRate        4   15[BANK3 ] long 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;		None               void
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       0       0       4       0
  1583 ;;      Locals:         0       0       0       0       0
  1584 ;;      Temps:          0       0       0       4       0
  1585 ;;      Totals:         0       0       0       8       0
  1586 ;;Total ram usage:        8 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    5
  1589 ;; This function calls:
  1590 ;;		___aldiv
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _USART_Init
  1598  13F6                     _USART_Init:	
  1599                           
  1600                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1604  13F6  1683               	bsf	3,5	;RP0=1, select bank3
  1605  13F7  1703               	bsf	3,6	;RP1=1, select bank3
  1606  13F8  084F               	movf	USART_Init@BaudRate^(0+384),w
  1607  13F9  00D3               	movwf	??_USART_Init^(0+384)
  1608  13FA  0850               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1609  13FB  00D4               	movwf	(??_USART_Init^(0+384)+1)
  1610  13FC  0851               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1611  13FD  00D5               	movwf	(??_USART_Init^(0+384)+2)
  1612  13FE  0852               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1613  13FF  00D6               	movwf	(??_USART_Init^(0+384)+3)
  1614  1400  3004               	movlw	4
  1615  1401                     u3635:	
  1616  1401  1003               	clrc
  1617  1402  0DD3               	rlf	??_USART_Init^(0+384),f
  1618  1403  0DD4               	rlf	(??_USART_Init^(0+384)+1),f
  1619  1404  0DD5               	rlf	(??_USART_Init^(0+384)+2),f
  1620  1405  0DD6               	rlf	(??_USART_Init^(0+384)+3),f
  1621  1406  3EFF               	addlw	-1
  1622  1407  1D03               	skipz
  1623  1408  2C01               	goto	u3635
  1624  1409  0856               	movf	(??_USART_Init+3)^(0+384),w
  1625  140A  00C3               	movwf	(___aldiv@divisor+3)^(0+384)
  1626  140B  0855               	movf	(??_USART_Init+2)^(0+384),w
  1627  140C  00C2               	movwf	(___aldiv@divisor+2)^(0+384)
  1628  140D  0854               	movf	(??_USART_Init+1)^(0+384),w
  1629  140E  00C1               	movwf	(___aldiv@divisor+1)^(0+384)
  1630  140F  0853               	movf	??_USART_Init^(0+384),w
  1631  1410  00C0               	movwf	___aldiv@divisor^(0+384)
  1632  1411  3001               	movlw	1
  1633  1412  00C7               	movwf	(___aldiv@dividend+3)^(0+384)
  1634  1413  3019               	movlw	25
  1635  1414  00C6               	movwf	(___aldiv@dividend+2)^(0+384)
  1636  1415  3040               	movlw	64
  1637  1416  00C5               	movwf	(___aldiv@dividend+1)^(0+384)
  1638  1417  3000               	movlw	0
  1639  1418  00C4               	movwf	___aldiv@dividend^(0+384)
  1640  1419  120A  158A  20EE   	fcall	___aldiv
  1641  141C  1683               	bsf	3,5	;RP0=1, select bank3
  1642  141D  1703               	bsf	3,6	;RP1=1, select bank3
  1643  141E  0840               	movf	?___aldiv^(0+384),w
  1644  141F  3EFF               	addlw	255
  1645  1420  1683               	bsf	3,5	;RP0=1, select bank1
  1646  1421  1303               	bcf	3,6	;RP1=0, select bank1
  1647  1422  0099               	movwf	25	;volatile
  1648                           
  1649                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1650  1423  1398               	bcf	24,7	;volatile
  1651                           
  1652                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1653  1424  1318               	bcf	24,6	;volatile
  1654                           
  1655                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1656  1425  1698               	bsf	24,5	;volatile
  1657                           
  1658                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1659  1426  1218               	bcf	24,4	;volatile
  1660                           
  1661                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1662  1427  1518               	bsf	24,2	;volatile
  1663                           
  1664                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1665  1428  1498               	bsf	24,1	;volatile
  1666                           
  1667                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1668  1429  1018               	bcf	24,0	;volatile
  1669                           
  1670                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1671  142A  1283               	bcf	3,5	;RP0=0, select bank0
  1672  142B  1303               	bcf	3,6	;RP1=0, select bank0
  1673  142C  1798               	bsf	24,7	;volatile
  1674                           
  1675                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1676  142D  1318               	bcf	24,6	;volatile
  1677                           
  1678                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1679  142E  1298               	bcf	24,5	;volatile
  1680                           
  1681                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1682  142F  1618               	bsf	24,4	;volatile
  1683                           
  1684                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1685  1430  1198               	bcf	24,3	;volatile
  1686                           
  1687                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1688  1431  1118               	bcf	24,2	;volatile
  1689                           
  1690                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1691  1432  1098               	bcf	24,1	;volatile
  1692                           
  1693                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1694  1433  1018               	bcf	24,0	;volatile
  1695                           
  1696                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1697  1434  1683               	bsf	3,5	;RP0=1, select bank1
  1698  1435  1303               	bcf	3,6	;RP1=0, select bank1
  1699  1436  120C               	bcf	12,4	;volatile
  1700                           
  1701                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1702  1437  1283               	bcf	3,5	;RP0=0, select bank0
  1703  1438  1303               	bcf	3,6	;RP1=0, select bank0
  1704  1439  120C               	bcf	12,4	;volatile
  1705                           
  1706                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1707  143A  1683               	bsf	3,5	;RP0=1, select bank1
  1708  143B  1303               	bcf	3,6	;RP1=0, select bank1
  1709  143C  168C               	bsf	12,5	;volatile
  1710                           
  1711                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1712  143D  1283               	bcf	3,5	;RP0=0, select bank0
  1713  143E  1303               	bcf	3,6	;RP1=0, select bank0
  1714  143F  128C               	bcf	12,5	;volatile
  1715  1440  0008               	return
  1716  1441                     __end_of_USART_Init:	
  1717                           
  1718                           	psect	text2
  1719  08EE                     __ptext2:	
  1720 ;; *************** function ___aldiv *****************
  1721 ;; Defined at:
  1722 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  divisor         4    0[BANK3 ] long 
  1725 ;;  dividend        4    4[BANK3 ] long 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  quotient        4   11[BANK3 ] long 
  1728 ;;  sign            1   10[BANK3 ] unsigned char 
  1729 ;;  counter         1    9[BANK3 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  4    0[BANK3 ] long 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       8       0
  1740 ;;      Locals:         0       0       0       6       0
  1741 ;;      Temps:          0       0       0       1       0
  1742 ;;      Totals:         0       0       0      15       0
  1743 ;;Total ram usage:       15 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    4
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_USART_Init
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function ___aldiv
  1755  08EE                     ___aldiv:	
  1756                           
  1757                           ;incstack = 0
  1758                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1759  08EE  1683               	bsf	3,5	;RP0=1, select bank3
  1760  08EF  1703               	bsf	3,6	;RP1=1, select bank3
  1761  08F0  01CA               	clrf	___aldiv@sign^(0+384)
  1762  08F1  1FC3               	btfss	(___aldiv@divisor+3)^(0+384),7
  1763  08F2  2900               	goto	l541
  1764  08F3  09C0               	comf	___aldiv@divisor^(0+384),f
  1765  08F4  09C1               	comf	(___aldiv@divisor+1)^(0+384),f
  1766  08F5  09C2               	comf	(___aldiv@divisor+2)^(0+384),f
  1767  08F6  09C3               	comf	(___aldiv@divisor+3)^(0+384),f
  1768  08F7  0AC0               	incf	___aldiv@divisor^(0+384),f
  1769  08F8  1903               	skipnz
  1770  08F9  0AC1               	incf	(___aldiv@divisor+1)^(0+384),f
  1771  08FA  1903               	skipnz
  1772  08FB  0AC2               	incf	(___aldiv@divisor+2)^(0+384),f
  1773  08FC  1903               	skipnz
  1774  08FD  0AC3               	incf	(___aldiv@divisor+3)^(0+384),f
  1775  08FE  01CA               	clrf	___aldiv@sign^(0+384)
  1776  08FF  0ACA               	incf	___aldiv@sign^(0+384),f
  1777  0900                     l541:	
  1778  0900  1FC7               	btfss	(___aldiv@dividend+3)^(0+384),7
  1779  0901  2911               	goto	l2869
  1780  0902  09C4               	comf	___aldiv@dividend^(0+384),f
  1781  0903  09C5               	comf	(___aldiv@dividend+1)^(0+384),f
  1782  0904  09C6               	comf	(___aldiv@dividend+2)^(0+384),f
  1783  0905  09C7               	comf	(___aldiv@dividend+3)^(0+384),f
  1784  0906  0AC4               	incf	___aldiv@dividend^(0+384),f
  1785  0907  1903               	skipnz
  1786  0908  0AC5               	incf	(___aldiv@dividend+1)^(0+384),f
  1787  0909  1903               	skipnz
  1788  090A  0AC6               	incf	(___aldiv@dividend+2)^(0+384),f
  1789  090B  1903               	skipnz
  1790  090C  0AC7               	incf	(___aldiv@dividend+3)^(0+384),f
  1791  090D  3001               	movlw	1
  1792  090E  00C8               	movwf	??___aldiv^(0+384)
  1793  090F  0848               	movf	??___aldiv^(0+384),w
  1794  0910  06CA               	xorwf	___aldiv@sign^(0+384),f
  1795  0911                     l2869:	
  1796  0911  3000               	movlw	0
  1797  0912  00CE               	movwf	(___aldiv@quotient+3)^(0+384)
  1798  0913  3000               	movlw	0
  1799  0914  00CD               	movwf	(___aldiv@quotient+2)^(0+384)
  1800  0915  3000               	movlw	0
  1801  0916  00CC               	movwf	(___aldiv@quotient+1)^(0+384)
  1802  0917  3000               	movlw	0
  1803  0918  00CB               	movwf	___aldiv@quotient^(0+384)
  1804  0919  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  1805  091A  0442               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1806  091B  0441               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1807  091C  0440               	iorwf	___aldiv@divisor^(0+384),w
  1808  091D  1903               	skipnz
  1809  091E  2966               	goto	l2891
  1810  091F  01C9               	clrf	___aldiv@counter^(0+384)
  1811  0920  0AC9               	incf	___aldiv@counter^(0+384),f
  1812  0921                     l2877:	
  1813  0921  1BC3               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1814  0922  2931               	goto	l2879
  1815  0923  3001               	movlw	1
  1816  0924  00C8               	movwf	??___aldiv^(0+384)
  1817  0925                     u3555:	
  1818  0925  1003               	clrc
  1819  0926  0DC0               	rlf	___aldiv@divisor^(0+384),f
  1820  0927  0DC1               	rlf	(___aldiv@divisor+1)^(0+384),f
  1821  0928  0DC2               	rlf	(___aldiv@divisor+2)^(0+384),f
  1822  0929  0DC3               	rlf	(___aldiv@divisor+3)^(0+384),f
  1823  092A  0BC8               	decfsz	??___aldiv^(0+384),f
  1824  092B  2925               	goto	u3555
  1825  092C  3001               	movlw	1
  1826  092D  00C8               	movwf	??___aldiv^(0+384)
  1827  092E  0848               	movf	??___aldiv^(0+384),w
  1828  092F  07C9               	addwf	___aldiv@counter^(0+384),f
  1829  0930  2921               	goto	l2877
  1830  0931                     l2879:	
  1831  0931  3001               	movlw	1
  1832  0932  00C8               	movwf	??___aldiv^(0+384)
  1833  0933                     u3575:	
  1834  0933  1003               	clrc
  1835  0934  0DCB               	rlf	___aldiv@quotient^(0+384),f
  1836  0935  0DCC               	rlf	(___aldiv@quotient+1)^(0+384),f
  1837  0936  0DCD               	rlf	(___aldiv@quotient+2)^(0+384),f
  1838  0937  0DCE               	rlf	(___aldiv@quotient+3)^(0+384),f
  1839  0938  0BC8               	decfsz	??___aldiv^(0+384),f
  1840  0939  2933               	goto	u3575
  1841  093A  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  1842  093B  0247               	subwf	(___aldiv@dividend+3)^(0+384),w
  1843  093C  1D03               	skipz
  1844  093D  2948               	goto	u3585
  1845  093E  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  1846  093F  0246               	subwf	(___aldiv@dividend+2)^(0+384),w
  1847  0940  1D03               	skipz
  1848  0941  2948               	goto	u3585
  1849  0942  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  1850  0943  0245               	subwf	(___aldiv@dividend+1)^(0+384),w
  1851  0944  1D03               	skipz
  1852  0945  2948               	goto	u3585
  1853  0946  0840               	movf	___aldiv@divisor^(0+384),w
  1854  0947  0244               	subwf	___aldiv@dividend^(0+384),w
  1855  0948                     u3585:	
  1856  0948  1C03               	skipc
  1857  0949  2959               	goto	l2887
  1858  094A  0840               	movf	___aldiv@divisor^(0+384),w
  1859  094B  02C4               	subwf	___aldiv@dividend^(0+384),f
  1860  094C  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  1861  094D  1C03               	skipc
  1862  094E  0F41               	incfsz	(___aldiv@divisor+1)^(0+384),w
  1863  094F  02C5               	subwf	(___aldiv@dividend+1)^(0+384),f
  1864  0950  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  1865  0951  1C03               	skipc
  1866  0952  0F42               	incfsz	(___aldiv@divisor+2)^(0+384),w
  1867  0953  02C6               	subwf	(___aldiv@dividend+2)^(0+384),f
  1868  0954  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  1869  0955  1C03               	skipc
  1870  0956  0F43               	incfsz	(___aldiv@divisor+3)^(0+384),w
  1871  0957  02C7               	subwf	(___aldiv@dividend+3)^(0+384),f
  1872  0958  144B               	bsf	___aldiv@quotient^(0+384),0
  1873  0959                     l2887:	
  1874  0959  3001               	movlw	1
  1875  095A                     u3595:	
  1876  095A  1003               	clrc
  1877  095B  0CC3               	rrf	(___aldiv@divisor+3)^(0+384),f
  1878  095C  0CC2               	rrf	(___aldiv@divisor+2)^(0+384),f
  1879  095D  0CC1               	rrf	(___aldiv@divisor+1)^(0+384),f
  1880  095E  0CC0               	rrf	___aldiv@divisor^(0+384),f
  1881  095F  3EFF               	addlw	-1
  1882  0960  1D03               	skipz
  1883  0961  295A               	goto	u3595
  1884  0962  3001               	movlw	1
  1885  0963  02C9               	subwf	___aldiv@counter^(0+384),f
  1886  0964  1D03               	btfss	3,2
  1887  0965  2931               	goto	l2879
  1888  0966                     l2891:	
  1889  0966  084A               	movf	___aldiv@sign^(0+384),w
  1890  0967  1903               	btfsc	3,2
  1891  0968  2974               	goto	l2895
  1892  0969  09CB               	comf	___aldiv@quotient^(0+384),f
  1893  096A  09CC               	comf	(___aldiv@quotient+1)^(0+384),f
  1894  096B  09CD               	comf	(___aldiv@quotient+2)^(0+384),f
  1895  096C  09CE               	comf	(___aldiv@quotient+3)^(0+384),f
  1896  096D  0ACB               	incf	___aldiv@quotient^(0+384),f
  1897  096E  1903               	skipnz
  1898  096F  0ACC               	incf	(___aldiv@quotient+1)^(0+384),f
  1899  0970  1903               	skipnz
  1900  0971  0ACD               	incf	(___aldiv@quotient+2)^(0+384),f
  1901  0972  1903               	skipnz
  1902  0973  0ACE               	incf	(___aldiv@quotient+3)^(0+384),f
  1903  0974                     l2895:	
  1904  0974  084E               	movf	(___aldiv@quotient+3)^(0+384),w
  1905  0975  00C3               	movwf	(?___aldiv+3)^(0+384)
  1906  0976  084D               	movf	(___aldiv@quotient+2)^(0+384),w
  1907  0977  00C2               	movwf	(?___aldiv+2)^(0+384)
  1908  0978  084C               	movf	(___aldiv@quotient+1)^(0+384),w
  1909  0979  00C1               	movwf	(?___aldiv+1)^(0+384)
  1910  097A  084B               	movf	___aldiv@quotient^(0+384),w
  1911  097B  00C0               	movwf	?___aldiv^(0+384)
  1912  097C  0008               	return
  1913  097D                     __end_of___aldiv:	
  1914                           
  1915                           	psect	text3
  1916  1246                     __ptext3:	
  1917 ;; *************** function _TIMER0_Set *****************
  1918 ;; Defined at:
  1919 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  contagens       1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  contagens       1    0[BANK3 ] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;		None               void
  1926 ;; Registers used:
  1927 ;;		wreg
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       0       1       0
  1935 ;;      Temps:          0       0       0       0       0
  1936 ;;      Totals:         0       0       0       1       0
  1937 ;;Total ram usage:        1 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    4
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _TIMER0_Set
  1949  1246                     _TIMER0_Set:	
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _TIMER0_Set: [wreg]
  1953                           ;TIMER0_Set@contagens stored from wreg
  1954  1246  1683               	bsf	3,5	;RP0=1, select bank3
  1955  1247  1703               	bsf	3,6	;RP1=1, select bank3
  1956  1248  00C0               	movwf	TIMER0_Set@contagens^(0+384)
  1957                           
  1958                           ;timers.c: 22: TMR0 = contagens;
  1959  1249  0840               	movf	TIMER0_Set@contagens^(0+384),w
  1960  124A  1283               	bcf	3,5	;RP0=0, select bank0
  1961  124B  1303               	bcf	3,6	;RP1=0, select bank0
  1962  124C  0081               	movwf	1	;volatile
  1963  124D  0008               	return
  1964  124E                     __end_of_TIMER0_Set:	
  1965                           
  1966                           	psect	text4
  1967  1260                     __ptext4:	
  1968 ;; *************** function _TIMER0_Init *****************
  1969 ;; Defined at:
  1970 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;		None               void
  1977 ;; Registers used:
  1978 ;;		None
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    4
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _TIMER0_Init
  2000  1260                     _TIMER0_Init:	
  2001                           
  2002                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _TIMER0_Init: []
  2006  1260  1683               	bsf	3,5	;RP0=1, select bank1
  2007  1261  1303               	bcf	3,6	;RP1=0, select bank1
  2008  1262  1281               	bcf	1,5	;volatile
  2009                           
  2010                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2011  1263  1201               	bcf	1,4	;volatile
  2012                           
  2013                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2014  1264  1181               	bcf	1,3	;volatile
  2015                           
  2016                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2017  1265  1501               	bsf	1,2	;volatile
  2018                           
  2019                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2020  1266  1481               	bsf	1,1	;volatile
  2021                           
  2022                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2023  1267  1401               	bsf	1,0	;volatile
  2024                           
  2025                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2026  1268  110B               	bcf	11,2	;volatile
  2027                           
  2028                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2029  1269  168B               	bsf	11,5	;volatile
  2030  126A  0008               	return
  2031  126B                     __end_of_TIMER0_Init:	
  2032                           
  2033                           	psect	text5
  2034  136F                     __ptext5:	
  2035 ;; *************** function _PWM_Init *****************
  2036 ;; Defined at:
  2037 ;;		line 5 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;		None               void
  2044 ;; Registers used:
  2045 ;;		wreg
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    4
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _PWM_Init
  2067  136F                     _PWM_Init:	
  2068                           
  2069                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in _PWM_Init: [wreg]
  2073  136F  1283               	bcf	3,5	;RP0=0, select bank0
  2074  1370  1303               	bcf	3,6	;RP1=0, select bank0
  2075  1371  1492               	bsf	18,1	;volatile
  2076                           
  2077                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2078  1372  1012               	bcf	18,0	;volatile
  2079                           
  2080                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2081  1373  1312               	bcf	18,6	;volatile
  2082                           
  2083                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2084  1374  1292               	bcf	18,5	;volatile
  2085                           
  2086                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2087  1375  1212               	bcf	18,4	;volatile
  2088                           
  2089                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2090  1376  1192               	bcf	18,3	;volatile
  2091                           
  2092                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2093  1377  1512               	bsf	18,2	;volatile
  2094                           
  2095                           ;pwm.c: 27: PR2 = 255;
  2096  1378  30FF               	movlw	255
  2097  1379  1683               	bsf	3,5	;RP0=1, select bank1
  2098  137A  1303               	bcf	3,6	;RP1=0, select bank1
  2099  137B  0092               	movwf	18	;volatile
  2100                           
  2101                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2102  137C  1283               	bcf	3,5	;RP0=0, select bank0
  2103  137D  1303               	bcf	3,6	;RP1=0, select bank0
  2104  137E  1597               	bsf	23,3	;volatile
  2105                           
  2106                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2107  137F  1517               	bsf	23,2	;volatile
  2108                           
  2109                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2110  1380  1497               	bsf	23,1	;volatile
  2111                           
  2112                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2113  1381  1417               	bsf	23,0	;volatile
  2114                           
  2115                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2116  1382  1683               	bsf	3,5	;RP0=1, select bank1
  2117  1383  1303               	bcf	3,6	;RP1=0, select bank1
  2118  1384  150C               	bsf	12,2	;volatile
  2119                           
  2120                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2121  1385  1283               	bcf	3,5	;RP0=0, select bank0
  2122  1386  1303               	bcf	3,6	;RP1=0, select bank0
  2123  1387  110C               	bcf	12,2	;volatile
  2124                           
  2125                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2126  1388  159D               	bsf	29,3	;volatile
  2127                           
  2128                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2129  1389  151D               	bsf	29,2	;volatile
  2130                           
  2131                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2132  138A  149D               	bsf	29,1	;volatile
  2133                           
  2134                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2135  138B  141D               	bsf	29,0	;volatile
  2136                           
  2137                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2138  138C  1683               	bsf	3,5	;RP0=1, select bank1
  2139  138D  1303               	bcf	3,6	;RP1=0, select bank1
  2140  138E  140D               	bsf	13,0	;volatile
  2141                           
  2142                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2143  138F  1283               	bcf	3,5	;RP0=0, select bank0
  2144  1390  1303               	bcf	3,6	;RP1=0, select bank0
  2145  1391  100D               	bcf	13,0	;volatile
  2146  1392  0008               	return
  2147  1393                     __end_of_PWM_Init:	
  2148                           
  2149                           	psect	text6
  2150  07DE                     __ptext6:	
  2151 ;; *************** function _PWM_DutyCycle2 *****************
  2152 ;; Defined at:
  2153 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  valor           2    0[BANK3 ] int 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;		None               void
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         0       0       0       2       0
  2168 ;;      Locals:         0       0       0       0       0
  2169 ;;      Temps:          0       0       0       2       0
  2170 ;;      Totals:         0       0       0       4       0
  2171 ;;Total ram usage:        4 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    4
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _PWM_DutyCycle2
  2183  07DE                     _PWM_DutyCycle2:	
  2184                           
  2185                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2189  07DE  1683               	bsf	3,5	;RP0=1, select bank3
  2190  07DF  1703               	bsf	3,6	;RP1=1, select bank3
  2191  07E0  0841               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2192  07E1  00C3               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2193  07E2  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2194  07E3  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2195  07E4  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2196  07E5  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2197  07E6  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2198  07E7  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2199  07E8  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2200  07E9  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2201  07EA  0842               	movf	??_PWM_DutyCycle2^(0+384),w
  2202  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  2203  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  2204  07ED  009B               	movwf	27	;volatile
  2205                           
  2206                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2207  07EE  1683               	bsf	3,5	;RP0=1, select bank3
  2208  07EF  1703               	bsf	3,6	;RP1=1, select bank3
  2209  07F0  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2210  07F1  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2211  07F2  3003               	movlw	3
  2212  07F3                     u3625:	
  2213  07F3  1003               	clrc
  2214  07F4  0DC2               	rlf	??_PWM_DutyCycle2^(0+384),f
  2215  07F5  3EFF               	addlw	-1
  2216  07F6  1D03               	skipz
  2217  07F7  2FF3               	goto	u3625
  2218  07F8  1003               	clrc
  2219  07F9  0D42               	rlf	??_PWM_DutyCycle2^(0+384),w
  2220  07FA  380C               	iorlw	12
  2221  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2222  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  2223  07FD  009D               	movwf	29	;volatile
  2224  07FE  0008               	return
  2225  07FF                     __end_of_PWM_DutyCycle2:	
  2226                           
  2227                           	psect	text7
  2228  134E                     __ptext7:	
  2229 ;; *************** function _PWM_DutyCycle1 *****************
  2230 ;; Defined at:
  2231 ;;		line 64 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  valor           2    0[BANK3 ] int 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;		None               void
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       2       0
  2246 ;;      Locals:         0       0       0       0       0
  2247 ;;      Temps:          0       0       0       2       0
  2248 ;;      Totals:         0       0       0       4       0
  2249 ;;Total ram usage:        4 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    4
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_main
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _PWM_DutyCycle1
  2261  134E                     _PWM_DutyCycle1:	
  2262                           
  2263                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2267  134E  1683               	bsf	3,5	;RP0=1, select bank3
  2268  134F  1703               	bsf	3,6	;RP1=1, select bank3
  2269  1350  0841               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2270  1351  00C3               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2271  1352  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2272  1353  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2273  1354  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2274  1355  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2275  1356  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2276  1357  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2277  1358  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2278  1359  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2279  135A  0842               	movf	??_PWM_DutyCycle1^(0+384),w
  2280  135B  1283               	bcf	3,5	;RP0=0, select bank0
  2281  135C  1303               	bcf	3,6	;RP1=0, select bank0
  2282  135D  0095               	movwf	21	;volatile
  2283                           
  2284                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2285  135E  1683               	bsf	3,5	;RP0=1, select bank3
  2286  135F  1703               	bsf	3,6	;RP1=1, select bank3
  2287  1360  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2288  1361  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2289  1362  3003               	movlw	3
  2290  1363                     u3645:	
  2291  1363  1003               	clrc
  2292  1364  0DC2               	rlf	??_PWM_DutyCycle1^(0+384),f
  2293  1365  3EFF               	addlw	-1
  2294  1366  1D03               	skipz
  2295  1367  2B63               	goto	u3645
  2296  1368  1003               	clrc
  2297  1369  0D42               	rlf	??_PWM_DutyCycle1^(0+384),w
  2298  136A  380C               	iorlw	12
  2299  136B  1283               	bcf	3,5	;RP0=0, select bank0
  2300  136C  1303               	bcf	3,6	;RP1=0, select bank0
  2301  136D  0097               	movwf	23	;volatile
  2302  136E  0008               	return
  2303  136F                     __end_of_PWM_DutyCycle1:	
  2304                           
  2305                           	psect	text8
  2306  0A16                     __ptext8:	
  2307 ;; *************** function _ISR *****************
  2308 ;; Defined at:
  2309 ;;		line 94 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;		None
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  a               2   22[BANK1 ] int 
  2314 ;;  a               2   20[BANK1 ] int 
  2315 ;;  a               2   18[BANK1 ] int 
  2316 ;;  a               2   16[BANK1 ] int 
  2317 ;;  a               2   30[BANK1 ] int 
  2318 ;;  x               3   34[BANK1 ] float 
  2319 ;;  rule            3   27[BANK1 ] float 
  2320 ;;  total_area      3   24[BANK1 ] float 
  2321 ;;  soma            3   13[BANK1 ] float 
  2322 ;;  reajuste        3    6[BANK1 ] float 
  2323 ;;  rpmAux          2   32[BANK1 ] int 
  2324 ;;  delta           2   11[BANK1 ] int 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         0       0      37       0       0
  2336 ;;      Temps:          0       6       0       0       0
  2337 ;;      Totals:         0       6      37       0       0
  2338 ;;Total ram usage:       43 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    3
  2341 ;; This function calls:
  2342 ;;		_USART_ReceiveChar
  2343 ;;		_USART_WriteChar
  2344 ;;		___awdiv
  2345 ;;		___awmod
  2346 ;;		___awtoft
  2347 ;;		___bmul
  2348 ;;		___ftadd
  2349 ;;		___ftdiv
  2350 ;;		___ftge
  2351 ;;		___ftmul
  2352 ;;		___ftneg
  2353 ;;		___fttol
  2354 ;;		___lwdiv
  2355 ;;		___lwtoft
  2356 ;;		___wmul
  2357 ;;		_abs
  2358 ;;		_maximo
  2359 ;;		_minimo
  2360 ;;		_trapmf
  2361 ;;		i1_PWM_DutyCycle2
  2362 ;;		i1_TIMER0_Set
  2363 ;; This function is called by:
  2364 ;;		Interrupt level 1
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _ISR
  2370  0A16                     _ISR:	
  2371                           
  2372                           ;main.c: 96: if (PIR1bits.RCIF) {
  2373  0A16  1E8C               	btfss	12,5	;volatile
  2374  0A17  2A3F               	goto	i1l3441
  2375                           
  2376                           ;main.c: 97: setpoint = (USART_ReceiveChar() - 48) * 1000;
  2377  0A18  160A  118A  228A  120A  158A  	fcall	_USART_ReceiveChar
  2378  0A1D  3ED0               	addlw	208
  2379  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0A20  00C0               	movwf	___wmul@multiplier
  2382  0A21  30FF               	movlw	255
  2383  0A22  1803               	skipnc
  2384  0A23  3000               	movlw	0
  2385  0A24  00C1               	movwf	___wmul@multiplier+1
  2386  0A25  30E8               	movlw	232
  2387  0A26  00C2               	movwf	___wmul@multiplicand
  2388  0A27  3003               	movlw	3
  2389  0A28  00C3               	movwf	___wmul@multiplicand+1
  2390  0A29  160A  118A  2393  120A  158A  	fcall	___wmul
  2391  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0A30  0841               	movf	?___wmul+1,w
  2394  0A31  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0A32  1303               	bcf	3,6	;RP1=0, select bank1
  2396  0A33  01D9               	clrf	(_setpoint+1)^(0+128)
  2397  0A34  07D9               	addwf	(_setpoint+1)^(0+128),f
  2398  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0A37  0840               	movf	?___wmul,w
  2401  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  2402  0A39  1303               	bcf	3,6	;RP1=0, select bank1
  2403  0A3A  01D8               	clrf	_setpoint^(0+128)
  2404  0A3B  07D8               	addwf	_setpoint^(0+128),f
  2405                           
  2406                           ;main.c: 99: PIR1bits.RCIF = 0;
  2407  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0A3E  128C               	bcf	12,5	;volatile
  2410  0A3F                     i1l3441:	
  2411                           
  2412                           ;main.c: 100: }
  2413                           ;main.c: 114: if (INTCONbits.T0IF) {
  2414  0A3F  120A  118A  1D0B   	btfss	11,2	;volatile
  2415  0A42  2FCE               	goto	i1l3647
  2416                           
  2417                           ;main.c: 116: TIMER0_Set(238);
  2418  0A43  30EE               	movlw	238
  2419  0A44  160A  118A  2238  120A  158A  	fcall	i1_TIMER0_Set
  2420                           
  2421                           ;main.c: 119: if (contagens_tm0 < 499) {
  2422  0A49  3001               	movlw	1
  2423  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0A4C  024D               	subwf	(_contagens_tm0+1)^(0+128),w
  2426  0A4D  30F3               	movlw	243
  2427  0A4E  1903               	skipnz
  2428  0A4F  024C               	subwf	_contagens_tm0^(0+128),w
  2429  0A50  1803               	skipnc
  2430  0A51  2A5E               	goto	i1l3451
  2431                           
  2432                           ;main.c: 121: contagens_tm0++;
  2433  0A52  3001               	movlw	1
  2434  0A53  07CC               	addwf	_contagens_tm0^(0+128),f
  2435  0A54  1803               	skipnc
  2436  0A55  0ACD               	incf	(_contagens_tm0+1)^(0+128),f
  2437  0A56  3000               	movlw	0
  2438  0A57  07CD               	addwf	(_contagens_tm0+1)^(0+128),f
  2439                           
  2440                           ;main.c: 124: PORTBbits.RB6 = 1;
  2441  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0A5A  1706               	bsf	6,6	;volatile
  2444                           
  2445                           ;main.c: 125: } else {
  2446  0A5B  120A  118A  2FCD   	goto	i1l3645
  2447  0A5E                     i1l3451:	
  2448                           
  2449                           ;main.c: 127: contagens_tm0 = 0;
  2450  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0A60  01CC               	clrf	_contagens_tm0^(0+128)
  2453  0A61  01CD               	clrf	(_contagens_tm0+1)^(0+128)
  2454                           
  2455                           ;main.c: 130: pulsos = (TMR1H << 8) + TMR1L;
  2456  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0A63  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0A64  080F               	movf	15,w	;volatile
  2459  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0A67  01D3               	clrf	(_pulsos+1)^(0+128)
  2462  0A68  07D3               	addwf	(_pulsos+1)^(0+128),f
  2463  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0A6B  080E               	movf	14,w	;volatile
  2466  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0A6E  01D2               	clrf	_pulsos^(0+128)
  2469  0A6F  07D2               	addwf	_pulsos^(0+128),f
  2470                           
  2471                           ;main.c: 131: rpm = ((pulsos / 7) * 120);
  2472  0A70  3007               	movlw	7
  2473  0A71  00F0               	movwf	___lwdiv@divisor
  2474  0A72  3000               	movlw	0
  2475  0A73  00F1               	movwf	___lwdiv@divisor+1
  2476  0A74  0853               	movf	(_pulsos+1)^(0+128),w
  2477  0A75  01F3               	clrf	___lwdiv@dividend+1
  2478  0A76  07F3               	addwf	___lwdiv@dividend+1,f
  2479  0A77  0852               	movf	_pulsos^(0+128),w
  2480  0A78  01F2               	clrf	___lwdiv@dividend
  2481  0A79  07F2               	addwf	___lwdiv@dividend,f
  2482  0A7A  160A  118A  23B8  120A  158A  	fcall	___lwdiv
  2483  0A7F  0871               	movf	?___lwdiv+1,w
  2484  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0A82  01C1               	clrf	___wmul@multiplier+1
  2487  0A83  07C1               	addwf	___wmul@multiplier+1,f
  2488  0A84  0870               	movf	?___lwdiv,w
  2489  0A85  01C0               	clrf	___wmul@multiplier
  2490  0A86  07C0               	addwf	___wmul@multiplier,f
  2491  0A87  3078               	movlw	120
  2492  0A88  00C2               	movwf	___wmul@multiplicand
  2493  0A89  3000               	movlw	0
  2494  0A8A  00C3               	movwf	___wmul@multiplicand+1
  2495  0A8B  160A  118A  2393  120A  158A  	fcall	___wmul
  2496  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0A92  0841               	movf	?___wmul+1,w
  2499  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  2501  0A95  01D7               	clrf	(_rpm+1)^(0+128)
  2502  0A96  07D7               	addwf	(_rpm+1)^(0+128),f
  2503  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0A99  0840               	movf	?___wmul,w
  2506  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  2508  0A9C  01D6               	clrf	_rpm^(0+128)
  2509  0A9D  07D6               	addwf	_rpm^(0+128),f
  2510                           
  2511                           ;main.c: 133: TMR1L = 0x00;
  2512  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0AA0  018E               	clrf	14	;volatile
  2515                           
  2516                           ;main.c: 134: TMR1H = 0x00;
  2517  0AA1  018F               	clrf	15	;volatile
  2518                           
  2519                           ;main.c: 136: int rpmAux = rpm;
  2520  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0AA4  0857               	movf	(_rpm+1)^(0+128),w
  2523  0AA5  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  2524  0AA6  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  2525  0AA7  0856               	movf	_rpm^(0+128),w
  2526  0AA8  01C0               	clrf	ISR@rpmAux^(0+128)
  2527  0AA9  07C0               	addwf	ISR@rpmAux^(0+128),f
  2528                           
  2529                           ;main.c: 137: USART_WriteChar((rpmAux % 10) + 48);
  2530  0AAA  300A               	movlw	10
  2531  0AAB  00F0               	movwf	___awmod@divisor
  2532  0AAC  3000               	movlw	0
  2533  0AAD  00F1               	movwf	___awmod@divisor+1
  2534  0AAE  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  2535  0AAF  01F3               	clrf	___awmod@dividend+1
  2536  0AB0  07F3               	addwf	___awmod@dividend+1,f
  2537  0AB1  0840               	movf	ISR@rpmAux^(0+128),w
  2538  0AB2  01F2               	clrf	___awmod@dividend
  2539  0AB3  07F2               	addwf	___awmod@dividend,f
  2540  0AB4  160A  118A  2441   	fcall	___awmod
  2541  0AB7  0870               	movf	?___awmod,w
  2542  0AB8  160A  118A  2F72   	ljmp	L10
  2543                           
  2544                           	psect	intentry
  2545  0004                     __pintentry:	
  2546                           ;incstack = 0
  2547                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2548                           
  2549  0004                     interrupt_function:	
  2550  007E                     saved_w	set	btemp
  2551  0004  00FE               	movwf	btemp
  2552  0005  0E03               	swapf	3,w
  2553  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0008  00E4               	movwf	??_ISR+2
  2556  0009  0804               	movf	4,w
  2557  000A  00E5               	movwf	??_ISR+3
  2558  000B  080A               	movf	10,w
  2559  000C  00E6               	movwf	??_ISR+4
  2560  000D  087F               	movf	btemp+1,w
  2561  000E  00E7               	movwf	??_ISR+5
  2562  000F  120A  158A  2A16   	ljmp	_ISR
  2563                           
  2564                           	psect	text9
  2565  1238                     __ptext9:	
  2566 ;; *************** function i1_TIMER0_Set *****************
  2567 ;; Defined at:
  2568 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  contagens       1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  contagens       1    0[COMMON] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;		None               void
  2575 ;; Registers used:
  2576 ;;		wreg
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2582 ;;      Params:         0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0
  2585 ;;      Totals:         1       0       0       0       0
  2586 ;;Total ram usage:        1 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_ISR
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           
  2596                           ;psect for function i1_TIMER0_Set
  2597  1238                     i1_TIMER0_Set:	
  2598                           
  2599                           ;incstack = 0
  2600                           ; Regs used in i1_TIMER0_Set: [wreg]
  2601                           ;i1TIMER0_Set@contagens stored from wreg
  2602  1238  00F0               	movwf	i1TIMER0_Set@contagens
  2603                           
  2604                           ;timers.c: 22: TMR0 = contagens;
  2605  1239  0870               	movf	i1TIMER0_Set@contagens,w
  2606  123A  1283               	bcf	3,5	;RP0=0, select bank0
  2607  123B  1303               	bcf	3,6	;RP1=0, select bank0
  2608  123C  0081               	movwf	1	;volatile
  2609  123D  0008               	return
  2610  123E                     __end_ofi1_TIMER0_Set:	
  2611                           
  2612                           	psect	text10
  2613  12BA                     __ptext10:	
  2614 ;; *************** function i1_PWM_DutyCycle2 *****************
  2615 ;; Defined at:
  2616 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  valor           2    0[COMMON] int 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;		None               void
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2630 ;;      Params:         2       0       0       0       0
  2631 ;;      Locals:         0       0       0       0       0
  2632 ;;      Temps:          2       0       0       0       0
  2633 ;;      Totals:         4       0       0       0       0
  2634 ;;Total ram usage:        4 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_ISR
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function i1_PWM_DutyCycle2
  2645  12BA                     i1_PWM_DutyCycle2:	
  2646                           
  2647                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  2651  12BA  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  2652  12BB  00F3               	movwf	??i1_PWM_DutyCycle2+1
  2653  12BC  0870               	movf	i1PWM_DutyCycle2@valor,w
  2654  12BD  00F2               	movwf	??i1_PWM_DutyCycle2
  2655  12BE  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  2656  12BF  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  2657  12C0  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  2658  12C1  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  2659  12C2  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  2660  12C3  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  2661  12C4  0872               	movf	??i1_PWM_DutyCycle2,w
  2662  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  2663  12C6  1303               	bcf	3,6	;RP1=0, select bank0
  2664  12C7  009B               	movwf	27	;volatile
  2665                           
  2666                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2667  12C8  0870               	movf	i1PWM_DutyCycle2@valor,w
  2668  12C9  00F2               	movwf	??i1_PWM_DutyCycle2
  2669  12CA  3003               	movlw	3
  2670  12CB                     u317_25:	
  2671  12CB  1003               	clrc
  2672  12CC  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  2673  12CD  3EFF               	addlw	-1
  2674  12CE  1D03               	skipz
  2675  12CF  2ACB               	goto	u317_25
  2676  12D0  1003               	clrc
  2677  12D1  0D72               	rlf	??i1_PWM_DutyCycle2,w
  2678  12D2  380C               	iorlw	12
  2679  12D3  009D               	movwf	29	;volatile
  2680  12D4  0008               	return
  2681  12D5                     __end_ofi1_PWM_DutyCycle2:	
  2682                           
  2683                           	psect	text11
  2684  0EAA                     __ptext11:	
  2685 ;; *************** function _trapmf *****************
  2686 ;; Defined at:
  2687 ;;		line 76 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  x               3   32[BANK0 ] float 
  2690 ;;  a               3   35[BANK0 ] float 
  2691 ;;  b               3   38[BANK0 ] float 
  2692 ;;  c               3   41[BANK0 ] float 
  2693 ;;  d               3   44[BANK0 ] float 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  ua              3   47[BANK0 ] float 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  3   32[BANK0 ] float 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, pclath, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0      15       0       0       0
  2706 ;;      Locals:         0       3       0       0       0
  2707 ;;      Temps:          0       0       0       0       0
  2708 ;;      Totals:         0      18       0       0       0
  2709 ;;Total ram usage:       18 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    2
  2712 ;; This function calls:
  2713 ;;		___ftadd
  2714 ;;		___ftdiv
  2715 ;;		___ftge
  2716 ;;		___ftneg
  2717 ;; This function is called by:
  2718 ;;		_ISR
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _trapmf
  2724  0EAA                     _trapmf:	
  2725                           
  2726                           ;main.c: 77: float ua = 0;
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  2730  0EAA  3000               	movlw	0
  2731  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0EAD  00CF               	movwf	trapmf@ua
  2734  0EAE  3000               	movlw	0
  2735  0EAF  00D0               	movwf	trapmf@ua+1
  2736  0EB0  3000               	movlw	0
  2737  0EB1  00D1               	movwf	trapmf@ua+2
  2738                           
  2739                           ;main.c: 79: if (x <= a)
  2740  0EB2  0843               	movf	trapmf@a,w
  2741  0EB3  00F4               	movwf	___ftge@ff1
  2742  0EB4  0844               	movf	trapmf@a+1,w
  2743  0EB5  00F5               	movwf	___ftge@ff1+1
  2744  0EB6  0845               	movf	trapmf@a+2,w
  2745  0EB7  00F6               	movwf	___ftge@ff1+2
  2746  0EB8  0840               	movf	trapmf@x,w
  2747  0EB9  00F7               	movwf	___ftge@ff2
  2748  0EBA  0841               	movf	trapmf@x+1,w
  2749  0EBB  00F8               	movwf	___ftge@ff2+1
  2750  0EBC  0842               	movf	trapmf@x+2,w
  2751  0EBD  00F9               	movwf	___ftge@ff2+2
  2752  0EBE  160A  118A  248E  120A  158A  	fcall	___ftge
  2753  0EC3  1803               	btfsc	3,0
  2754  0EC4  2FEF               	goto	L6
  2755                           
  2756                           ;main.c: 81: else if ((a < x) && (x <= b))
  2757                           
  2758                           ;main.c: 80: ua = 0;
  2759  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0EC7  0843               	movf	trapmf@a,w
  2762  0EC8  00F4               	movwf	___ftge@ff1
  2763  0EC9  0844               	movf	trapmf@a+1,w
  2764  0ECA  00F5               	movwf	___ftge@ff1+1
  2765  0ECB  0845               	movf	trapmf@a+2,w
  2766  0ECC  00F6               	movwf	___ftge@ff1+2
  2767  0ECD  0840               	movf	trapmf@x,w
  2768  0ECE  00F7               	movwf	___ftge@ff2
  2769  0ECF  0841               	movf	trapmf@x+1,w
  2770  0ED0  00F8               	movwf	___ftge@ff2+1
  2771  0ED1  0842               	movf	trapmf@x+2,w
  2772  0ED2  00F9               	movwf	___ftge@ff2+2
  2773  0ED3  160A  118A  248E  120A  158A  	fcall	___ftge
  2774  0ED8  1803               	btfsc	3,0
  2775  0ED9  2F23               	goto	i1l3417
  2776  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0EDC  0846               	movf	trapmf@b,w
  2779  0EDD  00F4               	movwf	___ftge@ff1
  2780  0EDE  0847               	movf	trapmf@b+1,w
  2781  0EDF  00F5               	movwf	___ftge@ff1+1
  2782  0EE0  0848               	movf	trapmf@b+2,w
  2783  0EE1  00F6               	movwf	___ftge@ff1+2
  2784  0EE2  0840               	movf	trapmf@x,w
  2785  0EE3  00F7               	movwf	___ftge@ff2
  2786  0EE4  0841               	movf	trapmf@x+1,w
  2787  0EE5  00F8               	movwf	___ftge@ff2+1
  2788  0EE6  0842               	movf	trapmf@x+2,w
  2789  0EE7  00F9               	movwf	___ftge@ff2+2
  2790  0EE8  160A  118A  248E  120A  158A  	fcall	___ftge
  2791  0EED  1C03               	btfss	3,0
  2792  0EEE  2F23               	goto	i1l3417
  2793                           
  2794                           ;main.c: 82: ua = ((x - a) / (b - a));
  2795  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2796  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2797  0EF1  0846               	movf	trapmf@b,w
  2798  0EF2  00A3               	movwf	___ftadd@f1
  2799  0EF3  0847               	movf	trapmf@b+1,w
  2800  0EF4  00A4               	movwf	___ftadd@f1+1
  2801  0EF5  0848               	movf	trapmf@b+2,w
  2802  0EF6  00A5               	movwf	___ftadd@f1+2
  2803  0EF7  0843               	movf	trapmf@a,w
  2804  0EF8  00A0               	movwf	___ftneg@f1
  2805  0EF9  0844               	movf	trapmf@a+1,w
  2806  0EFA  00A1               	movwf	___ftneg@f1+1
  2807  0EFB  0845               	movf	trapmf@a+2,w
  2808  0EFC  00A2               	movwf	___ftneg@f1+2
  2809  0EFD  160A  118A  2256  120A  158A  	fcall	___ftneg
  2810  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0F04  0820               	movf	?___ftneg,w
  2813  0F05  00A6               	movwf	___ftadd@f2
  2814  0F06  0821               	movf	?___ftneg+1,w
  2815  0F07  00A7               	movwf	___ftadd@f2+1
  2816  0F08  0822               	movf	?___ftneg+2,w
  2817  0F09  00A8               	movwf	___ftadd@f2+2
  2818  0F0A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  2819  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0F11  0823               	movf	?___ftadd,w
  2822  0F12  00B0               	movwf	___ftdiv@f2
  2823  0F13  0824               	movf	?___ftadd+1,w
  2824  0F14  00B1               	movwf	___ftdiv@f2+1
  2825  0F15  0825               	movf	?___ftadd+2,w
  2826  0F16  00B2               	movwf	___ftdiv@f2+2
  2827  0F17  0840               	movf	trapmf@x,w
  2828  0F18  00A3               	movwf	___ftadd@f1
  2829  0F19  0841               	movf	trapmf@x+1,w
  2830  0F1A  00A4               	movwf	___ftadd@f1+1
  2831  0F1B  0842               	movf	trapmf@x+2,w
  2832  0F1C  00A5               	movwf	___ftadd@f1+2
  2833  0F1D  0843               	movf	trapmf@a,w
  2834  0F1E  00A0               	movwf	___ftneg@f1
  2835  0F1F  0844               	movf	trapmf@a+1,w
  2836  0F20  00A1               	movwf	___ftneg@f1+1
  2837  0F21  0845               	movf	trapmf@a+2,w
  2838  0F22  2FB2               	goto	L8
  2839  0F23                     i1l3417:	
  2840                           
  2841                           ;main.c: 83: else if ((b <= x) && (x <= c))
  2842  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0F25  0840               	movf	trapmf@x,w
  2845  0F26  00F4               	movwf	___ftge@ff1
  2846  0F27  0841               	movf	trapmf@x+1,w
  2847  0F28  00F5               	movwf	___ftge@ff1+1
  2848  0F29  0842               	movf	trapmf@x+2,w
  2849  0F2A  00F6               	movwf	___ftge@ff1+2
  2850  0F2B  0846               	movf	trapmf@b,w
  2851  0F2C  00F7               	movwf	___ftge@ff2
  2852  0F2D  0847               	movf	trapmf@b+1,w
  2853  0F2E  00F8               	movwf	___ftge@ff2+1
  2854  0F2F  0848               	movf	trapmf@b+2,w
  2855  0F30  00F9               	movwf	___ftge@ff2+2
  2856  0F31  160A  118A  248E  120A  158A  	fcall	___ftge
  2857  0F36  1C03               	btfss	3,0
  2858  0F37  2F55               	goto	i1l3423
  2859  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0F3A  0849               	movf	trapmf@c,w
  2862  0F3B  00F4               	movwf	___ftge@ff1
  2863  0F3C  084A               	movf	trapmf@c+1,w
  2864  0F3D  00F5               	movwf	___ftge@ff1+1
  2865  0F3E  084B               	movf	trapmf@c+2,w
  2866  0F3F  00F6               	movwf	___ftge@ff1+2
  2867  0F40  0840               	movf	trapmf@x,w
  2868  0F41  00F7               	movwf	___ftge@ff2
  2869  0F42  0841               	movf	trapmf@x+1,w
  2870  0F43  00F8               	movwf	___ftge@ff2+1
  2871  0F44  0842               	movf	trapmf@x+2,w
  2872  0F45  00F9               	movwf	___ftge@ff2+2
  2873  0F46  160A  118A  248E  120A  158A  	fcall	___ftge
  2874  0F4B  1C03               	btfss	3,0
  2875  0F4C  2F55               	goto	i1l3423
  2876                           
  2877                           ;main.c: 84: ua = 1;
  2878  0F4D  3000               	movlw	0
  2879  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0F50  00CF               	movwf	trapmf@ua
  2882  0F51  3080               	movlw	128
  2883  0F52  00D0               	movwf	trapmf@ua+1
  2884  0F53  303F               	movlw	63
  2885  0F54  2FF6               	goto	L5
  2886  0F55                     i1l3423:	
  2887                           
  2888                           ;main.c: 85: else if ((c < x) && (x <= d))
  2889  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0F57  0849               	movf	trapmf@c,w
  2892  0F58  00F4               	movwf	___ftge@ff1
  2893  0F59  084A               	movf	trapmf@c+1,w
  2894  0F5A  00F5               	movwf	___ftge@ff1+1
  2895  0F5B  084B               	movf	trapmf@c+2,w
  2896  0F5C  00F6               	movwf	___ftge@ff1+2
  2897  0F5D  0840               	movf	trapmf@x,w
  2898  0F5E  00F7               	movwf	___ftge@ff2
  2899  0F5F  0841               	movf	trapmf@x+1,w
  2900  0F60  00F8               	movwf	___ftge@ff2+1
  2901  0F61  0842               	movf	trapmf@x+2,w
  2902  0F62  00F9               	movwf	___ftge@ff2+2
  2903  0F63  160A  118A  248E  120A  158A  	fcall	___ftge
  2904  0F68  1803               	btfsc	3,0
  2905  0F69  2FDA               	goto	i1l3429
  2906  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0F6C  084C               	movf	trapmf@d,w
  2909  0F6D  00F4               	movwf	___ftge@ff1
  2910  0F6E  084D               	movf	trapmf@d+1,w
  2911  0F6F  00F5               	movwf	___ftge@ff1+1
  2912  0F70  084E               	movf	trapmf@d+2,w
  2913  0F71  00F6               	movwf	___ftge@ff1+2
  2914  0F72  0840               	movf	trapmf@x,w
  2915  0F73  00F7               	movwf	___ftge@ff2
  2916  0F74  0841               	movf	trapmf@x+1,w
  2917  0F75  00F8               	movwf	___ftge@ff2+1
  2918  0F76  0842               	movf	trapmf@x+2,w
  2919  0F77  00F9               	movwf	___ftge@ff2+2
  2920  0F78  160A  118A  248E  120A  158A  	fcall	___ftge
  2921  0F7D  1C03               	btfss	3,0
  2922  0F7E  2FDA               	goto	i1l3429
  2923                           
  2924                           ;main.c: 86: ua = ((d - x) / (d - c));
  2925  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0F81  084C               	movf	trapmf@d,w
  2928  0F82  00A3               	movwf	___ftadd@f1
  2929  0F83  084D               	movf	trapmf@d+1,w
  2930  0F84  00A4               	movwf	___ftadd@f1+1
  2931  0F85  084E               	movf	trapmf@d+2,w
  2932  0F86  00A5               	movwf	___ftadd@f1+2
  2933  0F87  0849               	movf	trapmf@c,w
  2934  0F88  00A0               	movwf	___ftneg@f1
  2935  0F89  084A               	movf	trapmf@c+1,w
  2936  0F8A  00A1               	movwf	___ftneg@f1+1
  2937  0F8B  084B               	movf	trapmf@c+2,w
  2938  0F8C  00A2               	movwf	___ftneg@f1+2
  2939  0F8D  160A  118A  2256  120A  158A  	fcall	___ftneg
  2940  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0F94  0820               	movf	?___ftneg,w
  2943  0F95  00A6               	movwf	___ftadd@f2
  2944  0F96  0821               	movf	?___ftneg+1,w
  2945  0F97  00A7               	movwf	___ftadd@f2+1
  2946  0F98  0822               	movf	?___ftneg+2,w
  2947  0F99  00A8               	movwf	___ftadd@f2+2
  2948  0F9A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  2949  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0FA1  0823               	movf	?___ftadd,w
  2952  0FA2  00B0               	movwf	___ftdiv@f2
  2953  0FA3  0824               	movf	?___ftadd+1,w
  2954  0FA4  00B1               	movwf	___ftdiv@f2+1
  2955  0FA5  0825               	movf	?___ftadd+2,w
  2956  0FA6  00B2               	movwf	___ftdiv@f2+2
  2957  0FA7  084C               	movf	trapmf@d,w
  2958  0FA8  00A3               	movwf	___ftadd@f1
  2959  0FA9  084D               	movf	trapmf@d+1,w
  2960  0FAA  00A4               	movwf	___ftadd@f1+1
  2961  0FAB  084E               	movf	trapmf@d+2,w
  2962  0FAC  00A5               	movwf	___ftadd@f1+2
  2963  0FAD  0840               	movf	trapmf@x,w
  2964  0FAE  00A0               	movwf	___ftneg@f1
  2965  0FAF  0841               	movf	trapmf@x+1,w
  2966  0FB0  00A1               	movwf	___ftneg@f1+1
  2967  0FB1  0842               	movf	trapmf@x+2,w
  2968  0FB2                     L8:	
  2969  0FB2  00A2               	movwf	___ftneg@f1+2
  2970  0FB3  160A  118A  2256  120A  158A  	fcall	___ftneg
  2971  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0FBA  0820               	movf	?___ftneg,w
  2974  0FBB  00A6               	movwf	___ftadd@f2
  2975  0FBC  0821               	movf	?___ftneg+1,w
  2976  0FBD  00A7               	movwf	___ftadd@f2+1
  2977  0FBE  0822               	movf	?___ftneg+2,w
  2978  0FBF  00A8               	movwf	___ftadd@f2+2
  2979  0FC0  120A  158A  25A1  120A  158A  	fcall	___ftadd
  2980  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0FC7  0823               	movf	?___ftadd,w
  2983  0FC8  00B3               	movwf	___ftdiv@f1
  2984  0FC9  0824               	movf	?___ftadd+1,w
  2985  0FCA  00B4               	movwf	___ftdiv@f1+1
  2986  0FCB  0825               	movf	?___ftadd+2,w
  2987  0FCC  00B5               	movwf	___ftdiv@f1+2
  2988  0FCD  120A  158A  2416  120A  158A  	fcall	___ftdiv
  2989  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0FD4  0830               	movf	?___ftdiv,w
  2992  0FD5  00CF               	movwf	trapmf@ua
  2993  0FD6  0831               	movf	?___ftdiv+1,w
  2994  0FD7  00D0               	movwf	trapmf@ua+1
  2995  0FD8  0832               	movf	?___ftdiv+2,w
  2996  0FD9  2FF6               	goto	L5
  2997  0FDA                     i1l3429:	
  2998                           
  2999                           ;main.c: 87: else if (x > d)
  3000  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0FDC  084C               	movf	trapmf@d,w
  3003  0FDD  00F4               	movwf	___ftge@ff1
  3004  0FDE  084D               	movf	trapmf@d+1,w
  3005  0FDF  00F5               	movwf	___ftge@ff1+1
  3006  0FE0  084E               	movf	trapmf@d+2,w
  3007  0FE1  00F6               	movwf	___ftge@ff1+2
  3008  0FE2  0840               	movf	trapmf@x,w
  3009  0FE3  00F7               	movwf	___ftge@ff2
  3010  0FE4  0841               	movf	trapmf@x+1,w
  3011  0FE5  00F8               	movwf	___ftge@ff2+1
  3012  0FE6  0842               	movf	trapmf@x+2,w
  3013  0FE7  00F9               	movwf	___ftge@ff2+2
  3014  0FE8  160A  118A  248E  120A  158A  	fcall	___ftge
  3015  0FED  1803               	btfsc	3,0
  3016  0FEE  2FF7               	goto	i1l92
  3017  0FEF                     L6:	
  3018                           
  3019                           ;main.c: 88: ua = 0;
  3020  0FEF  3000               	movlw	0
  3021  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0FF2  00CF               	movwf	trapmf@ua
  3024  0FF3  3000               	movlw	0
  3025  0FF4  00D0               	movwf	trapmf@ua+1
  3026  0FF5  3000               	movlw	0
  3027  0FF6                     L5:	
  3028  0FF6  00D1               	movwf	trapmf@ua+2
  3029  0FF7                     i1l92:	
  3030                           
  3031                           ;main.c: 90: return (ua);
  3032  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0FF9  084F               	movf	trapmf@ua,w
  3035  0FFA  00C0               	movwf	?_trapmf
  3036  0FFB  0850               	movf	trapmf@ua+1,w
  3037  0FFC  00C1               	movwf	?_trapmf+1
  3038  0FFD  0851               	movf	trapmf@ua+2,w
  3039  0FFE  00C2               	movwf	?_trapmf+2
  3040  0FFF  0008               	return
  3041  1000                     __end_of_trapmf:	
  3042                           
  3043                           	psect	text12
  3044  1256                     __ptext12:	
  3045 ;; *************** function ___ftneg *****************
  3046 ;; Defined at:
  3047 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  f1              3    0[BANK0 ] float 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  3    0[BANK0 ] float 
  3054 ;; Registers used:
  3055 ;;		wreg
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       3       0       0       0
  3062 ;;      Locals:         0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0
  3064 ;;      Totals:         0       3       0       0       0
  3065 ;;Total ram usage:        3 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_trapmf
  3071 ;;		_ISR
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function ___ftneg
  3077  1256                     ___ftneg:	
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in ___ftneg: [wreg]
  3081  1256  1283               	bcf	3,5	;RP0=0, select bank0
  3082  1257  1303               	bcf	3,6	;RP1=0, select bank0
  3083  1258  0822               	movf	___ftneg@f1+2,w
  3084  1259  0421               	iorwf	___ftneg@f1+1,w
  3085  125A  0420               	iorwf	___ftneg@f1,w
  3086  125B  1903               	skipnz
  3087  125C  0008               	return
  3088  125D  3080               	movlw	128
  3089  125E  06A2               	xorwf	___ftneg@f1+2,f
  3090  125F  0008               	return
  3091  1260                     __end_of___ftneg:	
  3092                           
  3093                           	psect	text13
  3094  0C16                     __ptext13:	
  3095 ;; *************** function ___ftdiv *****************
  3096 ;; Defined at:
  3097 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  f2              3   16[BANK0 ] float 
  3100 ;;  f1              3   19[BANK0 ] float 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  f3              3   27[BANK0 ] float 
  3103 ;;  sign            1   31[BANK0 ] unsigned char 
  3104 ;;  exp             1   30[BANK0 ] unsigned char 
  3105 ;;  cntr            1   26[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  3   16[BANK0 ] float 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3115 ;;      Params:         0       6       0       0       0
  3116 ;;      Locals:         0       6       0       0       0
  3117 ;;      Temps:          0       4       0       0       0
  3118 ;;      Totals:         0      16       0       0       0
  3119 ;;Total ram usage:       16 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    1
  3122 ;; This function calls:
  3123 ;;		___ftpack
  3124 ;; This function is called by:
  3125 ;;		_trapmf
  3126 ;;		_ISR
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           
  3131                           ;psect for function ___ftdiv
  3132  0C16                     ___ftdiv:	
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3136  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0C18  0833               	movf	___ftdiv@f1,w
  3139  0C19  00B6               	movwf	??___ftdiv
  3140  0C1A  0834               	movf	___ftdiv@f1+1,w
  3141  0C1B  00B7               	movwf	??___ftdiv+1
  3142  0C1C  0835               	movf	___ftdiv@f1+2,w
  3143  0C1D  00B8               	movwf	??___ftdiv+2
  3144  0C1E  1003               	clrc
  3145  0C1F  0D37               	rlf	??___ftdiv+1,w
  3146  0C20  0D38               	rlf	??___ftdiv+2,w
  3147  0C21  00B9               	movwf	??___ftdiv+3
  3148  0C22  0839               	movf	??___ftdiv+3,w
  3149  0C23  00BE               	movwf	___ftdiv@exp
  3150  0C24  08BE               	movf	___ftdiv@exp,f
  3151  0C25  1D03               	skipz
  3152  0C26  2C2E               	goto	i1l2139
  3153  0C27  3000               	movlw	0
  3154  0C28  00B0               	movwf	?___ftdiv
  3155  0C29  3000               	movlw	0
  3156  0C2A  00B1               	movwf	?___ftdiv+1
  3157  0C2B  3000               	movlw	0
  3158  0C2C  00B2               	movwf	?___ftdiv+2
  3159  0C2D  0008               	return
  3160  0C2E                     i1l2139:	
  3161  0C2E  0830               	movf	___ftdiv@f2,w
  3162  0C2F  00B6               	movwf	??___ftdiv
  3163  0C30  0831               	movf	___ftdiv@f2+1,w
  3164  0C31  00B7               	movwf	??___ftdiv+1
  3165  0C32  0832               	movf	___ftdiv@f2+2,w
  3166  0C33  00B8               	movwf	??___ftdiv+2
  3167  0C34  1003               	clrc
  3168  0C35  0D37               	rlf	??___ftdiv+1,w
  3169  0C36  0D38               	rlf	??___ftdiv+2,w
  3170  0C37  00B9               	movwf	??___ftdiv+3
  3171  0C38  0839               	movf	??___ftdiv+3,w
  3172  0C39  00BF               	movwf	___ftdiv@sign
  3173  0C3A  08BF               	movf	___ftdiv@sign,f
  3174  0C3B  1D03               	skipz
  3175  0C3C  2C44               	goto	i1l2145
  3176  0C3D  3000               	movlw	0
  3177  0C3E  00B0               	movwf	?___ftdiv
  3178  0C3F  3000               	movlw	0
  3179  0C40  00B1               	movwf	?___ftdiv+1
  3180  0C41  3000               	movlw	0
  3181  0C42  00B2               	movwf	?___ftdiv+2
  3182  0C43  0008               	return
  3183  0C44                     i1l2145:	
  3184  0C44  3000               	movlw	0
  3185  0C45  00BB               	movwf	___ftdiv@f3
  3186  0C46  3000               	movlw	0
  3187  0C47  00BC               	movwf	___ftdiv@f3+1
  3188  0C48  3000               	movlw	0
  3189  0C49  00BD               	movwf	___ftdiv@f3+2
  3190  0C4A  3089               	movlw	137
  3191  0C4B  073F               	addwf	___ftdiv@sign,w
  3192  0C4C  00B6               	movwf	??___ftdiv
  3193  0C4D  0836               	movf	??___ftdiv,w
  3194  0C4E  02BE               	subwf	___ftdiv@exp,f
  3195  0C4F  0833               	movf	___ftdiv@f1,w
  3196  0C50  00B6               	movwf	??___ftdiv
  3197  0C51  0834               	movf	___ftdiv@f1+1,w
  3198  0C52  00B7               	movwf	??___ftdiv+1
  3199  0C53  0835               	movf	___ftdiv@f1+2,w
  3200  0C54  00B8               	movwf	??___ftdiv+2
  3201  0C55  3010               	movlw	16
  3202  0C56                     u233_25:	
  3203  0C56  1003               	clrc
  3204  0C57  0CB8               	rrf	??___ftdiv+2,f
  3205  0C58  0CB7               	rrf	??___ftdiv+1,f
  3206  0C59  0CB6               	rrf	??___ftdiv,f
  3207  0C5A  3EFF               	addlw	-1
  3208  0C5B  1D03               	skipz
  3209  0C5C  2C56               	goto	u233_25
  3210  0C5D  0836               	movf	??___ftdiv,w
  3211  0C5E  00B9               	movwf	??___ftdiv+3
  3212  0C5F  0839               	movf	??___ftdiv+3,w
  3213  0C60  00BF               	movwf	___ftdiv@sign
  3214  0C61  0830               	movf	___ftdiv@f2,w
  3215  0C62  00B6               	movwf	??___ftdiv
  3216  0C63  0831               	movf	___ftdiv@f2+1,w
  3217  0C64  00B7               	movwf	??___ftdiv+1
  3218  0C65  0832               	movf	___ftdiv@f2+2,w
  3219  0C66  00B8               	movwf	??___ftdiv+2
  3220  0C67  3010               	movlw	16
  3221  0C68                     u234_25:	
  3222  0C68  1003               	clrc
  3223  0C69  0CB8               	rrf	??___ftdiv+2,f
  3224  0C6A  0CB7               	rrf	??___ftdiv+1,f
  3225  0C6B  0CB6               	rrf	??___ftdiv,f
  3226  0C6C  3EFF               	addlw	-1
  3227  0C6D  1D03               	skipz
  3228  0C6E  2C68               	goto	u234_25
  3229  0C6F  0836               	movf	??___ftdiv,w
  3230  0C70  00B9               	movwf	??___ftdiv+3
  3231  0C71  0839               	movf	??___ftdiv+3,w
  3232  0C72  06BF               	xorwf	___ftdiv@sign,f
  3233  0C73  3080               	movlw	128
  3234  0C74  00B6               	movwf	??___ftdiv
  3235  0C75  0836               	movf	??___ftdiv,w
  3236  0C76  05BF               	andwf	___ftdiv@sign,f
  3237  0C77  17B4               	bsf	___ftdiv@f1+1,7
  3238  0C78  30FF               	movlw	255
  3239  0C79  05B3               	andwf	___ftdiv@f1,f
  3240  0C7A  30FF               	movlw	255
  3241  0C7B  05B4               	andwf	___ftdiv@f1+1,f
  3242  0C7C  3000               	movlw	0
  3243  0C7D  05B5               	andwf	___ftdiv@f1+2,f
  3244  0C7E  17B1               	bsf	___ftdiv@f2+1,7
  3245  0C7F  30FF               	movlw	255
  3246  0C80  05B0               	andwf	___ftdiv@f2,f
  3247  0C81  30FF               	movlw	255
  3248  0C82  05B1               	andwf	___ftdiv@f2+1,f
  3249  0C83  3000               	movlw	0
  3250  0C84  05B2               	andwf	___ftdiv@f2+2,f
  3251  0C85  3018               	movlw	24
  3252  0C86  00B6               	movwf	??___ftdiv
  3253  0C87  0836               	movf	??___ftdiv,w
  3254  0C88  00BA               	movwf	___ftdiv@cntr
  3255  0C89                     i1l2159:	
  3256  0C89  3001               	movlw	1
  3257  0C8A                     u235_25:	
  3258  0C8A  1003               	clrc
  3259  0C8B  0DBB               	rlf	___ftdiv@f3,f
  3260  0C8C  0DBC               	rlf	___ftdiv@f3+1,f
  3261  0C8D  0DBD               	rlf	___ftdiv@f3+2,f
  3262  0C8E  3EFF               	addlw	-1
  3263  0C8F  1D03               	skipz
  3264  0C90  2C8A               	goto	u235_25
  3265  0C91  0832               	movf	___ftdiv@f2+2,w
  3266  0C92  0235               	subwf	___ftdiv@f1+2,w
  3267  0C93  1D03               	skipz
  3268  0C94  2C9B               	goto	u236_25
  3269  0C95  0831               	movf	___ftdiv@f2+1,w
  3270  0C96  0234               	subwf	___ftdiv@f1+1,w
  3271  0C97  1D03               	skipz
  3272  0C98  2C9B               	goto	u236_25
  3273  0C99  0830               	movf	___ftdiv@f2,w
  3274  0C9A  0233               	subwf	___ftdiv@f1,w
  3275  0C9B                     u236_25:	
  3276  0C9B  1C03               	skipc
  3277  0C9C  2CA8               	goto	i1l2167
  3278  0C9D  0830               	movf	___ftdiv@f2,w
  3279  0C9E  02B3               	subwf	___ftdiv@f1,f
  3280  0C9F  0831               	movf	___ftdiv@f2+1,w
  3281  0CA0  1C03               	skipc
  3282  0CA1  0F31               	incfsz	___ftdiv@f2+1,w
  3283  0CA2  02B4               	subwf	___ftdiv@f1+1,f
  3284  0CA3  0832               	movf	___ftdiv@f2+2,w
  3285  0CA4  1C03               	skipc
  3286  0CA5  0A32               	incf	___ftdiv@f2+2,w
  3287  0CA6  02B5               	subwf	___ftdiv@f1+2,f
  3288  0CA7  143B               	bsf	___ftdiv@f3,0
  3289  0CA8                     i1l2167:	
  3290  0CA8  3001               	movlw	1
  3291  0CA9                     u237_25:	
  3292  0CA9  1003               	clrc
  3293  0CAA  0DB3               	rlf	___ftdiv@f1,f
  3294  0CAB  0DB4               	rlf	___ftdiv@f1+1,f
  3295  0CAC  0DB5               	rlf	___ftdiv@f1+2,f
  3296  0CAD  3EFF               	addlw	-1
  3297  0CAE  1D03               	skipz
  3298  0CAF  2CA9               	goto	u237_25
  3299  0CB0  3001               	movlw	1
  3300  0CB1  02BA               	subwf	___ftdiv@cntr,f
  3301  0CB2  1D03               	btfss	3,2
  3302  0CB3  2C89               	goto	i1l2159
  3303  0CB4  083B               	movf	___ftdiv@f3,w
  3304  0CB5  00F0               	movwf	___ftpack@arg
  3305  0CB6  083C               	movf	___ftdiv@f3+1,w
  3306  0CB7  00F1               	movwf	___ftpack@arg+1
  3307  0CB8  083D               	movf	___ftdiv@f3+2,w
  3308  0CB9  00F2               	movwf	___ftpack@arg+2
  3309  0CBA  083E               	movf	___ftdiv@exp,w
  3310  0CBB  00B6               	movwf	??___ftdiv
  3311  0CBC  0836               	movf	??___ftdiv,w
  3312  0CBD  00F3               	movwf	___ftpack@exp
  3313  0CBE  083F               	movf	___ftdiv@sign,w
  3314  0CBF  00B7               	movwf	??___ftdiv+1
  3315  0CC0  0837               	movf	??___ftdiv+1,w
  3316  0CC1  00F4               	movwf	___ftpack@sign
  3317  0CC2  160A  118A  24EF   	fcall	___ftpack
  3318  0CC5  0870               	movf	?___ftpack,w
  3319  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0CC8  00B0               	movwf	?___ftdiv
  3322  0CC9  0871               	movf	?___ftpack+1,w
  3323  0CCA  00B1               	movwf	?___ftdiv+1
  3324  0CCB  0872               	movf	?___ftpack+2,w
  3325  0CCC  00B2               	movwf	?___ftdiv+2
  3326  0CCD  0008               	return
  3327  0CCE                     __end_of___ftdiv:	
  3328                           
  3329                           	psect	text14
  3330  0DA1                     __ptext14:	
  3331 ;; *************** function ___ftadd *****************
  3332 ;; Defined at:
  3333 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  f1              3    3[BANK0 ] float 
  3336 ;;  f2              3    6[BANK0 ] float 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  exp1            1   15[BANK0 ] unsigned char 
  3339 ;;  exp2            1   14[BANK0 ] unsigned char 
  3340 ;;  sign            1   13[BANK0 ] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  3    3[BANK0 ] float 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       6       0       0       0
  3351 ;;      Locals:         0       3       0       0       0
  3352 ;;      Temps:          0       4       0       0       0
  3353 ;;      Totals:         0      13       0       0       0
  3354 ;;Total ram usage:       13 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		___ftpack
  3359 ;; This function is called by:
  3360 ;;		_trapmf
  3361 ;;		_ISR
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function ___ftadd
  3367  0DA1                     ___ftadd:	
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3371  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3372  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3373  0DA3  0823               	movf	___ftadd@f1,w
  3374  0DA4  00A9               	movwf	??___ftadd
  3375  0DA5  0824               	movf	___ftadd@f1+1,w
  3376  0DA6  00AA               	movwf	??___ftadd+1
  3377  0DA7  0825               	movf	___ftadd@f1+2,w
  3378  0DA8  00AB               	movwf	??___ftadd+2
  3379  0DA9  1003               	clrc
  3380  0DAA  0D2A               	rlf	??___ftadd+1,w
  3381  0DAB  0D2B               	rlf	??___ftadd+2,w
  3382  0DAC  00AC               	movwf	??___ftadd+3
  3383  0DAD  082C               	movf	??___ftadd+3,w
  3384  0DAE  00AF               	movwf	___ftadd@exp1
  3385  0DAF  0826               	movf	___ftadd@f2,w
  3386  0DB0  00A9               	movwf	??___ftadd
  3387  0DB1  0827               	movf	___ftadd@f2+1,w
  3388  0DB2  00AA               	movwf	??___ftadd+1
  3389  0DB3  0828               	movf	___ftadd@f2+2,w
  3390  0DB4  00AB               	movwf	??___ftadd+2
  3391  0DB5  1003               	clrc
  3392  0DB6  0D2A               	rlf	??___ftadd+1,w
  3393  0DB7  0D2B               	rlf	??___ftadd+2,w
  3394  0DB8  00AC               	movwf	??___ftadd+3
  3395  0DB9  082C               	movf	??___ftadd+3,w
  3396  0DBA  00AE               	movwf	___ftadd@exp2
  3397  0DBB  082F               	movf	___ftadd@exp1,w
  3398  0DBC  1903               	btfsc	3,2
  3399  0DBD  2DCA               	goto	i1l3341
  3400  0DBE  082E               	movf	___ftadd@exp2,w
  3401  0DBF  022F               	subwf	___ftadd@exp1,w
  3402  0DC0  1803               	skipnc
  3403  0DC1  2DD1               	goto	i1l3345
  3404  0DC2  032F               	decf	___ftadd@exp1,w
  3405  0DC3  3AFF               	xorlw	255
  3406  0DC4  072E               	addwf	___ftadd@exp2,w
  3407  0DC5  00A9               	movwf	??___ftadd
  3408  0DC6  3019               	movlw	25
  3409  0DC7  0229               	subwf	??___ftadd,w
  3410  0DC8  1C03               	skipc
  3411  0DC9  2DD1               	goto	i1l3345
  3412  0DCA                     i1l3341:	
  3413  0DCA  0826               	movf	___ftadd@f2,w
  3414  0DCB  00A3               	movwf	?___ftadd
  3415  0DCC  0827               	movf	___ftadd@f2+1,w
  3416  0DCD  00A4               	movwf	?___ftadd+1
  3417  0DCE  0828               	movf	___ftadd@f2+2,w
  3418  0DCF  00A5               	movwf	?___ftadd+2
  3419  0DD0  0008               	return
  3420  0DD1                     i1l3345:	
  3421  0DD1  082E               	movf	___ftadd@exp2,w
  3422  0DD2  1903               	btfsc	3,2
  3423  0DD3  0008               	return
  3424  0DD4  082F               	movf	___ftadd@exp1,w
  3425  0DD5  022E               	subwf	___ftadd@exp2,w
  3426  0DD6  1803               	skipnc
  3427  0DD7  2DE0               	goto	i1l3351
  3428  0DD8  032E               	decf	___ftadd@exp2,w
  3429  0DD9  3AFF               	xorlw	255
  3430  0DDA  072F               	addwf	___ftadd@exp1,w
  3431  0DDB  00A9               	movwf	??___ftadd
  3432  0DDC  3019               	movlw	25
  3433  0DDD  0229               	subwf	??___ftadd,w
  3434  0DDE  1803               	btfsc	3,0
  3435  0DDF  0008               	return
  3436  0DE0                     i1l3351:	
  3437  0DE0  3006               	movlw	6
  3438  0DE1  00A9               	movwf	??___ftadd
  3439  0DE2  0829               	movf	??___ftadd,w
  3440  0DE3  00AD               	movwf	___ftadd@sign
  3441  0DE4  1BA5               	btfsc	___ftadd@f1+2,7
  3442  0DE5  17AD               	bsf	___ftadd@sign,7
  3443  0DE6  1BA8               	btfsc	___ftadd@f2+2,7
  3444  0DE7  172D               	bsf	___ftadd@sign,6
  3445  0DE8  17A4               	bsf	___ftadd@f1+1,7
  3446  0DE9  30FF               	movlw	255
  3447  0DEA  05A3               	andwf	___ftadd@f1,f
  3448  0DEB  30FF               	movlw	255
  3449  0DEC  05A4               	andwf	___ftadd@f1+1,f
  3450  0DED  3000               	movlw	0
  3451  0DEE  05A5               	andwf	___ftadd@f1+2,f
  3452  0DEF  17A7               	bsf	___ftadd@f2+1,7
  3453  0DF0  30FF               	movlw	255
  3454  0DF1  05A6               	andwf	___ftadd@f2,f
  3455  0DF2  30FF               	movlw	255
  3456  0DF3  05A7               	andwf	___ftadd@f2+1,f
  3457  0DF4  3000               	movlw	0
  3458  0DF5  05A8               	andwf	___ftadd@f2+2,f
  3459  0DF6  082E               	movf	___ftadd@exp2,w
  3460  0DF7  022F               	subwf	___ftadd@exp1,w
  3461  0DF8  1803               	skipnc
  3462  0DF9  2E20               	goto	i1l3373
  3463  0DFA                     i1l3363:	
  3464  0DFA  3001               	movlw	1
  3465  0DFB                     u440_25:	
  3466  0DFB  1003               	clrc
  3467  0DFC  0DA6               	rlf	___ftadd@f2,f
  3468  0DFD  0DA7               	rlf	___ftadd@f2+1,f
  3469  0DFE  0DA8               	rlf	___ftadd@f2+2,f
  3470  0DFF  3EFF               	addlw	-1
  3471  0E00  1D03               	skipz
  3472  0E01  2DFB               	goto	u440_25
  3473  0E02  3001               	movlw	1
  3474  0E03  02AE               	subwf	___ftadd@exp2,f
  3475  0E04  082E               	movf	___ftadd@exp2,w
  3476  0E05  062F               	xorwf	___ftadd@exp1,w
  3477  0E06  1903               	skipnz
  3478  0E07  2E1B               	goto	i1l3371
  3479  0E08  3001               	movlw	1
  3480  0E09  02AD               	subwf	___ftadd@sign,f
  3481  0E0A  082D               	movf	___ftadd@sign,w
  3482  0E0B  3907               	andlw	7
  3483  0E0C  1903               	btfsc	3,2
  3484  0E0D  2E1B               	goto	i1l3371
  3485  0E0E  2DFA               	goto	i1l3363
  3486  0E0F                     i1l3369:	
  3487  0E0F  3001               	movlw	1
  3488  0E10                     u443_25:	
  3489  0E10  1003               	clrc
  3490  0E11  0CA5               	rrf	___ftadd@f1+2,f
  3491  0E12  0CA4               	rrf	___ftadd@f1+1,f
  3492  0E13  0CA3               	rrf	___ftadd@f1,f
  3493  0E14  3EFF               	addlw	-1
  3494  0E15  1D03               	skipz
  3495  0E16  2E10               	goto	u443_25
  3496  0E17  3001               	movlw	1
  3497  0E18  00A9               	movwf	??___ftadd
  3498  0E19  0829               	movf	??___ftadd,w
  3499  0E1A  07AF               	addwf	___ftadd@exp1,f
  3500  0E1B                     i1l3371:	
  3501  0E1B  082F               	movf	___ftadd@exp1,w
  3502  0E1C  062E               	xorwf	___ftadd@exp2,w
  3503  0E1D  1903               	btfsc	3,2
  3504  0E1E  2E49               	goto	i1l676
  3505  0E1F  2E0F               	goto	i1l3369
  3506  0E20                     i1l3373:	
  3507  0E20  082F               	movf	___ftadd@exp1,w
  3508  0E21  022E               	subwf	___ftadd@exp2,w
  3509  0E22  1803               	skipnc
  3510  0E23  2E49               	goto	i1l676
  3511  0E24                     i1l3375:	
  3512  0E24  3001               	movlw	1
  3513  0E25                     u446_25:	
  3514  0E25  1003               	clrc
  3515  0E26  0DA3               	rlf	___ftadd@f1,f
  3516  0E27  0DA4               	rlf	___ftadd@f1+1,f
  3517  0E28  0DA5               	rlf	___ftadd@f1+2,f
  3518  0E29  3EFF               	addlw	-1
  3519  0E2A  1D03               	skipz
  3520  0E2B  2E25               	goto	u446_25
  3521  0E2C  3001               	movlw	1
  3522  0E2D  02AF               	subwf	___ftadd@exp1,f
  3523  0E2E  082E               	movf	___ftadd@exp2,w
  3524  0E2F  062F               	xorwf	___ftadd@exp1,w
  3525  0E30  1903               	skipnz
  3526  0E31  2E45               	goto	i1l3383
  3527  0E32  3001               	movlw	1
  3528  0E33  02AD               	subwf	___ftadd@sign,f
  3529  0E34  082D               	movf	___ftadd@sign,w
  3530  0E35  3907               	andlw	7
  3531  0E36  1903               	btfsc	3,2
  3532  0E37  2E45               	goto	i1l3383
  3533  0E38  2E24               	goto	i1l3375
  3534  0E39                     i1l3381:	
  3535  0E39  3001               	movlw	1
  3536  0E3A                     u449_25:	
  3537  0E3A  1003               	clrc
  3538  0E3B  0CA8               	rrf	___ftadd@f2+2,f
  3539  0E3C  0CA7               	rrf	___ftadd@f2+1,f
  3540  0E3D  0CA6               	rrf	___ftadd@f2,f
  3541  0E3E  3EFF               	addlw	-1
  3542  0E3F  1D03               	skipz
  3543  0E40  2E3A               	goto	u449_25
  3544  0E41  3001               	movlw	1
  3545  0E42  00A9               	movwf	??___ftadd
  3546  0E43  0829               	movf	??___ftadd,w
  3547  0E44  07AE               	addwf	___ftadd@exp2,f
  3548  0E45                     i1l3383:	
  3549  0E45  082F               	movf	___ftadd@exp1,w
  3550  0E46  062E               	xorwf	___ftadd@exp2,w
  3551  0E47  1D03               	skipz
  3552  0E48  2E39               	goto	i1l3381
  3553  0E49                     i1l676:	
  3554  0E49  1FAD               	btfss	___ftadd@sign,7
  3555  0E4A  2E5B               	goto	i1l3387
  3556  0E4B  30FF               	movlw	255
  3557  0E4C  06A3               	xorwf	___ftadd@f1,f
  3558  0E4D  30FF               	movlw	255
  3559  0E4E  06A4               	xorwf	___ftadd@f1+1,f
  3560  0E4F  30FF               	movlw	255
  3561  0E50  06A5               	xorwf	___ftadd@f1+2,f
  3562  0E51  3001               	movlw	1
  3563  0E52  07A3               	addwf	___ftadd@f1,f
  3564  0E53  3000               	movlw	0
  3565  0E54  1803               	skipnc
  3566  0E55  3001               	movlw	1
  3567  0E56  07A4               	addwf	___ftadd@f1+1,f
  3568  0E57  3000               	movlw	0
  3569  0E58  1803               	skipnc
  3570  0E59  3001               	movlw	1
  3571  0E5A  07A5               	addwf	___ftadd@f1+2,f
  3572  0E5B                     i1l3387:	
  3573  0E5B  1F2D               	btfss	___ftadd@sign,6
  3574  0E5C  2E6D               	goto	i1l3391
  3575  0E5D  30FF               	movlw	255
  3576  0E5E  06A6               	xorwf	___ftadd@f2,f
  3577  0E5F  30FF               	movlw	255
  3578  0E60  06A7               	xorwf	___ftadd@f2+1,f
  3579  0E61  30FF               	movlw	255
  3580  0E62  06A8               	xorwf	___ftadd@f2+2,f
  3581  0E63  3001               	movlw	1
  3582  0E64  07A6               	addwf	___ftadd@f2,f
  3583  0E65  3000               	movlw	0
  3584  0E66  1803               	skipnc
  3585  0E67  3001               	movlw	1
  3586  0E68  07A7               	addwf	___ftadd@f2+1,f
  3587  0E69  3000               	movlw	0
  3588  0E6A  1803               	skipnc
  3589  0E6B  3001               	movlw	1
  3590  0E6C  07A8               	addwf	___ftadd@f2+2,f
  3591  0E6D                     i1l3391:	
  3592  0E6D  01AD               	clrf	___ftadd@sign
  3593  0E6E  0823               	movf	___ftadd@f1,w
  3594  0E6F  07A6               	addwf	___ftadd@f2,f
  3595  0E70  0824               	movf	___ftadd@f1+1,w
  3596  0E71  1103               	clrz
  3597  0E72  1803               	skipnc
  3598  0E73  0A24               	incf	___ftadd@f1+1,w
  3599  0E74  1D03               	btfss	3,2
  3600  0E75  07A7               	addwf	___ftadd@f2+1,f
  3601  0E76  0825               	movf	___ftadd@f1+2,w
  3602  0E77  1103               	clrz
  3603  0E78  1803               	skipnc
  3604  0E79  0A25               	incf	___ftadd@f1+2,w
  3605  0E7A  1D03               	btfss	3,2
  3606  0E7B  07A8               	addwf	___ftadd@f2+2,f
  3607  0E7C  1FA8               	btfss	___ftadd@f2+2,7
  3608  0E7D  2E90               	goto	i1l3401
  3609  0E7E  30FF               	movlw	255
  3610  0E7F  06A6               	xorwf	___ftadd@f2,f
  3611  0E80  30FF               	movlw	255
  3612  0E81  06A7               	xorwf	___ftadd@f2+1,f
  3613  0E82  30FF               	movlw	255
  3614  0E83  06A8               	xorwf	___ftadd@f2+2,f
  3615  0E84  3001               	movlw	1
  3616  0E85  07A6               	addwf	___ftadd@f2,f
  3617  0E86  3000               	movlw	0
  3618  0E87  1803               	skipnc
  3619  0E88  3001               	movlw	1
  3620  0E89  07A7               	addwf	___ftadd@f2+1,f
  3621  0E8A  3000               	movlw	0
  3622  0E8B  1803               	skipnc
  3623  0E8C  3001               	movlw	1
  3624  0E8D  07A8               	addwf	___ftadd@f2+2,f
  3625  0E8E  01AD               	clrf	___ftadd@sign
  3626  0E8F  0AAD               	incf	___ftadd@sign,f
  3627  0E90                     i1l3401:	
  3628  0E90  0826               	movf	___ftadd@f2,w
  3629  0E91  00F0               	movwf	___ftpack@arg
  3630  0E92  0827               	movf	___ftadd@f2+1,w
  3631  0E93  00F1               	movwf	___ftpack@arg+1
  3632  0E94  0828               	movf	___ftadd@f2+2,w
  3633  0E95  00F2               	movwf	___ftpack@arg+2
  3634  0E96  082F               	movf	___ftadd@exp1,w
  3635  0E97  00A9               	movwf	??___ftadd
  3636  0E98  0829               	movf	??___ftadd,w
  3637  0E99  00F3               	movwf	___ftpack@exp
  3638  0E9A  082D               	movf	___ftadd@sign,w
  3639  0E9B  00AA               	movwf	??___ftadd+1
  3640  0E9C  082A               	movf	??___ftadd+1,w
  3641  0E9D  00F4               	movwf	___ftpack@sign
  3642  0E9E  160A  118A  24EF   	fcall	___ftpack
  3643  0EA1  0870               	movf	?___ftpack,w
  3644  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  3646  0EA4  00A3               	movwf	?___ftadd
  3647  0EA5  0871               	movf	?___ftpack+1,w
  3648  0EA6  00A4               	movwf	?___ftadd+1
  3649  0EA7  0872               	movf	?___ftpack+2,w
  3650  0EA8  00A5               	movwf	?___ftadd+2
  3651  0EA9  0008               	return
  3652  0EAA                     __end_of___ftadd:	
  3653                           
  3654                           	psect	text15
  3655  130F                     __ptext15:	
  3656 ;; *************** function _minimo *****************
  3657 ;; Defined at:
  3658 ;;		line 25 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  a               3    6[BANK0 ] float 
  3661 ;;  b               3    9[BANK0 ] float 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  3    6[BANK0 ] float 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, pclath, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       6       0       0       0
  3674 ;;      Locals:         0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0
  3676 ;;      Totals:         0       6       0       0       0
  3677 ;;Total ram usage:        6 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    1
  3680 ;; This function calls:
  3681 ;;		___ftge
  3682 ;; This function is called by:
  3683 ;;		_ISR
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _minimo
  3689  130F                     _minimo:	
  3690                           
  3691                           ;main.c: 26: if (a < b) {
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  3695  130F  1283               	bcf	3,5	;RP0=0, select bank0
  3696  1310  1303               	bcf	3,6	;RP1=0, select bank0
  3697  1311  0826               	movf	minimo@a,w
  3698  1312  00F4               	movwf	___ftge@ff1
  3699  1313  0827               	movf	minimo@a+1,w
  3700  1314  00F5               	movwf	___ftge@ff1+1
  3701  1315  0828               	movf	minimo@a+2,w
  3702  1316  00F6               	movwf	___ftge@ff1+2
  3703  1317  0829               	movf	minimo@b,w
  3704  1318  00F7               	movwf	___ftge@ff2
  3705  1319  082A               	movf	minimo@b+1,w
  3706  131A  00F8               	movwf	___ftge@ff2+1
  3707  131B  082B               	movf	minimo@b+2,w
  3708  131C  00F9               	movwf	___ftge@ff2+2
  3709  131D  160A  118A  248E  160A  118A  	fcall	___ftge
  3710  1322  1C03               	btfss	3,0
  3711  1323  0008               	return
  3712                           
  3713                           ;main.c: 28: }
  3714                           ;main.c: 29: return b;
  3715                           
  3716                           ;main.c: 27: return a;
  3717  1324  1283               	bcf	3,5	;RP0=0, select bank0
  3718  1325  1303               	bcf	3,6	;RP1=0, select bank0
  3719  1326  0829               	movf	minimo@b,w
  3720  1327  00A6               	movwf	?_minimo
  3721  1328  082A               	movf	minimo@b+1,w
  3722  1329  00A7               	movwf	?_minimo+1
  3723  132A  082B               	movf	minimo@b+2,w
  3724  132B  00A8               	movwf	?_minimo+2
  3725  132C  0008               	return
  3726  132D                     __end_of_minimo:	
  3727                           
  3728                           	psect	text16
  3729  12F1                     __ptext16:	
  3730 ;; *************** function _maximo *****************
  3731 ;; Defined at:
  3732 ;;		line 18 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  a               3   12[BANK0 ] float 
  3735 ;;  b               3   15[BANK0 ] float 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  3   12[BANK0 ] float 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       6       0       0       0
  3748 ;;      Locals:         0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         0       6       0       0       0
  3751 ;;Total ram usage:        6 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    1
  3754 ;; This function calls:
  3755 ;;		___ftge
  3756 ;; This function is called by:
  3757 ;;		_ISR
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _maximo
  3763  12F1                     _maximo:	
  3764                           
  3765                           ;main.c: 19: if (a > b) {
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  3769  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  3770  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  3771  12F3  082F               	movf	maximo@b,w
  3772  12F4  00F4               	movwf	___ftge@ff1
  3773  12F5  0830               	movf	maximo@b+1,w
  3774  12F6  00F5               	movwf	___ftge@ff1+1
  3775  12F7  0831               	movf	maximo@b+2,w
  3776  12F8  00F6               	movwf	___ftge@ff1+2
  3777  12F9  082C               	movf	maximo@a,w
  3778  12FA  00F7               	movwf	___ftge@ff2
  3779  12FB  082D               	movf	maximo@a+1,w
  3780  12FC  00F8               	movwf	___ftge@ff2+1
  3781  12FD  082E               	movf	maximo@a+2,w
  3782  12FE  00F9               	movwf	___ftge@ff2+2
  3783  12FF  160A  118A  248E  160A  118A  	fcall	___ftge
  3784  1304  1C03               	btfss	3,0
  3785  1305  0008               	return
  3786                           
  3787                           ;main.c: 21: }
  3788                           ;main.c: 22: return b;
  3789                           
  3790                           ;main.c: 20: return a;
  3791  1306  1283               	bcf	3,5	;RP0=0, select bank0
  3792  1307  1303               	bcf	3,6	;RP1=0, select bank0
  3793  1308  082F               	movf	maximo@b,w
  3794  1309  00AC               	movwf	?_maximo
  3795  130A  0830               	movf	maximo@b+1,w
  3796  130B  00AD               	movwf	?_maximo+1
  3797  130C  0831               	movf	maximo@b+2,w
  3798  130D  00AE               	movwf	?_maximo+2
  3799  130E  0008               	return
  3800  130F                     __end_of_maximo:	
  3801                           
  3802                           	psect	text17
  3803  148E                     __ptext17:	
  3804 ;; *************** function ___ftge *****************
  3805 ;; Defined at:
  3806 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  ff1             3    4[COMMON] float 
  3809 ;;  ff2             3    7[COMMON] float 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;		None               void
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         6       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0
  3823 ;;      Temps:          0       6       0       0       0
  3824 ;;      Totals:         6       6       0       0       0
  3825 ;;Total ram usage:       12 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_maximo
  3831 ;;		_minimo
  3832 ;;		_trapmf
  3833 ;;		_ISR
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function ___ftge
  3839  148E                     ___ftge:	
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3843  148E  1FF6               	btfss	___ftge@ff1+2,7
  3844  148F  2CB7               	goto	i1l2179
  3845  1490  3000               	movlw	0
  3846  1491  1283               	bcf	3,5	;RP0=0, select bank0
  3847  1492  1303               	bcf	3,6	;RP1=0, select bank0
  3848  1493  00A0               	movwf	??___ftge
  3849  1494  3000               	movlw	0
  3850  1495  00A1               	movwf	??___ftge+1
  3851  1496  3080               	movlw	128
  3852  1497  00A2               	movwf	??___ftge+2
  3853  1498  0974               	comf	___ftge@ff1,w
  3854  1499  00A3               	movwf	??___ftge+3
  3855  149A  0975               	comf	___ftge@ff1+1,w
  3856  149B  00A4               	movwf	??___ftge+4
  3857  149C  0976               	comf	___ftge@ff1+2,w
  3858  149D  00A5               	movwf	??___ftge+5
  3859  149E  0AA3               	incf	??___ftge+3,f
  3860  149F  1903               	skipnz
  3861  14A0  0AA4               	incf	??___ftge+4,f
  3862  14A1  1903               	skipnz
  3863  14A2  0AA5               	incf	??___ftge+5,f
  3864  14A3  0823               	movf	??___ftge+3,w
  3865  14A4  07A0               	addwf	??___ftge,f
  3866  14A5  0824               	movf	??___ftge+4,w
  3867  14A6  1803               	skipnc
  3868  14A7  0F24               	incfsz	??___ftge+4,w
  3869  14A8  2CAA               	goto	u240_21
  3870  14A9  2CAB               	goto	u240_22
  3871  14AA                     u240_21:	
  3872  14AA  07A1               	addwf	??___ftge+1,f
  3873  14AB                     u240_22:	
  3874  14AB  0825               	movf	??___ftge+5,w
  3875  14AC  1803               	skipnc
  3876  14AD  0F25               	incfsz	??___ftge+5,w
  3877  14AE  2CB0               	goto	u240_23
  3878  14AF  2CB1               	goto	u240_24
  3879  14B0                     u240_23:	
  3880  14B0  07A2               	addwf	??___ftge+2,f
  3881  14B1                     u240_24:	
  3882  14B1  0820               	movf	??___ftge,w
  3883  14B2  00F4               	movwf	___ftge@ff1
  3884  14B3  0821               	movf	??___ftge+1,w
  3885  14B4  00F5               	movwf	___ftge@ff1+1
  3886  14B5  0822               	movf	??___ftge+2,w
  3887  14B6  00F6               	movwf	___ftge@ff1+2
  3888  14B7                     i1l2179:	
  3889  14B7  1FF9               	btfss	___ftge@ff2+2,7
  3890  14B8  2CE0               	goto	i1l2183
  3891  14B9  3000               	movlw	0
  3892  14BA  1283               	bcf	3,5	;RP0=0, select bank0
  3893  14BB  1303               	bcf	3,6	;RP1=0, select bank0
  3894  14BC  00A0               	movwf	??___ftge
  3895  14BD  3000               	movlw	0
  3896  14BE  00A1               	movwf	??___ftge+1
  3897  14BF  3080               	movlw	128
  3898  14C0  00A2               	movwf	??___ftge+2
  3899  14C1  0977               	comf	___ftge@ff2,w
  3900  14C2  00A3               	movwf	??___ftge+3
  3901  14C3  0978               	comf	___ftge@ff2+1,w
  3902  14C4  00A4               	movwf	??___ftge+4
  3903  14C5  0979               	comf	___ftge@ff2+2,w
  3904  14C6  00A5               	movwf	??___ftge+5
  3905  14C7  0AA3               	incf	??___ftge+3,f
  3906  14C8  1903               	skipnz
  3907  14C9  0AA4               	incf	??___ftge+4,f
  3908  14CA  1903               	skipnz
  3909  14CB  0AA5               	incf	??___ftge+5,f
  3910  14CC  0823               	movf	??___ftge+3,w
  3911  14CD  07A0               	addwf	??___ftge,f
  3912  14CE  0824               	movf	??___ftge+4,w
  3913  14CF  1803               	skipnc
  3914  14D0  0F24               	incfsz	??___ftge+4,w
  3915  14D1  2CD3               	goto	u242_21
  3916  14D2  2CD4               	goto	u242_22
  3917  14D3                     u242_21:	
  3918  14D3  07A1               	addwf	??___ftge+1,f
  3919  14D4                     u242_22:	
  3920  14D4  0825               	movf	??___ftge+5,w
  3921  14D5  1803               	skipnc
  3922  14D6  0F25               	incfsz	??___ftge+5,w
  3923  14D7  2CD9               	goto	u242_23
  3924  14D8  2CDA               	goto	u242_24
  3925  14D9                     u242_23:	
  3926  14D9  07A2               	addwf	??___ftge+2,f
  3927  14DA                     u242_24:	
  3928  14DA  0820               	movf	??___ftge,w
  3929  14DB  00F7               	movwf	___ftge@ff2
  3930  14DC  0821               	movf	??___ftge+1,w
  3931  14DD  00F8               	movwf	___ftge@ff2+1
  3932  14DE  0822               	movf	??___ftge+2,w
  3933  14DF  00F9               	movwf	___ftge@ff2+2
  3934  14E0                     i1l2183:	
  3935  14E0  3080               	movlw	128
  3936  14E1  06F6               	xorwf	___ftge@ff1+2,f
  3937  14E2  3080               	movlw	128
  3938  14E3  06F9               	xorwf	___ftge@ff2+2,f
  3939  14E4  0879               	movf	___ftge@ff2+2,w
  3940  14E5  0276               	subwf	___ftge@ff1+2,w
  3941  14E6  1D03               	skipz
  3942  14E7  0008               	return
  3943  14E8  0878               	movf	___ftge@ff2+1,w
  3944  14E9  0275               	subwf	___ftge@ff1+1,w
  3945  14EA  1D03               	skipz
  3946  14EB  0008               	return
  3947  14EC  0877               	movf	___ftge@ff2,w
  3948  14ED  0274               	subwf	___ftge@ff1,w
  3949  14EE  0008               	return
  3950  14EF                     __end_of___ftge:	
  3951                           
  3952                           	psect	text18
  3953  126B                     __ptext18:	
  3954 ;; *************** function _abs *****************
  3955 ;; Defined at:
  3956 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  a               2    0[COMMON] int 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  2    0[COMMON] int 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3970 ;;      Params:         2       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0
  3972 ;;      Temps:          2       0       0       0       0
  3973 ;;      Totals:         4       0       0       0       0
  3974 ;;Total ram usage:        4 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_ISR
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function _abs
  3985  126B                     _abs:	
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in _abs: [wreg+status,2+status,0]
  3989  126B  1FF1               	btfss	abs@a+1,7
  3990  126C  0008               	return
  3991  126D  0970               	comf	abs@a,w
  3992  126E  00F2               	movwf	??_abs
  3993  126F  0971               	comf	abs@a+1,w
  3994  1270  00F3               	movwf	??_abs+1
  3995  1271  0AF2               	incf	??_abs,f
  3996  1272  1903               	skipnz
  3997  1273  0AF3               	incf	??_abs+1,f
  3998  1274  0872               	movf	??_abs,w
  3999  1275  00F0               	movwf	?_abs
  4000  1276  0873               	movf	??_abs+1,w
  4001  1277  00F1               	movwf	?_abs+1
  4002  1278  0008               	return
  4003  1279                     __end_of_abs:	
  4004                           
  4005                           	psect	text19
  4006  1393                     __ptext19:	
  4007 ;; *************** function ___wmul *****************
  4008 ;; Defined at:
  4009 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  multiplier      2   32[BANK0 ] unsigned int 
  4012 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  product         2   36[BANK0 ] unsigned int 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2   32[BANK0 ] unsigned int 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       4       0       0       0
  4025 ;;      Locals:         0       2       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       6       0       0       0
  4028 ;;Total ram usage:        6 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_ISR
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function ___wmul
  4039  1393                     ___wmul:	
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4043  1393  1283               	bcf	3,5	;RP0=0, select bank0
  4044  1394  1303               	bcf	3,6	;RP1=0, select bank0
  4045  1395  01C4               	clrf	___wmul@product
  4046  1396  01C5               	clrf	___wmul@product+1
  4047  1397                     i1l2357:	
  4048  1397  1C40               	btfss	___wmul@multiplier,0
  4049  1398  2B9F               	goto	i1l482
  4050  1399  0842               	movf	___wmul@multiplicand,w
  4051  139A  07C4               	addwf	___wmul@product,f
  4052  139B  1803               	skipnc
  4053  139C  0AC5               	incf	___wmul@product+1,f
  4054  139D  0843               	movf	___wmul@multiplicand+1,w
  4055  139E  07C5               	addwf	___wmul@product+1,f
  4056  139F                     i1l482:	
  4057  139F  3001               	movlw	1
  4058  13A0                     u261_25:	
  4059  13A0  1003               	clrc
  4060  13A1  0DC2               	rlf	___wmul@multiplicand,f
  4061  13A2  0DC3               	rlf	___wmul@multiplicand+1,f
  4062  13A3  3EFF               	addlw	-1
  4063  13A4  1D03               	skipz
  4064  13A5  2BA0               	goto	u261_25
  4065  13A6  3001               	movlw	1
  4066  13A7                     u262_25:	
  4067  13A7  1003               	clrc
  4068  13A8  0CC1               	rrf	___wmul@multiplier+1,f
  4069  13A9  0CC0               	rrf	___wmul@multiplier,f
  4070  13AA  3EFF               	addlw	-1
  4071  13AB  1D03               	skipz
  4072  13AC  2BA7               	goto	u262_25
  4073  13AD  0841               	movf	___wmul@multiplier+1,w
  4074  13AE  0440               	iorwf	___wmul@multiplier,w
  4075  13AF  1D03               	skipz
  4076  13B0  2B97               	goto	i1l2357
  4077  13B1  0845               	movf	___wmul@product+1,w
  4078  13B2  01C1               	clrf	?___wmul+1
  4079  13B3  07C1               	addwf	?___wmul+1,f
  4080  13B4  0844               	movf	___wmul@product,w
  4081  13B5  01C0               	clrf	?___wmul
  4082  13B6  07C0               	addwf	?___wmul,f
  4083  13B7  0008               	return
  4084  13B8                     __end_of___wmul:	
  4085                           
  4086                           	psect	text20
  4087  12A2                     __ptext20:	
  4088 ;; *************** function ___lwtoft *****************
  4089 ;; Defined at:
  4090 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  c               2   38[BANK0 ] unsigned int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  3   38[BANK0 ] float 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0, pclath, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       3       0       0       0
  4105 ;;      Locals:         0       0       0       0       0
  4106 ;;      Temps:          0       1       0       0       0
  4107 ;;      Totals:         0       4       0       0       0
  4108 ;;Total ram usage:        4 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		___ftpack
  4113 ;; This function is called by:
  4114 ;;		_ISR
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function ___lwtoft
  4120  12A2                     ___lwtoft:	
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4124  12A2  1283               	bcf	3,5	;RP0=0, select bank0
  4125  12A3  1303               	bcf	3,6	;RP1=0, select bank0
  4126  12A4  0846               	movf	___lwtoft@c,w
  4127  12A5  00F0               	movwf	___ftpack@arg
  4128  12A6  0847               	movf	___lwtoft@c+1,w
  4129  12A7  00F1               	movwf	___ftpack@arg+1
  4130  12A8  01F2               	clrf	___ftpack@arg+2
  4131  12A9  308E               	movlw	142
  4132  12AA  00C9               	movwf	??___lwtoft
  4133  12AB  0849               	movf	??___lwtoft,w
  4134  12AC  00F3               	movwf	___ftpack@exp
  4135  12AD  01F4               	clrf	___ftpack@sign
  4136  12AE  160A  118A  24EF   	fcall	___ftpack
  4137  12B1  0870               	movf	?___ftpack,w
  4138  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  4139  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  4140  12B4  00C6               	movwf	?___lwtoft
  4141  12B5  0871               	movf	?___ftpack+1,w
  4142  12B6  00C7               	movwf	?___lwtoft+1
  4143  12B7  0872               	movf	?___ftpack+2,w
  4144  12B8  00C8               	movwf	?___lwtoft+2
  4145  12B9  0008               	return
  4146  12BA                     __end_of___lwtoft:	
  4147                           
  4148                           	psect	text21
  4149  13B8                     __ptext21:	
  4150 ;; *************** function ___lwdiv *****************
  4151 ;; Defined at:
  4152 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  divisor         2    0[COMMON] unsigned int 
  4155 ;;  dividend        2    2[COMMON] unsigned int 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  quotient        2    5[COMMON] unsigned int 
  4158 ;;  counter         1    7[COMMON] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  2    0[COMMON] unsigned int 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         4       0       0       0       0
  4169 ;;      Locals:         3       0       0       0       0
  4170 ;;      Temps:          1       0       0       0       0
  4171 ;;      Totals:         8       0       0       0       0
  4172 ;;Total ram usage:        8 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_ISR
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           
  4182                           ;psect for function ___lwdiv
  4183  13B8                     ___lwdiv:	
  4184                           
  4185                           ;incstack = 0
  4186                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4187  13B8  01F5               	clrf	___lwdiv@quotient
  4188  13B9  01F6               	clrf	___lwdiv@quotient+1
  4189  13BA  0871               	movf	___lwdiv@divisor+1,w
  4190  13BB  0470               	iorwf	___lwdiv@divisor,w
  4191  13BC  1903               	skipnz
  4192  13BD  2BEF               	goto	i1l2593
  4193  13BE  01F7               	clrf	___lwdiv@counter
  4194  13BF  0AF7               	incf	___lwdiv@counter,f
  4195  13C0                     i1l2581:	
  4196  13C0  1BF1               	btfsc	___lwdiv@divisor+1,7
  4197  13C1  2BCE               	goto	i1l2583
  4198  13C2  3001               	movlw	1
  4199  13C3                     u311_25:	
  4200  13C3  1003               	clrc
  4201  13C4  0DF0               	rlf	___lwdiv@divisor,f
  4202  13C5  0DF1               	rlf	___lwdiv@divisor+1,f
  4203  13C6  3EFF               	addlw	-1
  4204  13C7  1D03               	skipz
  4205  13C8  2BC3               	goto	u311_25
  4206  13C9  3001               	movlw	1
  4207  13CA  00F4               	movwf	??___lwdiv
  4208  13CB  0874               	movf	??___lwdiv,w
  4209  13CC  07F7               	addwf	___lwdiv@counter,f
  4210  13CD  2BC0               	goto	i1l2581
  4211  13CE                     i1l2583:	
  4212  13CE  3001               	movlw	1
  4213  13CF                     u313_25:	
  4214  13CF  1003               	clrc
  4215  13D0  0DF5               	rlf	___lwdiv@quotient,f
  4216  13D1  0DF6               	rlf	___lwdiv@quotient+1,f
  4217  13D2  3EFF               	addlw	-1
  4218  13D3  1D03               	skipz
  4219  13D4  2BCF               	goto	u313_25
  4220  13D5  0871               	movf	___lwdiv@divisor+1,w
  4221  13D6  0273               	subwf	___lwdiv@dividend+1,w
  4222  13D7  1D03               	skipz
  4223  13D8  2BDB               	goto	u314_25
  4224  13D9  0870               	movf	___lwdiv@divisor,w
  4225  13DA  0272               	subwf	___lwdiv@dividend,w
  4226  13DB                     u314_25:	
  4227  13DB  1C03               	skipc
  4228  13DC  2BE4               	goto	i1l2589
  4229  13DD  0870               	movf	___lwdiv@divisor,w
  4230  13DE  02F2               	subwf	___lwdiv@dividend,f
  4231  13DF  0871               	movf	___lwdiv@divisor+1,w
  4232  13E0  1C03               	skipc
  4233  13E1  03F3               	decf	___lwdiv@dividend+1,f
  4234  13E2  02F3               	subwf	___lwdiv@dividend+1,f
  4235  13E3  1475               	bsf	___lwdiv@quotient,0
  4236  13E4                     i1l2589:	
  4237  13E4  3001               	movlw	1
  4238  13E5                     u315_25:	
  4239  13E5  1003               	clrc
  4240  13E6  0CF1               	rrf	___lwdiv@divisor+1,f
  4241  13E7  0CF0               	rrf	___lwdiv@divisor,f
  4242  13E8  3EFF               	addlw	-1
  4243  13E9  1D03               	skipz
  4244  13EA  2BE5               	goto	u315_25
  4245  13EB  3001               	movlw	1
  4246  13EC  02F7               	subwf	___lwdiv@counter,f
  4247  13ED  1D03               	btfss	3,2
  4248  13EE  2BCE               	goto	i1l2583
  4249  13EF                     i1l2593:	
  4250  13EF  0876               	movf	___lwdiv@quotient+1,w
  4251  13F0  01F1               	clrf	?___lwdiv+1
  4252  13F1  07F1               	addwf	?___lwdiv+1,f
  4253  13F2  0875               	movf	___lwdiv@quotient,w
  4254  13F3  01F0               	clrf	?___lwdiv
  4255  13F4  07F0               	addwf	?___lwdiv,f
  4256  13F5  0008               	return
  4257  13F6                     __end_of___lwdiv:	
  4258                           
  4259                           	psect	text22
  4260  0860                     __ptext22:	
  4261 ;; *************** function ___fttol *****************
  4262 ;; Defined at:
  4263 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  f1              3   18[BANK0 ] float 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  lval            4   27[BANK0 ] unsigned long 
  4268 ;;  exp1            1   31[BANK0 ] unsigned char 
  4269 ;;  sign1           1   26[BANK0 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4   18[BANK0 ] long 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         0       4       0       0       0
  4280 ;;      Locals:         0       6       0       0       0
  4281 ;;      Temps:          0       4       0       0       0
  4282 ;;      Totals:         0      14       0       0       0
  4283 ;;Total ram usage:       14 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_ISR
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function ___fttol
  4294  0860                     ___fttol:	
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4298  0860  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0861  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0862  0832               	movf	___fttol@f1,w
  4301  0863  00B6               	movwf	??___fttol
  4302  0864  0833               	movf	___fttol@f1+1,w
  4303  0865  00B7               	movwf	??___fttol+1
  4304  0866  0834               	movf	___fttol@f1+2,w
  4305  0867  00B8               	movwf	??___fttol+2
  4306  0868  1003               	clrc
  4307  0869  0D37               	rlf	??___fttol+1,w
  4308  086A  0D38               	rlf	??___fttol+2,w
  4309  086B  00B9               	movwf	??___fttol+3
  4310  086C  0839               	movf	??___fttol+3,w
  4311  086D  00BF               	movwf	___fttol@exp1
  4312  086E  08BF               	movf	___fttol@exp1,f
  4313  086F  1D03               	skipz
  4314  0870  287A               	goto	i1l2533
  4315  0871  3000               	movlw	0
  4316  0872  00B5               	movwf	?___fttol+3
  4317  0873  3000               	movlw	0
  4318  0874  00B4               	movwf	?___fttol+2
  4319  0875  3000               	movlw	0
  4320  0876  00B3               	movwf	?___fttol+1
  4321  0877  3000               	movlw	0
  4322  0878  00B2               	movwf	?___fttol
  4323  0879  0008               	return
  4324  087A                     i1l2533:	
  4325  087A  0832               	movf	___fttol@f1,w
  4326  087B  00B6               	movwf	??___fttol
  4327  087C  0833               	movf	___fttol@f1+1,w
  4328  087D  00B7               	movwf	??___fttol+1
  4329  087E  0834               	movf	___fttol@f1+2,w
  4330  087F  00B8               	movwf	??___fttol+2
  4331  0880  3017               	movlw	23
  4332  0881                     u301_25:	
  4333  0881  1003               	clrc
  4334  0882  0CB8               	rrf	??___fttol+2,f
  4335  0883  0CB7               	rrf	??___fttol+1,f
  4336  0884  0CB6               	rrf	??___fttol,f
  4337  0885  3EFF               	addlw	-1
  4338  0886  1D03               	skipz
  4339  0887  2881               	goto	u301_25
  4340  0888  0836               	movf	??___fttol,w
  4341  0889  00B9               	movwf	??___fttol+3
  4342  088A  0839               	movf	??___fttol+3,w
  4343  088B  00BA               	movwf	___fttol@sign1
  4344  088C  17B3               	bsf	___fttol@f1+1,7
  4345  088D  30FF               	movlw	255
  4346  088E  05B2               	andwf	___fttol@f1,f
  4347  088F  30FF               	movlw	255
  4348  0890  05B3               	andwf	___fttol@f1+1,f
  4349  0891  3000               	movlw	0
  4350  0892  05B4               	andwf	___fttol@f1+2,f
  4351  0893  0832               	movf	___fttol@f1,w
  4352  0894  00BB               	movwf	___fttol@lval
  4353  0895  0833               	movf	___fttol@f1+1,w
  4354  0896  00BC               	movwf	___fttol@lval+1
  4355  0897  0834               	movf	___fttol@f1+2,w
  4356  0898  00BD               	movwf	___fttol@lval+2
  4357  0899  01BE               	clrf	___fttol@lval+3
  4358  089A  308E               	movlw	142
  4359  089B  02BF               	subwf	___fttol@exp1,f
  4360  089C  1FBF               	btfss	___fttol@exp1,7
  4361  089D  28BC               	goto	i1l2553
  4362  089E  083F               	movf	___fttol@exp1,w
  4363  089F  3A80               	xorlw	128
  4364  08A0  3E8F               	addlw	143
  4365  08A1  1803               	skipnc
  4366  08A2  28AC               	goto	i1l2551
  4367  08A3  3000               	movlw	0
  4368  08A4  00B5               	movwf	?___fttol+3
  4369  08A5  3000               	movlw	0
  4370  08A6  00B4               	movwf	?___fttol+2
  4371  08A7  3000               	movlw	0
  4372  08A8  00B3               	movwf	?___fttol+1
  4373  08A9  3000               	movlw	0
  4374  08AA  00B2               	movwf	?___fttol
  4375  08AB  0008               	return
  4376  08AC                     i1l2551:	
  4377  08AC  3001               	movlw	1
  4378  08AD                     u304_25:	
  4379  08AD  1003               	clrc
  4380  08AE  0CBE               	rrf	___fttol@lval+3,f
  4381  08AF  0CBD               	rrf	___fttol@lval+2,f
  4382  08B0  0CBC               	rrf	___fttol@lval+1,f
  4383  08B1  0CBB               	rrf	___fttol@lval,f
  4384  08B2  3EFF               	addlw	-1
  4385  08B3  1D03               	skipz
  4386  08B4  28AD               	goto	u304_25
  4387  08B5  3001               	movlw	1
  4388  08B6  00B6               	movwf	??___fttol
  4389  08B7  0836               	movf	??___fttol,w
  4390  08B8  07BF               	addwf	___fttol@exp1,f
  4391  08B9  1903               	btfsc	3,2
  4392  08BA  28D7               	goto	i1l2563
  4393  08BB  28AC               	goto	i1l2551
  4394  08BC                     i1l2553:	
  4395  08BC  3018               	movlw	24
  4396  08BD  023F               	subwf	___fttol@exp1,w
  4397  08BE  1C03               	skipc
  4398  08BF  28D4               	goto	i1l2561
  4399  08C0  3000               	movlw	0
  4400  08C1  00B5               	movwf	?___fttol+3
  4401  08C2  3000               	movlw	0
  4402  08C3  00B4               	movwf	?___fttol+2
  4403  08C4  3000               	movlw	0
  4404  08C5  00B3               	movwf	?___fttol+1
  4405  08C6  3000               	movlw	0
  4406  08C7  00B2               	movwf	?___fttol
  4407  08C8  0008               	return
  4408  08C9                     i1l2559:	
  4409  08C9  3001               	movlw	1
  4410  08CA  00B6               	movwf	??___fttol
  4411  08CB                     u307_25:	
  4412  08CB  1003               	clrc
  4413  08CC  0DBB               	rlf	___fttol@lval,f
  4414  08CD  0DBC               	rlf	___fttol@lval+1,f
  4415  08CE  0DBD               	rlf	___fttol@lval+2,f
  4416  08CF  0DBE               	rlf	___fttol@lval+3,f
  4417  08D0  0BB6               	decfsz	??___fttol,f
  4418  08D1  28CB               	goto	u307_25
  4419  08D2  3001               	movlw	1
  4420  08D3  02BF               	subwf	___fttol@exp1,f
  4421  08D4                     i1l2561:	
  4422  08D4  08BF               	movf	___fttol@exp1,f
  4423  08D5  1D03               	skipz
  4424  08D6  28C9               	goto	i1l2559
  4425  08D7                     i1l2563:	
  4426  08D7  083A               	movf	___fttol@sign1,w
  4427  08D8  1903               	btfsc	3,2
  4428  08D9  28E5               	goto	i1l2567
  4429  08DA  09BB               	comf	___fttol@lval,f
  4430  08DB  09BC               	comf	___fttol@lval+1,f
  4431  08DC  09BD               	comf	___fttol@lval+2,f
  4432  08DD  09BE               	comf	___fttol@lval+3,f
  4433  08DE  0ABB               	incf	___fttol@lval,f
  4434  08DF  1903               	skipnz
  4435  08E0  0ABC               	incf	___fttol@lval+1,f
  4436  08E1  1903               	skipnz
  4437  08E2  0ABD               	incf	___fttol@lval+2,f
  4438  08E3  1903               	skipnz
  4439  08E4  0ABE               	incf	___fttol@lval+3,f
  4440  08E5                     i1l2567:	
  4441  08E5  083E               	movf	___fttol@lval+3,w
  4442  08E6  00B5               	movwf	?___fttol+3
  4443  08E7  083D               	movf	___fttol@lval+2,w
  4444  08E8  00B4               	movwf	?___fttol+2
  4445  08E9  083C               	movf	___fttol@lval+1,w
  4446  08EA  00B3               	movwf	?___fttol+1
  4447  08EB  083B               	movf	___fttol@lval,w
  4448  08EC  00B2               	movwf	?___fttol
  4449  08ED  0008               	return
  4450  08EE                     __end_of___fttol:	
  4451                           
  4452                           	psect	text23
  4453  0CCE                     __ptext23:	
  4454 ;; *************** function ___ftmul *****************
  4455 ;; Defined at:
  4456 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  f1              3   50[BANK0 ] float 
  4459 ;;  f2              3   53[BANK0 ] float 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  4462 ;;  sign            1   65[BANK0 ] unsigned char 
  4463 ;;  cntr            1   64[BANK0 ] unsigned char 
  4464 ;;  exp             1   60[BANK0 ] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  3   50[BANK0 ] float 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4474 ;;      Params:         0       6       0       0       0
  4475 ;;      Locals:         0       6       0       0       0
  4476 ;;      Temps:          0       4       0       0       0
  4477 ;;      Totals:         0      16       0       0       0
  4478 ;;Total ram usage:       16 bytes
  4479 ;; Hardware stack levels used:    1
  4480 ;; Hardware stack levels required when called:    1
  4481 ;; This function calls:
  4482 ;;		___ftpack
  4483 ;; This function is called by:
  4484 ;;		_ISR
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function ___ftmul
  4490  0CCE                     ___ftmul:	
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4494  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  4495  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  4496  0CD0  0852               	movf	___ftmul@f1,w
  4497  0CD1  00D8               	movwf	??___ftmul
  4498  0CD2  0853               	movf	___ftmul@f1+1,w
  4499  0CD3  00D9               	movwf	??___ftmul+1
  4500  0CD4  0854               	movf	___ftmul@f1+2,w
  4501  0CD5  00DA               	movwf	??___ftmul+2
  4502  0CD6  1003               	clrc
  4503  0CD7  0D59               	rlf	??___ftmul+1,w
  4504  0CD8  0D5A               	rlf	??___ftmul+2,w
  4505  0CD9  00DB               	movwf	??___ftmul+3
  4506  0CDA  085B               	movf	??___ftmul+3,w
  4507  0CDB  00DC               	movwf	___ftmul@exp
  4508  0CDC  08DC               	movf	___ftmul@exp,f
  4509  0CDD  1D03               	skipz
  4510  0CDE  2CE6               	goto	i1l2483
  4511  0CDF  3000               	movlw	0
  4512  0CE0  00D2               	movwf	?___ftmul
  4513  0CE1  3000               	movlw	0
  4514  0CE2  00D3               	movwf	?___ftmul+1
  4515  0CE3  3000               	movlw	0
  4516  0CE4  00D4               	movwf	?___ftmul+2
  4517  0CE5  0008               	return
  4518  0CE6                     i1l2483:	
  4519  0CE6  0855               	movf	___ftmul@f2,w
  4520  0CE7  00D8               	movwf	??___ftmul
  4521  0CE8  0856               	movf	___ftmul@f2+1,w
  4522  0CE9  00D9               	movwf	??___ftmul+1
  4523  0CEA  0857               	movf	___ftmul@f2+2,w
  4524  0CEB  00DA               	movwf	??___ftmul+2
  4525  0CEC  1003               	clrc
  4526  0CED  0D59               	rlf	??___ftmul+1,w
  4527  0CEE  0D5A               	rlf	??___ftmul+2,w
  4528  0CEF  00DB               	movwf	??___ftmul+3
  4529  0CF0  085B               	movf	??___ftmul+3,w
  4530  0CF1  00E1               	movwf	___ftmul@sign
  4531  0CF2  08E1               	movf	___ftmul@sign,f
  4532  0CF3  1D03               	skipz
  4533  0CF4  2CFC               	goto	i1l2489
  4534  0CF5  3000               	movlw	0
  4535  0CF6  00D2               	movwf	?___ftmul
  4536  0CF7  3000               	movlw	0
  4537  0CF8  00D3               	movwf	?___ftmul+1
  4538  0CF9  3000               	movlw	0
  4539  0CFA  00D4               	movwf	?___ftmul+2
  4540  0CFB  0008               	return
  4541  0CFC                     i1l2489:	
  4542  0CFC  0861               	movf	___ftmul@sign,w
  4543  0CFD  3E7B               	addlw	123
  4544  0CFE  00D8               	movwf	??___ftmul
  4545  0CFF  0858               	movf	??___ftmul,w
  4546  0D00  07DC               	addwf	___ftmul@exp,f
  4547  0D01  0852               	movf	___ftmul@f1,w
  4548  0D02  00D8               	movwf	??___ftmul
  4549  0D03  0853               	movf	___ftmul@f1+1,w
  4550  0D04  00D9               	movwf	??___ftmul+1
  4551  0D05  0854               	movf	___ftmul@f1+2,w
  4552  0D06  00DA               	movwf	??___ftmul+2
  4553  0D07  3010               	movlw	16
  4554  0D08                     u288_25:	
  4555  0D08  1003               	clrc
  4556  0D09  0CDA               	rrf	??___ftmul+2,f
  4557  0D0A  0CD9               	rrf	??___ftmul+1,f
  4558  0D0B  0CD8               	rrf	??___ftmul,f
  4559  0D0C  3EFF               	addlw	-1
  4560  0D0D  1D03               	skipz
  4561  0D0E  2D08               	goto	u288_25
  4562  0D0F  0858               	movf	??___ftmul,w
  4563  0D10  00DB               	movwf	??___ftmul+3
  4564  0D11  085B               	movf	??___ftmul+3,w
  4565  0D12  00E1               	movwf	___ftmul@sign
  4566  0D13  0855               	movf	___ftmul@f2,w
  4567  0D14  00D8               	movwf	??___ftmul
  4568  0D15  0856               	movf	___ftmul@f2+1,w
  4569  0D16  00D9               	movwf	??___ftmul+1
  4570  0D17  0857               	movf	___ftmul@f2+2,w
  4571  0D18  00DA               	movwf	??___ftmul+2
  4572  0D19  3010               	movlw	16
  4573  0D1A                     u289_25:	
  4574  0D1A  1003               	clrc
  4575  0D1B  0CDA               	rrf	??___ftmul+2,f
  4576  0D1C  0CD9               	rrf	??___ftmul+1,f
  4577  0D1D  0CD8               	rrf	??___ftmul,f
  4578  0D1E  3EFF               	addlw	-1
  4579  0D1F  1D03               	skipz
  4580  0D20  2D1A               	goto	u289_25
  4581  0D21  0858               	movf	??___ftmul,w
  4582  0D22  00DB               	movwf	??___ftmul+3
  4583  0D23  085B               	movf	??___ftmul+3,w
  4584  0D24  06E1               	xorwf	___ftmul@sign,f
  4585  0D25  3080               	movlw	128
  4586  0D26  00D8               	movwf	??___ftmul
  4587  0D27  0858               	movf	??___ftmul,w
  4588  0D28  05E1               	andwf	___ftmul@sign,f
  4589  0D29  17D3               	bsf	___ftmul@f1+1,7
  4590  0D2A  17D6               	bsf	___ftmul@f2+1,7
  4591  0D2B  30FF               	movlw	255
  4592  0D2C  05D5               	andwf	___ftmul@f2,f
  4593  0D2D  30FF               	movlw	255
  4594  0D2E  05D6               	andwf	___ftmul@f2+1,f
  4595  0D2F  3000               	movlw	0
  4596  0D30  05D7               	andwf	___ftmul@f2+2,f
  4597  0D31  3000               	movlw	0
  4598  0D32  00DD               	movwf	___ftmul@f3_as_product
  4599  0D33  3000               	movlw	0
  4600  0D34  00DE               	movwf	___ftmul@f3_as_product+1
  4601  0D35  3000               	movlw	0
  4602  0D36  00DF               	movwf	___ftmul@f3_as_product+2
  4603  0D37  3007               	movlw	7
  4604  0D38  00D8               	movwf	??___ftmul
  4605  0D39  0858               	movf	??___ftmul,w
  4606  0D3A  00E0               	movwf	___ftmul@cntr
  4607  0D3B                     i1l2501:	
  4608  0D3B  1C52               	btfss	___ftmul@f1,0
  4609  0D3C  2D4B               	goto	i1l2505
  4610  0D3D  0855               	movf	___ftmul@f2,w
  4611  0D3E  07DD               	addwf	___ftmul@f3_as_product,f
  4612  0D3F  0856               	movf	___ftmul@f2+1,w
  4613  0D40  1103               	clrz
  4614  0D41  1803               	skipnc
  4615  0D42  0A56               	incf	___ftmul@f2+1,w
  4616  0D43  1D03               	btfss	3,2
  4617  0D44  07DE               	addwf	___ftmul@f3_as_product+1,f
  4618  0D45  0857               	movf	___ftmul@f2+2,w
  4619  0D46  1103               	clrz
  4620  0D47  1803               	skipnc
  4621  0D48  0A57               	incf	___ftmul@f2+2,w
  4622  0D49  1D03               	btfss	3,2
  4623  0D4A  07DF               	addwf	___ftmul@f3_as_product+2,f
  4624  0D4B                     i1l2505:	
  4625  0D4B  3001               	movlw	1
  4626  0D4C                     u292_25:	
  4627  0D4C  1003               	clrc
  4628  0D4D  0CD4               	rrf	___ftmul@f1+2,f
  4629  0D4E  0CD3               	rrf	___ftmul@f1+1,f
  4630  0D4F  0CD2               	rrf	___ftmul@f1,f
  4631  0D50  3EFF               	addlw	-1
  4632  0D51  1D03               	skipz
  4633  0D52  2D4C               	goto	u292_25
  4634  0D53  3001               	movlw	1
  4635  0D54                     u293_25:	
  4636  0D54  1003               	clrc
  4637  0D55  0DD5               	rlf	___ftmul@f2,f
  4638  0D56  0DD6               	rlf	___ftmul@f2+1,f
  4639  0D57  0DD7               	rlf	___ftmul@f2+2,f
  4640  0D58  3EFF               	addlw	-1
  4641  0D59  1D03               	skipz
  4642  0D5A  2D54               	goto	u293_25
  4643  0D5B  3001               	movlw	1
  4644  0D5C  02E0               	subwf	___ftmul@cntr,f
  4645  0D5D  1D03               	btfss	3,2
  4646  0D5E  2D3B               	goto	i1l2501
  4647  0D5F  3009               	movlw	9
  4648  0D60  00D8               	movwf	??___ftmul
  4649  0D61  0858               	movf	??___ftmul,w
  4650  0D62  00E0               	movwf	___ftmul@cntr
  4651  0D63                     i1l2513:	
  4652  0D63  1C52               	btfss	___ftmul@f1,0
  4653  0D64  2D73               	goto	i1l2517
  4654  0D65  0855               	movf	___ftmul@f2,w
  4655  0D66  07DD               	addwf	___ftmul@f3_as_product,f
  4656  0D67  0856               	movf	___ftmul@f2+1,w
  4657  0D68  1103               	clrz
  4658  0D69  1803               	skipnc
  4659  0D6A  0A56               	incf	___ftmul@f2+1,w
  4660  0D6B  1D03               	btfss	3,2
  4661  0D6C  07DE               	addwf	___ftmul@f3_as_product+1,f
  4662  0D6D  0857               	movf	___ftmul@f2+2,w
  4663  0D6E  1103               	clrz
  4664  0D6F  1803               	skipnc
  4665  0D70  0A57               	incf	___ftmul@f2+2,w
  4666  0D71  1D03               	btfss	3,2
  4667  0D72  07DF               	addwf	___ftmul@f3_as_product+2,f
  4668  0D73                     i1l2517:	
  4669  0D73  3001               	movlw	1
  4670  0D74                     u297_25:	
  4671  0D74  1003               	clrc
  4672  0D75  0CD4               	rrf	___ftmul@f1+2,f
  4673  0D76  0CD3               	rrf	___ftmul@f1+1,f
  4674  0D77  0CD2               	rrf	___ftmul@f1,f
  4675  0D78  3EFF               	addlw	-1
  4676  0D79  1D03               	skipz
  4677  0D7A  2D74               	goto	u297_25
  4678  0D7B  3001               	movlw	1
  4679  0D7C                     u298_25:	
  4680  0D7C  1003               	clrc
  4681  0D7D  0CDF               	rrf	___ftmul@f3_as_product+2,f
  4682  0D7E  0CDE               	rrf	___ftmul@f3_as_product+1,f
  4683  0D7F  0CDD               	rrf	___ftmul@f3_as_product,f
  4684  0D80  3EFF               	addlw	-1
  4685  0D81  1D03               	skipz
  4686  0D82  2D7C               	goto	u298_25
  4687  0D83  3001               	movlw	1
  4688  0D84  02E0               	subwf	___ftmul@cntr,f
  4689  0D85  1D03               	btfss	3,2
  4690  0D86  2D63               	goto	i1l2513
  4691  0D87  085D               	movf	___ftmul@f3_as_product,w
  4692  0D88  00F0               	movwf	___ftpack@arg
  4693  0D89  085E               	movf	___ftmul@f3_as_product+1,w
  4694  0D8A  00F1               	movwf	___ftpack@arg+1
  4695  0D8B  085F               	movf	___ftmul@f3_as_product+2,w
  4696  0D8C  00F2               	movwf	___ftpack@arg+2
  4697  0D8D  085C               	movf	___ftmul@exp,w
  4698  0D8E  00D8               	movwf	??___ftmul
  4699  0D8F  0858               	movf	??___ftmul,w
  4700  0D90  00F3               	movwf	___ftpack@exp
  4701  0D91  0861               	movf	___ftmul@sign,w
  4702  0D92  00D9               	movwf	??___ftmul+1
  4703  0D93  0859               	movf	??___ftmul+1,w
  4704  0D94  00F4               	movwf	___ftpack@sign
  4705  0D95  160A  118A  24EF   	fcall	___ftpack
  4706  0D98  0870               	movf	?___ftpack,w
  4707  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  4708  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  4709  0D9B  00D2               	movwf	?___ftmul
  4710  0D9C  0871               	movf	?___ftpack+1,w
  4711  0D9D  00D3               	movwf	?___ftmul+1
  4712  0D9E  0872               	movf	?___ftpack+2,w
  4713  0D9F  00D4               	movwf	?___ftmul+2
  4714  0DA0  0008               	return
  4715  0DA1                     __end_of___ftmul:	
  4716                           
  4717                           	psect	text24
  4718  1279                     __ptext24:	
  4719 ;; *************** function ___bmul *****************
  4720 ;; Defined at:
  4721 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  multiplier      1    wreg     unsigned char 
  4724 ;;  multiplicand    1    0[COMMON] unsigned char 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  multiplier      1    3[COMMON] unsigned char 
  4727 ;;  product         1    2[COMMON] unsigned char 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      unsigned char 
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4737 ;;      Params:         1       0       0       0       0
  4738 ;;      Locals:         2       0       0       0       0
  4739 ;;      Temps:          1       0       0       0       0
  4740 ;;      Totals:         4       0       0       0       0
  4741 ;;Total ram usage:        4 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_ISR
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function ___bmul
  4752  1279                     ___bmul:	
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4756                           ;___bmul@multiplier stored from wreg
  4757  1279  00F3               	movwf	___bmul@multiplier
  4758  127A  01F2               	clrf	___bmul@product
  4759  127B                     i1l2369:	
  4760  127B  1C73               	btfss	___bmul@multiplier,0
  4761  127C  2A81               	goto	i1l2373
  4762  127D  0870               	movf	___bmul@multiplicand,w
  4763  127E  00F1               	movwf	??___bmul
  4764  127F  0871               	movf	??___bmul,w
  4765  1280  07F2               	addwf	___bmul@product,f
  4766  1281                     i1l2373:	
  4767  1281  1003               	clrc
  4768  1282  0DF0               	rlf	___bmul@multiplicand,f
  4769  1283  1003               	clrc
  4770  1284  0CF3               	rrf	___bmul@multiplier,f
  4771  1285  08F3               	movf	___bmul@multiplier,f
  4772  1286  1D03               	skipz
  4773  1287  2A7B               	goto	i1l2369
  4774  1288  0872               	movf	___bmul@product,w
  4775  1289  0008               	return
  4776  128A                     __end_of___bmul:	
  4777                           
  4778                           	psect	text25
  4779  132D                     __ptext25:	
  4780 ;; *************** function ___awtoft *****************
  4781 ;; Defined at:
  4782 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  c               2    8[COMMON] int 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  sign            1   13[COMMON] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  3    8[COMMON] float 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0, pclath, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         3       0       0       0       0
  4797 ;;      Locals:         1       0       0       0       0
  4798 ;;      Temps:          2       0       0       0       0
  4799 ;;      Totals:         6       0       0       0       0
  4800 ;;Total ram usage:        6 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    1
  4803 ;; This function calls:
  4804 ;;		___ftpack
  4805 ;; This function is called by:
  4806 ;;		_ISR
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function ___awtoft
  4812  132D                     ___awtoft:	
  4813                           
  4814                           ;incstack = 0
  4815                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4816  132D  01FD               	clrf	___awtoft@sign
  4817  132E  1FF9               	btfss	___awtoft@c+1,7
  4818  132F  2B37               	goto	i1l2473
  4819  1330  09F8               	comf	___awtoft@c,f
  4820  1331  09F9               	comf	___awtoft@c+1,f
  4821  1332  0AF8               	incf	___awtoft@c,f
  4822  1333  1903               	skipnz
  4823  1334  0AF9               	incf	___awtoft@c+1,f
  4824  1335  01FD               	clrf	___awtoft@sign
  4825  1336  0AFD               	incf	___awtoft@sign,f
  4826  1337                     i1l2473:	
  4827  1337  0878               	movf	___awtoft@c,w
  4828  1338  00F0               	movwf	___ftpack@arg
  4829  1339  0879               	movf	___awtoft@c+1,w
  4830  133A  00F1               	movwf	___ftpack@arg+1
  4831  133B  01F2               	clrf	___ftpack@arg+2
  4832  133C  308E               	movlw	142
  4833  133D  00FB               	movwf	??___awtoft
  4834  133E  087B               	movf	??___awtoft,w
  4835  133F  00F3               	movwf	___ftpack@exp
  4836  1340  087D               	movf	___awtoft@sign,w
  4837  1341  00FC               	movwf	??___awtoft+1
  4838  1342  087C               	movf	??___awtoft+1,w
  4839  1343  00F4               	movwf	___ftpack@sign
  4840  1344  160A  118A  24EF   	fcall	___ftpack
  4841  1347  0870               	movf	?___ftpack,w
  4842  1348  00F8               	movwf	?___awtoft
  4843  1349  0871               	movf	?___ftpack+1,w
  4844  134A  00F9               	movwf	?___awtoft+1
  4845  134B  0872               	movf	?___ftpack+2,w
  4846  134C  00FA               	movwf	?___awtoft+2
  4847  134D  0008               	return
  4848  134E                     __end_of___awtoft:	
  4849                           
  4850                           	psect	text26
  4851  14EF                     __ptext26:	
  4852 ;; *************** function ___ftpack *****************
  4853 ;; Defined at:
  4854 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  arg             3    0[COMMON] unsigned um
  4857 ;;  exp             1    3[COMMON] unsigned char 
  4858 ;;  sign            1    4[COMMON] unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  3    0[COMMON] float 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4870 ;;      Params:         5       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0
  4872 ;;      Temps:          3       0       0       0       0
  4873 ;;      Totals:         8       0       0       0       0
  4874 ;;Total ram usage:        8 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		___awtoft
  4880 ;;		___ftadd
  4881 ;;		___ftdiv
  4882 ;;		___ftmul
  4883 ;;		___lwtoft
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function ___ftpack
  4889  14EF                     ___ftpack:	
  4890                           
  4891                           ;incstack = 0
  4892                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4893  14EF  0873               	movf	___ftpack@exp,w
  4894  14F0  1903               	btfsc	3,2
  4895  14F1  2CF7               	goto	i1l1987
  4896  14F2  0872               	movf	___ftpack@arg+2,w
  4897  14F3  0471               	iorwf	___ftpack@arg+1,w
  4898  14F4  0470               	iorwf	___ftpack@arg,w
  4899  14F5  1D03               	skipz
  4900  14F6  2D0A               	goto	i1l1993
  4901  14F7                     i1l1987:	
  4902  14F7  3000               	movlw	0
  4903  14F8  00F0               	movwf	?___ftpack
  4904  14F9  3000               	movlw	0
  4905  14FA  00F1               	movwf	?___ftpack+1
  4906  14FB  3000               	movlw	0
  4907  14FC  00F2               	movwf	?___ftpack+2
  4908  14FD  0008               	return
  4909  14FE                     i1l1991:	
  4910  14FE  3001               	movlw	1
  4911  14FF  00F5               	movwf	??___ftpack
  4912  1500  0875               	movf	??___ftpack,w
  4913  1501  07F3               	addwf	___ftpack@exp,f
  4914  1502  3001               	movlw	1
  4915  1503                     u187_25:	
  4916  1503  1003               	clrc
  4917  1504  0CF2               	rrf	___ftpack@arg+2,f
  4918  1505  0CF1               	rrf	___ftpack@arg+1,f
  4919  1506  0CF0               	rrf	___ftpack@arg,f
  4920  1507  3EFF               	addlw	-1
  4921  1508  1D03               	skipz
  4922  1509  2D03               	goto	u187_25
  4923  150A                     i1l1993:	
  4924  150A  30FE               	movlw	254
  4925  150B  0572               	andwf	___ftpack@arg+2,w
  4926  150C  1903               	btfsc	3,2
  4927  150D  2D25               	goto	i1l647
  4928  150E  2CFE               	goto	i1l1991
  4929  150F                     i1l1995:	
  4930  150F  3001               	movlw	1
  4931  1510  00F5               	movwf	??___ftpack
  4932  1511  0875               	movf	??___ftpack,w
  4933  1512  07F3               	addwf	___ftpack@exp,f
  4934  1513  3001               	movlw	1
  4935  1514  07F0               	addwf	___ftpack@arg,f
  4936  1515  3000               	movlw	0
  4937  1516  1803               	skipnc
  4938  1517  3001               	movlw	1
  4939  1518  07F1               	addwf	___ftpack@arg+1,f
  4940  1519  3000               	movlw	0
  4941  151A  1803               	skipnc
  4942  151B  3001               	movlw	1
  4943  151C  07F2               	addwf	___ftpack@arg+2,f
  4944  151D  3001               	movlw	1
  4945  151E                     u189_25:	
  4946  151E  1003               	clrc
  4947  151F  0CF2               	rrf	___ftpack@arg+2,f
  4948  1520  0CF1               	rrf	___ftpack@arg+1,f
  4949  1521  0CF0               	rrf	___ftpack@arg,f
  4950  1522  3EFF               	addlw	-1
  4951  1523  1D03               	skipz
  4952  1524  2D1E               	goto	u189_25
  4953  1525                     i1l647:	
  4954  1525  30FF               	movlw	255
  4955  1526  0572               	andwf	___ftpack@arg+2,w
  4956  1527  1903               	btfsc	3,2
  4957  1528  2D34               	goto	i1l2003
  4958  1529  2D0F               	goto	i1l1995
  4959  152A                     i1l2001:	
  4960  152A  3001               	movlw	1
  4961  152B  02F3               	subwf	___ftpack@exp,f
  4962  152C  3001               	movlw	1
  4963  152D                     u191_25:	
  4964  152D  1003               	clrc
  4965  152E  0DF0               	rlf	___ftpack@arg,f
  4966  152F  0DF1               	rlf	___ftpack@arg+1,f
  4967  1530  0DF2               	rlf	___ftpack@arg+2,f
  4968  1531  3EFF               	addlw	-1
  4969  1532  1D03               	skipz
  4970  1533  2D2D               	goto	u191_25
  4971  1534                     i1l2003:	
  4972  1534  1FF1               	btfss	___ftpack@arg+1,7
  4973  1535  2D2A               	goto	i1l2001
  4974  1536  1873               	btfsc	___ftpack@exp,0
  4975  1537  2D3E               	goto	i1l653
  4976  1538  30FF               	movlw	255
  4977  1539  05F0               	andwf	___ftpack@arg,f
  4978  153A  307F               	movlw	127
  4979  153B  05F1               	andwf	___ftpack@arg+1,f
  4980  153C  30FF               	movlw	255
  4981  153D  05F2               	andwf	___ftpack@arg+2,f
  4982  153E                     i1l653:	
  4983  153E  1003               	clrc
  4984  153F  0CF3               	rrf	___ftpack@exp,f
  4985  1540  0873               	movf	___ftpack@exp,w
  4986  1541  00F5               	movwf	??___ftpack
  4987  1542  01F6               	clrf	??___ftpack+1
  4988  1543  01F7               	clrf	??___ftpack+2
  4989  1544  3010               	movlw	16
  4990  1545                     u194_25:	
  4991  1545  1003               	clrc
  4992  1546  0DF5               	rlf	??___ftpack,f
  4993  1547  0DF6               	rlf	??___ftpack+1,f
  4994  1548  0DF7               	rlf	??___ftpack+2,f
  4995  1549  3EFF               	addlw	-1
  4996  154A  1D03               	skipz
  4997  154B  2D45               	goto	u194_25
  4998  154C  0875               	movf	??___ftpack,w
  4999  154D  04F0               	iorwf	___ftpack@arg,f
  5000  154E  0876               	movf	??___ftpack+1,w
  5001  154F  04F1               	iorwf	___ftpack@arg+1,f
  5002  1550  0877               	movf	??___ftpack+2,w
  5003  1551  04F2               	iorwf	___ftpack@arg+2,f
  5004  1552  0874               	movf	___ftpack@sign,w
  5005  1553  1903               	btfsc	3,2
  5006  1554  0008               	return
  5007  1555  17F2               	bsf	___ftpack@arg+2,7
  5008  1556  0008               	return
  5009  1557                     __end_of___ftpack:	
  5010                           
  5011                           	psect	text27
  5012  1441                     __ptext27:	
  5013 ;; *************** function ___awmod *****************
  5014 ;; Defined at:
  5015 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  divisor         2    0[COMMON] int 
  5018 ;;  dividend        2    2[COMMON] int 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  sign            1    6[COMMON] unsigned char 
  5021 ;;  counter         1    5[COMMON] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  2    0[COMMON] int 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5031 ;;      Params:         4       0       0       0       0
  5032 ;;      Locals:         2       0       0       0       0
  5033 ;;      Temps:          1       0       0       0       0
  5034 ;;      Totals:         7       0       0       0       0
  5035 ;;Total ram usage:        7 bytes
  5036 ;; Hardware stack levels used:    1
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_ISR
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           
  5045                           ;psect for function ___awmod
  5046  1441                     ___awmod:	
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5050  1441  01F6               	clrf	___awmod@sign
  5051  1442  1FF3               	btfss	___awmod@dividend+1,7
  5052  1443  2C4B               	goto	i1l2435
  5053  1444  09F2               	comf	___awmod@dividend,f
  5054  1445  09F3               	comf	___awmod@dividend+1,f
  5055  1446  0AF2               	incf	___awmod@dividend,f
  5056  1447  1903               	skipnz
  5057  1448  0AF3               	incf	___awmod@dividend+1,f
  5058  1449  01F6               	clrf	___awmod@sign
  5059  144A  0AF6               	incf	___awmod@sign,f
  5060  144B                     i1l2435:	
  5061  144B  1FF1               	btfss	___awmod@divisor+1,7
  5062  144C  2C52               	goto	i1l2439
  5063  144D  09F0               	comf	___awmod@divisor,f
  5064  144E  09F1               	comf	___awmod@divisor+1,f
  5065  144F  0AF0               	incf	___awmod@divisor,f
  5066  1450  1903               	skipnz
  5067  1451  0AF1               	incf	___awmod@divisor+1,f
  5068  1452                     i1l2439:	
  5069  1452  0871               	movf	___awmod@divisor+1,w
  5070  1453  0470               	iorwf	___awmod@divisor,w
  5071  1454  1903               	skipnz
  5072  1455  2C7F               	goto	i1l2457
  5073  1456  01F5               	clrf	___awmod@counter
  5074  1457  0AF5               	incf	___awmod@counter,f
  5075  1458                     i1l2447:	
  5076  1458  1BF1               	btfsc	___awmod@divisor+1,7
  5077  1459  2C66               	goto	i1l2449
  5078  145A  3001               	movlw	1
  5079  145B                     u279_25:	
  5080  145B  1003               	clrc
  5081  145C  0DF0               	rlf	___awmod@divisor,f
  5082  145D  0DF1               	rlf	___awmod@divisor+1,f
  5083  145E  3EFF               	addlw	-1
  5084  145F  1D03               	skipz
  5085  1460  2C5B               	goto	u279_25
  5086  1461  3001               	movlw	1
  5087  1462  00F4               	movwf	??___awmod
  5088  1463  0874               	movf	??___awmod,w
  5089  1464  07F5               	addwf	___awmod@counter,f
  5090  1465  2C58               	goto	i1l2447
  5091  1466                     i1l2449:	
  5092  1466  0871               	movf	___awmod@divisor+1,w
  5093  1467  0273               	subwf	___awmod@dividend+1,w
  5094  1468  1D03               	skipz
  5095  1469  2C6C               	goto	u281_25
  5096  146A  0870               	movf	___awmod@divisor,w
  5097  146B  0272               	subwf	___awmod@dividend,w
  5098  146C                     u281_25:	
  5099  146C  1C03               	skipc
  5100  146D  2C74               	goto	i1l2453
  5101  146E  0870               	movf	___awmod@divisor,w
  5102  146F  02F2               	subwf	___awmod@dividend,f
  5103  1470  0871               	movf	___awmod@divisor+1,w
  5104  1471  1C03               	skipc
  5105  1472  03F3               	decf	___awmod@dividend+1,f
  5106  1473  02F3               	subwf	___awmod@dividend+1,f
  5107  1474                     i1l2453:	
  5108  1474  3001               	movlw	1
  5109  1475                     u282_25:	
  5110  1475  1003               	clrc
  5111  1476  0CF1               	rrf	___awmod@divisor+1,f
  5112  1477  0CF0               	rrf	___awmod@divisor,f
  5113  1478  3EFF               	addlw	-1
  5114  1479  1D03               	skipz
  5115  147A  2C75               	goto	u282_25
  5116  147B  3001               	movlw	1
  5117  147C  02F5               	subwf	___awmod@counter,f
  5118  147D  1D03               	btfss	3,2
  5119  147E  2C66               	goto	i1l2449
  5120  147F                     i1l2457:	
  5121  147F  0876               	movf	___awmod@sign,w
  5122  1480  1903               	btfsc	3,2
  5123  1481  2C87               	goto	i1l2461
  5124  1482  09F2               	comf	___awmod@dividend,f
  5125  1483  09F3               	comf	___awmod@dividend+1,f
  5126  1484  0AF2               	incf	___awmod@dividend,f
  5127  1485  1903               	skipnz
  5128  1486  0AF3               	incf	___awmod@dividend+1,f
  5129  1487                     i1l2461:	
  5130  1487  0873               	movf	___awmod@dividend+1,w
  5131  1488  01F1               	clrf	?___awmod+1
  5132  1489  07F1               	addwf	?___awmod+1,f
  5133  148A  0872               	movf	___awmod@dividend,w
  5134  148B  01F0               	clrf	?___awmod
  5135  148C  07F0               	addwf	?___awmod,f
  5136  148D  0008               	return
  5137  148E                     __end_of___awmod:	
  5138                           
  5139                           	psect	text28
  5140  0805                     __ptext28:	
  5141 ;; *************** function ___awdiv *****************
  5142 ;; Defined at:
  5143 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  divisor         2    0[COMMON] int 
  5146 ;;  dividend        2    2[COMMON] int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  quotient        2    7[COMMON] int 
  5149 ;;  sign            1    6[COMMON] unsigned char 
  5150 ;;  counter         1    5[COMMON] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2    0[COMMON] int 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5160 ;;      Params:         4       0       0       0       0
  5161 ;;      Locals:         4       0       0       0       0
  5162 ;;      Temps:          1       0       0       0       0
  5163 ;;      Totals:         9       0       0       0       0
  5164 ;;Total ram usage:        9 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_ISR
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           
  5174                           ;psect for function ___awdiv
  5175  0805                     ___awdiv:	
  5176                           
  5177                           ;incstack = 0
  5178                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5179  0805  01F6               	clrf	___awdiv@sign
  5180  0806  1FF1               	btfss	___awdiv@divisor+1,7
  5181  0807  280F               	goto	i1l2391
  5182  0808  09F0               	comf	___awdiv@divisor,f
  5183  0809  09F1               	comf	___awdiv@divisor+1,f
  5184  080A  0AF0               	incf	___awdiv@divisor,f
  5185  080B  1903               	skipnz
  5186  080C  0AF1               	incf	___awdiv@divisor+1,f
  5187  080D  01F6               	clrf	___awdiv@sign
  5188  080E  0AF6               	incf	___awdiv@sign,f
  5189  080F                     i1l2391:	
  5190  080F  1FF3               	btfss	___awdiv@dividend+1,7
  5191  0810  281A               	goto	i1l2397
  5192  0811  09F2               	comf	___awdiv@dividend,f
  5193  0812  09F3               	comf	___awdiv@dividend+1,f
  5194  0813  0AF2               	incf	___awdiv@dividend,f
  5195  0814  1903               	skipnz
  5196  0815  0AF3               	incf	___awdiv@dividend+1,f
  5197  0816  3001               	movlw	1
  5198  0817  00F4               	movwf	??___awdiv
  5199  0818  0874               	movf	??___awdiv,w
  5200  0819  06F6               	xorwf	___awdiv@sign,f
  5201  081A                     i1l2397:	
  5202  081A  01F7               	clrf	___awdiv@quotient
  5203  081B  01F8               	clrf	___awdiv@quotient+1
  5204  081C  0871               	movf	___awdiv@divisor+1,w
  5205  081D  0470               	iorwf	___awdiv@divisor,w
  5206  081E  1903               	skipnz
  5207  081F  2851               	goto	i1l2419
  5208  0820  01F5               	clrf	___awdiv@counter
  5209  0821  0AF5               	incf	___awdiv@counter,f
  5210  0822                     i1l2407:	
  5211  0822  1BF1               	btfsc	___awdiv@divisor+1,7
  5212  0823  2830               	goto	i1l2409
  5213  0824  3001               	movlw	1
  5214  0825                     u269_25:	
  5215  0825  1003               	clrc
  5216  0826  0DF0               	rlf	___awdiv@divisor,f
  5217  0827  0DF1               	rlf	___awdiv@divisor+1,f
  5218  0828  3EFF               	addlw	-1
  5219  0829  1D03               	skipz
  5220  082A  2825               	goto	u269_25
  5221  082B  3001               	movlw	1
  5222  082C  00F4               	movwf	??___awdiv
  5223  082D  0874               	movf	??___awdiv,w
  5224  082E  07F5               	addwf	___awdiv@counter,f
  5225  082F  2822               	goto	i1l2407
  5226  0830                     i1l2409:	
  5227  0830  3001               	movlw	1
  5228  0831                     u271_25:	
  5229  0831  1003               	clrc
  5230  0832  0DF7               	rlf	___awdiv@quotient,f
  5231  0833  0DF8               	rlf	___awdiv@quotient+1,f
  5232  0834  3EFF               	addlw	-1
  5233  0835  1D03               	skipz
  5234  0836  2831               	goto	u271_25
  5235  0837  0871               	movf	___awdiv@divisor+1,w
  5236  0838  0273               	subwf	___awdiv@dividend+1,w
  5237  0839  1D03               	skipz
  5238  083A  283D               	goto	u272_25
  5239  083B  0870               	movf	___awdiv@divisor,w
  5240  083C  0272               	subwf	___awdiv@dividend,w
  5241  083D                     u272_25:	
  5242  083D  1C03               	skipc
  5243  083E  2846               	goto	i1l2415
  5244  083F  0870               	movf	___awdiv@divisor,w
  5245  0840  02F2               	subwf	___awdiv@dividend,f
  5246  0841  0871               	movf	___awdiv@divisor+1,w
  5247  0842  1C03               	skipc
  5248  0843  03F3               	decf	___awdiv@dividend+1,f
  5249  0844  02F3               	subwf	___awdiv@dividend+1,f
  5250  0845  1477               	bsf	___awdiv@quotient,0
  5251  0846                     i1l2415:	
  5252  0846  3001               	movlw	1
  5253  0847                     u273_25:	
  5254  0847  1003               	clrc
  5255  0848  0CF1               	rrf	___awdiv@divisor+1,f
  5256  0849  0CF0               	rrf	___awdiv@divisor,f
  5257  084A  3EFF               	addlw	-1
  5258  084B  1D03               	skipz
  5259  084C  2847               	goto	u273_25
  5260  084D  3001               	movlw	1
  5261  084E  02F5               	subwf	___awdiv@counter,f
  5262  084F  1D03               	btfss	3,2
  5263  0850  2830               	goto	i1l2409
  5264  0851                     i1l2419:	
  5265  0851  0876               	movf	___awdiv@sign,w
  5266  0852  1903               	btfsc	3,2
  5267  0853  2859               	goto	i1l2423
  5268  0854  09F7               	comf	___awdiv@quotient,f
  5269  0855  09F8               	comf	___awdiv@quotient+1,f
  5270  0856  0AF7               	incf	___awdiv@quotient,f
  5271  0857  1903               	skipnz
  5272  0858  0AF8               	incf	___awdiv@quotient+1,f
  5273  0859                     i1l2423:	
  5274  0859  0878               	movf	___awdiv@quotient+1,w
  5275  085A  01F1               	clrf	?___awdiv+1
  5276  085B  07F1               	addwf	?___awdiv+1,f
  5277  085C  0877               	movf	___awdiv@quotient,w
  5278  085D  01F0               	clrf	?___awdiv
  5279  085E  07F0               	addwf	?___awdiv,f
  5280  085F  0008               	return
  5281  0860                     __end_of___awdiv:	
  5282                           
  5283                           	psect	text29
  5284  128A                     __ptext29:	
  5285 ;; *************** function _USART_ReceiveChar *****************
  5286 ;; Defined at:
  5287 ;;		line 63 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;		None
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  byte            1    4[COMMON] unsigned char 
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  1    wreg      unsigned char 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         0       0       0       0       0
  5302 ;;      Locals:         1       0       0       0       0
  5303 ;;      Temps:          1       0       0       0       0
  5304 ;;      Totals:         2       0       0       0       0
  5305 ;;Total ram usage:        2 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    2
  5308 ;; This function calls:
  5309 ;;		_USART_WriteString
  5310 ;; This function is called by:
  5311 ;;		_ISR
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           
  5316                           ;psect for function _USART_ReceiveChar
  5317  128A                     _USART_ReceiveChar:	
  5318                           
  5319                           ;usart.c: 65: unsigned char byte;
  5320                           ;usart.c: 67: if (!OERR)
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5324  128A  1283               	bcf	3,5	;RP0=0, select bank0
  5325  128B  1303               	bcf	3,6	;RP1=0, select bank0
  5326  128C  1898               	btfsc	24,1	;volatile
  5327  128D  2A93               	goto	i1l2255
  5328                           
  5329                           ;usart.c: 68: {
  5330                           ;usart.c: 69: byte = RCREG;
  5331  128E  081A               	movf	26,w	;volatile
  5332  128F  00F3               	movwf	??_USART_ReceiveChar
  5333  1290  0873               	movf	??_USART_ReceiveChar,w
  5334  1291  00F4               	movwf	USART_ReceiveChar@byte
  5335  1292  2A9F               	goto	i1l2263
  5336  1293                     i1l2255:	
  5337                           ;usart.c: 71: }
  5338                           
  5339                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5340                           
  5341                           
  5342                           ;usart.c: 72: else
  5343                           ;usart.c: 73: {
  5344                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5345  1293  3001               	movlw	(STR_1-__stringbase)& (0+255)
  5346  1294  160A  118A  22D5   	fcall	_USART_WriteString
  5347                           
  5348                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5349  1297  1283               	bcf	3,5	;RP0=0, select bank0
  5350  1298  1303               	bcf	3,6	;RP1=0, select bank0
  5351  1299  1218               	bcf	24,4	;volatile
  5352                           
  5353                           ;usart.c: 77: byte = RCREG;
  5354  129A  081A               	movf	26,w	;volatile
  5355  129B  00F3               	movwf	??_USART_ReceiveChar
  5356  129C  0873               	movf	??_USART_ReceiveChar,w
  5357  129D  00F4               	movwf	USART_ReceiveChar@byte
  5358                           
  5359                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5360  129E  1618               	bsf	24,4	;volatile
  5361  129F                     i1l2263:	
  5362                           
  5363                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5364  129F  128C               	bcf	12,5	;volatile
  5365                           
  5366                           ;usart.c: 80: }
  5367                           ;usart.c: 82: return(byte);
  5368  12A0  0874               	movf	USART_ReceiveChar@byte,w
  5369  12A1  0008               	return
  5370  12A2                     __end_of_USART_ReceiveChar:	
  5371                           
  5372                           	psect	text30
  5373  12D5                     __ptext30:	
  5374 ;; *************** function _USART_WriteString *****************
  5375 ;; Defined at:
  5376 ;;		line 52 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  str             1    wreg     PTR const unsigned char 
  5379 ;;		 -> STR_1(40), 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  str             1    2[COMMON] PTR const unsigned char 
  5382 ;;		 -> STR_1(40), 
  5383 ;; Return value:  Size  Location     Type
  5384 ;;		None               void
  5385 ;; Registers used:
  5386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5392 ;;      Params:         0       0       0       0       0
  5393 ;;      Locals:         1       0       0       0       0
  5394 ;;      Temps:          1       0       0       0       0
  5395 ;;      Totals:         2       0       0       0       0
  5396 ;;Total ram usage:        2 bytes
  5397 ;; Hardware stack levels used:    1
  5398 ;; Hardware stack levels required when called:    1
  5399 ;; This function calls:
  5400 ;;		_USART_WriteChar
  5401 ;; This function is called by:
  5402 ;;		_USART_ReceiveChar
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function _USART_WriteString
  5408  12D5                     _USART_WriteString:	
  5409                           
  5410                           ;incstack = 0
  5411                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5412                           ;USART_WriteString@str stored from wreg
  5413  12D5  00F2               	movwf	USART_WriteString@str
  5414  12D6                     i1l2019:	
  5415                           ;usart.c: 54: while(*str != '\0')
  5416                           
  5417  12D6  0872               	movf	USART_WriteString@str,w
  5418  12D7  0084               	movwf	4
  5419  12D8  160A  118A  2000  160A  118A  	fcall	stringdir
  5420  12DD  3800               	iorlw	0
  5421  12DE  1903               	btfsc	3,2
  5422  12DF  0008               	return
  5423                           
  5424                           ;usart.c: 55: {
  5425                           ;usart.c: 56: USART_WriteChar(*str);
  5426  12E0  0872               	movf	USART_WriteString@str,w
  5427  12E1  0084               	movwf	4
  5428  12E2  160A  118A  2000  160A  118A  	fcall	stringdir
  5429  12E7  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5430                           
  5431                           ;usart.c: 57: str++;
  5432  12EC  3001               	movlw	1
  5433  12ED  00F1               	movwf	??_USART_WriteString
  5434  12EE  0871               	movf	??_USART_WriteString,w
  5435  12EF  07F2               	addwf	USART_WriteString@str,f
  5436  12F0  2AD6               	goto	i1l2019
  5437  12F1                     __end_of_USART_WriteString:	
  5438                           
  5439                           	psect	text31
  5440  123E                     __ptext31:	
  5441 ;; *************** function _USART_WriteChar *****************
  5442 ;; Defined at:
  5443 ;;		line 44 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  byte            1    wreg     unsigned char 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  byte            1    0[COMMON] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;		None               void
  5450 ;; Registers used:
  5451 ;;		wreg
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         0       0       0       0       0
  5458 ;;      Locals:         1       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0
  5460 ;;      Totals:         1       0       0       0       0
  5461 ;;Total ram usage:        1 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_ISR
  5467 ;;		_USART_WriteString
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           
  5472                           ;psect for function _USART_WriteChar
  5473  123E                     _USART_WriteChar:	
  5474                           
  5475                           ;incstack = 0
  5476                           ; Regs used in _USART_WriteChar: [wreg]
  5477                           ;USART_WriteChar@byte stored from wreg
  5478  123E  00F0               	movwf	USART_WriteChar@byte
  5479  123F                     i1l162:	
  5480                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5481                           
  5482  123F  1283               	bcf	3,5	;RP0=0, select bank0
  5483  1240  1303               	bcf	3,6	;RP1=0, select bank0
  5484  1241  1E0C               	btfss	12,4	;volatile
  5485  1242  2A3F               	goto	i1l162
  5486                           
  5487                           ;usart.c: 47: TXREG = byte;
  5488  1243  0870               	movf	USART_WriteChar@byte,w
  5489  1244  0099               	movwf	25	;volatile
  5490  1245  0008               	return
  5491  1246                     __end_of_USART_WriteChar:	
  5492  007E                     btemp	set	126	;btemp
  5493  007E                     wtemp	set	126
  5494  007E                     wtemp0	set	126
  5495  0080                     wtemp1	set	128
  5496  0082                     wtemp2	set	130
  5497  0084                     wtemp3	set	132
  5498  0086                     wtemp4	set	134
  5499  0088                     wtemp5	set	136
  5500  007F                     wtemp6	set	127
  5501  007E                     ttemp	set	126
  5502  007E                     ttemp0	set	126
  5503  0081                     ttemp1	set	129
  5504  0084                     ttemp2	set	132
  5505  0087                     ttemp3	set	135
  5506  007F                     ttemp4	set	127
  5507  007E                     ltemp	set	126
  5508  007E                     ltemp0	set	126
  5509  0082                     ltemp1	set	130
  5510  0086                     ltemp2	set	134
  5511  0080                     ltemp3	set	128
  5512                           
  5513                           	psect	text8_split_1
  5514  1772                     L10:	
  5515  1772  3E30               	addlw	48
  5516  1773  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5517                           
  5518                           ;main.c: 138: rpmAux /= 10;
  5519  1778  300A               	movlw	10
  5520  1779  00F0               	movwf	___awdiv@divisor
  5521  177A  3000               	movlw	0
  5522  177B  00F1               	movwf	___awdiv@divisor+1
  5523  177C  1683               	bsf	3,5	;RP0=1, select bank1
  5524  177D  1303               	bcf	3,6	;RP1=0, select bank1
  5525  177E  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5526  177F  01F3               	clrf	___awdiv@dividend+1
  5527  1780  07F3               	addwf	___awdiv@dividend+1,f
  5528  1781  0840               	movf	ISR@rpmAux^(0+128),w
  5529  1782  01F2               	clrf	___awdiv@dividend
  5530  1783  07F2               	addwf	___awdiv@dividend,f
  5531  1784  120A  158A  2005  160A  118A  	fcall	___awdiv
  5532  1789  0871               	movf	?___awdiv+1,w
  5533  178A  1683               	bsf	3,5	;RP0=1, select bank1
  5534  178B  1303               	bcf	3,6	;RP1=0, select bank1
  5535  178C  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5536  178D  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5537  178E  0870               	movf	?___awdiv,w
  5538  178F  01C0               	clrf	ISR@rpmAux^(0+128)
  5539  1790  07C0               	addwf	ISR@rpmAux^(0+128),f
  5540                           
  5541                           ;main.c: 139: USART_WriteChar((rpmAux % 10) + 48);
  5542  1791  300A               	movlw	10
  5543  1792  00F0               	movwf	___awmod@divisor
  5544  1793  3000               	movlw	0
  5545  1794  00F1               	movwf	___awmod@divisor+1
  5546  1795  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5547  1796  01F3               	clrf	___awmod@dividend+1
  5548  1797  07F3               	addwf	___awmod@dividend+1,f
  5549  1798  0840               	movf	ISR@rpmAux^(0+128),w
  5550  1799  01F2               	clrf	___awmod@dividend
  5551  179A  07F2               	addwf	___awmod@dividend,f
  5552  179B  160A  118A  2441  160A  118A  	fcall	___awmod
  5553  17A0  0870               	movf	?___awmod,w
  5554  17A1  3E30               	addlw	48
  5555  17A2  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5556                           
  5557                           ;main.c: 140: rpmAux /= 10;
  5558  17A7  300A               	movlw	10
  5559  17A8  00F0               	movwf	___awdiv@divisor
  5560  17A9  3000               	movlw	0
  5561  17AA  00F1               	movwf	___awdiv@divisor+1
  5562  17AB  1683               	bsf	3,5	;RP0=1, select bank1
  5563  17AC  1303               	bcf	3,6	;RP1=0, select bank1
  5564  17AD  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5565  17AE  01F3               	clrf	___awdiv@dividend+1
  5566  17AF  07F3               	addwf	___awdiv@dividend+1,f
  5567  17B0  0840               	movf	ISR@rpmAux^(0+128),w
  5568  17B1  01F2               	clrf	___awdiv@dividend
  5569  17B2  07F2               	addwf	___awdiv@dividend,f
  5570  17B3  120A  158A  2005  160A  118A  	fcall	___awdiv
  5571  17B8  0871               	movf	?___awdiv+1,w
  5572  17B9  1683               	bsf	3,5	;RP0=1, select bank1
  5573  17BA  1303               	bcf	3,6	;RP1=0, select bank1
  5574  17BB  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5575  17BC  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5576  17BD  0870               	movf	?___awdiv,w
  5577  17BE  01C0               	clrf	ISR@rpmAux^(0+128)
  5578  17BF  07C0               	addwf	ISR@rpmAux^(0+128),f
  5579                           
  5580                           ;main.c: 141: USART_WriteChar((rpmAux % 10) + 48);
  5581  17C0  300A               	movlw	10
  5582  17C1  00F0               	movwf	___awmod@divisor
  5583  17C2  3000               	movlw	0
  5584  17C3  00F1               	movwf	___awmod@divisor+1
  5585  17C4  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5586  17C5  01F3               	clrf	___awmod@dividend+1
  5587  17C6  07F3               	addwf	___awmod@dividend+1,f
  5588  17C7  0840               	movf	ISR@rpmAux^(0+128),w
  5589  17C8  01F2               	clrf	___awmod@dividend
  5590  17C9  07F2               	addwf	___awmod@dividend,f
  5591  17CA  160A  118A  2441  160A  118A  	fcall	___awmod
  5592  17CF  0870               	movf	?___awmod,w
  5593  17D0  3E30               	addlw	48
  5594  17D1  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5595                           
  5596                           ;main.c: 142: rpmAux /= 10;
  5597  17D6  300A               	movlw	10
  5598  17D7  00F0               	movwf	___awdiv@divisor
  5599  17D8  3000               	movlw	0
  5600  17D9  00F1               	movwf	___awdiv@divisor+1
  5601  17DA  1683               	bsf	3,5	;RP0=1, select bank1
  5602  17DB  1303               	bcf	3,6	;RP1=0, select bank1
  5603  17DC  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5604  17DD  01F3               	clrf	___awdiv@dividend+1
  5605  17DE  07F3               	addwf	___awdiv@dividend+1,f
  5606  17DF  0840               	movf	ISR@rpmAux^(0+128),w
  5607  17E0  01F2               	clrf	___awdiv@dividend
  5608  17E1  07F2               	addwf	___awdiv@dividend,f
  5609  17E2  120A  158A  2005  160A  118A  	fcall	___awdiv
  5610  17E7  0871               	movf	?___awdiv+1,w
  5611  17E8  1683               	bsf	3,5	;RP0=1, select bank1
  5612  17E9  1303               	bcf	3,6	;RP1=0, select bank1
  5613  17EA  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5614  17EB  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5615  17EC  0870               	movf	?___awdiv,w
  5616  17ED  01C0               	clrf	ISR@rpmAux^(0+128)
  5617  17EE  07C0               	addwf	ISR@rpmAux^(0+128),f
  5618                           
  5619                           ;main.c: 143: USART_WriteChar((rpmAux % 10) + 48);
  5620  17EF  300A               	movlw	10
  5621  17F0  00F0               	movwf	___awmod@divisor
  5622  17F1  3000               	movlw	0
  5623  17F2  00F1               	movwf	___awmod@divisor+1
  5624  17F3  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5625  17F4  01F3               	clrf	___awmod@dividend+1
  5626  17F5  07F3               	addwf	___awmod@dividend+1,f
  5627  17F6  0840               	movf	ISR@rpmAux^(0+128),w
  5628  17F7  01F2               	clrf	___awmod@dividend
  5629  17F8  07F2               	addwf	___awmod@dividend,f
  5630  17F9  160A  118A  2441   	fcall	___awmod
  5631  17FC  0870               	movf	?___awmod,w
  5632  17FD  160A  118A  2EE4   	ljmp	L11
  5633                           
  5634                           	psect	text8_split_2
  5635  16E4                     L11:	
  5636  16E4  3E30               	addlw	48
  5637  16E5  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5638                           
  5639                           ;main.c: 144: rpmAux /= 10;
  5640  16EA  300A               	movlw	10
  5641  16EB  00F0               	movwf	___awdiv@divisor
  5642  16EC  3000               	movlw	0
  5643  16ED  00F1               	movwf	___awdiv@divisor+1
  5644  16EE  1683               	bsf	3,5	;RP0=1, select bank1
  5645  16EF  1303               	bcf	3,6	;RP1=0, select bank1
  5646  16F0  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5647  16F1  01F3               	clrf	___awdiv@dividend+1
  5648  16F2  07F3               	addwf	___awdiv@dividend+1,f
  5649  16F3  0840               	movf	ISR@rpmAux^(0+128),w
  5650  16F4  01F2               	clrf	___awdiv@dividend
  5651  16F5  07F2               	addwf	___awdiv@dividend,f
  5652  16F6  120A  158A  2005  160A  118A  	fcall	___awdiv
  5653  16FB  0871               	movf	?___awdiv+1,w
  5654  16FC  1683               	bsf	3,5	;RP0=1, select bank1
  5655  16FD  1303               	bcf	3,6	;RP1=0, select bank1
  5656  16FE  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5657  16FF  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5658  1700  0870               	movf	?___awdiv,w
  5659  1701  01C0               	clrf	ISR@rpmAux^(0+128)
  5660  1702  07C0               	addwf	ISR@rpmAux^(0+128),f
  5661                           
  5662                           ;main.c: 145: USART_WriteChar((rpmAux % 10) + 48);
  5663  1703  300A               	movlw	10
  5664  1704  00F0               	movwf	___awmod@divisor
  5665  1705  3000               	movlw	0
  5666  1706  00F1               	movwf	___awmod@divisor+1
  5667  1707  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5668  1708  01F3               	clrf	___awmod@dividend+1
  5669  1709  07F3               	addwf	___awmod@dividend+1,f
  5670  170A  0840               	movf	ISR@rpmAux^(0+128),w
  5671  170B  01F2               	clrf	___awmod@dividend
  5672  170C  07F2               	addwf	___awmod@dividend,f
  5673  170D  160A  118A  2441  160A  118A  	fcall	___awmod
  5674  1712  0870               	movf	?___awmod,w
  5675  1713  3E30               	addlw	48
  5676  1714  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5677                           
  5678                           ;main.c: 146: rpmAux /= 10;
  5679  1719  300A               	movlw	10
  5680  171A  00F0               	movwf	___awdiv@divisor
  5681  171B  3000               	movlw	0
  5682  171C  00F1               	movwf	___awdiv@divisor+1
  5683  171D  1683               	bsf	3,5	;RP0=1, select bank1
  5684  171E  1303               	bcf	3,6	;RP1=0, select bank1
  5685  171F  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5686  1720  01F3               	clrf	___awdiv@dividend+1
  5687  1721  07F3               	addwf	___awdiv@dividend+1,f
  5688  1722  0840               	movf	ISR@rpmAux^(0+128),w
  5689  1723  01F2               	clrf	___awdiv@dividend
  5690  1724  07F2               	addwf	___awdiv@dividend,f
  5691  1725  120A  158A  2005  160A  118A  	fcall	___awdiv
  5692  172A  0871               	movf	?___awdiv+1,w
  5693  172B  1683               	bsf	3,5	;RP0=1, select bank1
  5694  172C  1303               	bcf	3,6	;RP1=0, select bank1
  5695  172D  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5696  172E  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5697  172F  0870               	movf	?___awdiv,w
  5698  1730  01C0               	clrf	ISR@rpmAux^(0+128)
  5699  1731  07C0               	addwf	ISR@rpmAux^(0+128),f
  5700                           
  5701                           ;main.c: 147: USART_WriteChar((rpmAux % 10) + 48);
  5702  1732  300A               	movlw	10
  5703  1733  00F0               	movwf	___awmod@divisor
  5704  1734  3000               	movlw	0
  5705  1735  00F1               	movwf	___awmod@divisor+1
  5706  1736  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5707  1737  01F3               	clrf	___awmod@dividend+1
  5708  1738  07F3               	addwf	___awmod@dividend+1,f
  5709  1739  0840               	movf	ISR@rpmAux^(0+128),w
  5710  173A  01F2               	clrf	___awmod@dividend
  5711  173B  07F2               	addwf	___awmod@dividend,f
  5712  173C  160A  118A  2441  160A  118A  	fcall	___awmod
  5713  1741  0870               	movf	?___awmod,w
  5714  1742  3E30               	addlw	48
  5715  1743  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5716                           
  5717                           ;main.c: 148: rpmAux /= 10;
  5718  1748  300A               	movlw	10
  5719  1749  00F0               	movwf	___awdiv@divisor
  5720  174A  3000               	movlw	0
  5721  174B  00F1               	movwf	___awdiv@divisor+1
  5722  174C  1683               	bsf	3,5	;RP0=1, select bank1
  5723  174D  1303               	bcf	3,6	;RP1=0, select bank1
  5724  174E  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5725  174F  01F3               	clrf	___awdiv@dividend+1
  5726  1750  07F3               	addwf	___awdiv@dividend+1,f
  5727  1751  0840               	movf	ISR@rpmAux^(0+128),w
  5728  1752  01F2               	clrf	___awdiv@dividend
  5729  1753  07F2               	addwf	___awdiv@dividend,f
  5730  1754  120A  158A  2005  160A  118A  	fcall	___awdiv
  5731  1759  0871               	movf	?___awdiv+1,w
  5732  175A  1683               	bsf	3,5	;RP0=1, select bank1
  5733  175B  1303               	bcf	3,6	;RP1=0, select bank1
  5734  175C  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5735  175D  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5736  175E  0870               	movf	?___awdiv,w
  5737  175F  01C0               	clrf	ISR@rpmAux^(0+128)
  5738  1760  07C0               	addwf	ISR@rpmAux^(0+128),f
  5739                           
  5740                           ;main.c: 149: USART_WriteChar((rpmAux % 10) + 48);
  5741  1761  300A               	movlw	10
  5742  1762  00F0               	movwf	___awmod@divisor
  5743  1763  3000               	movlw	0
  5744  1764  00F1               	movwf	___awmod@divisor+1
  5745  1765  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5746  1766  01F3               	clrf	___awmod@dividend+1
  5747  1767  07F3               	addwf	___awmod@dividend+1,f
  5748  1768  0840               	movf	ISR@rpmAux^(0+128),w
  5749  1769  01F2               	clrf	___awmod@dividend
  5750  176A  07F2               	addwf	___awmod@dividend,f
  5751  176B  160A  118A  2441   	fcall	___awmod
  5752  176E  0870               	movf	?___awmod,w
  5753  176F  120A  158A  2ABB   	ljmp	L12
  5754                           
  5755                           	psect	text8_split_3
  5756  0ABB                     L12:	
  5757  0ABB  3E30               	addlw	48
  5758  0ABC  160A  118A  223E  120A  158A  	fcall	_USART_WriteChar
  5759                           
  5760                           ;main.c: 150: USART_WriteChar('\n');
  5761  0AC1  300A               	movlw	10
  5762  0AC2  160A  118A  223E  120A  158A  	fcall	_USART_WriteChar
  5763                           
  5764                           ;main.c: 152: erro_anterior = erro_atual;
  5765  0AC7  1683               	bsf	3,5	;RP0=1, select bank1
  5766  0AC8  1303               	bcf	3,6	;RP1=0, select bank1
  5767  0AC9  0851               	movf	(_erro_atual+1)^(0+128),w
  5768  0ACA  01CF               	clrf	(_erro_anterior+1)^(0+128)
  5769  0ACB  07CF               	addwf	(_erro_anterior+1)^(0+128),f
  5770  0ACC  0850               	movf	_erro_atual^(0+128),w
  5771  0ACD  01CE               	clrf	_erro_anterior^(0+128)
  5772  0ACE  07CE               	addwf	_erro_anterior^(0+128),f
  5773                           
  5774                           ;main.c: 153: erro_atual = minimo(abs(setpoint - rpm), 2000);
  5775  0ACF  3000               	movlw	0
  5776  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  5777  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  5778  0AD2  00A9               	movwf	minimo@b
  5779  0AD3  30FA               	movlw	250
  5780  0AD4  00AA               	movwf	minimo@b+1
  5781  0AD5  3044               	movlw	68
  5782  0AD6  00AB               	movwf	minimo@b+2
  5783  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  5784  0AD8  1303               	bcf	3,6	;RP1=0, select bank1
  5785  0AD9  0956               	comf	_rpm^(0+128),w
  5786  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5787  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5788  0ADC  00E2               	movwf	??_ISR
  5789  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  5790  0ADE  1303               	bcf	3,6	;RP1=0, select bank1
  5791  0ADF  0957               	comf	(_rpm+1)^(0+128),w
  5792  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  5793  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  5794  0AE2  00E3               	movwf	??_ISR+1
  5795  0AE3  0AE2               	incf	??_ISR,f
  5796  0AE4  1903               	skipnz
  5797  0AE5  0AE3               	incf	??_ISR+1,f
  5798  0AE6  1683               	bsf	3,5	;RP0=1, select bank1
  5799  0AE7  1303               	bcf	3,6	;RP1=0, select bank1
  5800  0AE8  0858               	movf	_setpoint^(0+128),w
  5801  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  5802  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  5803  0AEB  0762               	addwf	??_ISR,w
  5804  0AEC  00F0               	movwf	abs@a
  5805  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  5806  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  5807  0AEF  0859               	movf	(_setpoint+1)^(0+128),w
  5808  0AF0  1803               	skipnc
  5809  0AF1  0A59               	incf	(_setpoint+1)^(0+128),w
  5810  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  5811  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  5812  0AF4  0763               	addwf	??_ISR+1,w
  5813  0AF5  00F1               	movwf	abs@a+1
  5814  0AF6  160A  118A  226B  120A  158A  	fcall	_abs
  5815  0AFB  0871               	movf	?_abs+1,w
  5816  0AFC  01F9               	clrf	___awtoft@c+1
  5817  0AFD  07F9               	addwf	___awtoft@c+1,f
  5818  0AFE  0870               	movf	?_abs,w
  5819  0AFF  01F8               	clrf	___awtoft@c
  5820  0B00  07F8               	addwf	___awtoft@c,f
  5821  0B01  160A  118A  232D  120A  158A  	fcall	___awtoft
  5822  0B06  0878               	movf	?___awtoft,w
  5823  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5824  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5825  0B09  00A6               	movwf	minimo@a
  5826  0B0A  0879               	movf	?___awtoft+1,w
  5827  0B0B  00A7               	movwf	minimo@a+1
  5828  0B0C  087A               	movf	?___awtoft+2,w
  5829  0B0D  00A8               	movwf	minimo@a+2
  5830  0B0E  160A  118A  230F  120A  158A  	fcall	_minimo
  5831  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5832  0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5833  0B15  0826               	movf	?_minimo,w
  5834  0B16  00B2               	movwf	___fttol@f1
  5835  0B17  0827               	movf	?_minimo+1,w
  5836  0B18  00B3               	movwf	___fttol@f1+1
  5837  0B19  0828               	movf	?_minimo+2,w
  5838  0B1A  00B4               	movwf	___fttol@f1+2
  5839  0B1B  120A  158A  2060  120A  158A  	fcall	___fttol
  5840  0B20  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0B21  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0B22  0833               	movf	?___fttol+1,w
  5843  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  5844  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  5845  0B25  01D1               	clrf	(_erro_atual+1)^(0+128)
  5846  0B26  07D1               	addwf	(_erro_atual+1)^(0+128),f
  5847  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0B29  0832               	movf	?___fttol,w
  5850  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  5851  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  5852  0B2C  01D0               	clrf	_erro_atual^(0+128)
  5853  0B2D  07D0               	addwf	_erro_atual^(0+128),f
  5854                           
  5855                           ;main.c: 154: int delta = maximo(minimo(abs(erro_atual - erro_anterior), 1000), 1);
  5856  0B2E  3000               	movlw	0
  5857  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  5858  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  5859  0B31  00AF               	movwf	maximo@b
  5860  0B32  3080               	movlw	128
  5861  0B33  00B0               	movwf	maximo@b+1
  5862  0B34  303F               	movlw	63
  5863  0B35  00B1               	movwf	maximo@b+2
  5864  0B36  3000               	movlw	0
  5865  0B37  00A9               	movwf	minimo@b
  5866  0B38  307A               	movlw	122
  5867  0B39  00AA               	movwf	minimo@b+1
  5868  0B3A  3044               	movlw	68
  5869  0B3B  00AB               	movwf	minimo@b+2
  5870  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  5871  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  5872  0B3E  094E               	comf	_erro_anterior^(0+128),w
  5873  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0B41  00E2               	movwf	??_ISR
  5876  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  5877  0B43  1303               	bcf	3,6	;RP1=0, select bank1
  5878  0B44  094F               	comf	(_erro_anterior+1)^(0+128),w
  5879  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5880  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5881  0B47  00E3               	movwf	??_ISR+1
  5882  0B48  0AE2               	incf	??_ISR,f
  5883  0B49  1903               	skipnz
  5884  0B4A  0AE3               	incf	??_ISR+1,f
  5885  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  5886  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  5887  0B4D  0850               	movf	_erro_atual^(0+128),w
  5888  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  5889  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  5890  0B50  0762               	addwf	??_ISR,w
  5891  0B51  00F0               	movwf	abs@a
  5892  0B52  1683               	bsf	3,5	;RP0=1, select bank1
  5893  0B53  1303               	bcf	3,6	;RP1=0, select bank1
  5894  0B54  0851               	movf	(_erro_atual+1)^(0+128),w
  5895  0B55  1803               	skipnc
  5896  0B56  0A51               	incf	(_erro_atual+1)^(0+128),w
  5897  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  5898  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  5899  0B59  0763               	addwf	??_ISR+1,w
  5900  0B5A  00F1               	movwf	abs@a+1
  5901  0B5B  160A  118A  226B   	fcall	_abs
  5902  0B5E  0871               	movf	?_abs+1,w
  5903  0B5F  160A  118A  2E58   	ljmp	L13
  5904                           
  5905                           	psect	text8_split_4
  5906  1658                     L13:	
  5907  1658  01F9               	clrf	___awtoft@c+1
  5908  1659  07F9               	addwf	___awtoft@c+1,f
  5909  165A  0870               	movf	?_abs,w
  5910  165B  01F8               	clrf	___awtoft@c
  5911  165C  07F8               	addwf	___awtoft@c,f
  5912  165D  160A  118A  232D  160A  118A  	fcall	___awtoft
  5913  1662  0878               	movf	?___awtoft,w
  5914  1663  1283               	bcf	3,5	;RP0=0, select bank0
  5915  1664  1303               	bcf	3,6	;RP1=0, select bank0
  5916  1665  00A6               	movwf	minimo@a
  5917  1666  0879               	movf	?___awtoft+1,w
  5918  1667  00A7               	movwf	minimo@a+1
  5919  1668  087A               	movf	?___awtoft+2,w
  5920  1669  00A8               	movwf	minimo@a+2
  5921  166A  160A  118A  230F  160A  118A  	fcall	_minimo
  5922  166F  1283               	bcf	3,5	;RP0=0, select bank0
  5923  1670  1303               	bcf	3,6	;RP1=0, select bank0
  5924  1671  0826               	movf	?_minimo,w
  5925  1672  00AC               	movwf	maximo@a
  5926  1673  0827               	movf	?_minimo+1,w
  5927  1674  00AD               	movwf	maximo@a+1
  5928  1675  0828               	movf	?_minimo+2,w
  5929  1676  00AE               	movwf	maximo@a+2
  5930  1677  160A  118A  22F1  160A  118A  	fcall	_maximo
  5931  167C  1283               	bcf	3,5	;RP0=0, select bank0
  5932  167D  1303               	bcf	3,6	;RP1=0, select bank0
  5933  167E  082C               	movf	?_maximo,w
  5934  167F  00B2               	movwf	___fttol@f1
  5935  1680  082D               	movf	?_maximo+1,w
  5936  1681  00B3               	movwf	___fttol@f1+1
  5937  1682  082E               	movf	?_maximo+2,w
  5938  1683  00B4               	movwf	___fttol@f1+2
  5939  1684  120A  158A  2060  160A  118A  	fcall	___fttol
  5940  1689  1283               	bcf	3,5	;RP0=0, select bank0
  5941  168A  1303               	bcf	3,6	;RP1=0, select bank0
  5942  168B  0833               	movf	?___fttol+1,w
  5943  168C  1683               	bsf	3,5	;RP0=1, select bank1
  5944  168D  1303               	bcf	3,6	;RP1=0, select bank1
  5945  168E  01AC               	clrf	(ISR@delta+1)^(0+128)
  5946  168F  07AC               	addwf	(ISR@delta+1)^(0+128),f
  5947  1690  1283               	bcf	3,5	;RP0=0, select bank0
  5948  1691  1303               	bcf	3,6	;RP1=0, select bank0
  5949  1692  0832               	movf	?___fttol,w
  5950  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5951  1694  1303               	bcf	3,6	;RP1=0, select bank1
  5952  1695  01AB               	clrf	ISR@delta^(0+128)
  5953  1696  07AB               	addwf	ISR@delta^(0+128),f
  5954                           
  5955                           ;main.c: 155: float x = 0;
  5956  1697  3000               	movlw	0
  5957  1698  00C2               	movwf	ISR@x^(0+128)
  5958  1699  3000               	movlw	0
  5959  169A  00C3               	movwf	(ISR@x+1)^(0+128)
  5960  169B  3000               	movlw	0
  5961  169C  00C4               	movwf	(ISR@x+2)^(0+128)
  5962                           
  5963                           ;main.c: 156: float rule = 0;
  5964  169D  3000               	movlw	0
  5965  169E  00BB               	movwf	ISR@rule^(0+128)
  5966  169F  3000               	movlw	0
  5967  16A0  00BC               	movwf	(ISR@rule+1)^(0+128)
  5968  16A1  3000               	movlw	0
  5969  16A2  00BD               	movwf	(ISR@rule+2)^(0+128)
  5970                           
  5971                           ;main.c: 159: if (erro_atual <= 100) {
  5972  16A3  0851               	movf	(_erro_atual+1)^(0+128),w
  5973  16A4  3A80               	xorlw	128
  5974  16A5  00FF               	movwf	127
  5975  16A6  3080               	movlw	128
  5976  16A7  027F               	subwf	127,w
  5977  16A8  1D03               	skipz
  5978  16A9  2EAC               	goto	u466_25
  5979  16AA  3065               	movlw	101
  5980  16AB  0250               	subwf	_erro_atual^(0+128),w
  5981  16AC                     u466_25:	
  5982  16AC  120A  158A  1803   	skipnc
  5983  16AF  2BC0               	goto	i1l3523
  5984                           
  5985                           ;main.c: 162: rule = trapmf(erro_atual, -1, 0, 1, 100);
  5986  16B0  1683               	bsf	3,5	;RP0=1, select bank1
  5987  16B1  1303               	bcf	3,6	;RP1=0, select bank1
  5988  16B2  0851               	movf	(_erro_atual+1)^(0+128),w
  5989  16B3  01F9               	clrf	___awtoft@c+1
  5990  16B4  07F9               	addwf	___awtoft@c+1,f
  5991  16B5  0850               	movf	_erro_atual^(0+128),w
  5992  16B6  01F8               	clrf	___awtoft@c
  5993  16B7  07F8               	addwf	___awtoft@c,f
  5994  16B8  160A  118A  232D  160A  118A  	fcall	___awtoft
  5995  16BD  0878               	movf	?___awtoft,w
  5996  16BE  1283               	bcf	3,5	;RP0=0, select bank0
  5997  16BF  1303               	bcf	3,6	;RP1=0, select bank0
  5998  16C0  00C0               	movwf	trapmf@x
  5999  16C1  0879               	movf	?___awtoft+1,w
  6000  16C2  00C1               	movwf	trapmf@x+1
  6001  16C3  087A               	movf	?___awtoft+2,w
  6002  16C4  00C2               	movwf	trapmf@x+2
  6003  16C5  3000               	movlw	0
  6004  16C6  00C3               	movwf	trapmf@a
  6005  16C7  3080               	movlw	128
  6006  16C8  00C4               	movwf	trapmf@a+1
  6007  16C9  30BF               	movlw	191
  6008  16CA  00C5               	movwf	trapmf@a+2
  6009  16CB  3000               	movlw	0
  6010  16CC  00C6               	movwf	trapmf@b
  6011  16CD  3000               	movlw	0
  6012  16CE  00C7               	movwf	trapmf@b+1
  6013  16CF  3000               	movlw	0
  6014  16D0  00C8               	movwf	trapmf@b+2
  6015  16D1  3000               	movlw	0
  6016  16D2  00C9               	movwf	trapmf@c
  6017  16D3  3080               	movlw	128
  6018  16D4  00CA               	movwf	trapmf@c+1
  6019  16D5  303F               	movlw	63
  6020  16D6  00CB               	movwf	trapmf@c+2
  6021  16D7  3000               	movlw	0
  6022  16D8  00CC               	movwf	trapmf@d
  6023  16D9  30C8               	movlw	200
  6024  16DA  00CD               	movwf	trapmf@d+1
  6025  16DB  3042               	movlw	66
  6026  16DC  00CE               	movwf	trapmf@d+2
  6027  16DD  120A  158A  26AA   	fcall	_trapmf
  6028  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  6029  16E1  120A  158A  297D   	ljmp	L14
  6030                           
  6031                           	psect	text8_split_5
  6032  097D                     L14:	
  6033  097D  1303               	bcf	3,6	;RP1=0, select bank0
  6034  097E  0840               	movf	?_trapmf,w
  6035  097F  1683               	bsf	3,5	;RP0=1, select bank1
  6036  0980  1303               	bcf	3,6	;RP1=0, select bank1
  6037  0981  00BB               	movwf	ISR@rule^(0+128)
  6038  0982  1283               	bcf	3,5	;RP0=0, select bank0
  6039  0983  1303               	bcf	3,6	;RP1=0, select bank0
  6040  0984  0841               	movf	?_trapmf+1,w
  6041  0985  1683               	bsf	3,5	;RP0=1, select bank1
  6042  0986  1303               	bcf	3,6	;RP1=0, select bank1
  6043  0987  00BC               	movwf	(ISR@rule+1)^(0+128)
  6044  0988  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0989  1303               	bcf	3,6	;RP1=0, select bank0
  6046  098A  0842               	movf	?_trapmf+2,w
  6047  098B  1683               	bsf	3,5	;RP0=1, select bank1
  6048  098C  1303               	bcf	3,6	;RP1=0, select bank1
  6049  098D  00BD               	movwf	(ISR@rule+2)^(0+128)
  6050                           
  6051                           ;main.c: 164: x = 0;
  6052  098E  3000               	movlw	0
  6053  098F  00C2               	movwf	ISR@x^(0+128)
  6054  0990  3000               	movlw	0
  6055  0991  00C3               	movwf	(ISR@x+1)^(0+128)
  6056  0992  3000               	movlw	0
  6057  0993  00C4               	movwf	(ISR@x+2)^(0+128)
  6058                           
  6059                           ;main.c: 165: for (int a = 0; a <= 15; a++) {
  6060  0994  01B0               	clrf	ISR@a^(0+128)
  6061  0995  01B1               	clrf	(ISR@a+1)^(0+128)
  6062  0996  0831               	movf	(ISR@a+1)^(0+128),w
  6063  0997  3A80               	xorlw	128
  6064  0998  00FF               	movwf	127
  6065  0999  3080               	movlw	128
  6066  099A  027F               	subwf	127,w
  6067  099B  1D03               	skipz
  6068  099C  299F               	goto	u467_25
  6069  099D  3010               	movlw	16
  6070  099E  0230               	subwf	ISR@a^(0+128),w
  6071  099F                     u467_25:	
  6072  099F  120A  158A  1803   	btfsc	3,0
  6073  09A2  2BC0               	goto	i1l3523
  6074  09A3                     i1l3513:	
  6075                           
  6076                           ;main.c: 166: rBaixo[a] = trapmf(x, -1, 0, 0, 5);
  6077  09A3  3003               	movlw	3
  6078  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  6079  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  6080  09A6  00E2               	movwf	??_ISR
  6081  09A7  0862               	movf	??_ISR,w
  6082  09A8  00F0               	movwf	___bmul@multiplicand
  6083  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  6084  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  6085  09AB  0830               	movf	ISR@a^(0+128),w
  6086  09AC  160A  118A  2279  120A  158A  	fcall	___bmul
  6087  09B1  3E90               	addlw	_rBaixo& (0+255)
  6088  09B2  0084               	movwf	4
  6089  09B3  1683               	bsf	3,5	;RP0=1, select bank1
  6090  09B4  1303               	bcf	3,6	;RP1=0, select bank1
  6091  09B5  0842               	movf	ISR@x^(0+128),w
  6092  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  6093  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  6094  09B8  00C0               	movwf	trapmf@x
  6095  09B9  1683               	bsf	3,5	;RP0=1, select bank1
  6096  09BA  1303               	bcf	3,6	;RP1=0, select bank1
  6097  09BB  0843               	movf	(ISR@x+1)^(0+128),w
  6098  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  6099  09BD  1303               	bcf	3,6	;RP1=0, select bank0
  6100  09BE  00C1               	movwf	trapmf@x+1
  6101  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  6102  09C0  1303               	bcf	3,6	;RP1=0, select bank1
  6103  09C1  0844               	movf	(ISR@x+2)^(0+128),w
  6104  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6105  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6106  09C4  00C2               	movwf	trapmf@x+2
  6107  09C5  3000               	movlw	0
  6108  09C6  00C3               	movwf	trapmf@a
  6109  09C7  3080               	movlw	128
  6110  09C8  00C4               	movwf	trapmf@a+1
  6111  09C9  30BF               	movlw	191
  6112  09CA  00C5               	movwf	trapmf@a+2
  6113  09CB  3000               	movlw	0
  6114  09CC  00C6               	movwf	trapmf@b
  6115  09CD  3000               	movlw	0
  6116  09CE  00C7               	movwf	trapmf@b+1
  6117  09CF  3000               	movlw	0
  6118  09D0  00C8               	movwf	trapmf@b+2
  6119  09D1  3000               	movlw	0
  6120  09D2  00C9               	movwf	trapmf@c
  6121  09D3  3000               	movlw	0
  6122  09D4  00CA               	movwf	trapmf@c+1
  6123  09D5  3000               	movlw	0
  6124  09D6  00CB               	movwf	trapmf@c+2
  6125  09D7  3000               	movlw	0
  6126  09D8  00CC               	movwf	trapmf@d
  6127  09D9  30A0               	movlw	160
  6128  09DA  00CD               	movwf	trapmf@d+1
  6129  09DB  3040               	movlw	64
  6130  09DC  00CE               	movwf	trapmf@d+2
  6131  09DD  120A  158A  26AA  120A  158A  	fcall	_trapmf
  6132  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  6133  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  6134  09E4  0840               	movf	?_trapmf,w
  6135  09E5  1783               	bsf	3,7	;select IRP bank3
  6136  09E6  0080               	movwf	0
  6137  09E7  0A84               	incf	4,f
  6138  09E8  0841               	movf	?_trapmf+1,w
  6139  09E9  0080               	movwf	0
  6140  09EA  0A84               	incf	4,f
  6141  09EB  0842               	movf	?_trapmf+2,w
  6142  09EC  0080               	movwf	0
  6143                           
  6144                           ;main.c: 167: if (rBaixo[a] >= rule) {
  6145  09ED  3003               	movlw	3
  6146  09EE  00E2               	movwf	??_ISR
  6147  09EF  0862               	movf	??_ISR,w
  6148  09F0  00F0               	movwf	___bmul@multiplicand
  6149  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  6150  09F2  1303               	bcf	3,6	;RP1=0, select bank1
  6151  09F3  0830               	movf	ISR@a^(0+128),w
  6152  09F4  160A  118A  2279  120A  158A  	fcall	___bmul
  6153  09F9  3E90               	addlw	_rBaixo& (0+255)
  6154  09FA  0084               	movwf	4
  6155  09FB  1783               	bsf	3,7	;select IRP bank3
  6156  09FC  0800               	movf	0,w
  6157  09FD  00F4               	movwf	___ftge@ff1
  6158  09FE  0A84               	incf	4,f
  6159  09FF  0800               	movf	0,w
  6160  0A00  00F5               	movwf	___ftge@ff1+1
  6161  0A01  0A84               	incf	4,f
  6162  0A02  0800               	movf	0,w
  6163  0A03  00F6               	movwf	___ftge@ff1+2
  6164  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  6165  0A05  1303               	bcf	3,6	;RP1=0, select bank1
  6166  0A06  083B               	movf	ISR@rule^(0+128),w
  6167  0A07  00F7               	movwf	___ftge@ff2
  6168  0A08  083C               	movf	(ISR@rule+1)^(0+128),w
  6169  0A09  00F8               	movwf	___ftge@ff2+1
  6170  0A0A  083D               	movf	(ISR@rule+2)^(0+128),w
  6171  0A0B  00F9               	movwf	___ftge@ff2+2
  6172  0A0C  160A  118A  248E  120A  158A  	fcall	___ftge
  6173  0A11  1C03               	btfss	3,0
  6174  0A12  2A13               	ljmp	L17
  6175  0A13                     L17:	
  6176  0A13  120A  158A  2B62   	ljmp	L15
  6177                           
  6178                           	psect	text8_split_6
  6179  0B62                     L15:	
  6180  0B62  2B7E               	goto	i1l3517
  6181                           
  6182                           ;main.c: 168: rBaixo[a] = rule;
  6183  0B63  3003               	movlw	3
  6184  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  6185  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  6186  0B66  00E2               	movwf	??_ISR
  6187  0B67  0862               	movf	??_ISR,w
  6188  0B68  00F0               	movwf	___bmul@multiplicand
  6189  0B69  1683               	bsf	3,5	;RP0=1, select bank1
  6190  0B6A  1303               	bcf	3,6	;RP1=0, select bank1
  6191  0B6B  0830               	movf	ISR@a^(0+128),w
  6192  0B6C  160A  118A  2279  120A  158A  	fcall	___bmul
  6193  0B71  3E90               	addlw	_rBaixo& (0+255)
  6194  0B72  0084               	movwf	4
  6195  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  6196  0B74  1303               	bcf	3,6	;RP1=0, select bank1
  6197  0B75  083B               	movf	ISR@rule^(0+128),w
  6198  0B76  1783               	bsf	3,7	;select IRP bank3
  6199  0B77  0080               	movwf	0
  6200  0B78  0A84               	incf	4,f
  6201  0B79  083C               	movf	(ISR@rule+1)^(0+128),w
  6202  0B7A  0080               	movwf	0
  6203  0B7B  0A84               	incf	4,f
  6204  0B7C  083D               	movf	(ISR@rule+2)^(0+128),w
  6205  0B7D  0080               	movwf	0
  6206  0B7E                     i1l3517:	
  6207                           
  6208                           ;main.c: 169: }
  6209                           ;main.c: 171: x += 1;
  6210  0B7E  3000               	movlw	0
  6211  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0B81  00A3               	movwf	___ftadd@f1
  6214  0B82  3080               	movlw	128
  6215  0B83  00A4               	movwf	___ftadd@f1+1
  6216  0B84  303F               	movlw	63
  6217  0B85  00A5               	movwf	___ftadd@f1+2
  6218  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  6219  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  6220  0B88  0842               	movf	ISR@x^(0+128),w
  6221  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  6222  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  6223  0B8B  00A6               	movwf	___ftadd@f2
  6224  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  6225  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  6226  0B8E  0843               	movf	(ISR@x+1)^(0+128),w
  6227  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0B91  00A7               	movwf	___ftadd@f2+1
  6230  0B92  1683               	bsf	3,5	;RP0=1, select bank1
  6231  0B93  1303               	bcf	3,6	;RP1=0, select bank1
  6232  0B94  0844               	movf	(ISR@x+2)^(0+128),w
  6233  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  6235  0B97  00A8               	movwf	___ftadd@f2+2
  6236  0B98  120A  158A  25A1  120A  158A  	fcall	___ftadd
  6237  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  6238  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  6239  0B9F  0823               	movf	?___ftadd,w
  6240  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  6241  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  6242  0BA2  00C2               	movwf	ISR@x^(0+128)
  6243  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  6244  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  6245  0BA5  0824               	movf	?___ftadd+1,w
  6246  0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  6247  0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  6248  0BA8  00C3               	movwf	(ISR@x+1)^(0+128)
  6249  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  6250  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  6251  0BAB  0825               	movf	?___ftadd+2,w
  6252  0BAC  1683               	bsf	3,5	;RP0=1, select bank1
  6253  0BAD  1303               	bcf	3,6	;RP1=0, select bank1
  6254  0BAE  00C4               	movwf	(ISR@x+2)^(0+128)
  6255  0BAF  3001               	movlw	1
  6256  0BB0  07B0               	addwf	ISR@a^(0+128),f
  6257  0BB1  1803               	skipnc
  6258  0BB2  0AB1               	incf	(ISR@a+1)^(0+128),f
  6259  0BB3  3000               	movlw	0
  6260  0BB4  07B1               	addwf	(ISR@a+1)^(0+128),f
  6261  0BB5  0831               	movf	(ISR@a+1)^(0+128),w
  6262  0BB6  3A80               	xorlw	128
  6263  0BB7  00FF               	movwf	127
  6264  0BB8  3080               	movlw	128
  6265  0BB9  027F               	subwf	127,w
  6266  0BBA  1D03               	skipz
  6267  0BBB  2BBE               	goto	u469_25
  6268  0BBC  3010               	movlw	16
  6269  0BBD  0230               	subwf	ISR@a^(0+128),w
  6270  0BBE                     u469_25:	
  6271  0BBE  1C03               	skipc
  6272  0BBF  2C10               	goto	L21
  6273  0BC0                     i1l3523:	
  6274                           
  6275                           ;main.c: 172: }
  6276                           ;main.c: 173: }
  6277                           ;main.c: 177: if (erro_atual >= 100 && erro_atual <= 1001 && delta <= 200) {
  6278  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  6280  0BC2  0851               	movf	(_erro_atual+1)^(0+128),w
  6281  0BC3  3A80               	xorlw	128
  6282  0BC4  00FF               	movwf	127
  6283  0BC5  3080               	movlw	128
  6284  0BC6  027F               	subwf	127,w
  6285  0BC7  1D03               	skipz
  6286  0BC8  2BCB               	goto	u470_25
  6287  0BC9  3064               	movlw	100
  6288  0BCA  0250               	subwf	_erro_atual^(0+128),w
  6289  0BCB                     u470_25:	
  6290  0BCB  1C03               	skipc
  6291  0BCC  2C13               	goto	L23
  6292  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  6293  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  6294  0BCF  0851               	movf	(_erro_atual+1)^(0+128),w
  6295  0BD0  3A80               	xorlw	128
  6296  0BD1  00FF               	movwf	127
  6297  0BD2  3083               	movlw	131
  6298  0BD3  027F               	subwf	127,w
  6299  0BD4  1D03               	skipz
  6300  0BD5  2BD8               	goto	u471_25
  6301  0BD6  30EA               	movlw	234
  6302  0BD7  0250               	subwf	_erro_atual^(0+128),w
  6303  0BD8                     u471_25:	
  6304  0BD8  1803               	skipnc
  6305  0BD9  2C13               	goto	L23
  6306  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  6307  0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  6308  0BDC  082C               	movf	(ISR@delta+1)^(0+128),w
  6309  0BDD  3A80               	xorlw	128
  6310  0BDE  00FF               	movwf	127
  6311  0BDF  3080               	movlw	128
  6312  0BE0  027F               	subwf	127,w
  6313  0BE1  1D03               	skipz
  6314  0BE2  2BE5               	goto	u472_25
  6315  0BE3  30C9               	movlw	201
  6316  0BE4  022B               	subwf	ISR@delta^(0+128),w
  6317  0BE5                     u472_25:	
  6318  0BE5  1803               	skipnc
  6319  0BE6  2C13               	goto	L23
  6320                           
  6321                           ;main.c: 179: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  6322                           ;main.c: 180: (1 - trapmf(delta, -1, 0, 1, 200));
  6323  0BE7  3000               	movlw	0
  6324  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  6325  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  6326  0BEA  00CC               	movwf	trapmf@d
  6327  0BEB  3048               	movlw	72
  6328  0BEC  00CD               	movwf	trapmf@d+1
  6329  0BED  3043               	movlw	67
  6330  0BEE  00CE               	movwf	trapmf@d+2
  6331  0BEF  3000               	movlw	0
  6332  0BF0  00C9               	movwf	trapmf@c
  6333  0BF1  3080               	movlw	128
  6334  0BF2  00CA               	movwf	trapmf@c+1
  6335  0BF3  303F               	movlw	63
  6336  0BF4  00CB               	movwf	trapmf@c+2
  6337  0BF5  3000               	movlw	0
  6338  0BF6  00C6               	movwf	trapmf@b
  6339  0BF7  3000               	movlw	0
  6340  0BF8  00C7               	movwf	trapmf@b+1
  6341  0BF9  3000               	movlw	0
  6342  0BFA  00C8               	movwf	trapmf@b+2
  6343  0BFB  3000               	movlw	0
  6344  0BFC  00C3               	movwf	trapmf@a
  6345  0BFD  3080               	movlw	128
  6346  0BFE  00C4               	movwf	trapmf@a+1
  6347  0BFF  30BF               	movlw	191
  6348  0C00  00C5               	movwf	trapmf@a+2
  6349  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  6350  0C02  1303               	bcf	3,6	;RP1=0, select bank1
  6351  0C03  082C               	movf	(ISR@delta+1)^(0+128),w
  6352  0C04  01F9               	clrf	___awtoft@c+1
  6353  0C05  07F9               	addwf	___awtoft@c+1,f
  6354  0C06  082B               	movf	ISR@delta^(0+128),w
  6355  0C07  01F8               	clrf	___awtoft@c
  6356  0C08  07F8               	addwf	___awtoft@c,f
  6357  0C09  160A  118A  232D   	fcall	___awtoft
  6358  0C0C  0878               	movf	?___awtoft,w
  6359  0C0D  160A  118A  2DD2   	ljmp	L19
  6360  0C10                     L21:	
  6361  0C10  120A  118A  2FDB   	ljmp	L18
  6362  0C13                     L23:	
  6363  0C13  120A  118A  2943   	ljmp	i1l3549
  6364                           
  6365                           	psect	text8_split_7
  6366  15D2                     L19:	
  6367  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  6368  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  6369  15D4  00C0               	movwf	trapmf@x
  6370  15D5  0879               	movf	?___awtoft+1,w
  6371  15D6  00C1               	movwf	trapmf@x+1
  6372  15D7  087A               	movf	?___awtoft+2,w
  6373  15D8  00C2               	movwf	trapmf@x+2
  6374  15D9  120A  158A  26AA  160A  118A  	fcall	_trapmf
  6375  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  6376  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  6377  15E0  0840               	movf	?_trapmf,w
  6378  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  6379  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  6380  15E3  00A0               	movwf	_ISR$1636^(0+128)
  6381  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  6382  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  6383  15E6  0841               	movf	?_trapmf+1,w
  6384  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  6385  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  6386  15E9  00A1               	movwf	(_ISR$1636+1)^(0+128)
  6387  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  6388  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  6389  15EC  0842               	movf	?_trapmf+2,w
  6390  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  6391  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  6392  15EF  00A2               	movwf	(_ISR$1636+2)^(0+128)
  6393                           
  6394                           ;main.c: 179: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  6395                           ;main.c: 180: (1 - trapmf(delta, -1, 0, 1, 200));
  6396  15F0  30C0               	movlw	192
  6397  15F1  1283               	bcf	3,5	;RP0=0, select bank0
  6398  15F2  1303               	bcf	3,6	;RP1=0, select bank0
  6399  15F3  00CC               	movwf	trapmf@d
  6400  15F4  30C1               	movlw	193
  6401  15F5  00CD               	movwf	trapmf@d+1
  6402  15F6  3044               	movlw	68
  6403  15F7  00CE               	movwf	trapmf@d+2
  6404  15F8  3000               	movlw	0
  6405  15F9  00C9               	movwf	trapmf@c
  6406  15FA  3048               	movlw	72
  6407  15FB  00CA               	movwf	trapmf@c+1
  6408  15FC  3044               	movlw	68
  6409  15FD  00CB               	movwf	trapmf@c+2
  6410  15FE  3000               	movlw	0
  6411  15FF  00C6               	movwf	trapmf@b
  6412  1600  3048               	movlw	72
  6413  1601  00C7               	movwf	trapmf@b+1
  6414  1602  3044               	movlw	68
  6415  1603  00C8               	movwf	trapmf@b+2
  6416  1604  3000               	movlw	0
  6417  1605  00C3               	movwf	trapmf@a
  6418  1606  3048               	movlw	72
  6419  1607  00C4               	movwf	trapmf@a+1
  6420  1608  3042               	movlw	66
  6421  1609  00C5               	movwf	trapmf@a+2
  6422  160A  1683               	bsf	3,5	;RP0=1, select bank1
  6423  160B  1303               	bcf	3,6	;RP1=0, select bank1
  6424  160C  0851               	movf	(_erro_atual+1)^(0+128),w
  6425  160D  01F9               	clrf	___awtoft@c+1
  6426  160E  07F9               	addwf	___awtoft@c+1,f
  6427  160F  0850               	movf	_erro_atual^(0+128),w
  6428  1610  01F8               	clrf	___awtoft@c
  6429  1611  07F8               	addwf	___awtoft@c,f
  6430  1612  160A  118A  232D  160A  118A  	fcall	___awtoft
  6431  1617  0878               	movf	?___awtoft,w
  6432  1618  1283               	bcf	3,5	;RP0=0, select bank0
  6433  1619  1303               	bcf	3,6	;RP1=0, select bank0
  6434  161A  00C0               	movwf	trapmf@x
  6435  161B  0879               	movf	?___awtoft+1,w
  6436  161C  00C1               	movwf	trapmf@x+1
  6437  161D  087A               	movf	?___awtoft+2,w
  6438  161E  00C2               	movwf	trapmf@x+2
  6439  161F  120A  158A  26AA  160A  118A  	fcall	_trapmf
  6440  1624  1283               	bcf	3,5	;RP0=0, select bank0
  6441  1625  1303               	bcf	3,6	;RP1=0, select bank0
  6442  1626  0840               	movf	?_trapmf,w
  6443  1627  00D2               	movwf	___ftmul@f1
  6444  1628  0841               	movf	?_trapmf+1,w
  6445  1629  00D3               	movwf	___ftmul@f1+1
  6446  162A  0842               	movf	?_trapmf+2,w
  6447  162B  00D4               	movwf	___ftmul@f1+2
  6448  162C  3000               	movlw	0
  6449  162D  00A3               	movwf	___ftadd@f1
  6450  162E  3080               	movlw	128
  6451  162F  00A4               	movwf	___ftadd@f1+1
  6452  1630  303F               	movlw	63
  6453  1631  00A5               	movwf	___ftadd@f1+2
  6454  1632  1683               	bsf	3,5	;RP0=1, select bank1
  6455  1633  1303               	bcf	3,6	;RP1=0, select bank1
  6456  1634  0820               	movf	_ISR$1636^(0+128),w
  6457  1635  1283               	bcf	3,5	;RP0=0, select bank0
  6458  1636  1303               	bcf	3,6	;RP1=0, select bank0
  6459  1637  00A0               	movwf	___ftneg@f1
  6460  1638  1683               	bsf	3,5	;RP0=1, select bank1
  6461  1639  1303               	bcf	3,6	;RP1=0, select bank1
  6462  163A  0821               	movf	(_ISR$1636+1)^(0+128),w
  6463  163B  1283               	bcf	3,5	;RP0=0, select bank0
  6464  163C  1303               	bcf	3,6	;RP1=0, select bank0
  6465  163D  00A1               	movwf	___ftneg@f1+1
  6466  163E  1683               	bsf	3,5	;RP0=1, select bank1
  6467  163F  1303               	bcf	3,6	;RP1=0, select bank1
  6468  1640  0822               	movf	(_ISR$1636+2)^(0+128),w
  6469  1641  1283               	bcf	3,5	;RP0=0, select bank0
  6470  1642  1303               	bcf	3,6	;RP1=0, select bank0
  6471  1643  00A2               	movwf	___ftneg@f1+2
  6472  1644  160A  118A  2256  160A  118A  	fcall	___ftneg
  6473  1649  1283               	bcf	3,5	;RP0=0, select bank0
  6474  164A  1303               	bcf	3,6	;RP1=0, select bank0
  6475  164B  0820               	movf	?___ftneg,w
  6476  164C  00A6               	movwf	___ftadd@f2
  6477  164D  0821               	movf	?___ftneg+1,w
  6478  164E  00A7               	movwf	___ftadd@f2+1
  6479  164F  0822               	movf	?___ftneg+2,w
  6480  1650  00A8               	movwf	___ftadd@f2+2
  6481  1651  120A  158A  25A1   	fcall	___ftadd
  6482  1654  1283               	bcf	3,5	;RP0=0, select bank0
  6483  1655  120A  118A  2845   	ljmp	L24
  6484                           
  6485                           	psect	text8_split_8
  6486  0045                     L24:	
  6487  0045  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0046  0823               	movf	?___ftadd,w
  6489  0047  00D5               	movwf	___ftmul@f2
  6490  0048  0824               	movf	?___ftadd+1,w
  6491  0049  00D6               	movwf	___ftmul@f2+1
  6492  004A  0825               	movf	?___ftadd+2,w
  6493  004B  00D7               	movwf	___ftmul@f2+2
  6494  004C  120A  158A  24CE  120A  118A  	fcall	___ftmul
  6495  0051  1283               	bcf	3,5	;RP0=0, select bank0
  6496  0052  1303               	bcf	3,6	;RP1=0, select bank0
  6497  0053  0852               	movf	?___ftmul,w
  6498  0054  1683               	bsf	3,5	;RP0=1, select bank1
  6499  0055  1303               	bcf	3,6	;RP1=0, select bank1
  6500  0056  00BB               	movwf	ISR@rule^(0+128)
  6501  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0059  0853               	movf	?___ftmul+1,w
  6504  005A  1683               	bsf	3,5	;RP0=1, select bank1
  6505  005B  1303               	bcf	3,6	;RP1=0, select bank1
  6506  005C  00BC               	movwf	(ISR@rule+1)^(0+128)
  6507  005D  1283               	bcf	3,5	;RP0=0, select bank0
  6508  005E  1303               	bcf	3,6	;RP1=0, select bank0
  6509  005F  0854               	movf	?___ftmul+2,w
  6510  0060  1683               	bsf	3,5	;RP0=1, select bank1
  6511  0061  1303               	bcf	3,6	;RP1=0, select bank1
  6512  0062  00BD               	movwf	(ISR@rule+2)^(0+128)
  6513                           
  6514                           ;main.c: 182: x = 0;
  6515  0063  3000               	movlw	0
  6516  0064  00C2               	movwf	ISR@x^(0+128)
  6517  0065  3000               	movlw	0
  6518  0066  00C3               	movwf	(ISR@x+1)^(0+128)
  6519  0067  3000               	movlw	0
  6520  0068  00C4               	movwf	(ISR@x+2)^(0+128)
  6521                           
  6522                           ;main.c: 183: for (int a = 0; a <= 15; a++) {
  6523  0069  01B2               	clrf	ISR@a_211^(0+128)
  6524  006A  01B3               	clrf	(ISR@a_211+1)^(0+128)
  6525  006B  0833               	movf	(ISR@a_211+1)^(0+128),w
  6526  006C  3A80               	xorlw	128
  6527  006D  00FF               	movwf	127
  6528  006E  3080               	movlw	128
  6529  006F  027F               	subwf	127,w
  6530  0070  1D03               	skipz
  6531  0071  2874               	goto	u473_25
  6532  0072  3010               	movlw	16
  6533  0073  0232               	subwf	ISR@a_211^(0+128),w
  6534  0074                     u473_25:	
  6535  0074  1803               	btfsc	3,0
  6536  0075  2943               	goto	i1l3549
  6537  0076                     i1l3539:	
  6538                           
  6539                           ;main.c: 184: rBaixo[a] = trapmf(x, 2, 5, 5, 10);
  6540  0076  3003               	movlw	3
  6541  0077  1283               	bcf	3,5	;RP0=0, select bank0
  6542  0078  1303               	bcf	3,6	;RP1=0, select bank0
  6543  0079  00E2               	movwf	??_ISR
  6544  007A  0862               	movf	??_ISR,w
  6545  007B  00F0               	movwf	___bmul@multiplicand
  6546  007C  1683               	bsf	3,5	;RP0=1, select bank1
  6547  007D  1303               	bcf	3,6	;RP1=0, select bank1
  6548  007E  0832               	movf	ISR@a_211^(0+128),w
  6549  007F  160A  118A  2279  120A  118A  	fcall	___bmul
  6550  0084  3E90               	addlw	_rBaixo& (0+255)
  6551  0085  0084               	movwf	4
  6552  0086  1683               	bsf	3,5	;RP0=1, select bank1
  6553  0087  1303               	bcf	3,6	;RP1=0, select bank1
  6554  0088  0842               	movf	ISR@x^(0+128),w
  6555  0089  1283               	bcf	3,5	;RP0=0, select bank0
  6556  008A  1303               	bcf	3,6	;RP1=0, select bank0
  6557  008B  00C0               	movwf	trapmf@x
  6558  008C  1683               	bsf	3,5	;RP0=1, select bank1
  6559  008D  1303               	bcf	3,6	;RP1=0, select bank1
  6560  008E  0843               	movf	(ISR@x+1)^(0+128),w
  6561  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6562  0090  1303               	bcf	3,6	;RP1=0, select bank0
  6563  0091  00C1               	movwf	trapmf@x+1
  6564  0092  1683               	bsf	3,5	;RP0=1, select bank1
  6565  0093  1303               	bcf	3,6	;RP1=0, select bank1
  6566  0094  0844               	movf	(ISR@x+2)^(0+128),w
  6567  0095  1283               	bcf	3,5	;RP0=0, select bank0
  6568  0096  1303               	bcf	3,6	;RP1=0, select bank0
  6569  0097  00C2               	movwf	trapmf@x+2
  6570  0098  3000               	movlw	0
  6571  0099  00C3               	movwf	trapmf@a
  6572  009A  3000               	movlw	0
  6573  009B  00C4               	movwf	trapmf@a+1
  6574  009C  3040               	movlw	64
  6575  009D  00C5               	movwf	trapmf@a+2
  6576  009E  3000               	movlw	0
  6577  009F  00C6               	movwf	trapmf@b
  6578  00A0  30A0               	movlw	160
  6579  00A1  00C7               	movwf	trapmf@b+1
  6580  00A2  3040               	movlw	64
  6581  00A3  00C8               	movwf	trapmf@b+2
  6582  00A4  3000               	movlw	0
  6583  00A5  00C9               	movwf	trapmf@c
  6584  00A6  30A0               	movlw	160
  6585  00A7  00CA               	movwf	trapmf@c+1
  6586  00A8  3040               	movlw	64
  6587  00A9  00CB               	movwf	trapmf@c+2
  6588  00AA  3000               	movlw	0
  6589  00AB  00CC               	movwf	trapmf@d
  6590  00AC  3020               	movlw	32
  6591  00AD  00CD               	movwf	trapmf@d+1
  6592  00AE  3041               	movlw	65
  6593  00AF  00CE               	movwf	trapmf@d+2
  6594  00B0  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6595  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  6596  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  6597  00B7  0840               	movf	?_trapmf,w
  6598  00B8  1783               	bsf	3,7	;select IRP bank3
  6599  00B9  0080               	movwf	0
  6600  00BA  0A84               	incf	4,f
  6601  00BB  0841               	movf	?_trapmf+1,w
  6602  00BC  0080               	movwf	0
  6603  00BD  0A84               	incf	4,f
  6604  00BE  0842               	movf	?_trapmf+2,w
  6605  00BF  0080               	movwf	0
  6606                           
  6607                           ;main.c: 185: if (rBaixo[a] >= rule) {
  6608  00C0  3003               	movlw	3
  6609  00C1  00E2               	movwf	??_ISR
  6610  00C2  0862               	movf	??_ISR,w
  6611  00C3  00F0               	movwf	___bmul@multiplicand
  6612  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  6613  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  6614  00C6  0832               	movf	ISR@a_211^(0+128),w
  6615  00C7  160A  118A  2279  120A  118A  	fcall	___bmul
  6616  00CC  3E90               	addlw	_rBaixo& (0+255)
  6617  00CD  0084               	movwf	4
  6618  00CE  1783               	bsf	3,7	;select IRP bank3
  6619  00CF  0800               	movf	0,w
  6620  00D0  00F4               	movwf	___ftge@ff1
  6621  00D1  0A84               	incf	4,f
  6622  00D2  0800               	movf	0,w
  6623  00D3  00F5               	movwf	___ftge@ff1+1
  6624  00D4  0A84               	incf	4,f
  6625  00D5  0800               	movf	0,w
  6626  00D6  00F6               	movwf	___ftge@ff1+2
  6627  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  6628  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  6629  00D9  083B               	movf	ISR@rule^(0+128),w
  6630  00DA  00F7               	movwf	___ftge@ff2
  6631  00DB  083C               	movf	(ISR@rule+1)^(0+128),w
  6632  00DC  00F8               	movwf	___ftge@ff2+1
  6633  00DD  083D               	movf	(ISR@rule+2)^(0+128),w
  6634  00DE  00F9               	movwf	___ftge@ff2+2
  6635  00DF  160A  118A  248E  120A  118A  	fcall	___ftge
  6636  00E4  1C03               	btfss	3,0
  6637  00E5  2901               	goto	i1l3543
  6638                           
  6639                           ;main.c: 186: rBaixo[a] = rule;
  6640  00E6  3003               	movlw	3
  6641  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  6642  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  6643  00E9  00E2               	movwf	??_ISR
  6644  00EA  0862               	movf	??_ISR,w
  6645  00EB  00F0               	movwf	___bmul@multiplicand
  6646  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6647  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  6648  00EE  0832               	movf	ISR@a_211^(0+128),w
  6649  00EF  160A  118A  2279  120A  118A  	fcall	___bmul
  6650  00F4  3E90               	addlw	_rBaixo& (0+255)
  6651  00F5  0084               	movwf	4
  6652  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  6653  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  6654  00F8  083B               	movf	ISR@rule^(0+128),w
  6655  00F9  1783               	bsf	3,7	;select IRP bank3
  6656  00FA  0080               	movwf	0
  6657  00FB  0A84               	incf	4,f
  6658  00FC  083C               	movf	(ISR@rule+1)^(0+128),w
  6659  00FD  0080               	movwf	0
  6660  00FE  0A84               	incf	4,f
  6661  00FF  083D               	movf	(ISR@rule+2)^(0+128),w
  6662  0100  0080               	movwf	0
  6663  0101                     i1l3543:	
  6664                           
  6665                           ;main.c: 187: }
  6666                           ;main.c: 189: x += 1;
  6667  0101  3000               	movlw	0
  6668  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6669  0103  1303               	bcf	3,6	;RP1=0, select bank0
  6670  0104  00A3               	movwf	___ftadd@f1
  6671  0105  3080               	movlw	128
  6672  0106  00A4               	movwf	___ftadd@f1+1
  6673  0107  303F               	movlw	63
  6674  0108  00A5               	movwf	___ftadd@f1+2
  6675  0109  1683               	bsf	3,5	;RP0=1, select bank1
  6676  010A  1303               	bcf	3,6	;RP1=0, select bank1
  6677  010B  0842               	movf	ISR@x^(0+128),w
  6678  010C  1283               	bcf	3,5	;RP0=0, select bank0
  6679  010D  1303               	bcf	3,6	;RP1=0, select bank0
  6680  010E  00A6               	movwf	___ftadd@f2
  6681  010F  1683               	bsf	3,5	;RP0=1, select bank1
  6682  0110  1303               	bcf	3,6	;RP1=0, select bank1
  6683  0111  0843               	movf	(ISR@x+1)^(0+128),w
  6684  0112  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0113  1303               	bcf	3,6	;RP1=0, select bank0
  6686  0114  00A7               	movwf	___ftadd@f2+1
  6687  0115  1683               	bsf	3,5	;RP0=1, select bank1
  6688  0116  1303               	bcf	3,6	;RP1=0, select bank1
  6689  0117  0844               	movf	(ISR@x+2)^(0+128),w
  6690  0118  1283               	bcf	3,5	;RP0=0, select bank0
  6691  0119  1303               	bcf	3,6	;RP1=0, select bank0
  6692  011A  00A8               	movwf	___ftadd@f2+2
  6693  011B  120A  158A  25A1  120A  118A  	fcall	___ftadd
  6694  0120  1283               	bcf	3,5	;RP0=0, select bank0
  6695  0121  1303               	bcf	3,6	;RP1=0, select bank0
  6696  0122  0823               	movf	?___ftadd,w
  6697  0123  1683               	bsf	3,5	;RP0=1, select bank1
  6698  0124  1303               	bcf	3,6	;RP1=0, select bank1
  6699  0125  00C2               	movwf	ISR@x^(0+128)
  6700  0126  1283               	bcf	3,5	;RP0=0, select bank0
  6701  0127  1303               	bcf	3,6	;RP1=0, select bank0
  6702  0128  0824               	movf	?___ftadd+1,w
  6703  0129  1683               	bsf	3,5	;RP0=1, select bank1
  6704  012A  1303               	bcf	3,6	;RP1=0, select bank1
  6705  012B  00C3               	movwf	(ISR@x+1)^(0+128)
  6706  012C  1283               	bcf	3,5	;RP0=0, select bank0
  6707  012D  1303               	bcf	3,6	;RP1=0, select bank0
  6708  012E  0825               	movf	?___ftadd+2,w
  6709  012F  1683               	bsf	3,5	;RP0=1, select bank1
  6710  0130  1303               	bcf	3,6	;RP1=0, select bank1
  6711  0131  00C4               	movwf	(ISR@x+2)^(0+128)
  6712  0132  3001               	movlw	1
  6713  0133  07B2               	addwf	ISR@a_211^(0+128),f
  6714  0134  1803               	skipnc
  6715  0135  0AB3               	incf	(ISR@a_211+1)^(0+128),f
  6716  0136  3000               	movlw	0
  6717  0137  07B3               	addwf	(ISR@a_211+1)^(0+128),f
  6718  0138  0833               	movf	(ISR@a_211+1)^(0+128),w
  6719  0139  3A80               	xorlw	128
  6720  013A  00FF               	movwf	127
  6721  013B  3080               	movlw	128
  6722  013C  027F               	subwf	127,w
  6723  013D  1D03               	skipz
  6724  013E  2941               	goto	u475_25
  6725  013F  3010               	movlw	16
  6726  0140  0232               	subwf	ISR@a_211^(0+128),w
  6727  0141                     u475_25:	
  6728  0141  1C03               	skipc
  6729  0142  2876               	goto	i1l3539
  6730  0143                     i1l3549:	
  6731                           
  6732                           ;main.c: 190: }
  6733                           ;main.c: 191: }
  6734                           ;main.c: 195: if (erro_atual >= 100 && erro_atual <= 1001 && delta >= 201) {
  6735  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6736  0144  1303               	bcf	3,6	;RP1=0, select bank1
  6737  0145  0851               	movf	(_erro_atual+1)^(0+128),w
  6738  0146  3A80               	xorlw	128
  6739  0147  00FF               	movwf	127
  6740  0148  3080               	movlw	128
  6741  0149  027F               	subwf	127,w
  6742  014A  1D03               	skipz
  6743  014B  294E               	goto	u476_25
  6744  014C  3064               	movlw	100
  6745  014D  0250               	subwf	_erro_atual^(0+128),w
  6746  014E                     u476_25:	
  6747  014E  1C03               	skipc
  6748  014F  2AD7               	goto	i1l3575
  6749  0150  1683               	bsf	3,5	;RP0=1, select bank1
  6750  0151  1303               	bcf	3,6	;RP1=0, select bank1
  6751  0152  0851               	movf	(_erro_atual+1)^(0+128),w
  6752  0153  3A80               	xorlw	128
  6753  0154  00FF               	movwf	127
  6754  0155  3083               	movlw	131
  6755  0156  027F               	subwf	127,w
  6756  0157  1D03               	skipz
  6757  0158  295B               	goto	u477_25
  6758  0159  30EA               	movlw	234
  6759  015A  0250               	subwf	_erro_atual^(0+128),w
  6760  015B                     u477_25:	
  6761  015B  1803               	skipnc
  6762  015C  2AD7               	goto	i1l3575
  6763  015D  1683               	bsf	3,5	;RP0=1, select bank1
  6764  015E  1303               	bcf	3,6	;RP1=0, select bank1
  6765  015F  082C               	movf	(ISR@delta+1)^(0+128),w
  6766  0160  3A80               	xorlw	128
  6767  0161  00FF               	movwf	127
  6768  0162  3080               	movlw	128
  6769  0163  027F               	subwf	127,w
  6770  0164  1D03               	skipz
  6771  0165  2968               	goto	u478_25
  6772  0166  30C9               	movlw	201
  6773  0167  022B               	subwf	ISR@delta^(0+128),w
  6774  0168                     u478_25:	
  6775  0168  1C03               	skipc
  6776  0169  2AD7               	goto	i1l3575
  6777                           
  6778                           ;main.c: 197: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  6779                           ;main.c: 198: trapmf(delta, 200, 500, 2000, 2001);
  6780  016A  3020               	movlw	32
  6781  016B  1283               	bcf	3,5	;RP0=0, select bank0
  6782  016C  1303               	bcf	3,6	;RP1=0, select bank0
  6783  016D  00CC               	movwf	trapmf@d
  6784  016E  30FA               	movlw	250
  6785  016F  00CD               	movwf	trapmf@d+1
  6786  0170  3044               	movlw	68
  6787  0171  00CE               	movwf	trapmf@d+2
  6788  0172  3000               	movlw	0
  6789  0173  00C9               	movwf	trapmf@c
  6790  0174  30FA               	movlw	250
  6791  0175  00CA               	movwf	trapmf@c+1
  6792  0176  3044               	movlw	68
  6793  0177  00CB               	movwf	trapmf@c+2
  6794  0178  3000               	movlw	0
  6795  0179  00C6               	movwf	trapmf@b
  6796  017A  30FA               	movlw	250
  6797  017B  00C7               	movwf	trapmf@b+1
  6798  017C  3043               	movlw	67
  6799  017D  00C8               	movwf	trapmf@b+2
  6800  017E  3000               	movlw	0
  6801  017F  00C3               	movwf	trapmf@a
  6802  0180  3048               	movlw	72
  6803  0181  00C4               	movwf	trapmf@a+1
  6804  0182  3043               	movlw	67
  6805  0183  00C5               	movwf	trapmf@a+2
  6806  0184  1683               	bsf	3,5	;RP0=1, select bank1
  6807  0185  1303               	bcf	3,6	;RP1=0, select bank1
  6808  0186  082C               	movf	(ISR@delta+1)^(0+128),w
  6809  0187  01F9               	clrf	___awtoft@c+1
  6810  0188  07F9               	addwf	___awtoft@c+1,f
  6811  0189  082B               	movf	ISR@delta^(0+128),w
  6812  018A  01F8               	clrf	___awtoft@c
  6813  018B  07F8               	addwf	___awtoft@c,f
  6814  018C  160A  118A  232D  120A  118A  	fcall	___awtoft
  6815  0191  0878               	movf	?___awtoft,w
  6816  0192  1283               	bcf	3,5	;RP0=0, select bank0
  6817  0193  1303               	bcf	3,6	;RP1=0, select bank0
  6818  0194  00C0               	movwf	trapmf@x
  6819  0195  0879               	movf	?___awtoft+1,w
  6820  0196  00C1               	movwf	trapmf@x+1
  6821  0197  087A               	movf	?___awtoft+2,w
  6822  0198  00C2               	movwf	trapmf@x+2
  6823  0199  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6824  019E  1283               	bcf	3,5	;RP0=0, select bank0
  6825  019F  1303               	bcf	3,6	;RP1=0, select bank0
  6826  01A0  0840               	movf	?_trapmf,w
  6827  01A1  00D2               	movwf	___ftmul@f1
  6828  01A2  0841               	movf	?_trapmf+1,w
  6829  01A3  00D3               	movwf	___ftmul@f1+1
  6830  01A4  0842               	movf	?_trapmf+2,w
  6831  01A5  00D4               	movwf	___ftmul@f1+2
  6832  01A6  30C0               	movlw	192
  6833  01A7  00CC               	movwf	trapmf@d
  6834  01A8  30C1               	movlw	193
  6835  01A9  00CD               	movwf	trapmf@d+1
  6836  01AA  3044               	movlw	68
  6837  01AB  00CE               	movwf	trapmf@d+2
  6838  01AC  3000               	movlw	0
  6839  01AD  00C9               	movwf	trapmf@c
  6840  01AE  3048               	movlw	72
  6841  01AF  00CA               	movwf	trapmf@c+1
  6842  01B0  3044               	movlw	68
  6843  01B1  00CB               	movwf	trapmf@c+2
  6844  01B2  3000               	movlw	0
  6845  01B3  00C6               	movwf	trapmf@b
  6846  01B4  3048               	movlw	72
  6847  01B5  00C7               	movwf	trapmf@b+1
  6848  01B6  3044               	movlw	68
  6849  01B7  00C8               	movwf	trapmf@b+2
  6850  01B8  3000               	movlw	0
  6851  01B9  00C3               	movwf	trapmf@a
  6852  01BA  3048               	movlw	72
  6853  01BB  00C4               	movwf	trapmf@a+1
  6854  01BC  3042               	movlw	66
  6855  01BD  00C5               	movwf	trapmf@a+2
  6856  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  6857  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  6858  01C0  0851               	movf	(_erro_atual+1)^(0+128),w
  6859  01C1  01F9               	clrf	___awtoft@c+1
  6860  01C2  07F9               	addwf	___awtoft@c+1,f
  6861  01C3  0850               	movf	_erro_atual^(0+128),w
  6862  01C4  01F8               	clrf	___awtoft@c
  6863  01C5  07F8               	addwf	___awtoft@c,f
  6864  01C6  160A  118A  232D  120A  118A  	fcall	___awtoft
  6865  01CB  0878               	movf	?___awtoft,w
  6866  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  6867  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  6868  01CE  00C0               	movwf	trapmf@x
  6869  01CF  0879               	movf	?___awtoft+1,w
  6870  01D0  00C1               	movwf	trapmf@x+1
  6871  01D1  087A               	movf	?___awtoft+2,w
  6872  01D2  00C2               	movwf	trapmf@x+2
  6873  01D3  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6874  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  6875  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  6876  01DA  0840               	movf	?_trapmf,w
  6877  01DB  00D5               	movwf	___ftmul@f2
  6878  01DC  0841               	movf	?_trapmf+1,w
  6879  01DD  00D6               	movwf	___ftmul@f2+1
  6880  01DE  0842               	movf	?_trapmf+2,w
  6881  01DF  00D7               	movwf	___ftmul@f2+2
  6882  01E0  120A  158A  24CE  120A  118A  	fcall	___ftmul
  6883  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  6884  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  6885  01E7  0852               	movf	?___ftmul,w
  6886  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  6887  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  6888  01EA  00BB               	movwf	ISR@rule^(0+128)
  6889  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  6890  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  6891  01ED  0853               	movf	?___ftmul+1,w
  6892  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6893  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  6894  01F0  00BC               	movwf	(ISR@rule+1)^(0+128)
  6895  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  6896  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  6897  01F3  0854               	movf	?___ftmul+2,w
  6898  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  6899  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  6900  01F6  00BD               	movwf	(ISR@rule+2)^(0+128)
  6901                           
  6902                           ;main.c: 200: x = 0;
  6903  01F7  3000               	movlw	0
  6904  01F8  00C2               	movwf	ISR@x^(0+128)
  6905  01F9  3000               	movlw	0
  6906  01FA  00C3               	movwf	(ISR@x+1)^(0+128)
  6907  01FB  3000               	movlw	0
  6908  01FC  00C4               	movwf	(ISR@x+2)^(0+128)
  6909                           
  6910                           ;main.c: 201: for (int a = 0; a <= 15; a++) {
  6911  01FD  01B4               	clrf	ISR@a_212^(0+128)
  6912  01FE  01B5               	clrf	(ISR@a_212+1)^(0+128)
  6913  01FF  0835               	movf	(ISR@a_212+1)^(0+128),w
  6914  0200  3A80               	xorlw	128
  6915  0201  00FF               	movwf	127
  6916  0202  3080               	movlw	128
  6917  0203  027F               	subwf	127,w
  6918  0204  1D03               	skipz
  6919  0205  2A08               	goto	u479_25
  6920  0206  3010               	movlw	16
  6921  0207  0234               	subwf	ISR@a_212^(0+128),w
  6922  0208                     u479_25:	
  6923  0208  1803               	btfsc	3,0
  6924  0209  2AD7               	goto	i1l3575
  6925  020A                     i1l3565:	
  6926                           
  6927                           ;main.c: 202: rMedio[a] = trapmf(x, 2, 5, 5, 10);
  6928  020A  3003               	movlw	3
  6929  020B  1283               	bcf	3,5	;RP0=0, select bank0
  6930  020C  1303               	bcf	3,6	;RP1=0, select bank0
  6931  020D  00E2               	movwf	??_ISR
  6932  020E  0862               	movf	??_ISR,w
  6933  020F  00F0               	movwf	___bmul@multiplicand
  6934  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6935  0211  1303               	bcf	3,6	;RP1=0, select bank1
  6936  0212  0834               	movf	ISR@a_212^(0+128),w
  6937  0213  160A  118A  2279  120A  118A  	fcall	___bmul
  6938  0218  3E40               	addlw	_rMedio& (0+255)
  6939  0219  0084               	movwf	4
  6940  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6941  021B  1303               	bcf	3,6	;RP1=0, select bank1
  6942  021C  0842               	movf	ISR@x^(0+128),w
  6943  021D  1283               	bcf	3,5	;RP0=0, select bank0
  6944  021E  1303               	bcf	3,6	;RP1=0, select bank0
  6945  021F  00C0               	movwf	trapmf@x
  6946  0220  1683               	bsf	3,5	;RP0=1, select bank1
  6947  0221  1303               	bcf	3,6	;RP1=0, select bank1
  6948  0222  0843               	movf	(ISR@x+1)^(0+128),w
  6949  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6950  0224  1303               	bcf	3,6	;RP1=0, select bank0
  6951  0225  00C1               	movwf	trapmf@x+1
  6952  0226  1683               	bsf	3,5	;RP0=1, select bank1
  6953  0227  1303               	bcf	3,6	;RP1=0, select bank1
  6954  0228  0844               	movf	(ISR@x+2)^(0+128),w
  6955  0229  1283               	bcf	3,5	;RP0=0, select bank0
  6956  022A  1303               	bcf	3,6	;RP1=0, select bank0
  6957  022B  00C2               	movwf	trapmf@x+2
  6958  022C  3000               	movlw	0
  6959  022D  00C3               	movwf	trapmf@a
  6960  022E  3000               	movlw	0
  6961  022F  00C4               	movwf	trapmf@a+1
  6962  0230  3040               	movlw	64
  6963  0231  00C5               	movwf	trapmf@a+2
  6964  0232  3000               	movlw	0
  6965  0233  00C6               	movwf	trapmf@b
  6966  0234  30A0               	movlw	160
  6967  0235  00C7               	movwf	trapmf@b+1
  6968  0236  3040               	movlw	64
  6969  0237  00C8               	movwf	trapmf@b+2
  6970  0238  3000               	movlw	0
  6971  0239  00C9               	movwf	trapmf@c
  6972  023A  30A0               	movlw	160
  6973  023B  00CA               	movwf	trapmf@c+1
  6974  023C  3040               	movlw	64
  6975  023D  00CB               	movwf	trapmf@c+2
  6976  023E  3000               	movlw	0
  6977  023F  00CC               	movwf	trapmf@d
  6978  0240  3020               	movlw	32
  6979  0241  00CD               	movwf	trapmf@d+1
  6980  0242  3041               	movlw	65
  6981  0243  00CE               	movwf	trapmf@d+2
  6982  0244  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6983  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6984  024A  1303               	bcf	3,6	;RP1=0, select bank0
  6985  024B  0840               	movf	?_trapmf,w
  6986  024C  1783               	bsf	3,7	;select IRP bank2
  6987  024D  0080               	movwf	0
  6988  024E  0A84               	incf	4,f
  6989  024F  0841               	movf	?_trapmf+1,w
  6990  0250  0080               	movwf	0
  6991  0251  0A84               	incf	4,f
  6992  0252  0842               	movf	?_trapmf+2,w
  6993  0253  0080               	movwf	0
  6994                           
  6995                           ;main.c: 204: if (rMedio[a] >= rule) {
  6996  0254  3003               	movlw	3
  6997  0255  00E2               	movwf	??_ISR
  6998  0256  0862               	movf	??_ISR,w
  6999  0257  00F0               	movwf	___bmul@multiplicand
  7000  0258  1683               	bsf	3,5	;RP0=1, select bank1
  7001  0259  1303               	bcf	3,6	;RP1=0, select bank1
  7002  025A  0834               	movf	ISR@a_212^(0+128),w
  7003  025B  160A  118A  2279  120A  118A  	fcall	___bmul
  7004  0260  3E40               	addlw	_rMedio& (0+255)
  7005  0261  0084               	movwf	4
  7006  0262  1783               	bsf	3,7	;select IRP bank2
  7007  0263  0800               	movf	0,w
  7008  0264  00F4               	movwf	___ftge@ff1
  7009  0265  0A84               	incf	4,f
  7010  0266  0800               	movf	0,w
  7011  0267  00F5               	movwf	___ftge@ff1+1
  7012  0268  0A84               	incf	4,f
  7013  0269  0800               	movf	0,w
  7014  026A  00F6               	movwf	___ftge@ff1+2
  7015  026B  1683               	bsf	3,5	;RP0=1, select bank1
  7016  026C  1303               	bcf	3,6	;RP1=0, select bank1
  7017  026D  083B               	movf	ISR@rule^(0+128),w
  7018  026E  00F7               	movwf	___ftge@ff2
  7019  026F  083C               	movf	(ISR@rule+1)^(0+128),w
  7020  0270  00F8               	movwf	___ftge@ff2+1
  7021  0271  083D               	movf	(ISR@rule+2)^(0+128),w
  7022  0272  00F9               	movwf	___ftge@ff2+2
  7023  0273  160A  118A  248E  120A  118A  	fcall	___ftge
  7024  0278  1C03               	btfss	3,0
  7025  0279  2A95               	goto	i1l3569
  7026                           
  7027                           ;main.c: 205: rMedio[a] = rule;
  7028  027A  3003               	movlw	3
  7029  027B  1283               	bcf	3,5	;RP0=0, select bank0
  7030  027C  1303               	bcf	3,6	;RP1=0, select bank0
  7031  027D  00E2               	movwf	??_ISR
  7032  027E  0862               	movf	??_ISR,w
  7033  027F  00F0               	movwf	___bmul@multiplicand
  7034  0280  1683               	bsf	3,5	;RP0=1, select bank1
  7035  0281  1303               	bcf	3,6	;RP1=0, select bank1
  7036  0282  0834               	movf	ISR@a_212^(0+128),w
  7037  0283  160A  118A  2279  120A  118A  	fcall	___bmul
  7038  0288  3E40               	addlw	_rMedio& (0+255)
  7039  0289  0084               	movwf	4
  7040  028A  1683               	bsf	3,5	;RP0=1, select bank1
  7041  028B  1303               	bcf	3,6	;RP1=0, select bank1
  7042  028C  083B               	movf	ISR@rule^(0+128),w
  7043  028D  1783               	bsf	3,7	;select IRP bank2
  7044  028E  0080               	movwf	0
  7045  028F  0A84               	incf	4,f
  7046  0290  083C               	movf	(ISR@rule+1)^(0+128),w
  7047  0291  0080               	movwf	0
  7048  0292  0A84               	incf	4,f
  7049  0293  083D               	movf	(ISR@rule+2)^(0+128),w
  7050  0294  0080               	movwf	0
  7051  0295                     i1l3569:	
  7052                           
  7053                           ;main.c: 206: }
  7054                           ;main.c: 208: x += 1;
  7055  0295  3000               	movlw	0
  7056  0296  1283               	bcf	3,5	;RP0=0, select bank0
  7057  0297  1303               	bcf	3,6	;RP1=0, select bank0
  7058  0298  00A3               	movwf	___ftadd@f1
  7059  0299  3080               	movlw	128
  7060  029A  00A4               	movwf	___ftadd@f1+1
  7061  029B  303F               	movlw	63
  7062  029C  00A5               	movwf	___ftadd@f1+2
  7063  029D  1683               	bsf	3,5	;RP0=1, select bank1
  7064  029E  1303               	bcf	3,6	;RP1=0, select bank1
  7065  029F  0842               	movf	ISR@x^(0+128),w
  7066  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  7067  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  7068  02A2  00A6               	movwf	___ftadd@f2
  7069  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  7070  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  7071  02A5  0843               	movf	(ISR@x+1)^(0+128),w
  7072  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  7073  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  7074  02A8  00A7               	movwf	___ftadd@f2+1
  7075  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  7076  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  7077  02AB  0844               	movf	(ISR@x+2)^(0+128),w
  7078  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  7079  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  7080  02AE  00A8               	movwf	___ftadd@f2+2
  7081  02AF  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7082  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  7083  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  7084  02B6  0823               	movf	?___ftadd,w
  7085  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  7086  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  7087  02B9  00C2               	movwf	ISR@x^(0+128)
  7088  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  7089  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  7090  02BC  0824               	movf	?___ftadd+1,w
  7091  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  7092  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  7093  02BF  00C3               	movwf	(ISR@x+1)^(0+128)
  7094  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  7095  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  7096  02C2  0825               	movf	?___ftadd+2,w
  7097  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  7098  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  7099  02C5  00C4               	movwf	(ISR@x+2)^(0+128)
  7100  02C6  3001               	movlw	1
  7101  02C7  07B4               	addwf	ISR@a_212^(0+128),f
  7102  02C8  1803               	skipnc
  7103  02C9  0AB5               	incf	(ISR@a_212+1)^(0+128),f
  7104  02CA  3000               	movlw	0
  7105  02CB  07B5               	addwf	(ISR@a_212+1)^(0+128),f
  7106  02CC  0835               	movf	(ISR@a_212+1)^(0+128),w
  7107  02CD  3A80               	xorlw	128
  7108  02CE  00FF               	movwf	127
  7109  02CF  3080               	movlw	128
  7110  02D0  027F               	subwf	127,w
  7111  02D1  1D03               	skipz
  7112  02D2  2AD5               	goto	u481_25
  7113  02D3  3010               	movlw	16
  7114  02D4  0234               	subwf	ISR@a_212^(0+128),w
  7115  02D5                     u481_25:	
  7116  02D5  1C03               	skipc
  7117  02D6  2A0A               	goto	i1l3565
  7118  02D7                     i1l3575:	
  7119                           
  7120                           ;main.c: 209: }
  7121                           ;main.c: 210: }
  7122                           ;main.c: 213: if (erro_atual >= 1001) {
  7123  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  7124  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  7125  02D9  0851               	movf	(_erro_atual+1)^(0+128),w
  7126  02DA  3A80               	xorlw	128
  7127  02DB  00FF               	movwf	127
  7128  02DC  3083               	movlw	131
  7129  02DD  027F               	subwf	127,w
  7130  02DE  1D03               	skipz
  7131  02DF  2AE2               	goto	u482_25
  7132  02E0  30E9               	movlw	233
  7133  02E1  0250               	subwf	_erro_atual^(0+128),w
  7134  02E2                     u482_25:	
  7135  02E2  1C03               	skipc
  7136  02E3  2C08               	goto	i1l3597
  7137                           
  7138                           ;main.c: 215: rule = trapmf(erro_atual, 1001, 1500, 2000, 2001);
  7139  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  7140  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  7141  02E6  0851               	movf	(_erro_atual+1)^(0+128),w
  7142  02E7  01F9               	clrf	___awtoft@c+1
  7143  02E8  07F9               	addwf	___awtoft@c+1,f
  7144  02E9  0850               	movf	_erro_atual^(0+128),w
  7145  02EA  01F8               	clrf	___awtoft@c
  7146  02EB  07F8               	addwf	___awtoft@c,f
  7147  02EC  160A  118A  232D  120A  118A  	fcall	___awtoft
  7148  02F1  0878               	movf	?___awtoft,w
  7149  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  7150  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  7151  02F4  00C0               	movwf	trapmf@x
  7152  02F5  0879               	movf	?___awtoft+1,w
  7153  02F6  00C1               	movwf	trapmf@x+1
  7154  02F7  087A               	movf	?___awtoft+2,w
  7155  02F8  00C2               	movwf	trapmf@x+2
  7156  02F9  3040               	movlw	64
  7157  02FA  00C3               	movwf	trapmf@a
  7158  02FB  307A               	movlw	122
  7159  02FC  00C4               	movwf	trapmf@a+1
  7160  02FD  3044               	movlw	68
  7161  02FE  00C5               	movwf	trapmf@a+2
  7162  02FF  3080               	movlw	128
  7163  0300  00C6               	movwf	trapmf@b
  7164  0301  30BB               	movlw	187
  7165  0302  00C7               	movwf	trapmf@b+1
  7166  0303  3044               	movlw	68
  7167  0304  00C8               	movwf	trapmf@b+2
  7168  0305  3000               	movlw	0
  7169  0306  00C9               	movwf	trapmf@c
  7170  0307  30FA               	movlw	250
  7171  0308  00CA               	movwf	trapmf@c+1
  7172  0309  3044               	movlw	68
  7173  030A  00CB               	movwf	trapmf@c+2
  7174  030B  3020               	movlw	32
  7175  030C  00CC               	movwf	trapmf@d
  7176  030D  30FA               	movlw	250
  7177  030E  00CD               	movwf	trapmf@d+1
  7178  030F  3044               	movlw	68
  7179  0310  00CE               	movwf	trapmf@d+2
  7180  0311  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7181  0316  1283               	bcf	3,5	;RP0=0, select bank0
  7182  0317  1303               	bcf	3,6	;RP1=0, select bank0
  7183  0318  0840               	movf	?_trapmf,w
  7184  0319  1683               	bsf	3,5	;RP0=1, select bank1
  7185  031A  1303               	bcf	3,6	;RP1=0, select bank1
  7186  031B  00BB               	movwf	ISR@rule^(0+128)
  7187  031C  1283               	bcf	3,5	;RP0=0, select bank0
  7188  031D  1303               	bcf	3,6	;RP1=0, select bank0
  7189  031E  0841               	movf	?_trapmf+1,w
  7190  031F  1683               	bsf	3,5	;RP0=1, select bank1
  7191  0320  1303               	bcf	3,6	;RP1=0, select bank1
  7192  0321  00BC               	movwf	(ISR@rule+1)^(0+128)
  7193  0322  1283               	bcf	3,5	;RP0=0, select bank0
  7194  0323  1303               	bcf	3,6	;RP1=0, select bank0
  7195  0324  0842               	movf	?_trapmf+2,w
  7196  0325  1683               	bsf	3,5	;RP0=1, select bank1
  7197  0326  1303               	bcf	3,6	;RP1=0, select bank1
  7198  0327  00BD               	movwf	(ISR@rule+2)^(0+128)
  7199                           
  7200                           ;main.c: 217: x = 0;
  7201  0328  3000               	movlw	0
  7202  0329  00C2               	movwf	ISR@x^(0+128)
  7203  032A  3000               	movlw	0
  7204  032B  00C3               	movwf	(ISR@x+1)^(0+128)
  7205  032C  3000               	movlw	0
  7206  032D  00C4               	movwf	(ISR@x+2)^(0+128)
  7207                           
  7208                           ;main.c: 218: for (int a = 0; a <= 15; a++) {
  7209  032E  01B6               	clrf	ISR@a_213^(0+128)
  7210  032F  01B7               	clrf	(ISR@a_213+1)^(0+128)
  7211  0330  0837               	movf	(ISR@a_213+1)^(0+128),w
  7212  0331  3A80               	xorlw	128
  7213  0332  00FF               	movwf	127
  7214  0333  3080               	movlw	128
  7215  0334  027F               	subwf	127,w
  7216  0335  1D03               	skipz
  7217  0336  2B39               	goto	u483_25
  7218  0337  3010               	movlw	16
  7219  0338  0236               	subwf	ISR@a_213^(0+128),w
  7220  0339                     u483_25:	
  7221  0339  1803               	btfsc	3,0
  7222  033A  2C08               	goto	i1l3597
  7223  033B                     i1l3587:	
  7224                           
  7225                           ;main.c: 219: rGrande[a] = trapmf(x, 5, 10, 15, 16);
  7226  033B  3003               	movlw	3
  7227  033C  1283               	bcf	3,5	;RP0=0, select bank0
  7228  033D  1303               	bcf	3,6	;RP1=0, select bank0
  7229  033E  00E2               	movwf	??_ISR
  7230  033F  0862               	movf	??_ISR,w
  7231  0340  00F0               	movwf	___bmul@multiplicand
  7232  0341  1683               	bsf	3,5	;RP0=1, select bank1
  7233  0342  1303               	bcf	3,6	;RP1=0, select bank1
  7234  0343  0836               	movf	ISR@a_213^(0+128),w
  7235  0344  160A  118A  2279  120A  118A  	fcall	___bmul
  7236  0349  3E10               	addlw	_rGrande& (0+255)
  7237  034A  0084               	movwf	4
  7238  034B  1683               	bsf	3,5	;RP0=1, select bank1
  7239  034C  1303               	bcf	3,6	;RP1=0, select bank1
  7240  034D  0842               	movf	ISR@x^(0+128),w
  7241  034E  1283               	bcf	3,5	;RP0=0, select bank0
  7242  034F  1303               	bcf	3,6	;RP1=0, select bank0
  7243  0350  00C0               	movwf	trapmf@x
  7244  0351  1683               	bsf	3,5	;RP0=1, select bank1
  7245  0352  1303               	bcf	3,6	;RP1=0, select bank1
  7246  0353  0843               	movf	(ISR@x+1)^(0+128),w
  7247  0354  1283               	bcf	3,5	;RP0=0, select bank0
  7248  0355  1303               	bcf	3,6	;RP1=0, select bank0
  7249  0356  00C1               	movwf	trapmf@x+1
  7250  0357  1683               	bsf	3,5	;RP0=1, select bank1
  7251  0358  1303               	bcf	3,6	;RP1=0, select bank1
  7252  0359  0844               	movf	(ISR@x+2)^(0+128),w
  7253  035A  1283               	bcf	3,5	;RP0=0, select bank0
  7254  035B  1303               	bcf	3,6	;RP1=0, select bank0
  7255  035C  00C2               	movwf	trapmf@x+2
  7256  035D  3000               	movlw	0
  7257  035E  00C3               	movwf	trapmf@a
  7258  035F  30A0               	movlw	160
  7259  0360  00C4               	movwf	trapmf@a+1
  7260  0361  3040               	movlw	64
  7261  0362  00C5               	movwf	trapmf@a+2
  7262  0363  3000               	movlw	0
  7263  0364  00C6               	movwf	trapmf@b
  7264  0365  3020               	movlw	32
  7265  0366  00C7               	movwf	trapmf@b+1
  7266  0367  3041               	movlw	65
  7267  0368  00C8               	movwf	trapmf@b+2
  7268  0369  3000               	movlw	0
  7269  036A  00C9               	movwf	trapmf@c
  7270  036B  3070               	movlw	112
  7271  036C  00CA               	movwf	trapmf@c+1
  7272  036D  3041               	movlw	65
  7273  036E  00CB               	movwf	trapmf@c+2
  7274  036F  3000               	movlw	0
  7275  0370  00CC               	movwf	trapmf@d
  7276  0371  3080               	movlw	128
  7277  0372  00CD               	movwf	trapmf@d+1
  7278  0373  3041               	movlw	65
  7279  0374  00CE               	movwf	trapmf@d+2
  7280  0375  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7281  037A  1283               	bcf	3,5	;RP0=0, select bank0
  7282  037B  1303               	bcf	3,6	;RP1=0, select bank0
  7283  037C  0840               	movf	?_trapmf,w
  7284  037D  1783               	bsf	3,7	;select IRP bank2
  7285  037E  0080               	movwf	0
  7286  037F  0A84               	incf	4,f
  7287  0380  0841               	movf	?_trapmf+1,w
  7288  0381  0080               	movwf	0
  7289  0382  0A84               	incf	4,f
  7290  0383  0842               	movf	?_trapmf+2,w
  7291  0384  0080               	movwf	0
  7292                           
  7293                           ;main.c: 221: if (rGrande[a] >= rule) {
  7294  0385  3003               	movlw	3
  7295  0386  00E2               	movwf	??_ISR
  7296  0387  0862               	movf	??_ISR,w
  7297  0388  00F0               	movwf	___bmul@multiplicand
  7298  0389  1683               	bsf	3,5	;RP0=1, select bank1
  7299  038A  1303               	bcf	3,6	;RP1=0, select bank1
  7300  038B  0836               	movf	ISR@a_213^(0+128),w
  7301  038C  160A  118A  2279  120A  118A  	fcall	___bmul
  7302  0391  3E10               	addlw	_rGrande& (0+255)
  7303  0392  0084               	movwf	4
  7304  0393  1783               	bsf	3,7	;select IRP bank2
  7305  0394  0800               	movf	0,w
  7306  0395  00F4               	movwf	___ftge@ff1
  7307  0396  0A84               	incf	4,f
  7308  0397  0800               	movf	0,w
  7309  0398  00F5               	movwf	___ftge@ff1+1
  7310  0399  0A84               	incf	4,f
  7311  039A  0800               	movf	0,w
  7312  039B  00F6               	movwf	___ftge@ff1+2
  7313  039C  1683               	bsf	3,5	;RP0=1, select bank1
  7314  039D  1303               	bcf	3,6	;RP1=0, select bank1
  7315  039E  083B               	movf	ISR@rule^(0+128),w
  7316  039F  00F7               	movwf	___ftge@ff2
  7317  03A0  083C               	movf	(ISR@rule+1)^(0+128),w
  7318  03A1  00F8               	movwf	___ftge@ff2+1
  7319  03A2  083D               	movf	(ISR@rule+2)^(0+128),w
  7320  03A3  00F9               	movwf	___ftge@ff2+2
  7321  03A4  160A  118A  248E  120A  118A  	fcall	___ftge
  7322  03A9  1C03               	btfss	3,0
  7323  03AA  2BC6               	goto	i1l3591
  7324                           
  7325                           ;main.c: 222: rGrande[a] = rule;
  7326  03AB  3003               	movlw	3
  7327  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7328  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  7329  03AE  00E2               	movwf	??_ISR
  7330  03AF  0862               	movf	??_ISR,w
  7331  03B0  00F0               	movwf	___bmul@multiplicand
  7332  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  7333  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  7334  03B3  0836               	movf	ISR@a_213^(0+128),w
  7335  03B4  160A  118A  2279  120A  118A  	fcall	___bmul
  7336  03B9  3E10               	addlw	_rGrande& (0+255)
  7337  03BA  0084               	movwf	4
  7338  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  7339  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  7340  03BD  083B               	movf	ISR@rule^(0+128),w
  7341  03BE  1783               	bsf	3,7	;select IRP bank2
  7342  03BF  0080               	movwf	0
  7343  03C0  0A84               	incf	4,f
  7344  03C1  083C               	movf	(ISR@rule+1)^(0+128),w
  7345  03C2  0080               	movwf	0
  7346  03C3  0A84               	incf	4,f
  7347  03C4  083D               	movf	(ISR@rule+2)^(0+128),w
  7348  03C5  0080               	movwf	0
  7349  03C6                     i1l3591:	
  7350                           
  7351                           ;main.c: 223: }
  7352                           ;main.c: 225: x += 1;
  7353  03C6  3000               	movlw	0
  7354  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  7355  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  7356  03C9  00A3               	movwf	___ftadd@f1
  7357  03CA  3080               	movlw	128
  7358  03CB  00A4               	movwf	___ftadd@f1+1
  7359  03CC  303F               	movlw	63
  7360  03CD  00A5               	movwf	___ftadd@f1+2
  7361  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  7362  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  7363  03D0  0842               	movf	ISR@x^(0+128),w
  7364  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  7365  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  7366  03D3  00A6               	movwf	___ftadd@f2
  7367  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  7368  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  7369  03D6  0843               	movf	(ISR@x+1)^(0+128),w
  7370  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  7371  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  7372  03D9  00A7               	movwf	___ftadd@f2+1
  7373  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  7374  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  7375  03DC  0844               	movf	(ISR@x+2)^(0+128),w
  7376  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  7377  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  7378  03DF  00A8               	movwf	___ftadd@f2+2
  7379  03E0  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7380  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  7381  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  7382  03E7  0823               	movf	?___ftadd,w
  7383  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  7384  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  7385  03EA  00C2               	movwf	ISR@x^(0+128)
  7386  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  7387  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  7388  03ED  0824               	movf	?___ftadd+1,w
  7389  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  7390  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  7391  03F0  00C3               	movwf	(ISR@x+1)^(0+128)
  7392  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  7393  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  7394  03F3  0825               	movf	?___ftadd+2,w
  7395  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  7396  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  7397  03F6  00C4               	movwf	(ISR@x+2)^(0+128)
  7398  03F7  3001               	movlw	1
  7399  03F8  07B6               	addwf	ISR@a_213^(0+128),f
  7400  03F9  1803               	skipnc
  7401  03FA  0AB7               	incf	(ISR@a_213+1)^(0+128),f
  7402  03FB  3000               	movlw	0
  7403  03FC  07B7               	addwf	(ISR@a_213+1)^(0+128),f
  7404  03FD  0837               	movf	(ISR@a_213+1)^(0+128),w
  7405  03FE  3A80               	xorlw	128
  7406  03FF  00FF               	movwf	127
  7407  0400  3080               	movlw	128
  7408  0401  027F               	subwf	127,w
  7409  0402  1D03               	skipz
  7410  0403  2C06               	goto	u485_25
  7411  0404  3010               	movlw	16
  7412  0405  0236               	subwf	ISR@a_213^(0+128),w
  7413  0406                     u485_25:	
  7414  0406  1C03               	skipc
  7415  0407  2B3B               	goto	i1l3587
  7416  0408                     i1l3597:	
  7417                           
  7418                           ;main.c: 226: }
  7419                           ;main.c: 227: }
  7420                           ;main.c: 231: x = 0;
  7421  0408  3000               	movlw	0
  7422  0409  1683               	bsf	3,5	;RP0=1, select bank1
  7423  040A  1303               	bcf	3,6	;RP1=0, select bank1
  7424  040B  00C2               	movwf	ISR@x^(0+128)
  7425  040C  3000               	movlw	0
  7426  040D  00C3               	movwf	(ISR@x+1)^(0+128)
  7427  040E  3000               	movlw	0
  7428  040F  00C4               	movwf	(ISR@x+2)^(0+128)
  7429                           
  7430                           ;main.c: 232: float total_area = 0;
  7431  0410  3000               	movlw	0
  7432  0411  00B8               	movwf	ISR@total_area^(0+128)
  7433  0412  3000               	movlw	0
  7434  0413  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7435  0414  3000               	movlw	0
  7436  0415  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7437                           
  7438                           ;main.c: 233: float soma = 0;
  7439  0416  3000               	movlw	0
  7440  0417  00AD               	movwf	ISR@soma^(0+128)
  7441  0418  3000               	movlw	0
  7442  0419  00AE               	movwf	(ISR@soma+1)^(0+128)
  7443  041A  3000               	movlw	0
  7444  041B  00AF               	movwf	(ISR@soma+2)^(0+128)
  7445                           
  7446                           ;main.c: 234: for (int a = 0; a <= 15; a++) {
  7447  041C  01BE               	clrf	ISR@a_216^(0+128)
  7448  041D  01BF               	clrf	(ISR@a_216+1)^(0+128)
  7449  041E  083F               	movf	(ISR@a_216+1)^(0+128),w
  7450  041F  3A80               	xorlw	128
  7451  0420  00FF               	movwf	127
  7452  0421  3080               	movlw	128
  7453  0422  027F               	subwf	127,w
  7454  0423  1D03               	skipz
  7455  0424  2C27               	goto	u486_25
  7456  0425  3010               	movlw	16
  7457  0426  023E               	subwf	ISR@a_216^(0+128),w
  7458  0427                     u486_25:	
  7459  0427  1803               	btfsc	3,0
  7460  0428  2EA3               	goto	i1l3627
  7461  0429                     i1l123:	
  7462                           
  7463                           ;main.c: 235: if (a >= 0 && a <= 5) {
  7464  0429  1683               	bsf	3,5	;RP0=1, select bank1
  7465  042A  1303               	bcf	3,6	;RP1=0, select bank1
  7466  042B  1BBF               	btfsc	(ISR@a_216+1)^(0+128),7
  7467  042C  2CDF               	goto	i1l3609
  7468  042D  083F               	movf	(ISR@a_216+1)^(0+128),w
  7469  042E  3A80               	xorlw	128
  7470  042F  00FF               	movwf	127
  7471  0430  3080               	movlw	128
  7472  0431  027F               	subwf	127,w
  7473  0432  1D03               	skipz
  7474  0433  2C36               	goto	u488_25
  7475  0434  3006               	movlw	6
  7476  0435  023E               	subwf	ISR@a_216^(0+128),w
  7477  0436                     u488_25:	
  7478  0436  1803               	skipnc
  7479  0437  2CDF               	goto	i1l3609
  7480                           
  7481                           ;main.c: 236: total_area += rBaixo[a];
  7482  0438  3003               	movlw	3
  7483  0439  1283               	bcf	3,5	;RP0=0, select bank0
  7484  043A  1303               	bcf	3,6	;RP1=0, select bank0
  7485  043B  00E2               	movwf	??_ISR
  7486  043C  0862               	movf	??_ISR,w
  7487  043D  00F0               	movwf	___bmul@multiplicand
  7488  043E  1683               	bsf	3,5	;RP0=1, select bank1
  7489  043F  1303               	bcf	3,6	;RP1=0, select bank1
  7490  0440  083E               	movf	ISR@a_216^(0+128),w
  7491  0441  160A  118A  2279  120A  118A  	fcall	___bmul
  7492  0446  3E90               	addlw	_rBaixo& (0+255)
  7493  0447  0084               	movwf	4
  7494  0448  1783               	bsf	3,7	;select IRP bank3
  7495  0449  0800               	movf	0,w
  7496  044A  1283               	bcf	3,5	;RP0=0, select bank0
  7497  044B  1303               	bcf	3,6	;RP1=0, select bank0
  7498  044C  00A3               	movwf	___ftadd@f1
  7499  044D  0A84               	incf	4,f
  7500  044E  0800               	movf	0,w
  7501  044F  00A4               	movwf	___ftadd@f1+1
  7502  0450  0A84               	incf	4,f
  7503  0451  0800               	movf	0,w
  7504  0452  00A5               	movwf	___ftadd@f1+2
  7505  0453  1683               	bsf	3,5	;RP0=1, select bank1
  7506  0454  1303               	bcf	3,6	;RP1=0, select bank1
  7507  0455  0838               	movf	ISR@total_area^(0+128),w
  7508  0456  1283               	bcf	3,5	;RP0=0, select bank0
  7509  0457  1303               	bcf	3,6	;RP1=0, select bank0
  7510  0458  00A6               	movwf	___ftadd@f2
  7511  0459  1683               	bsf	3,5	;RP0=1, select bank1
  7512  045A  1303               	bcf	3,6	;RP1=0, select bank1
  7513  045B  0839               	movf	(ISR@total_area+1)^(0+128),w
  7514  045C  1283               	bcf	3,5	;RP0=0, select bank0
  7515  045D  1303               	bcf	3,6	;RP1=0, select bank0
  7516  045E  00A7               	movwf	___ftadd@f2+1
  7517  045F  1683               	bsf	3,5	;RP0=1, select bank1
  7518  0460  1303               	bcf	3,6	;RP1=0, select bank1
  7519  0461  083A               	movf	(ISR@total_area+2)^(0+128),w
  7520  0462  1283               	bcf	3,5	;RP0=0, select bank0
  7521  0463  1303               	bcf	3,6	;RP1=0, select bank0
  7522  0464  00A8               	movwf	___ftadd@f2+2
  7523  0465  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7524  046A  1283               	bcf	3,5	;RP0=0, select bank0
  7525  046B  1303               	bcf	3,6	;RP1=0, select bank0
  7526  046C  0823               	movf	?___ftadd,w
  7527  046D  1683               	bsf	3,5	;RP0=1, select bank1
  7528  046E  1303               	bcf	3,6	;RP1=0, select bank1
  7529  046F  00B8               	movwf	ISR@total_area^(0+128)
  7530  0470  1283               	bcf	3,5	;RP0=0, select bank0
  7531  0471  1303               	bcf	3,6	;RP1=0, select bank0
  7532  0472  0824               	movf	?___ftadd+1,w
  7533  0473  1683               	bsf	3,5	;RP0=1, select bank1
  7534  0474  1303               	bcf	3,6	;RP1=0, select bank1
  7535  0475  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7536  0476  1283               	bcf	3,5	;RP0=0, select bank0
  7537  0477  1303               	bcf	3,6	;RP1=0, select bank0
  7538  0478  0825               	movf	?___ftadd+2,w
  7539  0479  1683               	bsf	3,5	;RP0=1, select bank1
  7540  047A  1303               	bcf	3,6	;RP1=0, select bank1
  7541  047B  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7542                           
  7543                           ;main.c: 237: soma += (x * rBaixo[a]);
  7544  047C  3003               	movlw	3
  7545  047D  1283               	bcf	3,5	;RP0=0, select bank0
  7546  047E  1303               	bcf	3,6	;RP1=0, select bank0
  7547  047F  00E2               	movwf	??_ISR
  7548  0480  0862               	movf	??_ISR,w
  7549  0481  00F0               	movwf	___bmul@multiplicand
  7550  0482  1683               	bsf	3,5	;RP0=1, select bank1
  7551  0483  1303               	bcf	3,6	;RP1=0, select bank1
  7552  0484  083E               	movf	ISR@a_216^(0+128),w
  7553  0485  160A  118A  2279  120A  118A  	fcall	___bmul
  7554  048A  3E90               	addlw	_rBaixo& (0+255)
  7555  048B  0084               	movwf	4
  7556  048C  1783               	bsf	3,7	;select IRP bank3
  7557  048D  0800               	movf	0,w
  7558  048E  1283               	bcf	3,5	;RP0=0, select bank0
  7559  048F  1303               	bcf	3,6	;RP1=0, select bank0
  7560  0490  00D5               	movwf	___ftmul@f2
  7561  0491  0A84               	incf	4,f
  7562  0492  0800               	movf	0,w
  7563  0493  00D6               	movwf	___ftmul@f2+1
  7564  0494  0A84               	incf	4,f
  7565  0495  0800               	movf	0,w
  7566  0496  00D7               	movwf	___ftmul@f2+2
  7567  0497  1683               	bsf	3,5	;RP0=1, select bank1
  7568  0498  1303               	bcf	3,6	;RP1=0, select bank1
  7569  0499  0842               	movf	ISR@x^(0+128),w
  7570  049A  1283               	bcf	3,5	;RP0=0, select bank0
  7571  049B  1303               	bcf	3,6	;RP1=0, select bank0
  7572  049C  00D2               	movwf	___ftmul@f1
  7573  049D  1683               	bsf	3,5	;RP0=1, select bank1
  7574  049E  1303               	bcf	3,6	;RP1=0, select bank1
  7575  049F  0843               	movf	(ISR@x+1)^(0+128),w
  7576  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  7577  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  7578  04A2  00D3               	movwf	___ftmul@f1+1
  7579  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  7580  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  7581  04A5  0844               	movf	(ISR@x+2)^(0+128),w
  7582  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  7583  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  7584  04A8  00D4               	movwf	___ftmul@f1+2
  7585  04A9  120A  158A  24CE  120A  118A  	fcall	___ftmul
  7586  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  7587  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  7588  04B0  0852               	movf	?___ftmul,w
  7589  04B1  00A3               	movwf	___ftadd@f1
  7590  04B2  0853               	movf	?___ftmul+1,w
  7591  04B3  00A4               	movwf	___ftadd@f1+1
  7592  04B4  0854               	movf	?___ftmul+2,w
  7593  04B5  00A5               	movwf	___ftadd@f1+2
  7594  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  7595  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  7596  04B8  082D               	movf	ISR@soma^(0+128),w
  7597  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  7598  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  7599  04BB  00A6               	movwf	___ftadd@f2
  7600  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  7601  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  7602  04BE  082E               	movf	(ISR@soma+1)^(0+128),w
  7603  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  7604  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  7605  04C1  00A7               	movwf	___ftadd@f2+1
  7606  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  7607  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  7608  04C4  082F               	movf	(ISR@soma+2)^(0+128),w
  7609  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  7610  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  7611  04C7  00A8               	movwf	___ftadd@f2+2
  7612  04C8  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7613  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  7614  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  7615  04CF  0823               	movf	?___ftadd,w
  7616  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  7617  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  7618  04D2  00AD               	movwf	ISR@soma^(0+128)
  7619  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  7620  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  7621  04D5  0824               	movf	?___ftadd+1,w
  7622  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  7623  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  7624  04D8  00AE               	movwf	(ISR@soma+1)^(0+128)
  7625  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  7626  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  7627  04DB  0825               	movf	?___ftadd+2,w
  7628  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  7629  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  7630  04DE  00AF               	movwf	(ISR@soma+2)^(0+128)
  7631  04DF                     i1l3609:	
  7632                           
  7633                           ;main.c: 238: }
  7634                           ;main.c: 240: if (a >= 5 && a <= 10) {
  7635  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  7636  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  7637  04E1  083F               	movf	(ISR@a_216+1)^(0+128),w
  7638  04E2  3A80               	xorlw	128
  7639  04E3  00FF               	movwf	127
  7640  04E4  3080               	movlw	128
  7641  04E5  027F               	subwf	127,w
  7642  04E6  1D03               	skipz
  7643  04E7  2CEA               	goto	u489_25
  7644  04E8  3005               	movlw	5
  7645  04E9  023E               	subwf	ISR@a_216^(0+128),w
  7646  04EA                     u489_25:	
  7647  04EA  1C03               	skipc
  7648  04EB  2DA0               	goto	i1l3615
  7649  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  7650  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  7651  04EE  083F               	movf	(ISR@a_216+1)^(0+128),w
  7652  04EF  3A80               	xorlw	128
  7653  04F0  00FF               	movwf	127
  7654  04F1  3080               	movlw	128
  7655  04F2  027F               	subwf	127,w
  7656  04F3  1D03               	skipz
  7657  04F4  2CF7               	goto	u490_25
  7658  04F5  300B               	movlw	11
  7659  04F6  023E               	subwf	ISR@a_216^(0+128),w
  7660  04F7                     u490_25:	
  7661  04F7  1803               	skipnc
  7662  04F8  2DA0               	goto	i1l3615
  7663                           
  7664                           ;main.c: 241: total_area += rMedio[a];
  7665  04F9  3003               	movlw	3
  7666  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  7667  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  7668  04FC  00E2               	movwf	??_ISR
  7669  04FD  0862               	movf	??_ISR,w
  7670  04FE  00F0               	movwf	___bmul@multiplicand
  7671  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  7672  0500  1303               	bcf	3,6	;RP1=0, select bank1
  7673  0501  083E               	movf	ISR@a_216^(0+128),w
  7674  0502  160A  118A  2279  120A  118A  	fcall	___bmul
  7675  0507  3E40               	addlw	_rMedio& (0+255)
  7676  0508  0084               	movwf	4
  7677  0509  1783               	bsf	3,7	;select IRP bank2
  7678  050A  0800               	movf	0,w
  7679  050B  1283               	bcf	3,5	;RP0=0, select bank0
  7680  050C  1303               	bcf	3,6	;RP1=0, select bank0
  7681  050D  00A3               	movwf	___ftadd@f1
  7682  050E  0A84               	incf	4,f
  7683  050F  0800               	movf	0,w
  7684  0510  00A4               	movwf	___ftadd@f1+1
  7685  0511  0A84               	incf	4,f
  7686  0512  0800               	movf	0,w
  7687  0513  00A5               	movwf	___ftadd@f1+2
  7688  0514  1683               	bsf	3,5	;RP0=1, select bank1
  7689  0515  1303               	bcf	3,6	;RP1=0, select bank1
  7690  0516  0838               	movf	ISR@total_area^(0+128),w
  7691  0517  1283               	bcf	3,5	;RP0=0, select bank0
  7692  0518  1303               	bcf	3,6	;RP1=0, select bank0
  7693  0519  00A6               	movwf	___ftadd@f2
  7694  051A  1683               	bsf	3,5	;RP0=1, select bank1
  7695  051B  1303               	bcf	3,6	;RP1=0, select bank1
  7696  051C  0839               	movf	(ISR@total_area+1)^(0+128),w
  7697  051D  1283               	bcf	3,5	;RP0=0, select bank0
  7698  051E  1303               	bcf	3,6	;RP1=0, select bank0
  7699  051F  00A7               	movwf	___ftadd@f2+1
  7700  0520  1683               	bsf	3,5	;RP0=1, select bank1
  7701  0521  1303               	bcf	3,6	;RP1=0, select bank1
  7702  0522  083A               	movf	(ISR@total_area+2)^(0+128),w
  7703  0523  1283               	bcf	3,5	;RP0=0, select bank0
  7704  0524  1303               	bcf	3,6	;RP1=0, select bank0
  7705  0525  00A8               	movwf	___ftadd@f2+2
  7706  0526  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7707  052B  1283               	bcf	3,5	;RP0=0, select bank0
  7708  052C  1303               	bcf	3,6	;RP1=0, select bank0
  7709  052D  0823               	movf	?___ftadd,w
  7710  052E  1683               	bsf	3,5	;RP0=1, select bank1
  7711  052F  1303               	bcf	3,6	;RP1=0, select bank1
  7712  0530  00B8               	movwf	ISR@total_area^(0+128)
  7713  0531  1283               	bcf	3,5	;RP0=0, select bank0
  7714  0532  1303               	bcf	3,6	;RP1=0, select bank0
  7715  0533  0824               	movf	?___ftadd+1,w
  7716  0534  1683               	bsf	3,5	;RP0=1, select bank1
  7717  0535  1303               	bcf	3,6	;RP1=0, select bank1
  7718  0536  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7719  0537  1283               	bcf	3,5	;RP0=0, select bank0
  7720  0538  1303               	bcf	3,6	;RP1=0, select bank0
  7721  0539  0825               	movf	?___ftadd+2,w
  7722  053A  1683               	bsf	3,5	;RP0=1, select bank1
  7723  053B  1303               	bcf	3,6	;RP1=0, select bank1
  7724  053C  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7725                           
  7726                           ;main.c: 242: soma += (x * rMedio[a]);
  7727  053D  3003               	movlw	3
  7728  053E  1283               	bcf	3,5	;RP0=0, select bank0
  7729  053F  1303               	bcf	3,6	;RP1=0, select bank0
  7730  0540  00E2               	movwf	??_ISR
  7731  0541  0862               	movf	??_ISR,w
  7732  0542  00F0               	movwf	___bmul@multiplicand
  7733  0543  1683               	bsf	3,5	;RP0=1, select bank1
  7734  0544  1303               	bcf	3,6	;RP1=0, select bank1
  7735  0545  083E               	movf	ISR@a_216^(0+128),w
  7736  0546  160A  118A  2279  120A  118A  	fcall	___bmul
  7737  054B  3E40               	addlw	_rMedio& (0+255)
  7738  054C  0084               	movwf	4
  7739  054D  1783               	bsf	3,7	;select IRP bank2
  7740  054E  0800               	movf	0,w
  7741  054F  1283               	bcf	3,5	;RP0=0, select bank0
  7742  0550  1303               	bcf	3,6	;RP1=0, select bank0
  7743  0551  00D5               	movwf	___ftmul@f2
  7744  0552  0A84               	incf	4,f
  7745  0553  0800               	movf	0,w
  7746  0554  00D6               	movwf	___ftmul@f2+1
  7747  0555  0A84               	incf	4,f
  7748  0556  0800               	movf	0,w
  7749  0557  00D7               	movwf	___ftmul@f2+2
  7750  0558  1683               	bsf	3,5	;RP0=1, select bank1
  7751  0559  1303               	bcf	3,6	;RP1=0, select bank1
  7752  055A  0842               	movf	ISR@x^(0+128),w
  7753  055B  1283               	bcf	3,5	;RP0=0, select bank0
  7754  055C  1303               	bcf	3,6	;RP1=0, select bank0
  7755  055D  00D2               	movwf	___ftmul@f1
  7756  055E  1683               	bsf	3,5	;RP0=1, select bank1
  7757  055F  1303               	bcf	3,6	;RP1=0, select bank1
  7758  0560  0843               	movf	(ISR@x+1)^(0+128),w
  7759  0561  1283               	bcf	3,5	;RP0=0, select bank0
  7760  0562  1303               	bcf	3,6	;RP1=0, select bank0
  7761  0563  00D3               	movwf	___ftmul@f1+1
  7762  0564  1683               	bsf	3,5	;RP0=1, select bank1
  7763  0565  1303               	bcf	3,6	;RP1=0, select bank1
  7764  0566  0844               	movf	(ISR@x+2)^(0+128),w
  7765  0567  1283               	bcf	3,5	;RP0=0, select bank0
  7766  0568  1303               	bcf	3,6	;RP1=0, select bank0
  7767  0569  00D4               	movwf	___ftmul@f1+2
  7768  056A  120A  158A  24CE  120A  118A  	fcall	___ftmul
  7769  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7770  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7771  0571  0852               	movf	?___ftmul,w
  7772  0572  00A3               	movwf	___ftadd@f1
  7773  0573  0853               	movf	?___ftmul+1,w
  7774  0574  00A4               	movwf	___ftadd@f1+1
  7775  0575  0854               	movf	?___ftmul+2,w
  7776  0576  00A5               	movwf	___ftadd@f1+2
  7777  0577  1683               	bsf	3,5	;RP0=1, select bank1
  7778  0578  1303               	bcf	3,6	;RP1=0, select bank1
  7779  0579  082D               	movf	ISR@soma^(0+128),w
  7780  057A  1283               	bcf	3,5	;RP0=0, select bank0
  7781  057B  1303               	bcf	3,6	;RP1=0, select bank0
  7782  057C  00A6               	movwf	___ftadd@f2
  7783  057D  1683               	bsf	3,5	;RP0=1, select bank1
  7784  057E  1303               	bcf	3,6	;RP1=0, select bank1
  7785  057F  082E               	movf	(ISR@soma+1)^(0+128),w
  7786  0580  1283               	bcf	3,5	;RP0=0, select bank0
  7787  0581  1303               	bcf	3,6	;RP1=0, select bank0
  7788  0582  00A7               	movwf	___ftadd@f2+1
  7789  0583  1683               	bsf	3,5	;RP0=1, select bank1
  7790  0584  1303               	bcf	3,6	;RP1=0, select bank1
  7791  0585  082F               	movf	(ISR@soma+2)^(0+128),w
  7792  0586  1283               	bcf	3,5	;RP0=0, select bank0
  7793  0587  1303               	bcf	3,6	;RP1=0, select bank0
  7794  0588  00A8               	movwf	___ftadd@f2+2
  7795  0589  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7796  058E  1283               	bcf	3,5	;RP0=0, select bank0
  7797  058F  1303               	bcf	3,6	;RP1=0, select bank0
  7798  0590  0823               	movf	?___ftadd,w
  7799  0591  1683               	bsf	3,5	;RP0=1, select bank1
  7800  0592  1303               	bcf	3,6	;RP1=0, select bank1
  7801  0593  00AD               	movwf	ISR@soma^(0+128)
  7802  0594  1283               	bcf	3,5	;RP0=0, select bank0
  7803  0595  1303               	bcf	3,6	;RP1=0, select bank0
  7804  0596  0824               	movf	?___ftadd+1,w
  7805  0597  1683               	bsf	3,5	;RP0=1, select bank1
  7806  0598  1303               	bcf	3,6	;RP1=0, select bank1
  7807  0599  00AE               	movwf	(ISR@soma+1)^(0+128)
  7808  059A  1283               	bcf	3,5	;RP0=0, select bank0
  7809  059B  1303               	bcf	3,6	;RP1=0, select bank0
  7810  059C  0825               	movf	?___ftadd+2,w
  7811  059D  1683               	bsf	3,5	;RP0=1, select bank1
  7812  059E  1303               	bcf	3,6	;RP1=0, select bank1
  7813  059F  00AF               	movwf	(ISR@soma+2)^(0+128)
  7814  05A0                     i1l3615:	
  7815                           
  7816                           ;main.c: 243: }
  7817                           ;main.c: 245: if (a >= 10 && a <= 15) {
  7818  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  7819  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  7820  05A2  083F               	movf	(ISR@a_216+1)^(0+128),w
  7821  05A3  3A80               	xorlw	128
  7822  05A4  00FF               	movwf	127
  7823  05A5  3080               	movlw	128
  7824  05A6  027F               	subwf	127,w
  7825  05A7  1D03               	skipz
  7826  05A8  2DAB               	goto	u491_25
  7827  05A9  300A               	movlw	10
  7828  05AA  023E               	subwf	ISR@a_216^(0+128),w
  7829  05AB                     u491_25:	
  7830  05AB  1C03               	skipc
  7831  05AC  2E61               	goto	i1l3621
  7832  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  7833  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  7834  05AF  083F               	movf	(ISR@a_216+1)^(0+128),w
  7835  05B0  3A80               	xorlw	128
  7836  05B1  00FF               	movwf	127
  7837  05B2  3080               	movlw	128
  7838  05B3  027F               	subwf	127,w
  7839  05B4  1D03               	skipz
  7840  05B5  2DB8               	goto	u492_25
  7841  05B6  3010               	movlw	16
  7842  05B7  023E               	subwf	ISR@a_216^(0+128),w
  7843  05B8                     u492_25:	
  7844  05B8  1803               	skipnc
  7845  05B9  2E61               	goto	i1l3621
  7846                           
  7847                           ;main.c: 246: total_area += rGrande[a];
  7848  05BA  3003               	movlw	3
  7849  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  7850  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  7851  05BD  00E2               	movwf	??_ISR
  7852  05BE  0862               	movf	??_ISR,w
  7853  05BF  00F0               	movwf	___bmul@multiplicand
  7854  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  7855  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  7856  05C2  083E               	movf	ISR@a_216^(0+128),w
  7857  05C3  160A  118A  2279  120A  118A  	fcall	___bmul
  7858  05C8  3E10               	addlw	_rGrande& (0+255)
  7859  05C9  0084               	movwf	4
  7860  05CA  1783               	bsf	3,7	;select IRP bank2
  7861  05CB  0800               	movf	0,w
  7862  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  7863  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  7864  05CE  00A3               	movwf	___ftadd@f1
  7865  05CF  0A84               	incf	4,f
  7866  05D0  0800               	movf	0,w
  7867  05D1  00A4               	movwf	___ftadd@f1+1
  7868  05D2  0A84               	incf	4,f
  7869  05D3  0800               	movf	0,w
  7870  05D4  00A5               	movwf	___ftadd@f1+2
  7871  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  7872  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  7873  05D7  0838               	movf	ISR@total_area^(0+128),w
  7874  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  7875  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  7876  05DA  00A6               	movwf	___ftadd@f2
  7877  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  7878  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  7879  05DD  0839               	movf	(ISR@total_area+1)^(0+128),w
  7880  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  7881  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  7882  05E0  00A7               	movwf	___ftadd@f2+1
  7883  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  7884  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  7885  05E3  083A               	movf	(ISR@total_area+2)^(0+128),w
  7886  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  7887  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  7888  05E6  00A8               	movwf	___ftadd@f2+2
  7889  05E7  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7890  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  7891  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  7892  05EE  0823               	movf	?___ftadd,w
  7893  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  7894  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  7895  05F1  00B8               	movwf	ISR@total_area^(0+128)
  7896  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  7897  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  7898  05F4  0824               	movf	?___ftadd+1,w
  7899  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  7900  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  7901  05F7  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7902  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  7903  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  7904  05FA  0825               	movf	?___ftadd+2,w
  7905  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  7906  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  7907  05FD  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7908                           
  7909                           ;main.c: 247: soma += (x * rGrande[a]);
  7910  05FE  3003               	movlw	3
  7911  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  7912  0600  1303               	bcf	3,6	;RP1=0, select bank0
  7913  0601  00E2               	movwf	??_ISR
  7914  0602  0862               	movf	??_ISR,w
  7915  0603  00F0               	movwf	___bmul@multiplicand
  7916  0604  1683               	bsf	3,5	;RP0=1, select bank1
  7917  0605  1303               	bcf	3,6	;RP1=0, select bank1
  7918  0606  083E               	movf	ISR@a_216^(0+128),w
  7919  0607  160A  118A  2279  120A  118A  	fcall	___bmul
  7920  060C  3E10               	addlw	_rGrande& (0+255)
  7921  060D  0084               	movwf	4
  7922  060E  1783               	bsf	3,7	;select IRP bank2
  7923  060F  0800               	movf	0,w
  7924  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7925  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7926  0612  00D5               	movwf	___ftmul@f2
  7927  0613  0A84               	incf	4,f
  7928  0614  0800               	movf	0,w
  7929  0615  00D6               	movwf	___ftmul@f2+1
  7930  0616  0A84               	incf	4,f
  7931  0617  0800               	movf	0,w
  7932  0618  00D7               	movwf	___ftmul@f2+2
  7933  0619  1683               	bsf	3,5	;RP0=1, select bank1
  7934  061A  1303               	bcf	3,6	;RP1=0, select bank1
  7935  061B  0842               	movf	ISR@x^(0+128),w
  7936  061C  1283               	bcf	3,5	;RP0=0, select bank0
  7937  061D  1303               	bcf	3,6	;RP1=0, select bank0
  7938  061E  00D2               	movwf	___ftmul@f1
  7939  061F  1683               	bsf	3,5	;RP0=1, select bank1
  7940  0620  1303               	bcf	3,6	;RP1=0, select bank1
  7941  0621  0843               	movf	(ISR@x+1)^(0+128),w
  7942  0622  1283               	bcf	3,5	;RP0=0, select bank0
  7943  0623  1303               	bcf	3,6	;RP1=0, select bank0
  7944  0624  00D3               	movwf	___ftmul@f1+1
  7945  0625  1683               	bsf	3,5	;RP0=1, select bank1
  7946  0626  1303               	bcf	3,6	;RP1=0, select bank1
  7947  0627  0844               	movf	(ISR@x+2)^(0+128),w
  7948  0628  1283               	bcf	3,5	;RP0=0, select bank0
  7949  0629  1303               	bcf	3,6	;RP1=0, select bank0
  7950  062A  00D4               	movwf	___ftmul@f1+2
  7951  062B  120A  158A  24CE  120A  118A  	fcall	___ftmul
  7952  0630  1283               	bcf	3,5	;RP0=0, select bank0
  7953  0631  1303               	bcf	3,6	;RP1=0, select bank0
  7954  0632  0852               	movf	?___ftmul,w
  7955  0633  00A3               	movwf	___ftadd@f1
  7956  0634  0853               	movf	?___ftmul+1,w
  7957  0635  00A4               	movwf	___ftadd@f1+1
  7958  0636  0854               	movf	?___ftmul+2,w
  7959  0637  00A5               	movwf	___ftadd@f1+2
  7960  0638  1683               	bsf	3,5	;RP0=1, select bank1
  7961  0639  1303               	bcf	3,6	;RP1=0, select bank1
  7962  063A  082D               	movf	ISR@soma^(0+128),w
  7963  063B  1283               	bcf	3,5	;RP0=0, select bank0
  7964  063C  1303               	bcf	3,6	;RP1=0, select bank0
  7965  063D  00A6               	movwf	___ftadd@f2
  7966  063E  1683               	bsf	3,5	;RP0=1, select bank1
  7967  063F  1303               	bcf	3,6	;RP1=0, select bank1
  7968  0640  082E               	movf	(ISR@soma+1)^(0+128),w
  7969  0641  1283               	bcf	3,5	;RP0=0, select bank0
  7970  0642  1303               	bcf	3,6	;RP1=0, select bank0
  7971  0643  00A7               	movwf	___ftadd@f2+1
  7972  0644  1683               	bsf	3,5	;RP0=1, select bank1
  7973  0645  1303               	bcf	3,6	;RP1=0, select bank1
  7974  0646  082F               	movf	(ISR@soma+2)^(0+128),w
  7975  0647  1283               	bcf	3,5	;RP0=0, select bank0
  7976  0648  1303               	bcf	3,6	;RP1=0, select bank0
  7977  0649  00A8               	movwf	___ftadd@f2+2
  7978  064A  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7979  064F  1283               	bcf	3,5	;RP0=0, select bank0
  7980  0650  1303               	bcf	3,6	;RP1=0, select bank0
  7981  0651  0823               	movf	?___ftadd,w
  7982  0652  1683               	bsf	3,5	;RP0=1, select bank1
  7983  0653  1303               	bcf	3,6	;RP1=0, select bank1
  7984  0654  00AD               	movwf	ISR@soma^(0+128)
  7985  0655  1283               	bcf	3,5	;RP0=0, select bank0
  7986  0656  1303               	bcf	3,6	;RP1=0, select bank0
  7987  0657  0824               	movf	?___ftadd+1,w
  7988  0658  1683               	bsf	3,5	;RP0=1, select bank1
  7989  0659  1303               	bcf	3,6	;RP1=0, select bank1
  7990  065A  00AE               	movwf	(ISR@soma+1)^(0+128)
  7991  065B  1283               	bcf	3,5	;RP0=0, select bank0
  7992  065C  1303               	bcf	3,6	;RP1=0, select bank0
  7993  065D  0825               	movf	?___ftadd+2,w
  7994  065E  1683               	bsf	3,5	;RP0=1, select bank1
  7995  065F  1303               	bcf	3,6	;RP1=0, select bank1
  7996  0660  00AF               	movwf	(ISR@soma+2)^(0+128)
  7997  0661                     i1l3621:	
  7998                           
  7999                           ;main.c: 248: }
  8000                           ;main.c: 249: x += 1;
  8001  0661  3000               	movlw	0
  8002  0662  1283               	bcf	3,5	;RP0=0, select bank0
  8003  0663  1303               	bcf	3,6	;RP1=0, select bank0
  8004  0664  00A3               	movwf	___ftadd@f1
  8005  0665  3080               	movlw	128
  8006  0666  00A4               	movwf	___ftadd@f1+1
  8007  0667  303F               	movlw	63
  8008  0668  00A5               	movwf	___ftadd@f1+2
  8009  0669  1683               	bsf	3,5	;RP0=1, select bank1
  8010  066A  1303               	bcf	3,6	;RP1=0, select bank1
  8011  066B  0842               	movf	ISR@x^(0+128),w
  8012  066C  1283               	bcf	3,5	;RP0=0, select bank0
  8013  066D  1303               	bcf	3,6	;RP1=0, select bank0
  8014  066E  00A6               	movwf	___ftadd@f2
  8015  066F  1683               	bsf	3,5	;RP0=1, select bank1
  8016  0670  1303               	bcf	3,6	;RP1=0, select bank1
  8017  0671  0843               	movf	(ISR@x+1)^(0+128),w
  8018  0672  1283               	bcf	3,5	;RP0=0, select bank0
  8019  0673  1303               	bcf	3,6	;RP1=0, select bank0
  8020  0674  00A7               	movwf	___ftadd@f2+1
  8021  0675  1683               	bsf	3,5	;RP0=1, select bank1
  8022  0676  1303               	bcf	3,6	;RP1=0, select bank1
  8023  0677  0844               	movf	(ISR@x+2)^(0+128),w
  8024  0678  1283               	bcf	3,5	;RP0=0, select bank0
  8025  0679  1303               	bcf	3,6	;RP1=0, select bank0
  8026  067A  00A8               	movwf	___ftadd@f2+2
  8027  067B  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8028  0680  1283               	bcf	3,5	;RP0=0, select bank0
  8029  0681  1303               	bcf	3,6	;RP1=0, select bank0
  8030  0682  0823               	movf	?___ftadd,w
  8031  0683  1683               	bsf	3,5	;RP0=1, select bank1
  8032  0684  1303               	bcf	3,6	;RP1=0, select bank1
  8033  0685  00C2               	movwf	ISR@x^(0+128)
  8034  0686  1283               	bcf	3,5	;RP0=0, select bank0
  8035  0687  1303               	bcf	3,6	;RP1=0, select bank0
  8036  0688  0824               	movf	?___ftadd+1,w
  8037  0689  1683               	bsf	3,5	;RP0=1, select bank1
  8038  068A  1303               	bcf	3,6	;RP1=0, select bank1
  8039  068B  00C3               	movwf	(ISR@x+1)^(0+128)
  8040  068C  1283               	bcf	3,5	;RP0=0, select bank0
  8041  068D  1303               	bcf	3,6	;RP1=0, select bank0
  8042  068E  0825               	movf	?___ftadd+2,w
  8043  068F  1683               	bsf	3,5	;RP0=1, select bank1
  8044  0690  1303               	bcf	3,6	;RP1=0, select bank1
  8045  0691  00C4               	movwf	(ISR@x+2)^(0+128)
  8046  0692  3001               	movlw	1
  8047  0693  07BE               	addwf	ISR@a_216^(0+128),f
  8048  0694  1803               	skipnc
  8049  0695  0ABF               	incf	(ISR@a_216+1)^(0+128),f
  8050  0696  3000               	movlw	0
  8051  0697  07BF               	addwf	(ISR@a_216+1)^(0+128),f
  8052  0698  083F               	movf	(ISR@a_216+1)^(0+128),w
  8053  0699  3A80               	xorlw	128
  8054  069A  00FF               	movwf	127
  8055  069B  3080               	movlw	128
  8056  069C  027F               	subwf	127,w
  8057  069D  1D03               	skipz
  8058  069E  2EA1               	goto	u493_25
  8059  069F  3010               	movlw	16
  8060  06A0  023E               	subwf	ISR@a_216^(0+128),w
  8061  06A1                     u493_25:	
  8062  06A1  1C03               	skipc
  8063  06A2  2C29               	goto	i1l123
  8064  06A3                     i1l3627:	
  8065                           
  8066                           ;main.c: 250: }
  8067                           ;main.c: 253: float reajuste = 0;
  8068  06A3  3000               	movlw	0
  8069  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  8070  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  8071  06A6  00A6               	movwf	ISR@reajuste^(0+128)
  8072  06A7  3000               	movlw	0
  8073  06A8  00A7               	movwf	(ISR@reajuste+1)^(0+128)
  8074  06A9  3000               	movlw	0
  8075  06AA  00A8               	movwf	(ISR@reajuste+2)^(0+128)
  8076                           
  8077                           ;main.c: 254: if (total_area != 0) {
  8078  06AB  083A               	movf	(ISR@total_area+2)^(0+128),w
  8079  06AC  0439               	iorwf	(ISR@total_area+1)^(0+128),w
  8080  06AD  0438               	iorwf	ISR@total_area^(0+128),w
  8081  06AE  1903               	skipnz
  8082  06AF  2EE9               	goto	i1l3631
  8083                           
  8084                           ;main.c: 255: reajuste = soma / total_area;
  8085  06B0  0838               	movf	ISR@total_area^(0+128),w
  8086  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  8087  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  8088  06B3  00B0               	movwf	___ftdiv@f2
  8089  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  8090  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  8091  06B6  0839               	movf	(ISR@total_area+1)^(0+128),w
  8092  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  8093  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  8094  06B9  00B1               	movwf	___ftdiv@f2+1
  8095  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  8096  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  8097  06BC  083A               	movf	(ISR@total_area+2)^(0+128),w
  8098  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  8099  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  8100  06BF  00B2               	movwf	___ftdiv@f2+2
  8101  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  8102  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  8103  06C2  082D               	movf	ISR@soma^(0+128),w
  8104  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  8105  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  8106  06C5  00B3               	movwf	___ftdiv@f1
  8107  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  8108  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  8109  06C8  082E               	movf	(ISR@soma+1)^(0+128),w
  8110  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  8111  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  8112  06CB  00B4               	movwf	___ftdiv@f1+1
  8113  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  8114  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  8115  06CE  082F               	movf	(ISR@soma+2)^(0+128),w
  8116  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  8117  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  8118  06D1  00B5               	movwf	___ftdiv@f1+2
  8119  06D2  120A  158A  2416  120A  118A  	fcall	___ftdiv
  8120  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  8121  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  8122  06D9  0830               	movf	?___ftdiv,w
  8123  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  8124  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  8125  06DC  00A6               	movwf	ISR@reajuste^(0+128)
  8126  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  8127  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  8128  06DF  0831               	movf	?___ftdiv+1,w
  8129  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  8130  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  8131  06E2  00A7               	movwf	(ISR@reajuste+1)^(0+128)
  8132  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  8133  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  8134  06E5  0832               	movf	?___ftdiv+2,w
  8135  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  8136  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  8137  06E8  00A8               	movwf	(ISR@reajuste+2)^(0+128)
  8138  06E9                     i1l3631:	
  8139                           
  8140                           ;main.c: 256: }
  8141                           ;main.c: 259: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, erro_atual)) *
  8142                           ;main.c: 260: (setpoint > rpm ? 1 : -1),
  8143                           ;main.c: 261: 1023),
  8144                           ;main.c: 262: 0);
  8145  06E9  0859               	movf	(_setpoint+1)^(0+128),w
  8146  06EA  0257               	subwf	(_rpm+1)^(0+128),w
  8147  06EB  1D03               	skipz
  8148  06EC  2EEF               	goto	u495_25
  8149  06ED  0858               	movf	_setpoint^(0+128),w
  8150  06EE  0256               	subwf	_rpm^(0+128),w
  8151  06EF                     u495_25:	
  8152  06EF  1C03               	skipc
  8153  06F0  2EF5               	goto	i1l3635
  8154  06F1  30FF               	movlw	255
  8155  06F2  00A9               	movwf	_ISR$218^(0+128)
  8156  06F3  30FF               	movlw	255
  8157  06F4  2EF8               	goto	L1
  8158  06F5                     i1l3635:	
  8159  06F5  3001               	movlw	1
  8160  06F6  00A9               	movwf	_ISR$218^(0+128)
  8161  06F7  3000               	movlw	0
  8162  06F8                     L1:	
  8163  06F8  00AA               	movwf	(_ISR$218^(0+128)+1)
  8164  06F9  082A               	movf	(_ISR$218+1)^(0+128),w
  8165  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  8166  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  8167  06FC  01C3               	clrf	___wmul@multiplicand+1
  8168  06FD  07C3               	addwf	___wmul@multiplicand+1,f
  8169  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  8170  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  8171  0700  0829               	movf	_ISR$218^(0+128),w
  8172  0701  1283               	bcf	3,5	;RP0=0, select bank0
  8173  0702  1303               	bcf	3,6	;RP1=0, select bank0
  8174  0703  01C2               	clrf	___wmul@multiplicand
  8175  0704  07C2               	addwf	___wmul@multiplicand,f
  8176  0705  1683               	bsf	3,5	;RP0=1, select bank1
  8177  0706  1303               	bcf	3,6	;RP1=0, select bank1
  8178  0707  0851               	movf	(_erro_atual+1)^(0+128),w
  8179  0708  01F9               	clrf	___awtoft@c+1
  8180  0709  07F9               	addwf	___awtoft@c+1,f
  8181  070A  0850               	movf	_erro_atual^(0+128),w
  8182  070B  01F8               	clrf	___awtoft@c
  8183  070C  07F8               	addwf	___awtoft@c,f
  8184  070D  160A  118A  232D  120A  118A  	fcall	___awtoft
  8185  0712  0878               	movf	?___awtoft,w
  8186  0713  1283               	bcf	3,5	;RP0=0, select bank0
  8187  0714  1303               	bcf	3,6	;RP1=0, select bank0
  8188  0715  00A9               	movwf	minimo@b
  8189  0716  0879               	movf	?___awtoft+1,w
  8190  0717  00AA               	movwf	minimo@b+1
  8191  0718  087A               	movf	?___awtoft+2,w
  8192  0719  00AB               	movwf	minimo@b+2
  8193  071A  1683               	bsf	3,5	;RP0=1, select bank1
  8194  071B  1303               	bcf	3,6	;RP1=0, select bank1
  8195  071C  0826               	movf	ISR@reajuste^(0+128),w
  8196  071D  1283               	bcf	3,5	;RP0=0, select bank0
  8197  071E  1303               	bcf	3,6	;RP1=0, select bank0
  8198  071F  00A6               	movwf	minimo@a
  8199  0720  1683               	bsf	3,5	;RP0=1, select bank1
  8200  0721  1303               	bcf	3,6	;RP1=0, select bank1
  8201  0722  0827               	movf	(ISR@reajuste+1)^(0+128),w
  8202  0723  1283               	bcf	3,5	;RP0=0, select bank0
  8203  0724  1303               	bcf	3,6	;RP1=0, select bank0
  8204  0725  00A7               	movwf	minimo@a+1
  8205  0726  1683               	bsf	3,5	;RP0=1, select bank1
  8206  0727  1303               	bcf	3,6	;RP1=0, select bank1
  8207  0728  0828               	movf	(ISR@reajuste+2)^(0+128),w
  8208  0729  1283               	bcf	3,5	;RP0=0, select bank0
  8209  072A  1303               	bcf	3,6	;RP1=0, select bank0
  8210  072B  00A8               	movwf	minimo@a+2
  8211  072C  160A  118A  230F  120A  118A  	fcall	_minimo
  8212  0731  1283               	bcf	3,5	;RP0=0, select bank0
  8213  0732  1303               	bcf	3,6	;RP1=0, select bank0
  8214  0733  0826               	movf	?_minimo,w
  8215  0734  00B2               	movwf	___fttol@f1
  8216  0735  0827               	movf	?_minimo+1,w
  8217  0736  00B3               	movwf	___fttol@f1+1
  8218  0737  0828               	movf	?_minimo+2,w
  8219  0738  00B4               	movwf	___fttol@f1+2
  8220  0739  120A  158A  2060  120A  118A  	fcall	___fttol
  8221  073E  1283               	bcf	3,5	;RP0=0, select bank0
  8222  073F  1303               	bcf	3,6	;RP1=0, select bank0
  8223  0740  0833               	movf	?___fttol+1,w
  8224  0741  01C1               	clrf	___wmul@multiplier+1
  8225  0742  07C1               	addwf	___wmul@multiplier+1,f
  8226  0743  0832               	movf	?___fttol,w
  8227  0744  01C0               	clrf	___wmul@multiplier
  8228  0745  07C0               	addwf	___wmul@multiplier,f
  8229  0746  160A  118A  2393  120A  118A  	fcall	___wmul
  8230  074B  1683               	bsf	3,5	;RP0=1, select bank1
  8231  074C  1303               	bcf	3,6	;RP1=0, select bank1
  8232  074D  0854               	movf	_pwm^(0+128),w
  8233  074E  1283               	bcf	3,5	;RP0=0, select bank0
  8234  074F  1303               	bcf	3,6	;RP1=0, select bank0
  8235  0750  0740               	addwf	?___wmul,w
  8236  0751  00C6               	movwf	___lwtoft@c
  8237  0752  1683               	bsf	3,5	;RP0=1, select bank1
  8238  0753  1303               	bcf	3,6	;RP1=0, select bank1
  8239  0754  0855               	movf	(_pwm+1)^(0+128),w
  8240  0755  1803               	skipnc
  8241  0756  0A55               	incf	(_pwm+1)^(0+128),w
  8242  0757  1283               	bcf	3,5	;RP0=0, select bank0
  8243  0758  1303               	bcf	3,6	;RP1=0, select bank0
  8244  0759  0741               	addwf	?___wmul+1,w
  8245  075A  00C7               	movwf	___lwtoft@c+1
  8246  075B  160A  118A  22A2  120A  118A  	fcall	___lwtoft
  8247  0760  1283               	bcf	3,5	;RP0=0, select bank0
  8248  0761  1303               	bcf	3,6	;RP1=0, select bank0
  8249  0762  0846               	movf	?___lwtoft,w
  8250  0763  1683               	bsf	3,5	;RP0=1, select bank1
  8251  0764  1303               	bcf	3,6	;RP1=0, select bank1
  8252  0765  00A3               	movwf	_ISR$1637^(0+128)
  8253  0766  1283               	bcf	3,5	;RP0=0, select bank0
  8254  0767  1303               	bcf	3,6	;RP1=0, select bank0
  8255  0768  0847               	movf	?___lwtoft+1,w
  8256  0769  1683               	bsf	3,5	;RP0=1, select bank1
  8257  076A  1303               	bcf	3,6	;RP1=0, select bank1
  8258  076B  00A4               	movwf	(_ISR$1637+1)^(0+128)
  8259  076C  1283               	bcf	3,5	;RP0=0, select bank0
  8260  076D  1303               	bcf	3,6	;RP1=0, select bank0
  8261  076E  0848               	movf	?___lwtoft+2,w
  8262  076F  1683               	bsf	3,5	;RP0=1, select bank1
  8263  0770  1303               	bcf	3,6	;RP1=0, select bank1
  8264  0771  00A5               	movwf	(_ISR$1637+2)^(0+128)
  8265  0772  3000               	movlw	0
  8266  0773  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0774  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0775  00AF               	movwf	maximo@b
  8269  0776  3000               	movlw	0
  8270  0777  00B0               	movwf	maximo@b+1
  8271  0778  3000               	movlw	0
  8272  0779  00B1               	movwf	maximo@b+2
  8273  077A  30C0               	movlw	192
  8274  077B  00A9               	movwf	minimo@b
  8275  077C  307F               	movlw	127
  8276  077D  00AA               	movwf	minimo@b+1
  8277  077E  3044               	movlw	68
  8278  077F  00AB               	movwf	minimo@b+2
  8279  0780  1683               	bsf	3,5	;RP0=1, select bank1
  8280  0781  1303               	bcf	3,6	;RP1=0, select bank1
  8281  0782  0823               	movf	_ISR$1637^(0+128),w
  8282  0783  1283               	bcf	3,5	;RP0=0, select bank0
  8283  0784  1303               	bcf	3,6	;RP1=0, select bank0
  8284  0785  00A6               	movwf	minimo@a
  8285  0786  1683               	bsf	3,5	;RP0=1, select bank1
  8286  0787  1303               	bcf	3,6	;RP1=0, select bank1
  8287  0788  0824               	movf	(_ISR$1637+1)^(0+128),w
  8288  0789  1283               	bcf	3,5	;RP0=0, select bank0
  8289  078A  1303               	bcf	3,6	;RP1=0, select bank0
  8290  078B  00A7               	movwf	minimo@a+1
  8291  078C  1683               	bsf	3,5	;RP0=1, select bank1
  8292  078D  1303               	bcf	3,6	;RP1=0, select bank1
  8293  078E  0825               	movf	(_ISR$1637+2)^(0+128),w
  8294  078F  1283               	bcf	3,5	;RP0=0, select bank0
  8295  0790  1303               	bcf	3,6	;RP1=0, select bank0
  8296  0791  00A8               	movwf	minimo@a+2
  8297  0792  160A  118A  230F  120A  118A  	fcall	_minimo
  8298  0797  1283               	bcf	3,5	;RP0=0, select bank0
  8299  0798  1303               	bcf	3,6	;RP1=0, select bank0
  8300  0799  0826               	movf	?_minimo,w
  8301  079A  00AC               	movwf	maximo@a
  8302  079B  0827               	movf	?_minimo+1,w
  8303  079C  00AD               	movwf	maximo@a+1
  8304  079D  0828               	movf	?_minimo+2,w
  8305  079E  00AE               	movwf	maximo@a+2
  8306  079F  160A  118A  22F1  120A  118A  	fcall	_maximo
  8307  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  8308  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  8309  07A6  082C               	movf	?_maximo,w
  8310  07A7  00B2               	movwf	___fttol@f1
  8311  07A8  082D               	movf	?_maximo+1,w
  8312  07A9  00B3               	movwf	___fttol@f1+1
  8313  07AA  082E               	movf	?_maximo+2,w
  8314  07AB  00B4               	movwf	___fttol@f1+2
  8315  07AC  120A  158A  2060  120A  118A  	fcall	___fttol
  8316  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  8317  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  8318  07B3  0833               	movf	?___fttol+1,w
  8319  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  8320  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  8321  07B6  01D5               	clrf	(_pwm+1)^(0+128)
  8322  07B7  07D5               	addwf	(_pwm+1)^(0+128),f
  8323  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  8324  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  8325  07BA  0832               	movf	?___fttol,w
  8326  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  8327  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  8328  07BD  01D4               	clrf	_pwm^(0+128)
  8329  07BE  07D4               	addwf	_pwm^(0+128),f
  8330                           
  8331                           ;main.c: 264: PWM_DutyCycle2(pwm);
  8332  07BF  0855               	movf	(_pwm+1)^(0+128),w
  8333  07C0  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8334  07C1  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8335  07C2  0854               	movf	_pwm^(0+128),w
  8336  07C3  01F0               	clrf	i1PWM_DutyCycle2@valor
  8337  07C4  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8338  07C5  160A  118A  22BA  120A  118A  	fcall	i1_PWM_DutyCycle2
  8339                           
  8340                           ;main.c: 267: PORTBbits.RB6 = 0;
  8341  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  8342  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  8343  07CC  1306               	bcf	6,6	;volatile
  8344  07CD                     i1l3645:	
  8345                           
  8346                           ;main.c: 268: }
  8347                           ;main.c: 271: INTCONbits.T0IF = 0;
  8348  07CD  110B               	bcf	11,2	;volatile
  8349  07CE                     i1l3647:	
  8350                           
  8351                           ;main.c: 272: }
  8352                           ;main.c: 275: if (PIR1bits.TMR1IF) {
  8353  07CE  180C               	btfsc	12,0	;volatile
  8354                           
  8355                           ;main.c: 280: PIR1bits.TMR1IF = 0;
  8356  07CF  100C               	bcf	12,0	;volatile
  8357  07D0  0867               	movf	??_ISR+5,w
  8358  07D1  00FF               	movwf	127
  8359  07D2  0866               	movf	??_ISR+4,w
  8360  07D3  008A               	movwf	10
  8361  07D4  0865               	movf	??_ISR+3,w
  8362  07D5  0084               	movwf	4
  8363  07D6  0E64               	swapf	(??_ISR+2)^0,w
  8364  07D7  0083               	movwf	3
  8365  07D8  0EFE               	swapf	126,f
  8366  07D9  0E7E               	swapf	126,w
  8367  07DA  0009               	retfie
  8368  07DB                     L18:	
  8369  07DB                     __end_of_ISR:	
  8370  07DB  120A  158A  29A3   	ljmp	i1l3513


Data Sizes:
    Strings     40
    Constant    0
    Data        2
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      78
    BANK1            80     37      58
    BANK3            96     26      74
    BANK2            96      0      96

Pointer List with Targets:

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___ftge->___bmul
    ___wmul->___awtoft
    ___lwtoft->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _minimo->___ftge
    _maximo->_minimo
    ___wmul->___fttol
    ___lwtoft->___wmul
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1058
                                             23 BANK3      3     3      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     181
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 43    43      0   51995
                                             66 BANK0      6     6      0
                                              0 BANK1     37    37      0
                  _USART_ReceiveChar
                    _USART_WriteChar
                            ___awdiv
                            ___awmod
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _trapmf                                              18     3     15   17597
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     365
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2751
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    6867
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _minimo                                               6     0      6    2528
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (4) _maximo                                               6     0      6    2272
                                             12 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1928
                                              4 COMMON     6     0      6
                                              0 BANK0      6     6      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1844
                                             32 BANK0      6     2      4
                  _USART_ReceiveChar (ARG)
                           ___awtoft (ARG)
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                             38 BANK0      4     1      3
                           ___awtoft (ARG)
                           ___ftpack
                            ___fttol (ARG)
                             ___wmul (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     508
                                             18 BANK0     14    10      4
                           ___awtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     560
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2754
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1192
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1068
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteChar
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
     _abs (ARG)
   ___bmul
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftge
     ___bmul (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
     _trapmf (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___lwdiv
   ___lwtoft
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___wmul (ARG)
       _USART_ReceiveChar (ARG)
         _USART_WriteString
           _USART_WriteChar
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
               ___bmul (ARG)
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       ___lwdiv (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___wmul
     _USART_ReceiveChar (ARG)
       _USART_WriteString
         _USART_WriteChar
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___lwdiv (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _abs
   _maximo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _minimo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
   _trapmf
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      11      100.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     25      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     140      12        0.0%
ABS                  0      0     140       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 02 00:50:02 2022

         ?i1_PWM_DutyCycle2 0070                           pc 0002              ___bmul@product 0072  
   __size_of_PWM_DutyCycle1 0021     __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000  
               _SSPSTATbits 0094                ___awdiv@sign 0076                          fsr 0004  
       ___wmul@multiplicand 0042          ??i1_PWM_DutyCycle2 0072                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00CC                ___ftadd@sign 002D  
                       l541 0900                         _PR2 0092                __CFG_CPD$OFF 0000  
                       _ISR 0A16                         _abs 126B                         _rpm 00D6  
                       fsr0 0004                         _pwm 00D4  __size_of_USART_WriteString 001C  
                       indf 0000                ___awmod@sign 0076                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
                      ISR@a 00B0                        ISR@x 00C2                ___ftdiv@sign 003F  
                      ?_abs 0070                        l3013 15C3                        l2891 0966  
                      l2877 0921                        l2869 0911                        l2895 0974  
                      l2887 0959                        l2879 0931                        STR_1 1006  
                      u3625 07F3                        u3555 0925                        u3635 1401  
                      u3645 1363                        u3575 0933                        u3585 0948  
                      u3595 095A                        i1l92 0FF7                        _OERR 00C1  
                      u4977 15BC                        u4987 15CB                        _TMR0 0001  
                      _TMR1 000E                        abs@a 0070                        _main 1557  
              ___ftpack@arg 0070                ___ftpack@exp 0073                        btemp 007E  
                      ltemp 007E                        start 0012                        ttemp 007E  
                      wtemp 007E           ___bmul@multiplier 0073                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 1246                       ??_ISR 0062  
              ___fttol@exp1 003F                       ??_abs 0072                ___fttol@lval 003B  
               ?_TIMER0_Set 0070             __end_of___aldiv 097D                       ?_main 0070  
           __end_of___awdiv 0860                       _EEADR 010D             __end_of___ftadd 0EAA  
             __CFG_WDTE$OFF 0000             __end_of___awmod 148E             __end_of___ftdiv 0CCE  
           __end_of___ftneg 1260             __end_of___ftmul 0DA1             ___awdiv@divisor 0070  
                     _T1CON 0010             __end_of___fttol 08EE             __end_of___lwdiv 13F6  
                     i1l123 0429                       i1l162 123F                       i1l482 139F  
                     i1l653 153E                       i1l647 1525                       i1l676 0E49  
           ___awdiv@counter 0075                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000               ___awtoft@sign 007D  
             ___ftpack@sign 0074              __CFG_BOREN$OFF 0000                       pclath 000A  
          __end_of_PWM_Init 1393                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
               ?_USART_Init 01CF       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 15D2                      ??_main 01D7               ___fttol@sign1 003A  
              ?_TIMER0_Init 0070                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            ___awdiv@dividend 0072            __end_of___awtoft 134E  
          __end_of___ftpack 1557                      i1l2001 152A                      i1l2003 1534  
                    i1l2019 12D6                      i1l2145 0C44                      i1l2139 0C2E  
                    i1l2501 0D3B                      i1l2263 129F                      i1l2255 1293  
                    i1l2423 0859                      i1l2415 0846                      i1l2407 0822  
                    i1l2183 14E0                      i1l2167 0CA8                      i1l2159 0C89  
                    i1l2409 0830                      i1l2513 0D63                      i1l2505 0D4B  
                    i1l3401 0E90                      i1l2419 0851                      i1l2435 144B  
                    i1l2179 14B7                      i1l2461 1487                      i1l2453 1474  
                    i1l2373 1281                      i1l2517 0D73                      i1l2533 087A  
                    i1l2357 1397                      i1l3341 0DCA                      i1l2391 080F  
                    i1l2447 1458                      i1l2439 1452                      i1l2551 08AC  
                    i1l3351 0DE0                      i1l3423 0F55                      i1l2449 1466  
                    i1l2457 147F                      i1l2473 1337                      i1l2369 127B  
                    i1l2561 08D4                      i1l2553 08BC                      i1l3345 0DD1  
                    i1l3417 0F23                      i1l3513 09A3                      i1l3441 0A3F  
                    i1l2483 0CE6                      i1l2563 08D7                      i1l3371 0E1B  
                    i1l3363 0DFA                      i1l3523 0BC0                      i1l3451 0A5E  
                    i1l2397 081A                      i1l2581 13C0                      i1l3381 0E39  
                    i1l3373 0E20                      i1l3429 0FDA                      i1l3621 0661  
                    i1l3517 0B7E                      i1l2567 08E5                      i1l2559 08C9  
                    i1l2583 13CE                      i1l3391 0E6D                      i1l3383 0E45  
                    i1l3375 0E24                      i1l3631 06E9                      i1l3615 05A0  
                    i1l3543 0101                      i1l2489 0CFC                      i1l2593 13EF  
                    i1l3369 0E0F                      i1l3609 04DF                      i1l3387 0E5B  
                    i1l3635 06F5                      i1l3627 06A3                      i1l3539 0076  
                    i1l2589 13E4                      i1l3565 020A                      i1l3549 0143  
                    i1l3645 07CD                      i1l1991 14FE                      i1l3591 03C6  
                    i1l3575 02D7                      i1l3647 07CE                      i1l1993 150A  
                    i1l3569 0295                      i1l1995 150F                      i1l1987 14F7  
                    i1l3587 033B                      i1l3597 0408                      u301_25 0881  
                    u311_25 13C3                      u240_21 14AA                      u240_22 14AB  
                    u240_23 14B0                      u240_24 14B1                      u304_25 08AD  
                    u313_25 13CF                      u233_25 0C56                      u242_21 14D3  
                    u242_22 14D4                      u242_23 14D9                      u242_24 14DA  
                    u314_25 13DB                      u234_25 0C68                      u307_25 08CB  
                    u315_25 13E5                      u235_25 0C8A                      u236_25 0C9B  
                    u261_25 13A0                      u237_25 0CA9                      u317_25 12CB  
                    u262_25 13A7                      u271_25 0831                      u191_25 152D  
                    u272_25 083D                      u440_25 0DFB                      u273_25 0847  
                    u281_25 146C            __end_of___lwtoft 12BA                      u282_25 1475  
                    u194_25 1545                      u187_25 1503                      u443_25 0E10  
                    u292_25 0D4C                      u269_25 0825                      u189_25 151E  
                    u293_25 0D54         __size_of_TIMER0_Set 0008                      u446_25 0E25  
                    u470_25 0BCB                      u279_25 145B                      u471_25 0BD8  
                    u288_25 0D08                      u472_25 0BE5                      u297_25 0D74  
                    u289_25 0D1A                      u449_25 0E3A                      u481_25 02D5  
                    u473_25 0074                      u298_25 0D7C                      u490_25 04F7  
                    u482_25 02E2                      u466_25 16AC                      u491_25 05AB  
                    u483_25 0339                      u475_25 0141                      u467_25 099F  
                    u492_25 05B8                      u476_25 014E                      u493_25 06A1  
                    u485_25 0406                      u477_25 015B                      u469_25 0BBE  
                    u486_25 0427                      u478_25 0168                      u495_25 06EF  
                    u479_25 0208                      u488_25 0436                      u489_25 04EA  
                    _SSPADD 0093                      _SSPBUF 0013                      ___bmul 1279  
                    ___ftge 148E                   ??___aldiv 01C8                      _rBaixo 0190  
                    ___wmul 1393                   ??___awdiv 0074                   ??___ftadd 0029  
            _PWM_DutyCycle1 134E              _PWM_DutyCycle2 07DE                   ??___awmod 0074  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007E  
                    _rMedio 0140                   ??___ftmul 0058                   ??___fttol 0036  
                 ??___lwdiv 0074                      _buffer 00C5                      _maximo 12F1  
                    _minimo 130F            ___awdiv@quotient 0077             ___awmod@divisor 0070  
     USART_ReceiveChar@byte 0074             ___awmod@counter 0075                      _trapmf 0EAA  
                    _pulsos 00D2       ___ftmul@f3_as_product 005D                      saved_w 007E  
       __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070     __end_of__initialization 0041  
                ___ftadd@f1 0023                  ___ftadd@f2 0026                  ___ftge@ff1 0074  
                ___ftge@ff2 0077                  ___ftdiv@f1 0033                  ___ftdiv@f2 0030  
                ___ftdiv@f3 003B                  ___ftneg@f1 0020                  ___awtoft@c 0078  
       ___bmul@multiplicand 0070      __end_of_PWM_DutyCycle1 136F      __end_of_PWM_DutyCycle2 07FF  
                ___ftmul@f1 0052                  ___ftmul@f2 0055                  ___fttol@f1 0032  
            __pcstackCOMMON 0070                __pidataBANK1 0803               _erro_anterior 00CE  
             ISR@total_area 00B8                  ___lwtoft@c 0046                   ?_PWM_Init 0070  
            _OPTION_REGbits 0081                 ISR@reajuste 00A6   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 0068                  __pbssBANK1 00C5  
                __pbssBANK2 0110                  __pbssBANK3 0190                   ISR@rpmAux 00C0  
                   ISR@soma 00AD                     ISR@rule 00BB             ?_PWM_DutyCycle1 01C0  
           ?_PWM_DutyCycle2 01C0                  __pmaintext 1557                     ?___bmul 0070  
                   ?___ftge 0074                     ?___wmul 0040                  __pintentry 0004  
              ??_TIMER0_Set 01C0                     _CCP1CON 0017                     _CCP2CON 001D  
                   ?_maximo 002C                     ?_minimo 0026                   ?___awtoft 0078  
                 ?___ftpack 0070                     ?_trapmf 0040                  ??_PWM_Init 01C0  
                 ?___lwtoft 0046                     _ISR$218 00A9        __size_of_TIMER0_Init 000B  
                   _SSPCON2 0091                  __stringtab 1000          __end_of_TIMER0_Set 124E  
              ??_USART_Init 01D3                     ___aldiv 08EE             __size_of___bmul 0011  
           __size_of___ftge 0061                     ___awdiv 0805                     ___ftadd 0DA1  
                   ___awmod 1441                     ___ftdiv 0C16                     ___ftneg 1256  
           __size_of___wmul 0025                     ___ftmul 0CCE                     ___fttol 0860  
                _erro_atual 00D0                     ___lwdiv 13B8                  ??___awtoft 007B  
                ??___ftpack 0075                     _rGrande 0110             __size_of_maximo 001E  
           __size_of_minimo 001E                     __ptext1 13F6                     __ptext2 08EE  
                   __ptext3 1246                     __ptext4 1260                     __ptext5 136F  
                   __ptext6 07DE                     __ptext7 134E                     __ptext8 0A16  
                   __ptext9 1238                  ??___lwtoft 0049             __size_of_trapmf 0156  
              __size_of_ISR FDC5                   _T1CONbits 0010                   _T2CONbits 0012  
              __size_of_abs 000E            ___awmod@dividend 0072            ___aldiv@dividend 01C4  
        __end_of_USART_Init 1441                     clrloop0 124F        end_of_initialization 0041  
                   maximo@a 002C                     maximo@b 002F                     minimo@a 0026  
                   minimo@b 0029                   _RCSTAbits 0018            ___aldiv@quotient 01CB  
                   psplit$0 170030                     psplit$1 300031                     psplit$2 310032  
                   psplit$3 320033                     psplit$4 330034                     psplit$5 340035  
                   psplit$6 350036                     psplit$7 360037                     trapmf@a 0043  
                   trapmf@b 0046                     trapmf@c 0049                     trapmf@d 004C  
                   trapmf@x 0040        __end_ofi1_TIMER0_Set 123E                   _PORTBbits 0006  
                 _PORTEbits 0009            i1_PWM_DutyCycle2 12BA                _contador_rb6 0068  
       PWM_DutyCycle1@valor 01C0         PWM_DutyCycle2@valor 01C0                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
               ___ftmul@exp 005C              __end_of___bmul 128A              __end_of___ftge 14EF  
            __end_of___wmul 13B8              __end_of_maximo 130F              __end_of_minimo 132D  
            __end_of_trapmf 1000    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 07DB                 __end_of_abs 1279  
         pnum$text8_split_1 0030           pnum$text8_split_2 0031           pnum$text8_split_3 0032  
         pnum$text8_split_4 0033           pnum$text8_split_5 0034           pnum$text8_split_6 0035  
         pnum$text8_split_7 0036           pnum$text8_split_8 0037            ??_PWM_DutyCycle1 01C2  
          ??_PWM_DutyCycle2 01C2           _USART_ReceiveChar 128A                    ??___bmul 0071  
                  ??___ftge 0020          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK1 00D8                    ??_maximo 007E                    ??_minimo 007E  
                  ??_trapmf 007E         ??_USART_ReceiveChar 0073           __size_of___awtoft 0021  
         __size_of___ftpack 0068                   ___latbits 0002           __size_of___lwtoft 0018  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               __pcstackBANK3 01C0  
       __end_of__stringdata 102E                    ISR@a_211 00B2                    ISR@a_212 00B4  
                  ISR@a_213 00B6                    ISR@a_216 00BE   __end_of_USART_ReceiveChar 12A2  
                  ISR@delta 00AB       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072  
       TIMER0_Set@contagens 01C0                    ?___aldiv 01C0                    ?___awdiv 0070  
                  ?___ftadd 0023                    ?___awmod 0070                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0052                    ?___fttol 0032  
                  ?___lwdiv 0070                   __pstrings 1000               ??_TIMER0_Init 01C0  
        USART_Init@BaudRate 01CF            ___lwdiv@quotient 0075                    _ISR$1636 00A0  
                  _ISR$1637 00A3           ??_USART_WriteChar 0070                i1_TIMER0_Set 1238  
              _receiveIndex 006A             ___aldiv@divisor 01C0           interrupt_function 0004  
           ___aldiv@counter 01C9              ___wmul@product 0044                   clear_ram0 124E  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 12D5                   _tempo_rb6 006C  
                _ADCON0bits 001F                 __stringbase 1005                  _ADCON1bits 009F  
               __stringdata 1006                    _PWM_Init 136F           ___wmul@multiplier 0040  
       __end_of_TIMER0_Init 126B  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
          __size_of___aldiv 008F            __size_of___awdiv 005B            __size_of___ftadd 0109  
          __size_of___awmod 004D            __size_of___ftdiv 00B8            __size_of___ftneg 000A  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
                  ___awtoft 132D                    ___ftpack 14EF          __end_of__stringtab 1006  
                  ___lwtoft 12A2             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 12D5                    __ptext10 12BA                    __ptext11 0EAA  
                  __ptext20 12A2                    __ptext12 1256                    __ptext21 13B8  
                  __ptext13 0C16                    __ptext30 12D5                    __ptext22 0860  
                  __ptext14 0DA1                    __ptext31 123E                    __ptext23 0CCE  
                  __ptext15 130F                    __ptext24 1279                    __ptext16 12F1  
                  __ptext25 132D                    __ptext17 148E                    __ptext26 14EF  
                  __ptext18 126B                    __ptext27 1441                    __ptext19 1393  
                  __ptext28 0805                    __ptext29 128A          ?_USART_WriteString 0070  
             __size_of_main 007B                   pnum$text8 0017         USART_WriteChar@byte 0070  
       ??_USART_WriteString 0071                    _setpoint 00D8                 _TIMER0_Init 1260  
                _INTCONbits 000B   __end_of_USART_WriteString 12F1                    intlevel1 0000  
                 stringcode 1000        USART_WriteString@str 0072                  _TIMER0_Set 1246  
                  trapmf@ua 004F             _USART_WriteChar 123E                    stringdir 1000  
                  stringtab 1000                ___aldiv@sign 01CA                 _SSPCON2bits 0091  
     i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014                  _USART_Init 13F6  
