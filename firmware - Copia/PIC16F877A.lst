

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue May 31 01:53:28 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text9_split_1,local,class=CODE,merge=1,delta=2
    51                           	psect	text9_split_2,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0008                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001D                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  0081                     	;# 
   389  0085                     	;# 
   390  0086                     	;# 
   391  0087                     	;# 
   392  0088                     	;# 
   393  0089                     	;# 
   394  008C                     	;# 
   395  008D                     	;# 
   396  008E                     	;# 
   397  0091                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0098                     	;# 
   402  0099                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  009F                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0008                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0088                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  000E                     	;# 
   489  000F                     	;# 
   490  0010                     	;# 
   491  0011                     	;# 
   492  0012                     	;# 
   493  0013                     	;# 
   494  0014                     	;# 
   495  0015                     	;# 
   496  0015                     	;# 
   497  0016                     	;# 
   498  0017                     	;# 
   499  0018                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001B                     	;# 
   504  001C                     	;# 
   505  001D                     	;# 
   506  001E                     	;# 
   507  001F                     	;# 
   508  0081                     	;# 
   509  0085                     	;# 
   510  0086                     	;# 
   511  0087                     	;# 
   512  0088                     	;# 
   513  0089                     	;# 
   514  008C                     	;# 
   515  008D                     	;# 
   516  008E                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  0000                     	;# 
   534  0001                     	;# 
   535  0002                     	;# 
   536  0003                     	;# 
   537  0004                     	;# 
   538  0005                     	;# 
   539  0006                     	;# 
   540  0007                     	;# 
   541  0008                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000E                     	;# 
   549  000F                     	;# 
   550  0010                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001D                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  0081                     	;# 
   569  0085                     	;# 
   570  0086                     	;# 
   571  0087                     	;# 
   572  0088                     	;# 
   573  0089                     	;# 
   574  008C                     	;# 
   575  008D                     	;# 
   576  008E                     	;# 
   577  0091                     	;# 
   578  0092                     	;# 
   579  0093                     	;# 
   580  0094                     	;# 
   581  0098                     	;# 
   582  0099                     	;# 
   583  009C                     	;# 
   584  009D                     	;# 
   585  009E                     	;# 
   586  009F                     	;# 
   587  010C                     	;# 
   588  010D                     	;# 
   589  010E                     	;# 
   590  010F                     	;# 
   591  018C                     	;# 
   592  018D                     	;# 
   593                           
   594                           	psect	idataBANK1
   595  07FE                     __pidataBANK1:	
   596                           
   597                           ;initializer for _setpoint
   598  07FE  3488               	retlw	136
   599  07FF  3413               	retlw	19
   600                           
   601                           	psect	idataBANK3
   602  10C5                     __pidataBANK3:	
   603                           
   604                           ;initializer for _ligado
   605  10C5  3401               	retlw	1
   606  10C6  3400               	retlw	0
   607  000E                     _TMR1	set	14
   608  001F                     _ADCON0bits	set	31
   609  001E                     _ADRESH	set	30
   610  0017                     _CCP1CON	set	23
   611  0017                     _CCP1CONbits	set	23
   612  001D                     _CCP2CON	set	29
   613  001D                     _CCP2CONbits	set	29
   614  0015                     _CCPR1L	set	21
   615  001B                     _CCPR2L	set	27
   616  000B                     _INTCONbits	set	11
   617  000C                     _PIR1bits	set	12
   618  000D                     _PIR2bits	set	13
   619  0005                     _PORTA	set	5
   620  0006                     _PORTB	set	6
   621  0006                     _PORTBbits	set	6
   622  0007                     _PORTC	set	7
   623  0008                     _PORTD	set	8
   624  0009                     _PORTE	set	9
   625  0009                     _PORTEbits	set	9
   626  001A                     _RCREG	set	26
   627  0018                     _RCSTAbits	set	24
   628  0013                     _SSPBUF	set	19
   629  0014                     _SSPCONbits	set	20
   630  0010                     _T1CON	set	16
   631  0010                     _T1CONbits	set	16
   632  0012                     _T2CONbits	set	18
   633  0001                     _TMR0	set	1
   634  000F                     _TMR1H	set	15
   635  000E                     _TMR1L	set	14
   636  0019                     _TXREG	set	25
   637  00C1                     _OERR	set	193
   638  009F                     _ADCON1bits	set	159
   639  009E                     _ADRESL	set	158
   640  0081                     _OPTION_REGbits	set	129
   641  008C                     _PIE1bits	set	140
   642  008D                     _PIE2bits	set	141
   643  0092                     _PR2	set	146
   644  0099                     _SPBRG	set	153
   645  0093                     _SSPADD	set	147
   646  0091                     _SSPCON2	set	145
   647  0091                     _SSPCON2bits	set	145
   648  0094                     _SSPSTATbits	set	148
   649  0085                     _TRISA	set	133
   650  0086                     _TRISB	set	134
   651  0087                     _TRISC	set	135
   652  0088                     _TRISD	set	136
   653  0089                     _TRISE	set	137
   654  0098                     _TXSTAbits	set	152
   655  010D                     _EEADR	set	269
   656  010C                     _EEDATA	set	268
   657  018C                     _EECON1bits	set	396
   658  018D                     _EECON2	set	397
   659                           
   660                           	psect	strings
   661  0800                     __pstrings:	
   662  0800                     stringtab:	
   663  0800                     __stringtab:	
   664  0800                     stringcode:	
   665                           ;	String table - string pointers are 1 byte each
   666                           
   667  0800                     stringdir:	
   668  0800  3008               	movlw	high stringdir
   669  0801  008A               	movwf	10
   670  0802  0804               	movf	4,w
   671  0803  0A84               	incf	4,f
   672  0804  0782               	addwf	2,f
   673  0805                     __stringbase:	
   674  0805  3400               	retlw	0
   675  0806                     __end_of__stringtab:	
   676  0806                     __stringdata:	
   677  0806                     STR_1:	
   678  0806  340A               	retlw	10
   679  0807  340D               	retlw	13
   680  0808  3420               	retlw	32	;' '
   681  0809  342D               	retlw	45	;'-'
   682  080A  342D               	retlw	45	;'-'
   683  080B  342D               	retlw	45	;'-'
   684  080C  342D               	retlw	45	;'-'
   685  080D  342D               	retlw	45	;'-'
   686  080E  342D               	retlw	45	;'-'
   687  080F  342D               	retlw	45	;'-'
   688  0810  3420               	retlw	32	;' '
   689  0811  3445               	retlw	69	;'E'
   690  0812  3453               	retlw	83	;'S'
   691  0813  3454               	retlw	84	;'T'
   692  0814  344F               	retlw	79	;'O'
   693  0815  3455               	retlw	85	;'U'
   694  0816  3452               	retlw	82	;'R'
   695  0817  344F               	retlw	79	;'O'
   696  0818  3420               	retlw	32	;' '
   697  0819  3444               	retlw	68	;'D'
   698  081A  3445               	retlw	69	;'E'
   699  081B  3420               	retlw	32	;' '
   700  081C  3450               	retlw	80	;'P'
   701  081D  3449               	retlw	73	;'I'
   702  081E  344C               	retlw	76	;'L'
   703  081F  3448               	retlw	72	;'H'
   704  0820  3441               	retlw	65	;'A'
   705  0821  3420               	retlw	32	;' '
   706  0822  342D               	retlw	45	;'-'
   707  0823  342D               	retlw	45	;'-'
   708  0824  342D               	retlw	45	;'-'
   709  0825  342D               	retlw	45	;'-'
   710  0826  342D               	retlw	45	;'-'
   711  0827  342D               	retlw	45	;'-'
   712  0828  342D               	retlw	45	;'-'
   713  0829  3420               	retlw	32	;' '
   714  082A  340A               	retlw	10
   715  082B  340D               	retlw	13
   716  082C  3420               	retlw	32	;' '
   717  082D  3400               	retlw	0
   718  082E                     __end_of__stringdata:	
   719                           
   720                           ; #config settings
   721  0000                     
   722                           	psect	cinit
   723  0015                     start_initialization:	
   724  0015                     __initialization:	
   725                           
   726                           ; Clear objects allocated to BANK0
   727  0015  1383               	bcf	3,7	;select IRP bank0
   728  0016  3061               	movlw	low __pbssBANK0
   729  0017  0084               	movwf	4
   730  0018  3070               	movlw	low (__pbssBANK0+15)
   731  0019  160A  118A  20E5  120A  118A  	fcall	clear_ram0
   732                           
   733                           ; Clear objects allocated to BANK1
   734  001E  30C9               	movlw	low __pbssBANK1
   735  001F  0084               	movwf	4
   736  0020  30ED               	movlw	low (__pbssBANK1+36)
   737  0021  160A  118A  20E5  120A  118A  	fcall	clear_ram0
   738                           
   739                           ; Clear objects allocated to BANK3
   740  0026  1783               	bsf	3,7	;select IRP bank2
   741  0027  3090               	movlw	low __pbssBANK3
   742  0028  0084               	movwf	4
   743  0029  30C7               	movlw	low (__pbssBANK3+55)
   744  002A  160A  118A  20E5  120A  118A  	fcall	clear_ram0
   745                           
   746                           ; Clear objects allocated to BANK2
   747  002F  3010               	movlw	low __pbssBANK2
   748  0030  0084               	movwf	4
   749  0031  3070               	movlw	low (__pbssBANK2+96)
   750  0032  160A  118A  20E5  120A  118A  	fcall	clear_ram0
   751                           
   752                           ; Initialize objects allocated to BANK3
   753  0037  1683               	bsf	3,5	;RP0=1, select bank3
   754  0038  1703               	bsf	3,6	;RP1=1, select bank3
   755  0039  160A  118A  20C5  120A  118A  	fcall	__pidataBANK3	;fetch initializer
   756  003E  00E1               	movwf	__pdataBANK3& (0+127)
   757  003F  160A  118A  20C6  120A  118A  	fcall	__pidataBANK3+1	;fetch initializer
   758  0044  00E2               	movwf	(__pdataBANK3+1)& (0+127)
   759                           
   760                           ; Initialize objects allocated to BANK1
   761  0045  1683               	bsf	3,5	;RP0=1, select bank1
   762  0046  1303               	bcf	3,6	;RP1=0, select bank1
   763  0047  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   764  004C  00ED               	movwf	__pdataBANK1& (0+127)
   765  004D  120A  118A  27FF   	fcall	__pidataBANK1+1	;fetch initializer
   766  0050  00EE               	movwf	(__pdataBANK1+1)& (0+127)
   767  0051                     end_of_initialization:	
   768                           ;End of C runtime variable initialization code
   769                           
   770  0051                     __end_of__initialization:	
   771  0051  0183               	clrf	3
   772  0052  160A  118A  2B86   	ljmp	_main	;jump to C main() function
   773                           
   774                           	psect	bssBANK0
   775  0061                     __pbssBANK0:	
   776  0061                     _buffer:	
   777  0061                     	ds	7
   778  0068                     _ADCResult:	
   779  0068                     	ds	2
   780  006A                     _contagens_tm0:	
   781  006A                     	ds	2
   782  006C                     _pulsos:	
   783  006C                     	ds	2
   784  006E                     _status:	
   785  006E                     	ds	2
   786                           
   787                           	psect	bssBANK1
   788  00C9                     __pbssBANK1:	
   789  00C9                     _fiDelta:	
   790  00C9                     	ds	3
   791  00CC                     _fiDistancia:	
   792  00CC                     	ds	3
   793  00CF                     _reajuste:	
   794  00CF                     	ds	3
   795  00D2                     _rule:	
   796  00D2                     	ds	3
   797  00D5                     _sum:	
   798  00D5                     	ds	3
   799  00D8                     _total_area:	
   800  00D8                     	ds	3
   801  00DB                     _x:	
   802  00DB                     	ds	3
   803  00DE                     _y:	
   804  00DE                     	ds	3
   805  00E1                     _delta:	
   806  00E1                     	ds	2
   807  00E3                     _erro_anterior:	
   808  00E3                     	ds	2
   809  00E5                     _erro_atual:	
   810  00E5                     	ds	2
   811  00E7                     _pwm:	
   812  00E7                     	ds	2
   813  00E9                     _receiveIndex:	
   814  00E9                     	ds	2
   815  00EB                     _rpm:	
   816  00EB                     	ds	2
   817                           
   818                           	psect	dataBANK1
   819  00ED                     __pdataBANK1:	
   820  00ED                     _setpoint:	
   821  00ED                     	ds	2
   822                           
   823                           	psect	bssBANK3
   824  0190                     __pbssBANK3:	
   825  0190                     _reajuste_baixo:	
   826  0190                     	ds	48
   827  01C0                     _foReajuste:	
   828  01C0                     	ds	3
   829  01C3                     _contador_rb6:	
   830  01C3                     	ds	2
   831  01C5                     _tempo_rb6:	
   832  01C5                     	ds	2
   833                           
   834                           	psect	dataBANK3
   835  01E1                     __pdataBANK3:	
   836  01E1                     _ligado:	
   837  01E1                     	ds	2
   838                           
   839                           	psect	bssBANK2
   840  0110                     __pbssBANK2:	
   841  0110                     _reajuste_grande:	
   842  0110                     	ds	48
   843  0140                     _reajuste_medio:	
   844  0140                     	ds	48
   845                           
   846                           	psect	clrtext
   847  10E5                     clear_ram0:	
   848                           ;	Called with FSR containing the base address, and
   849                           ;	W with the last address+1
   850                           
   851  10E5  0064               	clrwdt	;clear the watchdog before getting into this loop
   852  10E6                     clrloop0:	
   853  10E6  0180               	clrf	0	;clear RAM location pointed to by FSR
   854  10E7  0A84               	incf	4,f	;increment pointer
   855  10E8  0604               	xorwf	4,w	;XOR with final address
   856  10E9  1903               	btfsc	3,2	;have we reached the end yet?
   857  10EA  3400               	retlw	0	;all done for this memory range, return
   858  10EB  0604               	xorwf	4,w	;XOR again to restore value
   859  10EC  28E6               	goto	clrloop0	;do the next byte
   860                           
   861                           	psect	cstackBANK3
   862  01C7                     __pcstackBANK3:	
   863  01C7                     ??_TIMER0_Set:	
   864  01C7                     ?_PWM_DutyCycle2:	
   865                           ; 0 bytes @ 0x0
   866                           
   867  01C7                     ??_TIMER0_Init:	
   868                           ; 0 bytes @ 0x0
   869                           
   870  01C7                     ??_ADC_Init:	
   871                           ; 0 bytes @ 0x0
   872                           
   873  01C7                     ??_PWM_Init:	
   874                           ; 0 bytes @ 0x0
   875                           
   876  01C7                     ?_PWM_DutyCycle1:	
   877                           ; 0 bytes @ 0x0
   878                           
   879  01C7                     ?___aldiv:	
   880                           ; 0 bytes @ 0x0
   881                           
   882  01C7                     TIMER0_Set@contagens:	
   883                           ; 4 bytes @ 0x0
   884                           
   885  01C7                     PWM_DutyCycle1@valor:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  01C7                     PWM_DutyCycle2@valor:	
   889                           ; 2 bytes @ 0x0
   890                           
   891  01C7                     ___aldiv@divisor:	
   892                           ; 2 bytes @ 0x0
   893                           
   894                           
   895                           ; 4 bytes @ 0x0
   896  01C7                     	ds	2
   897  01C9                     ??_PWM_DutyCycle2:	
   898  01C9                     ??_PWM_DutyCycle1:	
   899                           ; 0 bytes @ 0x2
   900                           
   901                           
   902                           ; 0 bytes @ 0x2
   903  01C9                     	ds	2
   904  01CB                     ___aldiv@dividend:	
   905                           
   906                           ; 4 bytes @ 0x4
   907  01CB                     	ds	4
   908  01CF                     ??___aldiv:	
   909                           
   910                           ; 0 bytes @ 0x8
   911  01CF                     	ds	1
   912  01D0                     ___aldiv@counter:	
   913                           
   914                           ; 1 bytes @ 0x9
   915  01D0                     	ds	1
   916  01D1                     ___aldiv@sign:	
   917                           
   918                           ; 1 bytes @ 0xA
   919  01D1                     	ds	1
   920  01D2                     ___aldiv@quotient:	
   921                           
   922                           ; 4 bytes @ 0xB
   923  01D2                     	ds	4
   924  01D6                     ?_USART_Init:	
   925  01D6                     USART_Init@BaudRate:	
   926                           ; 0 bytes @ 0xF
   927                           
   928                           
   929                           ; 4 bytes @ 0xF
   930  01D6                     	ds	4
   931  01DA                     ??_USART_Init:	
   932                           
   933                           ; 0 bytes @ 0x13
   934  01DA                     	ds	4
   935  01DE                     ??_main:	
   936                           
   937                           ; 0 bytes @ 0x17
   938  01DE                     	ds	3
   939                           
   940                           	psect	cstackBANK1
   941  00A0                     __pcstackBANK1:	
   942  00A0                     _ISR$238:	
   943                           
   944                           ; 3 bytes @ 0x0
   945  00A0                     	ds	3
   946  00A3                     _ISR$240:	
   947                           
   948                           ; 3 bytes @ 0x3
   949  00A3                     	ds	3
   950  00A6                     _ISR$243:	
   951                           
   952                           ; 3 bytes @ 0x6
   953  00A6                     	ds	3
   954  00A9                     _ISR$245:	
   955                           
   956                           ; 3 bytes @ 0x9
   957  00A9                     	ds	3
   958  00AC                     _ISR$227:	
   959                           
   960                           ; 2 bytes @ 0xC
   961  00AC                     	ds	2
   962  00AE                     _ISR$228:	
   963                           
   964                           ; 2 bytes @ 0xE
   965  00AE                     	ds	2
   966  00B0                     _ISR$236:	
   967                           
   968                           ; 2 bytes @ 0x10
   969  00B0                     	ds	2
   970  00B2                     _ISR$237:	
   971                           
   972                           ; 2 bytes @ 0x12
   973  00B2                     	ds	2
   974  00B4                     _ISR$239:	
   975                           
   976                           ; 2 bytes @ 0x14
   977  00B4                     	ds	2
   978  00B6                     _ISR$241:	
   979                           
   980                           ; 2 bytes @ 0x16
   981  00B6                     	ds	2
   982  00B8                     _ISR$242:	
   983                           
   984                           ; 2 bytes @ 0x18
   985  00B8                     	ds	2
   986  00BA                     _ISR$244:	
   987                           
   988                           ; 2 bytes @ 0x1A
   989  00BA                     	ds	2
   990  00BC                     ISR@checksum:	
   991                           
   992                           ; 1 bytes @ 0x1C
   993  00BC                     	ds	1
   994  00BD                     ISR@byte:	
   995                           
   996                           ; 1 bytes @ 0x1D
   997  00BD                     	ds	1
   998  00BE                     ISR@index:	
   999                           
  1000                           ; 1 bytes @ 0x1E
  1001  00BE                     	ds	1
  1002  00BF                     ISR@a:	
  1003                           
  1004                           ; 2 bytes @ 0x1F
  1005  00BF                     	ds	2
  1006  00C1                     ISR@a_232:	
  1007                           
  1008                           ; 2 bytes @ 0x21
  1009  00C1                     	ds	2
  1010  00C3                     ISR@a_233:	
  1011                           
  1012                           ; 2 bytes @ 0x23
  1013  00C3                     	ds	2
  1014  00C5                     ISR@a_234:	
  1015                           
  1016                           ; 2 bytes @ 0x25
  1017  00C5                     	ds	2
  1018  00C7                     ISR@a_235:	
  1019                           
  1020                           ; 2 bytes @ 0x27
  1021  00C7                     	ds	2
  1022                           
  1023                           	psect	cstackCOMMON
  1024  0070                     __pcstackCOMMON:	
  1025  0070                     ?_USART_WriteChar:	
  1026  0070                     ??_USART_WriteChar:	
  1027                           ; 0 bytes @ 0x0
  1028                           
  1029  0070                     ?_TIMER0_Set:	
  1030                           ; 0 bytes @ 0x0
  1031                           
  1032  0070                     ?_TIMER0_Init:	
  1033                           ; 0 bytes @ 0x0
  1034                           
  1035  0070                     ?_ADC_Init:	
  1036                           ; 0 bytes @ 0x0
  1037                           
  1038  0070                     ?_PWM_Init:	
  1039                           ; 0 bytes @ 0x0
  1040                           
  1041  0070                     ?_send:	
  1042                           ; 0 bytes @ 0x0
  1043                           
  1044  0070                     ?_ISR:	
  1045                           ; 0 bytes @ 0x0
  1046                           
  1047  0070                     ?_main:	
  1048                           ; 0 bytes @ 0x0
  1049                           
  1050  0070                     ?_USART_WriteString:	
  1051                           ; 0 bytes @ 0x0
  1052                           
  1053  0070                     ?i1_TIMER0_Set:	
  1054                           ; 0 bytes @ 0x0
  1055                           
  1056  0070                     ??i1_TIMER0_Set:	
  1057                           ; 0 bytes @ 0x0
  1058                           
  1059  0070                     ?i1_PWM_DutyCycle2:	
  1060                           ; 0 bytes @ 0x0
  1061                           
  1062  0070                     ?_USART_ReceiveChar:	
  1063                           ; 0 bytes @ 0x0
  1064                           
  1065  0070                     ?___bmul:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_abs:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?___ftpack:	
  1072                           ; 2 bytes @ 0x0
  1073                           
  1074  0070                     ?___ftneg:	
  1075                           ; 3 bytes @ 0x0
  1076                           
  1077  0070                     USART_WriteChar@byte:	
  1078                           ; 3 bytes @ 0x0
  1079                           
  1080  0070                     ___bmul@multiplicand:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     i1TIMER0_Set@contagens:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     abs@a:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     i1PWM_DutyCycle2@valor:	
  1090                           ; 2 bytes @ 0x0
  1091                           
  1092  0070                     ___ftpack@arg:	
  1093                           ; 2 bytes @ 0x0
  1094                           
  1095  0070                     ___ftneg@f1:	
  1096                           ; 3 bytes @ 0x0
  1097                           
  1098                           
  1099                           ; 3 bytes @ 0x0
  1100  0070                     	ds	1
  1101  0071                     ??_send:	
  1102  0071                     ??_USART_WriteString:	
  1103                           ; 0 bytes @ 0x1
  1104                           
  1105  0071                     ??___bmul:	
  1106                           ; 0 bytes @ 0x1
  1107                           
  1108                           
  1109                           ; 0 bytes @ 0x1
  1110  0071                     	ds	1
  1111  0072                     ??_abs:	
  1112  0072                     ??i1_PWM_DutyCycle2:	
  1113                           ; 0 bytes @ 0x2
  1114                           
  1115  0072                     send@checksum:	
  1116                           ; 0 bytes @ 0x2
  1117                           
  1118  0072                     USART_WriteString@str:	
  1119                           ; 1 bytes @ 0x2
  1120                           
  1121  0072                     ___bmul@product:	
  1122                           ; 1 bytes @ 0x2
  1123                           
  1124                           
  1125                           ; 1 bytes @ 0x2
  1126  0072                     	ds	1
  1127  0073                     ??_USART_ReceiveChar:	
  1128  0073                     ??___ftneg:	
  1129                           ; 0 bytes @ 0x3
  1130                           
  1131  0073                     send@index:	
  1132                           ; 0 bytes @ 0x3
  1133                           
  1134  0073                     ___bmul@multiplier:	
  1135                           ; 1 bytes @ 0x3
  1136                           
  1137  0073                     ___ftpack@exp:	
  1138                           ; 1 bytes @ 0x3
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x3
  1142  0073                     	ds	1
  1143  0074                     USART_ReceiveChar@byte:	
  1144  0074                     ___ftpack@sign:	
  1145                           ; 1 bytes @ 0x4
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x4
  1149  0074                     	ds	1
  1150  0075                     ??___ftpack:	
  1151                           
  1152                           ; 0 bytes @ 0x5
  1153  0075                     	ds	3
  1154  0078                     ?___awtoft:	
  1155  0078                     ?___ftadd:	
  1156                           ; 3 bytes @ 0x8
  1157                           
  1158  0078                     ?___lwtoft:	
  1159                           ; 3 bytes @ 0x8
  1160                           
  1161  0078                     ___awtoft@c:	
  1162                           ; 3 bytes @ 0x8
  1163                           
  1164  0078                     ___lwtoft@c:	
  1165                           ; 2 bytes @ 0x8
  1166                           
  1167  0078                     ___ftadd@f1:	
  1168                           ; 2 bytes @ 0x8
  1169                           
  1170                           
  1171                           ; 3 bytes @ 0x8
  1172  0078                     	ds	3
  1173  007B                     ??___awtoft:	
  1174  007B                     ??___lwtoft:	
  1175                           ; 0 bytes @ 0xB
  1176                           
  1177  007B                     ___ftadd@f2:	
  1178                           ; 0 bytes @ 0xB
  1179                           
  1180                           
  1181                           ; 3 bytes @ 0xB
  1182  007B                     	ds	2
  1183  007D                     ___awtoft@sign:	
  1184                           
  1185                           ; 1 bytes @ 0xD
  1186  007D                     	ds	1
  1187  007E                     ??_trimf:	
  1188  007E                     ??_trapmf:	
  1189                           ; 0 bytes @ 0xE
  1190                           
  1191  007E                     ??___wmul:	
  1192                           ; 0 bytes @ 0xE
  1193                           
  1194                           
  1195                           	psect	cstackBANK0
  1196  0020                     __pcstackBANK0:	
  1197                           ; 0 bytes @ 0xE
  1198                           
  1199  0020                     ??___ftadd:	
  1200  0020                     ?___ftge:	
  1201                           ; 0 bytes @ 0x0
  1202                           
  1203  0020                     ___ftge@ff1:	
  1204                           ; 1 bit 
  1205                           
  1206                           
  1207                           ; 3 bytes @ 0x0
  1208  0020                     	ds	3
  1209  0023                     ___ftge@ff2:	
  1210                           
  1211                           ; 3 bytes @ 0x3
  1212  0023                     	ds	1
  1213  0024                     ___ftadd@sign:	
  1214                           
  1215                           ; 1 bytes @ 0x4
  1216  0024                     	ds	1
  1217  0025                     ___ftadd@exp2:	
  1218                           
  1219                           ; 1 bytes @ 0x5
  1220  0025                     	ds	1
  1221  0026                     ??___ftge:	
  1222  0026                     ___ftadd@exp1:	
  1223                           ; 0 bytes @ 0x6
  1224                           
  1225                           
  1226                           ; 1 bytes @ 0x6
  1227  0026                     	ds	1
  1228  0027                     ?___ftdiv:	
  1229  0027                     ___ftdiv@f2:	
  1230                           ; 3 bytes @ 0x7
  1231                           
  1232                           
  1233                           ; 3 bytes @ 0x7
  1234  0027                     	ds	3
  1235  002A                     ___ftdiv@f1:	
  1236                           
  1237                           ; 3 bytes @ 0xA
  1238  002A                     	ds	3
  1239  002D                     ??___ftdiv:	
  1240                           
  1241                           ; 0 bytes @ 0xD
  1242  002D                     	ds	4
  1243  0031                     ___ftdiv@cntr:	
  1244                           
  1245                           ; 1 bytes @ 0x11
  1246  0031                     	ds	1
  1247  0032                     ___ftdiv@f3:	
  1248                           
  1249                           ; 3 bytes @ 0x12
  1250  0032                     	ds	3
  1251  0035                     ___ftdiv@exp:	
  1252                           
  1253                           ; 1 bytes @ 0x15
  1254  0035                     	ds	1
  1255  0036                     ___ftdiv@sign:	
  1256                           
  1257                           ; 1 bytes @ 0x16
  1258  0036                     	ds	1
  1259  0037                     ?_trimf:	
  1260  0037                     ?_trapmf:	
  1261                           ; 3 bytes @ 0x17
  1262                           
  1263  0037                     ?___ftmul:	
  1264                           ; 3 bytes @ 0x17
  1265                           
  1266  0037                     trimf@x:	
  1267                           ; 3 bytes @ 0x17
  1268                           
  1269  0037                     trapmf@x:	
  1270                           ; 3 bytes @ 0x17
  1271                           
  1272  0037                     ___ftmul@f1:	
  1273                           ; 3 bytes @ 0x17
  1274                           
  1275                           
  1276                           ; 3 bytes @ 0x17
  1277  0037                     	ds	3
  1278  003A                     trimf@a:	
  1279  003A                     trapmf@a:	
  1280                           ; 3 bytes @ 0x1A
  1281                           
  1282  003A                     ___ftmul@f2:	
  1283                           ; 3 bytes @ 0x1A
  1284                           
  1285                           
  1286                           ; 3 bytes @ 0x1A
  1287  003A                     	ds	3
  1288  003D                     ??___ftmul:	
  1289  003D                     trimf@b:	
  1290                           ; 0 bytes @ 0x1D
  1291                           
  1292  003D                     trapmf@b:	
  1293                           ; 3 bytes @ 0x1D
  1294                           
  1295                           
  1296                           ; 3 bytes @ 0x1D
  1297  003D                     	ds	3
  1298  0040                     trimf@c:	
  1299  0040                     trapmf@c:	
  1300                           ; 3 bytes @ 0x20
  1301                           
  1302                           
  1303                           ; 3 bytes @ 0x20
  1304  0040                     	ds	1
  1305  0041                     ___ftmul@exp:	
  1306                           
  1307                           ; 1 bytes @ 0x21
  1308  0041                     	ds	1
  1309  0042                     ___ftmul@f3_as_product:	
  1310                           
  1311                           ; 3 bytes @ 0x22
  1312  0042                     	ds	1
  1313  0043                     trimf@ua:	
  1314  0043                     trapmf@d:	
  1315                           ; 3 bytes @ 0x23
  1316                           
  1317                           
  1318                           ; 3 bytes @ 0x23
  1319  0043                     	ds	2
  1320  0045                     ___ftmul@cntr:	
  1321                           
  1322                           ; 1 bytes @ 0x25
  1323  0045                     	ds	1
  1324  0046                     ___ftmul@sign:	
  1325  0046                     trapmf@ua:	
  1326                           ; 1 bytes @ 0x26
  1327                           
  1328                           
  1329                           ; 3 bytes @ 0x26
  1330  0046                     	ds	1
  1331  0047                     ?___fttol:	
  1332  0047                     ___fttol@f1:	
  1333                           ; 4 bytes @ 0x27
  1334                           
  1335                           
  1336                           ; 3 bytes @ 0x27
  1337  0047                     	ds	4
  1338  004B                     ??___fttol:	
  1339                           
  1340                           ; 0 bytes @ 0x2B
  1341  004B                     	ds	4
  1342  004F                     ___fttol@sign1:	
  1343                           
  1344                           ; 1 bytes @ 0x2F
  1345  004F                     	ds	1
  1346  0050                     ___fttol@lval:	
  1347                           
  1348                           ; 4 bytes @ 0x30
  1349  0050                     	ds	4
  1350  0054                     ___fttol@exp1:	
  1351                           
  1352                           ; 1 bytes @ 0x34
  1353  0054                     	ds	1
  1354  0055                     ?___wmul:	
  1355  0055                     ___wmul@multiplier:	
  1356                           ; 2 bytes @ 0x35
  1357                           
  1358                           
  1359                           ; 2 bytes @ 0x35
  1360  0055                     	ds	2
  1361  0057                     ___wmul@multiplicand:	
  1362                           
  1363                           ; 2 bytes @ 0x37
  1364  0057                     	ds	2
  1365  0059                     ___wmul@product:	
  1366                           
  1367                           ; 2 bytes @ 0x39
  1368  0059                     	ds	2
  1369  005B                     ??_ISR:	
  1370                           
  1371                           ; 0 bytes @ 0x3B
  1372  005B                     	ds	6
  1373                           
  1374                           	psect	maintext
  1375  1386                     __pmaintext:	
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 400 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;		None               void
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 17F/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          0       0       0       3       0
  1398 ;;      Totals:         0       0       0       3       0
  1399 ;;Total ram usage:        3 bytes
  1400 ;; Hardware stack levels required when called:    6
  1401 ;; This function calls:
  1402 ;;		_ADC_Init
  1403 ;;		_PWM_DutyCycle1
  1404 ;;		_PWM_DutyCycle2
  1405 ;;		_PWM_Init
  1406 ;;		_TIMER0_Init
  1407 ;;		_TIMER0_Set
  1408 ;;		_USART_Init
  1409 ;; This function is called by:
  1410 ;;		Startup code after reset
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _main
  1416  1386                     _main:	
  1417                           
  1418                           ;main.c: 402: TRISA = 0b00000001;
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1422  1386  3001               	movlw	1
  1423  1387  1683               	bsf	3,5	;RP0=1, select bank1
  1424  1388  1303               	bcf	3,6	;RP1=0, select bank1
  1425  1389  0085               	movwf	5	;volatile
  1426                           
  1427                           ;main.c: 403: PORTA = 0b00000001;
  1428  138A  3001               	movlw	1
  1429  138B  1283               	bcf	3,5	;RP0=0, select bank0
  1430  138C  1303               	bcf	3,6	;RP1=0, select bank0
  1431  138D  0085               	movwf	5	;volatile
  1432                           
  1433                           ;main.c: 404: TRISB = 0b00000000;
  1434  138E  1683               	bsf	3,5	;RP0=1, select bank1
  1435  138F  1303               	bcf	3,6	;RP1=0, select bank1
  1436  1390  0186               	clrf	6	;volatile
  1437                           
  1438                           ;main.c: 405: PORTB = 0b00000000;
  1439  1391  1283               	bcf	3,5	;RP0=0, select bank0
  1440  1392  1303               	bcf	3,6	;RP1=0, select bank0
  1441  1393  0186               	clrf	6	;volatile
  1442                           
  1443                           ;main.c: 406: TRISC = 0b10000001;
  1444  1394  3081               	movlw	129
  1445  1395  1683               	bsf	3,5	;RP0=1, select bank1
  1446  1396  1303               	bcf	3,6	;RP1=0, select bank1
  1447  1397  0087               	movwf	7	;volatile
  1448                           
  1449                           ;main.c: 407: PORTC = 0b11000000;
  1450  1398  30C0               	movlw	192
  1451  1399  1283               	bcf	3,5	;RP0=0, select bank0
  1452  139A  1303               	bcf	3,6	;RP1=0, select bank0
  1453  139B  0087               	movwf	7	;volatile
  1454                           
  1455                           ;main.c: 408: TRISD = 0b00000000;
  1456  139C  1683               	bsf	3,5	;RP0=1, select bank1
  1457  139D  1303               	bcf	3,6	;RP1=0, select bank1
  1458  139E  0188               	clrf	8	;volatile
  1459                           
  1460                           ;main.c: 409: PORTD = 0b00000000;
  1461  139F  1283               	bcf	3,5	;RP0=0, select bank0
  1462  13A0  1303               	bcf	3,6	;RP1=0, select bank0
  1463  13A1  0188               	clrf	8	;volatile
  1464                           
  1465                           ;main.c: 410: TRISE = 0b00000000;
  1466  13A2  1683               	bsf	3,5	;RP0=1, select bank1
  1467  13A3  1303               	bcf	3,6	;RP1=0, select bank1
  1468  13A4  0189               	clrf	9	;volatile
  1469                           
  1470                           ;main.c: 411: PORTE = 0b00000000;
  1471  13A5  1283               	bcf	3,5	;RP0=0, select bank0
  1472  13A6  1303               	bcf	3,6	;RP1=0, select bank0
  1473  13A7  0189               	clrf	9	;volatile
  1474                           
  1475                           ;main.c: 414: T1CON = 0x03;
  1476  13A8  3003               	movlw	3
  1477  13A9  0090               	movwf	16	;volatile
  1478                           
  1479                           ;main.c: 415: TMR1L = 0x00;
  1480  13AA  018E               	clrf	14	;volatile
  1481                           
  1482                           ;main.c: 416: TMR1H = 0x00;
  1483  13AB  018F               	clrf	15	;volatile
  1484                           
  1485                           ;main.c: 419: USART_Init(115200);
  1486  13AC  3000               	movlw	0
  1487  13AD  1683               	bsf	3,5	;RP0=1, select bank3
  1488  13AE  1703               	bsf	3,6	;RP1=1, select bank3
  1489  13AF  00D9               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1490  13B0  3001               	movlw	1
  1491  13B1  00D8               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1492  13B2  30C2               	movlw	194
  1493  13B3  00D7               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1494  13B4  3000               	movlw	0
  1495  13B5  00D6               	movwf	USART_Init@BaudRate^(0+384)
  1496  13B6  160A  118A  2274  160A  118A  	fcall	_USART_Init
  1497                           
  1498                           ;main.c: 420: TIMER0_Init();
  1499  13BB  160A  118A  20ED  160A  118A  	fcall	_TIMER0_Init
  1500                           
  1501                           ;main.c: 421: ADC_Init();
  1502  13C0  160A  118A  2109  160A  118A  	fcall	_ADC_Init
  1503                           
  1504                           ;main.c: 422: PWM_Init();
  1505  13C5  160A  118A  21E1  160A  118A  	fcall	_PWM_Init
  1506                           
  1507                           ;main.c: 426: INTCONbits.PEIE = 1;
  1508  13CA  170B               	bsf	11,6	;volatile
  1509                           
  1510                           ;main.c: 427: INTCONbits.GIE = 1;
  1511  13CB  178B               	bsf	11,7	;volatile
  1512                           
  1513                           ;main.c: 430: PWM_DutyCycle1(0);
  1514  13CC  3000               	movlw	0
  1515  13CD  1683               	bsf	3,5	;RP0=1, select bank3
  1516  13CE  1703               	bsf	3,6	;RP1=1, select bank3
  1517  13CF  00C7               	movwf	PWM_DutyCycle1@valor^(0+384)
  1518  13D0  3000               	movlw	0
  1519  13D1  00C8               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1520  13D2  160A  118A  219F  160A  118A  	fcall	_PWM_DutyCycle1
  1521                           
  1522                           ;main.c: 431: PWM_DutyCycle2(0);
  1523  13D7  3000               	movlw	0
  1524  13D8  1683               	bsf	3,5	;RP0=1, select bank3
  1525  13D9  1703               	bsf	3,6	;RP1=1, select bank3
  1526  13DA  00C7               	movwf	PWM_DutyCycle2@valor^(0+384)
  1527  13DB  3000               	movlw	0
  1528  13DC  00C8               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1529  13DD  160A  118A  21C0  160A  118A  	fcall	_PWM_DutyCycle2
  1530                           
  1531                           ;main.c: 434: TIMER0_Set(238);
  1532  13E2  30EE               	movlw	238
  1533  13E3  160A  118A  20DD  160A  118A  	fcall	_TIMER0_Set
  1534                           
  1535                           ;main.c: 437: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1536  13E8  3018               	movlw	24
  1537  13E9  1683               	bsf	3,5	;RP0=1, select bank3
  1538  13EA  1703               	bsf	3,6	;RP1=1, select bank3
  1539  13EB  00E0               	movwf	(??_main^(0+384)+2)
  1540  13EC  3061               	movlw	97
  1541  13ED  00DF               	movwf	(??_main^(0+384)+1)
  1542  13EE  306E               	movlw	110
  1543  13EF  00DE               	movwf	??_main^(0+384)
  1544  13F0                     u3667:	
  1545  13F0  0BDE               	decfsz	??_main^(0+384),f
  1546  13F1  2BF0               	goto	u3667
  1547  13F2  0BDF               	decfsz	(??_main^(0+384)+1),f
  1548  13F3  2BF0               	goto	u3667
  1549  13F4  0BE0               	decfsz	(??_main^(0+384)+2),f
  1550  13F5  2BF0               	goto	u3667
  1551  13F6  0000               	nop
  1552  13F7                     l3036:	
  1553                           ;main.c: 440: while(1)
  1554                           
  1555                           
  1556                           ;main.c: 441: {
  1557                           ;main.c: 442: _delay((unsigned long)((200)*(18432000/4000.0)));
  1558  13F7  3005               	movlw	5
  1559  13F8  1683               	bsf	3,5	;RP0=1, select bank3
  1560  13F9  1703               	bsf	3,6	;RP1=1, select bank3
  1561  13FA  00E0               	movwf	(??_main^(0+384)+2)
  1562  13FB  30AD               	movlw	173
  1563  13FC  00DF               	movwf	(??_main^(0+384)+1)
  1564  13FD  30E0               	movlw	224
  1565  13FE  00DE               	movwf	??_main^(0+384)
  1566  13FF                     u3677:	
  1567  13FF  0BDE               	decfsz	??_main^(0+384),f
  1568  1400  2BFF               	goto	u3677
  1569  1401  0BDF               	decfsz	(??_main^(0+384)+1),f
  1570  1402  2BFF               	goto	u3677
  1571  1403  0BE0               	decfsz	(??_main^(0+384)+2),f
  1572  1404  2BFF               	goto	u3677
  1573  1405  2BF7               	goto	l3036
  1574  1406                     __end_of_main:	
  1575                           
  1576                           	psect	text1
  1577  1274                     __ptext1:	
  1578 ;; *************** function _USART_Init *****************
  1579 ;; Defined at:
  1580 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  BaudRate        4   15[BANK3 ] long 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;		None               void
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       4       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          0       0       0       4       0
  1597 ;;      Totals:         0       0       0       8       0
  1598 ;;Total ram usage:        8 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    5
  1601 ;; This function calls:
  1602 ;;		___aldiv
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _USART_Init
  1610  1274                     _USART_Init:	
  1611                           
  1612                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1616  1274  1683               	bsf	3,5	;RP0=1, select bank3
  1617  1275  1703               	bsf	3,6	;RP1=1, select bank3
  1618  1276  0856               	movf	USART_Init@BaudRate^(0+384),w
  1619  1277  00DA               	movwf	??_USART_Init^(0+384)
  1620  1278  0857               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1621  1279  00DB               	movwf	(??_USART_Init^(0+384)+1)
  1622  127A  0858               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1623  127B  00DC               	movwf	(??_USART_Init^(0+384)+2)
  1624  127C  0859               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1625  127D  00DD               	movwf	(??_USART_Init^(0+384)+3)
  1626  127E  3004               	movlw	4
  1627  127F                     u2715:	
  1628  127F  1003               	clrc
  1629  1280  0DDA               	rlf	??_USART_Init^(0+384),f
  1630  1281  0DDB               	rlf	(??_USART_Init^(0+384)+1),f
  1631  1282  0DDC               	rlf	(??_USART_Init^(0+384)+2),f
  1632  1283  0DDD               	rlf	(??_USART_Init^(0+384)+3),f
  1633  1284  3EFF               	addlw	-1
  1634  1285  1D03               	skipz
  1635  1286  2A7F               	goto	u2715
  1636  1287  085D               	movf	(??_USART_Init+3)^(0+384),w
  1637  1288  00CA               	movwf	(___aldiv@divisor+3)^(0+384)
  1638  1289  085C               	movf	(??_USART_Init+2)^(0+384),w
  1639  128A  00C9               	movwf	(___aldiv@divisor+2)^(0+384)
  1640  128B  085B               	movf	(??_USART_Init+1)^(0+384),w
  1641  128C  00C8               	movwf	(___aldiv@divisor+1)^(0+384)
  1642  128D  085A               	movf	??_USART_Init^(0+384),w
  1643  128E  00C7               	movwf	___aldiv@divisor^(0+384)
  1644  128F  3001               	movlw	1
  1645  1290  00CE               	movwf	(___aldiv@dividend+3)^(0+384)
  1646  1291  3019               	movlw	25
  1647  1292  00CD               	movwf	(___aldiv@dividend+2)^(0+384)
  1648  1293  3040               	movlw	64
  1649  1294  00CC               	movwf	(___aldiv@dividend+1)^(0+384)
  1650  1295  3000               	movlw	0
  1651  1296  00CB               	movwf	___aldiv@dividend^(0+384)
  1652  1297  160A  118A  2494   	fcall	___aldiv
  1653  129A  1683               	bsf	3,5	;RP0=1, select bank3
  1654  129B  1703               	bsf	3,6	;RP1=1, select bank3
  1655  129C  0847               	movf	?___aldiv^(0+384),w
  1656  129D  3EFF               	addlw	255
  1657  129E  1683               	bsf	3,5	;RP0=1, select bank1
  1658  129F  1303               	bcf	3,6	;RP1=0, select bank1
  1659  12A0  0099               	movwf	25	;volatile
  1660                           
  1661                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1662  12A1  1398               	bcf	24,7	;volatile
  1663                           
  1664                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1665  12A2  1318               	bcf	24,6	;volatile
  1666                           
  1667                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1668  12A3  1698               	bsf	24,5	;volatile
  1669                           
  1670                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1671  12A4  1218               	bcf	24,4	;volatile
  1672                           
  1673                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1674  12A5  1518               	bsf	24,2	;volatile
  1675                           
  1676                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1677  12A6  1498               	bsf	24,1	;volatile
  1678                           
  1679                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1680  12A7  1018               	bcf	24,0	;volatile
  1681                           
  1682                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1683  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  1684  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  1685  12AA  1798               	bsf	24,7	;volatile
  1686                           
  1687                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1688  12AB  1318               	bcf	24,6	;volatile
  1689                           
  1690                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1691  12AC  1298               	bcf	24,5	;volatile
  1692                           
  1693                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1694  12AD  1618               	bsf	24,4	;volatile
  1695                           
  1696                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1697  12AE  1198               	bcf	24,3	;volatile
  1698                           
  1699                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1700  12AF  1118               	bcf	24,2	;volatile
  1701                           
  1702                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1703  12B0  1098               	bcf	24,1	;volatile
  1704                           
  1705                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1706  12B1  1018               	bcf	24,0	;volatile
  1707                           
  1708                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1709  12B2  1683               	bsf	3,5	;RP0=1, select bank1
  1710  12B3  1303               	bcf	3,6	;RP1=0, select bank1
  1711  12B4  120C               	bcf	12,4	;volatile
  1712                           
  1713                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1714  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  1715  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  1716  12B7  120C               	bcf	12,4	;volatile
  1717                           
  1718                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1719  12B8  1683               	bsf	3,5	;RP0=1, select bank1
  1720  12B9  1303               	bcf	3,6	;RP1=0, select bank1
  1721  12BA  168C               	bsf	12,5	;volatile
  1722                           
  1723                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1724  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  1725  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  1726  12BD  128C               	bcf	12,5	;volatile
  1727  12BE  0008               	return
  1728  12BF                     __end_of_USART_Init:	
  1729                           
  1730                           	psect	text2
  1731  1494                     __ptext2:	
  1732 ;; *************** function ___aldiv *****************
  1733 ;; Defined at:
  1734 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  divisor         4    0[BANK3 ] long 
  1737 ;;  dividend        4    4[BANK3 ] long 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  quotient        4   11[BANK3 ] long 
  1740 ;;  sign            1   10[BANK3 ] unsigned char 
  1741 ;;  counter         1    9[BANK3 ] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  4    0[BANK3 ] long 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       8       0
  1752 ;;      Locals:         0       0       0       6       0
  1753 ;;      Temps:          0       0       0       1       0
  1754 ;;      Totals:         0       0       0      15       0
  1755 ;;Total ram usage:       15 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    4
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_USART_Init
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function ___aldiv
  1767  1494                     ___aldiv:	
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1771  1494  1683               	bsf	3,5	;RP0=1, select bank3
  1772  1495  1703               	bsf	3,6	;RP1=1, select bank3
  1773  1496  01D1               	clrf	___aldiv@sign^(0+384)
  1774  1497  1FCA               	btfss	(___aldiv@divisor+3)^(0+384),7
  1775  1498  2CA6               	goto	l650
  1776  1499  09C7               	comf	___aldiv@divisor^(0+384),f
  1777  149A  09C8               	comf	(___aldiv@divisor+1)^(0+384),f
  1778  149B  09C9               	comf	(___aldiv@divisor+2)^(0+384),f
  1779  149C  09CA               	comf	(___aldiv@divisor+3)^(0+384),f
  1780  149D  0AC7               	incf	___aldiv@divisor^(0+384),f
  1781  149E  1903               	skipnz
  1782  149F  0AC8               	incf	(___aldiv@divisor+1)^(0+384),f
  1783  14A0  1903               	skipnz
  1784  14A1  0AC9               	incf	(___aldiv@divisor+2)^(0+384),f
  1785  14A2  1903               	skipnz
  1786  14A3  0ACA               	incf	(___aldiv@divisor+3)^(0+384),f
  1787  14A4  01D1               	clrf	___aldiv@sign^(0+384)
  1788  14A5  0AD1               	incf	___aldiv@sign^(0+384),f
  1789  14A6                     l650:	
  1790  14A6  1FCE               	btfss	(___aldiv@dividend+3)^(0+384),7
  1791  14A7  2CB7               	goto	l2174
  1792  14A8  09CB               	comf	___aldiv@dividend^(0+384),f
  1793  14A9  09CC               	comf	(___aldiv@dividend+1)^(0+384),f
  1794  14AA  09CD               	comf	(___aldiv@dividend+2)^(0+384),f
  1795  14AB  09CE               	comf	(___aldiv@dividend+3)^(0+384),f
  1796  14AC  0ACB               	incf	___aldiv@dividend^(0+384),f
  1797  14AD  1903               	skipnz
  1798  14AE  0ACC               	incf	(___aldiv@dividend+1)^(0+384),f
  1799  14AF  1903               	skipnz
  1800  14B0  0ACD               	incf	(___aldiv@dividend+2)^(0+384),f
  1801  14B1  1903               	skipnz
  1802  14B2  0ACE               	incf	(___aldiv@dividend+3)^(0+384),f
  1803  14B3  3001               	movlw	1
  1804  14B4  00CF               	movwf	??___aldiv^(0+384)
  1805  14B5  084F               	movf	??___aldiv^(0+384),w
  1806  14B6  06D1               	xorwf	___aldiv@sign^(0+384),f
  1807  14B7                     l2174:	
  1808  14B7  3000               	movlw	0
  1809  14B8  00D5               	movwf	(___aldiv@quotient+3)^(0+384)
  1810  14B9  3000               	movlw	0
  1811  14BA  00D4               	movwf	(___aldiv@quotient+2)^(0+384)
  1812  14BB  3000               	movlw	0
  1813  14BC  00D3               	movwf	(___aldiv@quotient+1)^(0+384)
  1814  14BD  3000               	movlw	0
  1815  14BE  00D2               	movwf	___aldiv@quotient^(0+384)
  1816  14BF  084A               	movf	(___aldiv@divisor+3)^(0+384),w
  1817  14C0  0449               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1818  14C1  0448               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1819  14C2  0447               	iorwf	___aldiv@divisor^(0+384),w
  1820  14C3  1903               	skipnz
  1821  14C4  2D0C               	goto	l2196
  1822  14C5  01D0               	clrf	___aldiv@counter^(0+384)
  1823  14C6  0AD0               	incf	___aldiv@counter^(0+384),f
  1824  14C7                     l2182:	
  1825  14C7  1BCA               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1826  14C8  2CD7               	goto	l2184
  1827  14C9  3001               	movlw	1
  1828  14CA  00CF               	movwf	??___aldiv^(0+384)
  1829  14CB                     u2075:	
  1830  14CB  1003               	clrc
  1831  14CC  0DC7               	rlf	___aldiv@divisor^(0+384),f
  1832  14CD  0DC8               	rlf	(___aldiv@divisor+1)^(0+384),f
  1833  14CE  0DC9               	rlf	(___aldiv@divisor+2)^(0+384),f
  1834  14CF  0DCA               	rlf	(___aldiv@divisor+3)^(0+384),f
  1835  14D0  0BCF               	decfsz	??___aldiv^(0+384),f
  1836  14D1  2CCB               	goto	u2075
  1837  14D2  3001               	movlw	1
  1838  14D3  00CF               	movwf	??___aldiv^(0+384)
  1839  14D4  084F               	movf	??___aldiv^(0+384),w
  1840  14D5  07D0               	addwf	___aldiv@counter^(0+384),f
  1841  14D6  2CC7               	goto	l2182
  1842  14D7                     l2184:	
  1843  14D7  3001               	movlw	1
  1844  14D8  00CF               	movwf	??___aldiv^(0+384)
  1845  14D9                     u2095:	
  1846  14D9  1003               	clrc
  1847  14DA  0DD2               	rlf	___aldiv@quotient^(0+384),f
  1848  14DB  0DD3               	rlf	(___aldiv@quotient+1)^(0+384),f
  1849  14DC  0DD4               	rlf	(___aldiv@quotient+2)^(0+384),f
  1850  14DD  0DD5               	rlf	(___aldiv@quotient+3)^(0+384),f
  1851  14DE  0BCF               	decfsz	??___aldiv^(0+384),f
  1852  14DF  2CD9               	goto	u2095
  1853  14E0  084A               	movf	(___aldiv@divisor+3)^(0+384),w
  1854  14E1  024E               	subwf	(___aldiv@dividend+3)^(0+384),w
  1855  14E2  1D03               	skipz
  1856  14E3  2CEE               	goto	u2105
  1857  14E4  0849               	movf	(___aldiv@divisor+2)^(0+384),w
  1858  14E5  024D               	subwf	(___aldiv@dividend+2)^(0+384),w
  1859  14E6  1D03               	skipz
  1860  14E7  2CEE               	goto	u2105
  1861  14E8  0848               	movf	(___aldiv@divisor+1)^(0+384),w
  1862  14E9  024C               	subwf	(___aldiv@dividend+1)^(0+384),w
  1863  14EA  1D03               	skipz
  1864  14EB  2CEE               	goto	u2105
  1865  14EC  0847               	movf	___aldiv@divisor^(0+384),w
  1866  14ED  024B               	subwf	___aldiv@dividend^(0+384),w
  1867  14EE                     u2105:	
  1868  14EE  1C03               	skipc
  1869  14EF  2CFF               	goto	l2192
  1870  14F0  0847               	movf	___aldiv@divisor^(0+384),w
  1871  14F1  02CB               	subwf	___aldiv@dividend^(0+384),f
  1872  14F2  0848               	movf	(___aldiv@divisor+1)^(0+384),w
  1873  14F3  1C03               	skipc
  1874  14F4  0F48               	incfsz	(___aldiv@divisor+1)^(0+384),w
  1875  14F5  02CC               	subwf	(___aldiv@dividend+1)^(0+384),f
  1876  14F6  0849               	movf	(___aldiv@divisor+2)^(0+384),w
  1877  14F7  1C03               	skipc
  1878  14F8  0F49               	incfsz	(___aldiv@divisor+2)^(0+384),w
  1879  14F9  02CD               	subwf	(___aldiv@dividend+2)^(0+384),f
  1880  14FA  084A               	movf	(___aldiv@divisor+3)^(0+384),w
  1881  14FB  1C03               	skipc
  1882  14FC  0F4A               	incfsz	(___aldiv@divisor+3)^(0+384),w
  1883  14FD  02CE               	subwf	(___aldiv@dividend+3)^(0+384),f
  1884  14FE  1452               	bsf	___aldiv@quotient^(0+384),0
  1885  14FF                     l2192:	
  1886  14FF  3001               	movlw	1
  1887  1500                     u2115:	
  1888  1500  1003               	clrc
  1889  1501  0CCA               	rrf	(___aldiv@divisor+3)^(0+384),f
  1890  1502  0CC9               	rrf	(___aldiv@divisor+2)^(0+384),f
  1891  1503  0CC8               	rrf	(___aldiv@divisor+1)^(0+384),f
  1892  1504  0CC7               	rrf	___aldiv@divisor^(0+384),f
  1893  1505  3EFF               	addlw	-1
  1894  1506  1D03               	skipz
  1895  1507  2D00               	goto	u2115
  1896  1508  3001               	movlw	1
  1897  1509  02D0               	subwf	___aldiv@counter^(0+384),f
  1898  150A  1D03               	btfss	3,2
  1899  150B  2CD7               	goto	l2184
  1900  150C                     l2196:	
  1901  150C  0851               	movf	___aldiv@sign^(0+384),w
  1902  150D  1903               	btfsc	3,2
  1903  150E  2D1A               	goto	l2200
  1904  150F  09D2               	comf	___aldiv@quotient^(0+384),f
  1905  1510  09D3               	comf	(___aldiv@quotient+1)^(0+384),f
  1906  1511  09D4               	comf	(___aldiv@quotient+2)^(0+384),f
  1907  1512  09D5               	comf	(___aldiv@quotient+3)^(0+384),f
  1908  1513  0AD2               	incf	___aldiv@quotient^(0+384),f
  1909  1514  1903               	skipnz
  1910  1515  0AD3               	incf	(___aldiv@quotient+1)^(0+384),f
  1911  1516  1903               	skipnz
  1912  1517  0AD4               	incf	(___aldiv@quotient+2)^(0+384),f
  1913  1518  1903               	skipnz
  1914  1519  0AD5               	incf	(___aldiv@quotient+3)^(0+384),f
  1915  151A                     l2200:	
  1916  151A  0855               	movf	(___aldiv@quotient+3)^(0+384),w
  1917  151B  00CA               	movwf	(?___aldiv+3)^(0+384)
  1918  151C  0854               	movf	(___aldiv@quotient+2)^(0+384),w
  1919  151D  00C9               	movwf	(?___aldiv+2)^(0+384)
  1920  151E  0853               	movf	(___aldiv@quotient+1)^(0+384),w
  1921  151F  00C8               	movwf	(?___aldiv+1)^(0+384)
  1922  1520  0852               	movf	___aldiv@quotient^(0+384),w
  1923  1521  00C7               	movwf	?___aldiv^(0+384)
  1924  1522  0008               	return
  1925  1523                     __end_of___aldiv:	
  1926                           
  1927                           	psect	text3
  1928  10DD                     __ptext3:	
  1929 ;; *************** function _TIMER0_Set *****************
  1930 ;; Defined at:
  1931 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  contagens       1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  contagens       1    0[BANK3 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         0       0       0       0       0
  1946 ;;      Locals:         0       0       0       1       0
  1947 ;;      Temps:          0       0       0       0       0
  1948 ;;      Totals:         0       0       0       1       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    4
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _TIMER0_Set
  1961  10DD                     _TIMER0_Set:	
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _TIMER0_Set: [wreg]
  1965                           ;TIMER0_Set@contagens stored from wreg
  1966  10DD  1683               	bsf	3,5	;RP0=1, select bank3
  1967  10DE  1703               	bsf	3,6	;RP1=1, select bank3
  1968  10DF  00C7               	movwf	TIMER0_Set@contagens^(0+384)
  1969                           
  1970                           ;timers.c: 22: TMR0 = contagens;
  1971  10E0  0847               	movf	TIMER0_Set@contagens^(0+384),w
  1972  10E1  1283               	bcf	3,5	;RP0=0, select bank0
  1973  10E2  1303               	bcf	3,6	;RP1=0, select bank0
  1974  10E3  0081               	movwf	1	;volatile
  1975  10E4  0008               	return
  1976  10E5                     __end_of_TIMER0_Set:	
  1977                           
  1978                           	psect	text4
  1979  10ED                     __ptext4:	
  1980 ;; *************** function _TIMER0_Init *****************
  1981 ;; Defined at:
  1982 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;		None               void
  1989 ;; Registers used:
  1990 ;;		None
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    4
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _TIMER0_Init
  2012  10ED                     _TIMER0_Init:	
  2013                           
  2014                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2015                           
  2016                           ;incstack = 0
  2017                           ; Regs used in _TIMER0_Init: []
  2018  10ED  1683               	bsf	3,5	;RP0=1, select bank1
  2019  10EE  1303               	bcf	3,6	;RP1=0, select bank1
  2020  10EF  1281               	bcf	1,5	;volatile
  2021                           
  2022                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2023  10F0  1201               	bcf	1,4	;volatile
  2024                           
  2025                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2026  10F1  1181               	bcf	1,3	;volatile
  2027                           
  2028                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2029  10F2  1501               	bsf	1,2	;volatile
  2030                           
  2031                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2032  10F3  1481               	bsf	1,1	;volatile
  2033                           
  2034                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2035  10F4  1401               	bsf	1,0	;volatile
  2036                           
  2037                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2038  10F5  110B               	bcf	11,2	;volatile
  2039                           
  2040                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2041  10F6  168B               	bsf	11,5	;volatile
  2042  10F7  0008               	return
  2043  10F8                     __end_of_TIMER0_Init:	
  2044                           
  2045                           	psect	text5
  2046  11E1                     __ptext5:	
  2047 ;; *************** function _PWM_Init *****************
  2048 ;; Defined at:
  2049 ;;		line 5 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;		None               void
  2056 ;; Registers used:
  2057 ;;		wreg
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _PWM_Init
  2079  11E1                     _PWM_Init:	
  2080                           
  2081                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _PWM_Init: [wreg]
  2085  11E1  1283               	bcf	3,5	;RP0=0, select bank0
  2086  11E2  1303               	bcf	3,6	;RP1=0, select bank0
  2087  11E3  1492               	bsf	18,1	;volatile
  2088                           
  2089                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2090  11E4  1012               	bcf	18,0	;volatile
  2091                           
  2092                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2093  11E5  1312               	bcf	18,6	;volatile
  2094                           
  2095                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2096  11E6  1292               	bcf	18,5	;volatile
  2097                           
  2098                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2099  11E7  1212               	bcf	18,4	;volatile
  2100                           
  2101                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2102  11E8  1192               	bcf	18,3	;volatile
  2103                           
  2104                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2105  11E9  1512               	bsf	18,2	;volatile
  2106                           
  2107                           ;pwm.c: 27: PR2 = 255;
  2108  11EA  30FF               	movlw	255
  2109  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  2110  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  2111  11ED  0092               	movwf	18	;volatile
  2112                           
  2113                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2114  11EE  1283               	bcf	3,5	;RP0=0, select bank0
  2115  11EF  1303               	bcf	3,6	;RP1=0, select bank0
  2116  11F0  1597               	bsf	23,3	;volatile
  2117                           
  2118                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2119  11F1  1517               	bsf	23,2	;volatile
  2120                           
  2121                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2122  11F2  1497               	bsf	23,1	;volatile
  2123                           
  2124                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2125  11F3  1417               	bsf	23,0	;volatile
  2126                           
  2127                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2128  11F4  1683               	bsf	3,5	;RP0=1, select bank1
  2129  11F5  1303               	bcf	3,6	;RP1=0, select bank1
  2130  11F6  150C               	bsf	12,2	;volatile
  2131                           
  2132                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2133  11F7  1283               	bcf	3,5	;RP0=0, select bank0
  2134  11F8  1303               	bcf	3,6	;RP1=0, select bank0
  2135  11F9  110C               	bcf	12,2	;volatile
  2136                           
  2137                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2138  11FA  159D               	bsf	29,3	;volatile
  2139                           
  2140                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2141  11FB  151D               	bsf	29,2	;volatile
  2142                           
  2143                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2144  11FC  149D               	bsf	29,1	;volatile
  2145                           
  2146                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2147  11FD  141D               	bsf	29,0	;volatile
  2148                           
  2149                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2150  11FE  1683               	bsf	3,5	;RP0=1, select bank1
  2151  11FF  1303               	bcf	3,6	;RP1=0, select bank1
  2152  1200  140D               	bsf	13,0	;volatile
  2153                           
  2154                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2155  1201  1283               	bcf	3,5	;RP0=0, select bank0
  2156  1202  1303               	bcf	3,6	;RP1=0, select bank0
  2157  1203  100D               	bcf	13,0	;volatile
  2158  1204  0008               	return
  2159  1205                     __end_of_PWM_Init:	
  2160                           
  2161                           	psect	text6
  2162  11C0                     __ptext6:	
  2163 ;; *************** function _PWM_DutyCycle2 *****************
  2164 ;; Defined at:
  2165 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  valor           2    0[BANK3 ] int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;		None               void
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         0       0       0       2       0
  2180 ;;      Locals:         0       0       0       0       0
  2181 ;;      Temps:          0       0       0       2       0
  2182 ;;      Totals:         0       0       0       4       0
  2183 ;;Total ram usage:        4 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    4
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _PWM_DutyCycle2
  2195  11C0                     _PWM_DutyCycle2:	
  2196                           
  2197                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2201  11C0  1683               	bsf	3,5	;RP0=1, select bank3
  2202  11C1  1703               	bsf	3,6	;RP1=1, select bank3
  2203  11C2  0848               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2204  11C3  00CA               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2205  11C4  0847               	movf	PWM_DutyCycle2@valor^(0+384),w
  2206  11C5  00C9               	movwf	??_PWM_DutyCycle2^(0+384)
  2207  11C6  0D4A               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2208  11C7  0CCA               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2209  11C8  0CC9               	rrf	??_PWM_DutyCycle2^(0+384),f
  2210  11C9  0D4A               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2211  11CA  0CCA               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2212  11CB  0CC9               	rrf	??_PWM_DutyCycle2^(0+384),f
  2213  11CC  0849               	movf	??_PWM_DutyCycle2^(0+384),w
  2214  11CD  1283               	bcf	3,5	;RP0=0, select bank0
  2215  11CE  1303               	bcf	3,6	;RP1=0, select bank0
  2216  11CF  009B               	movwf	27	;volatile
  2217                           
  2218                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2219  11D0  1683               	bsf	3,5	;RP0=1, select bank3
  2220  11D1  1703               	bsf	3,6	;RP1=1, select bank3
  2221  11D2  0847               	movf	PWM_DutyCycle2@valor^(0+384),w
  2222  11D3  00C9               	movwf	??_PWM_DutyCycle2^(0+384)
  2223  11D4  3003               	movlw	3
  2224  11D5                     u2705:	
  2225  11D5  1003               	clrc
  2226  11D6  0DC9               	rlf	??_PWM_DutyCycle2^(0+384),f
  2227  11D7  3EFF               	addlw	-1
  2228  11D8  1D03               	skipz
  2229  11D9  29D5               	goto	u2705
  2230  11DA  1003               	clrc
  2231  11DB  0D49               	rlf	??_PWM_DutyCycle2^(0+384),w
  2232  11DC  380C               	iorlw	12
  2233  11DD  1283               	bcf	3,5	;RP0=0, select bank0
  2234  11DE  1303               	bcf	3,6	;RP1=0, select bank0
  2235  11DF  009D               	movwf	29	;volatile
  2236  11E0  0008               	return
  2237  11E1                     __end_of_PWM_DutyCycle2:	
  2238                           
  2239                           	psect	text7
  2240  119F                     __ptext7:	
  2241 ;; *************** function _PWM_DutyCycle1 *****************
  2242 ;; Defined at:
  2243 ;;		line 64 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  valor           2    0[BANK3 ] int 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;		None               void
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       2       0
  2258 ;;      Locals:         0       0       0       0       0
  2259 ;;      Temps:          0       0       0       2       0
  2260 ;;      Totals:         0       0       0       4       0
  2261 ;;Total ram usage:        4 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    4
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _PWM_DutyCycle1
  2273  119F                     _PWM_DutyCycle1:	
  2274                           
  2275                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2279  119F  1683               	bsf	3,5	;RP0=1, select bank3
  2280  11A0  1703               	bsf	3,6	;RP1=1, select bank3
  2281  11A1  0848               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2282  11A2  00CA               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2283  11A3  0847               	movf	PWM_DutyCycle1@valor^(0+384),w
  2284  11A4  00C9               	movwf	??_PWM_DutyCycle1^(0+384)
  2285  11A5  0D4A               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2286  11A6  0CCA               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2287  11A7  0CC9               	rrf	??_PWM_DutyCycle1^(0+384),f
  2288  11A8  0D4A               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2289  11A9  0CCA               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2290  11AA  0CC9               	rrf	??_PWM_DutyCycle1^(0+384),f
  2291  11AB  0849               	movf	??_PWM_DutyCycle1^(0+384),w
  2292  11AC  1283               	bcf	3,5	;RP0=0, select bank0
  2293  11AD  1303               	bcf	3,6	;RP1=0, select bank0
  2294  11AE  0095               	movwf	21	;volatile
  2295                           
  2296                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2297  11AF  1683               	bsf	3,5	;RP0=1, select bank3
  2298  11B0  1703               	bsf	3,6	;RP1=1, select bank3
  2299  11B1  0847               	movf	PWM_DutyCycle1@valor^(0+384),w
  2300  11B2  00C9               	movwf	??_PWM_DutyCycle1^(0+384)
  2301  11B3  3003               	movlw	3
  2302  11B4                     u2725:	
  2303  11B4  1003               	clrc
  2304  11B5  0DC9               	rlf	??_PWM_DutyCycle1^(0+384),f
  2305  11B6  3EFF               	addlw	-1
  2306  11B7  1D03               	skipz
  2307  11B8  29B4               	goto	u2725
  2308  11B9  1003               	clrc
  2309  11BA  0D49               	rlf	??_PWM_DutyCycle1^(0+384),w
  2310  11BB  380C               	iorlw	12
  2311  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  2312  11BD  1303               	bcf	3,6	;RP1=0, select bank0
  2313  11BE  0097               	movwf	23	;volatile
  2314  11BF  0008               	return
  2315  11C0                     __end_of_PWM_DutyCycle1:	
  2316                           
  2317                           	psect	text8
  2318  1109                     __ptext8:	
  2319 ;; *************** function _ADC_Init *****************
  2320 ;; Defined at:
  2321 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\adc.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;		None               void
  2328 ;; Registers used:
  2329 ;;		None
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    4
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _ADC_Init
  2351  1109                     _ADC_Init:	
  2352                           
  2353                           ;adc.c: 9: ADCON1bits.ADFM = 1;
  2354                           
  2355                           ;incstack = 0
  2356                           ; Regs used in _ADC_Init: []
  2357  1109  1683               	bsf	3,5	;RP0=1, select bank1
  2358  110A  1303               	bcf	3,6	;RP1=0, select bank1
  2359  110B  179F               	bsf	31,7	;volatile
  2360                           
  2361                           ;adc.c: 32: ADCON1bits.PCFG3 = 1;
  2362  110C  159F               	bsf	31,3	;volatile
  2363                           
  2364                           ;adc.c: 33: ADCON1bits.PCFG2 = 1;
  2365  110D  151F               	bsf	31,2	;volatile
  2366                           
  2367                           ;adc.c: 34: ADCON1bits.PCFG1 = 1;
  2368  110E  149F               	bsf	31,1	;volatile
  2369                           
  2370                           ;adc.c: 35: ADCON1bits.PCFG0 = 0;
  2371  110F  101F               	bcf	31,0	;volatile
  2372                           
  2373                           ;adc.c: 38: ADCON0bits.ADCS1 = 1;
  2374  1110  1283               	bcf	3,5	;RP0=0, select bank0
  2375  1111  1303               	bcf	3,6	;RP1=0, select bank0
  2376  1112  179F               	bsf	31,7	;volatile
  2377                           
  2378                           ;adc.c: 39: ADCON0bits.ADCS0 = 0;
  2379  1113  131F               	bcf	31,6	;volatile
  2380                           
  2381                           ;adc.c: 42: PIE1bits.ADIE = 0;
  2382  1114  1683               	bsf	3,5	;RP0=1, select bank1
  2383  1115  1303               	bcf	3,6	;RP1=0, select bank1
  2384  1116  130C               	bcf	12,6	;volatile
  2385                           
  2386                           ;adc.c: 43: PIR1bits.ADIF = 0;
  2387  1117  1283               	bcf	3,5	;RP0=0, select bank0
  2388  1118  1303               	bcf	3,6	;RP1=0, select bank0
  2389  1119  130C               	bcf	12,6	;volatile
  2390  111A  0008               	return
  2391  111B                     __end_of_ADC_Init:	
  2392                           
  2393                           	psect	text9
  2394  0055                     __ptext9:	
  2395 ;; *************** function _ISR *****************
  2396 ;; Defined at:
  2397 ;;		line 131 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  a               2   37[BANK1 ] int 
  2402 ;;  a               2   35[BANK1 ] int 
  2403 ;;  a               2   33[BANK1 ] int 
  2404 ;;  a               2   31[BANK1 ] int 
  2405 ;;  index           1   30[BANK1 ] unsigned char 
  2406 ;;  a               2   39[BANK1 ] int 
  2407 ;;  checksum        1   28[BANK1 ] unsigned char 
  2408 ;;  byte            1   29[BANK1 ] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;		None               void
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         0       0      41       0       0
  2420 ;;      Temps:          0       6       0       0       0
  2421 ;;      Totals:         0       6      41       0       0
  2422 ;;Total ram usage:       47 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    3
  2425 ;; This function calls:
  2426 ;;		_USART_ReceiveChar
  2427 ;;		___awtoft
  2428 ;;		___bmul
  2429 ;;		___ftadd
  2430 ;;		___ftdiv
  2431 ;;		___ftge
  2432 ;;		___ftmul
  2433 ;;		___ftneg
  2434 ;;		___fttol
  2435 ;;		___lwtoft
  2436 ;;		___wmul
  2437 ;;		_abs
  2438 ;;		_send
  2439 ;;		_trapmf
  2440 ;;		_trimf
  2441 ;;		i1_PWM_DutyCycle2
  2442 ;;		i1_TIMER0_Set
  2443 ;; This function is called by:
  2444 ;;		Interrupt level 1
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _ISR
  2450  0055                     _ISR:	
  2451                           
  2452                           ;main.c: 134: if (PIR1bits.RCIF)
  2453  0055  1E8C               	btfss	12,5	;volatile
  2454  0056  28F2               	goto	i1l2726
  2455                           
  2456                           ;main.c: 135: {
  2457                           ;main.c: 136: unsigned char byte = USART_ReceiveChar();
  2458  0057  160A  118A  212F  120A  118A  	fcall	_USART_ReceiveChar
  2459  005C  1283               	bcf	3,5	;RP0=0, select bank0
  2460  005D  1303               	bcf	3,6	;RP1=0, select bank0
  2461  005E  00DB               	movwf	??_ISR
  2462  005F  085B               	movf	??_ISR,w
  2463  0060  1683               	bsf	3,5	;RP0=1, select bank1
  2464  0061  1303               	bcf	3,6	;RP1=0, select bank1
  2465  0062  00BD               	movwf	ISR@byte^(0+128)
  2466                           
  2467                           ;main.c: 137: if (byte == '#')
  2468  0063  083D               	movf	ISR@byte^(0+128),w
  2469  0064  3A23               	xorlw	35
  2470  0065  1D03               	skipz
  2471  0066  286A               	goto	i1l2686
  2472                           
  2473                           ;main.c: 138: {
  2474                           ;main.c: 139: receiveIndex = 0;
  2475  0067  01E9               	clrf	_receiveIndex^(0+128)
  2476  0068  01EA               	clrf	(_receiveIndex+1)^(0+128)
  2477                           
  2478                           ;main.c: 140: } else {
  2479  0069  2870               	goto	i1l2688
  2480  006A                     i1l2686:	
  2481                           
  2482                           ;main.c: 141: receiveIndex++;
  2483  006A  3001               	movlw	1
  2484  006B  07E9               	addwf	_receiveIndex^(0+128),f
  2485  006C  1803               	skipnc
  2486  006D  0AEA               	incf	(_receiveIndex+1)^(0+128),f
  2487  006E  3000               	movlw	0
  2488  006F  07EA               	addwf	(_receiveIndex+1)^(0+128),f
  2489  0070                     i1l2688:	
  2490                           
  2491                           ;main.c: 142: }
  2492                           ;main.c: 144: buffer[receiveIndex] = byte;
  2493  0070  083D               	movf	ISR@byte^(0+128),w
  2494  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0073  00DB               	movwf	??_ISR
  2497  0074  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0075  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0076  0869               	movf	_receiveIndex^(0+128),w
  2500  0077  3E61               	addlw	_buffer& (0+255)
  2501  0078  0084               	movwf	4
  2502  0079  1283               	bcf	3,5	;RP0=0, select bank0
  2503  007A  1303               	bcf	3,6	;RP1=0, select bank0
  2504  007B  085B               	movf	??_ISR,w
  2505  007C  1383               	bcf	3,7	;select IRP bank0
  2506  007D  0080               	movwf	0
  2507                           
  2508                           ;main.c: 146: if (receiveIndex >= 6) {
  2509  007E  1683               	bsf	3,5	;RP0=1, select bank1
  2510  007F  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0080  086A               	movf	(_receiveIndex+1)^(0+128),w
  2512  0081  3A80               	xorlw	128
  2513  0082  00FF               	movwf	127
  2514  0083  3080               	movlw	128
  2515  0084  027F               	subwf	127,w
  2516  0085  1D03               	skipz
  2517  0086  2889               	goto	u307_25
  2518  0087  3006               	movlw	6
  2519  0088  0269               	subwf	_receiveIndex^(0+128),w
  2520  0089                     u307_25:	
  2521  0089  1C03               	skipc
  2522  008A  28EF               	goto	i1l2724
  2523                           
  2524                           ;main.c: 147: receiveIndex = 0;
  2525  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2526  008C  1303               	bcf	3,6	;RP1=0, select bank1
  2527  008D  01E9               	clrf	_receiveIndex^(0+128)
  2528  008E  01EA               	clrf	(_receiveIndex+1)^(0+128)
  2529                           
  2530                           ;main.c: 149: if (buffer[1] == 'A' || buffer[2] == 'A' || buffer[3] == 'A') {
  2531  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0091  0862               	movf	_buffer+1,w
  2534  0092  3A41               	xorlw	65
  2535  0093  1903               	skipnz
  2536  0094  289D               	goto	i1l2700
  2537  0095  0863               	movf	_buffer+2,w
  2538  0096  3A41               	xorlw	65
  2539  0097  1903               	skipnz
  2540  0098  289D               	goto	i1l2700
  2541  0099  0864               	movf	_buffer+3,w
  2542  009A  3A41               	xorlw	65
  2543  009B  1D03               	skipz
  2544  009C  28A3               	goto	i1l2702
  2545  009D                     i1l2700:	
  2546                           
  2547                           ;main.c: 150: send();
  2548  009D  160A  118A  222A  120A  118A  	fcall	_send
  2549                           
  2550                           ;main.c: 151: } else if (buffer[0] == '#' && buffer[1] == '$' && buffer[2] == ':') {
  2551  00A2  28EF               	goto	i1l2724
  2552  00A3                     i1l2702:	
  2553  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2554  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2555  00A5  0861               	movf	_buffer,w
  2556  00A6  3A23               	xorlw	35
  2557  00A7  1D03               	skipz
  2558  00A8  28EF               	goto	i1l2724
  2559  00A9  0862               	movf	_buffer+1,w
  2560  00AA  3A24               	xorlw	36
  2561  00AB  1D03               	skipz
  2562  00AC  28EF               	goto	i1l2724
  2563  00AD  0863               	movf	_buffer+2,w
  2564  00AE  3A3A               	xorlw	58
  2565  00AF  1D03               	skipz
  2566  00B0  28EF               	goto	i1l2724
  2567                           
  2568                           ;main.c: 152: unsigned char checksum = 0x00;
  2569  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  2570  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  2571  00B3  01BC               	clrf	ISR@checksum^(0+128)
  2572                           
  2573                           ;main.c: 153: for (unsigned char index = 0; index < 6; index++) {
  2574  00B4  01BE               	clrf	ISR@index^(0+128)
  2575  00B5  3006               	movlw	6
  2576  00B6  023E               	subwf	ISR@index^(0+128),w
  2577  00B7  1803               	btfsc	3,0
  2578  00B8  28D1               	goto	i1l2720
  2579  00B9                     i1l2714:	
  2580                           
  2581                           ;main.c: 154: checksum ^= buffer[index];
  2582  00B9  083E               	movf	ISR@index^(0+128),w
  2583  00BA  3E61               	addlw	_buffer& (0+255)
  2584  00BB  0084               	movwf	4
  2585  00BC  1383               	bcf	3,7	;select IRP bank0
  2586  00BD  0800               	movf	0,w
  2587  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2588  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2589  00C0  00DB               	movwf	??_ISR
  2590  00C1  085B               	movf	??_ISR,w
  2591  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  2592  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  2593  00C4  06BC               	xorwf	ISR@checksum^(0+128),f
  2594  00C5  3001               	movlw	1
  2595  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  2596  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  2597  00C8  00DB               	movwf	??_ISR
  2598  00C9  085B               	movf	??_ISR,w
  2599  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  2600  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  2601  00CC  07BE               	addwf	ISR@index^(0+128),f
  2602  00CD  3006               	movlw	6
  2603  00CE  023E               	subwf	ISR@index^(0+128),w
  2604  00CF  1C03               	skipc
  2605  00D0  28B9               	goto	i1l2714
  2606  00D1                     i1l2720:	
  2607                           
  2608                           ;main.c: 155: }
  2609                           ;main.c: 157: if (buffer[6] == checksum) {
  2610  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2611  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  2612  00D3  0867               	movf	_buffer+6,w
  2613  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  2614  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  2615  00D6  063C               	xorwf	ISR@checksum^(0+128),w
  2616  00D7  1D03               	skipz
  2617  00D8  28EF               	goto	i1l2724
  2618                           
  2619                           ;main.c: 158: setpoint = (buffer[3] << 8) + (buffer[4]);
  2620  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2621  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2622  00DB  0864               	movf	_buffer+3,w
  2623  00DC  00DB               	movwf	??_ISR
  2624  00DD  01DC               	clrf	??_ISR+1
  2625  00DE  085B               	movf	??_ISR,w
  2626  00DF  00DC               	movwf	??_ISR+1
  2627  00E0  01DB               	clrf	??_ISR
  2628  00E1  0865               	movf	_buffer+4,w
  2629  00E2  075B               	addwf	??_ISR,w
  2630  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2631  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2632  00E5  00ED               	movwf	_setpoint^(0+128)
  2633  00E6  3000               	movlw	0
  2634  00E7  1803               	skipnc
  2635  00E8  3001               	movlw	1
  2636  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2637  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2638  00EB  075C               	addwf	??_ISR+1,w
  2639  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2640  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  2641  00EE  00EE               	movwf	(_setpoint+1)^(0+128)
  2642  00EF                     i1l2724:	
  2643                           
  2644                           ;main.c: 159: }
  2645                           ;main.c: 161: }
  2646                           ;main.c: 162: }
  2647                           ;main.c: 165: PIR1bits.RCIF = 0;
  2648  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2649  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2650  00F1  128C               	bcf	12,5	;volatile
  2651  00F2                     i1l2726:	
  2652                           
  2653                           ;main.c: 166: }
  2654                           ;main.c: 169: if (PIR1bits.ADIF)
  2655  00F2  1B0C               	btfsc	12,6	;volatile
  2656                           
  2657                           ;main.c: 170: {
  2658                           ;main.c: 174: PIR1bits.ADIF = 0;
  2659  00F3  130C               	bcf	12,6	;volatile
  2660                           
  2661                           ;main.c: 175: }
  2662                           ;main.c: 179: if (INTCONbits.T0IF)
  2663  00F4  120A  158A  1D0B   	btfss	11,2	;volatile
  2664  00F7  2C38               	goto	i1l2996
  2665                           
  2666                           ;main.c: 180: {
  2667                           ;main.c: 182: TIMER0_Set(238);
  2668  00F8  30EE               	movlw	238
  2669  00F9  160A  118A  20C7  120A  118A  	fcall	i1_TIMER0_Set
  2670                           
  2671                           ;main.c: 185: if (contagens_tm0 < 499)
  2672  00FE  3001               	movlw	1
  2673  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0101  026B               	subwf	_contagens_tm0+1,w
  2676  0102  30F3               	movlw	243
  2677  0103  1903               	skipnz
  2678  0104  026A               	subwf	_contagens_tm0,w
  2679  0105  1803               	skipnc
  2680  0106  2911               	goto	i1l2738
  2681                           
  2682                           ;main.c: 186: {
  2683                           ;main.c: 188: contagens_tm0++;
  2684  0107  3001               	movlw	1
  2685  0108  07EA               	addwf	_contagens_tm0,f
  2686  0109  1803               	skipnc
  2687  010A  0AEB               	incf	_contagens_tm0+1,f
  2688  010B  3000               	movlw	0
  2689  010C  07EB               	addwf	_contagens_tm0+1,f
  2690                           
  2691                           ;main.c: 191: PORTBbits.RB6 = 1;
  2692  010D  1706               	bsf	6,6	;volatile
  2693                           
  2694                           ;main.c: 192: }
  2695  010E  120A  158A  2C37   	goto	i1l2994
  2696  0111                     i1l2738:	
  2697                           
  2698                           ;main.c: 193: else
  2699                           ;main.c: 194: {
  2700                           ;main.c: 196: contagens_tm0 = 0;
  2701  0111  01EA               	clrf	_contagens_tm0
  2702  0112  01EB               	clrf	_contagens_tm0+1
  2703                           
  2704                           ;main.c: 199: pulsos = (TMR1H << 8) + TMR1L;
  2705  0113  080F               	movf	15,w	;volatile
  2706  0114  01ED               	clrf	_pulsos+1
  2707  0115  07ED               	addwf	_pulsos+1,f
  2708  0116  080E               	movf	14,w	;volatile
  2709  0117  01EC               	clrf	_pulsos
  2710  0118  07EC               	addwf	_pulsos,f
  2711                           
  2712                           ;main.c: 200: rpm = (int) ((pulsos / 7.0) * 120);
  2713  0119  086D               	movf	_pulsos+1,w
  2714  011A  01F9               	clrf	___lwtoft@c+1
  2715  011B  07F9               	addwf	___lwtoft@c+1,f
  2716  011C  086C               	movf	_pulsos,w
  2717  011D  01F8               	clrf	___lwtoft@c
  2718  011E  07F8               	addwf	___lwtoft@c,f
  2719  011F  160A  118A  211B  120A  118A  	fcall	___lwtoft
  2720  0124  0878               	movf	?___lwtoft,w
  2721  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0127  00AA               	movwf	___ftdiv@f1
  2724  0128  0879               	movf	?___lwtoft+1,w
  2725  0129  00AB               	movwf	___ftdiv@f1+1
  2726  012A  087A               	movf	?___lwtoft+2,w
  2727  012B  00AC               	movwf	___ftdiv@f1+2
  2728  012C  3000               	movlw	0
  2729  012D  00A7               	movwf	___ftdiv@f2
  2730  012E  30E0               	movlw	224
  2731  012F  00A8               	movwf	___ftdiv@f2+1
  2732  0130  3040               	movlw	64
  2733  0131  00A9               	movwf	___ftdiv@f2+2
  2734  0132  160A  118A  2523  120A  118A  	fcall	___ftdiv
  2735  0137  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0138  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0139  0827               	movf	?___ftdiv,w
  2738  013A  00BA               	movwf	___ftmul@f2
  2739  013B  0828               	movf	?___ftdiv+1,w
  2740  013C  00BB               	movwf	___ftmul@f2+1
  2741  013D  0829               	movf	?___ftdiv+2,w
  2742  013E  00BC               	movwf	___ftmul@f2+2
  2743  013F  3000               	movlw	0
  2744  0140  00B7               	movwf	___ftmul@f1
  2745  0141  30F0               	movlw	240
  2746  0142  00B8               	movwf	___ftmul@f1+1
  2747  0143  3042               	movlw	66
  2748  0144  00B9               	movwf	___ftmul@f1+2
  2749  0145  120A  118A  272B  120A  118A  	fcall	___ftmul
  2750  014A  1283               	bcf	3,5	;RP0=0, select bank0
  2751  014B  1303               	bcf	3,6	;RP1=0, select bank0
  2752  014C  0837               	movf	?___ftmul,w
  2753  014D  00C7               	movwf	___fttol@f1
  2754  014E  0838               	movf	?___ftmul+1,w
  2755  014F  00C8               	movwf	___fttol@f1+1
  2756  0150  0839               	movf	?___ftmul+2,w
  2757  0151  00C9               	movwf	___fttol@f1+2
  2758  0152  160A  118A  2406  120A  118A  	fcall	___fttol
  2759  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0159  0848               	movf	?___fttol+1,w
  2762  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2763  015B  1303               	bcf	3,6	;RP1=0, select bank1
  2764  015C  01EC               	clrf	(_rpm+1)^(0+128)
  2765  015D  07EC               	addwf	(_rpm+1)^(0+128),f
  2766  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2767  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0160  0847               	movf	?___fttol,w
  2769  0161  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0162  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0163  01EB               	clrf	_rpm^(0+128)
  2772  0164  07EB               	addwf	_rpm^(0+128),f
  2773                           
  2774                           ;main.c: 202: erro_anterior = erro_atual;
  2775  0165  0866               	movf	(_erro_atual+1)^(0+128),w
  2776  0166  01E4               	clrf	(_erro_anterior+1)^(0+128)
  2777  0167  07E4               	addwf	(_erro_anterior+1)^(0+128),f
  2778  0168  0865               	movf	_erro_atual^(0+128),w
  2779  0169  01E3               	clrf	_erro_anterior^(0+128)
  2780  016A  07E3               	addwf	_erro_anterior^(0+128),f
  2781                           
  2782                           ;main.c: 203: erro_atual = (((abs(setpoint - rpm))<(2000))?(abs(setpoint - rpm)):(2000))
      +                          ;
  2783  016B  096B               	comf	_rpm^(0+128),w
  2784  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2785  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2786  016E  00DB               	movwf	??_ISR
  2787  016F  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0170  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0171  096C               	comf	(_rpm+1)^(0+128),w
  2790  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0174  00DC               	movwf	??_ISR+1
  2793  0175  0ADB               	incf	??_ISR,f
  2794  0176  1903               	skipnz
  2795  0177  0ADC               	incf	??_ISR+1,f
  2796  0178  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0179  1303               	bcf	3,6	;RP1=0, select bank1
  2798  017A  086D               	movf	_setpoint^(0+128),w
  2799  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2800  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2801  017D  075B               	addwf	??_ISR,w
  2802  017E  00F0               	movwf	abs@a
  2803  017F  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0180  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0181  086E               	movf	(_setpoint+1)^(0+128),w
  2806  0182  1803               	skipnc
  2807  0183  0A6E               	incf	(_setpoint+1)^(0+128),w
  2808  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0186  075C               	addwf	??_ISR+1,w
  2811  0187  00F1               	movwf	abs@a+1
  2812  0188  120A  158A  202E  120A  118A  	fcall	_abs
  2813  018D  0871               	movf	?_abs+1,w
  2814  018E  3A80               	xorlw	128
  2815  018F  00FF               	movwf	127
  2816  0190  3087               	movlw	135
  2817  0191  027F               	subwf	127,w
  2818  0192  1D03               	skipz
  2819  0193  2996               	goto	u320_25
  2820  0194  30D0               	movlw	208
  2821  0195  0270               	subwf	?_abs,w
  2822  0196                     u320_25:	
  2823  0196  1C03               	skipc
  2824  0197  299F               	goto	i1l2750
  2825  0198  30D0               	movlw	208
  2826  0199  1683               	bsf	3,5	;RP0=1, select bank1
  2827  019A  1303               	bcf	3,6	;RP1=0, select bank1
  2828  019B  00E5               	movwf	_erro_atual^(0+128)
  2829  019C  3007               	movlw	7
  2830  019D  00E6               	movwf	(_erro_atual^(0+128)+1)
  2831  019E  29CB               	goto	i1l2752
  2832  019F                     i1l2750:	
  2833  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2834  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2835  01A1  096B               	comf	_rpm^(0+128),w
  2836  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2837  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2838  01A4  00DB               	movwf	??_ISR
  2839  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2840  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2841  01A7  096C               	comf	(_rpm+1)^(0+128),w
  2842  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2843  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2844  01AA  00DC               	movwf	??_ISR+1
  2845  01AB  0ADB               	incf	??_ISR,f
  2846  01AC  1903               	skipnz
  2847  01AD  0ADC               	incf	??_ISR+1,f
  2848  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2849  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2850  01B0  086D               	movf	_setpoint^(0+128),w
  2851  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2852  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2853  01B3  075B               	addwf	??_ISR,w
  2854  01B4  00F0               	movwf	abs@a
  2855  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2856  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2857  01B7  086E               	movf	(_setpoint+1)^(0+128),w
  2858  01B8  1803               	skipnc
  2859  01B9  0A6E               	incf	(_setpoint+1)^(0+128),w
  2860  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2861  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2862  01BC  075C               	addwf	??_ISR+1,w
  2863  01BD  00F1               	movwf	abs@a+1
  2864  01BE  120A  158A  202E  120A  118A  	fcall	_abs
  2865  01C3  0871               	movf	?_abs+1,w
  2866  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2867  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2868  01C6  01E6               	clrf	(_erro_atual+1)^(0+128)
  2869  01C7  07E6               	addwf	(_erro_atual+1)^(0+128),f
  2870  01C8  0870               	movf	?_abs,w
  2871  01C9  01E5               	clrf	_erro_atual^(0+128)
  2872  01CA  07E5               	addwf	_erro_atual^(0+128),f
  2873  01CB                     i1l2752:	
  2874                           
  2875                           ;main.c: 204: delta = ((((((abs(erro_atual - erro_anterior))<(1000))?(abs(erro_atual - e
      +                          rro_anterior)):(1000)))>(1))?((((abs(erro_atual - erro_anterior))<(1000))?(abs(erro_atua
      +                          l - erro_anterior)):(1000))):(1));
  2876  01CB  0963               	comf	_erro_anterior^(0+128),w
  2877  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2878  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2879  01CE  00DB               	movwf	??_ISR
  2880  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2881  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  2882  01D1  0964               	comf	(_erro_anterior+1)^(0+128),w
  2883  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2884  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2885  01D4  00DC               	movwf	??_ISR+1
  2886  01D5  0ADB               	incf	??_ISR,f
  2887  01D6  1903               	skipnz
  2888  01D7  0ADC               	incf	??_ISR+1,f
  2889  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2890  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2891  01DA  0865               	movf	_erro_atual^(0+128),w
  2892  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2893  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2894  01DD  075B               	addwf	??_ISR,w
  2895  01DE  00F0               	movwf	abs@a
  2896  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2897  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2898  01E1  0866               	movf	(_erro_atual+1)^(0+128),w
  2899  01E2  1803               	skipnc
  2900  01E3  0A66               	incf	(_erro_atual+1)^(0+128),w
  2901  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2902  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2903  01E6  075C               	addwf	??_ISR+1,w
  2904  01E7  00F1               	movwf	abs@a+1
  2905  01E8  120A  158A  202E  120A  118A  	fcall	_abs
  2906  01ED  0871               	movf	?_abs+1,w
  2907  01EE  3A80               	xorlw	128
  2908  01EF  00FF               	movwf	127
  2909  01F0  3083               	movlw	131
  2910  01F1  027F               	subwf	127,w
  2911  01F2  1D03               	skipz
  2912  01F3  29F6               	goto	u321_25
  2913  01F4  30E8               	movlw	232
  2914  01F5  0270               	subwf	?_abs,w
  2915  01F6                     u321_25:	
  2916  01F6  1C03               	skipc
  2917  01F7  29FF               	goto	i1l2756
  2918  01F8  30E8               	movlw	232
  2919  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2920  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2921  01FB  00AC               	movwf	_ISR$227^(0+128)
  2922  01FC  3003               	movlw	3
  2923  01FD  00AD               	movwf	(_ISR$227^(0+128)+1)
  2924  01FE  2A2B               	goto	i1l2758
  2925  01FF                     i1l2756:	
  2926  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0201  0963               	comf	_erro_anterior^(0+128),w
  2929  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0204  00DB               	movwf	??_ISR
  2932  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2933  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2934  0207  0964               	comf	(_erro_anterior+1)^(0+128),w
  2935  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2937  020A  00DC               	movwf	??_ISR+1
  2938  020B  0ADB               	incf	??_ISR,f
  2939  020C  1903               	skipnz
  2940  020D  0ADC               	incf	??_ISR+1,f
  2941  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2942  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0210  0865               	movf	_erro_atual^(0+128),w
  2944  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0213  075B               	addwf	??_ISR,w
  2947  0214  00F0               	movwf	abs@a
  2948  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0217  0866               	movf	(_erro_atual+1)^(0+128),w
  2951  0218  1803               	skipnc
  2952  0219  0A66               	incf	(_erro_atual+1)^(0+128),w
  2953  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2954  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2955  021C  075C               	addwf	??_ISR+1,w
  2956  021D  00F1               	movwf	abs@a+1
  2957  021E  120A  158A  202E  120A  118A  	fcall	_abs
  2958  0223  0871               	movf	?_abs+1,w
  2959  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2960  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2961  0226  01AD               	clrf	(_ISR$227+1)^(0+128)
  2962  0227  07AD               	addwf	(_ISR$227+1)^(0+128),f
  2963  0228  0870               	movf	?_abs,w
  2964  0229  01AC               	clrf	_ISR$227^(0+128)
  2965  022A  07AC               	addwf	_ISR$227^(0+128),f
  2966  022B                     i1l2758:	
  2967  022B  082D               	movf	(_ISR$227+1)^(0+128),w
  2968  022C  3A80               	xorlw	128
  2969  022D  00FF               	movwf	127
  2970  022E  3080               	movlw	128
  2971  022F  027F               	subwf	127,w
  2972  0230  1D03               	skipz
  2973  0231  2A34               	goto	u322_25
  2974  0232  3002               	movlw	2
  2975  0233  022C               	subwf	_ISR$227^(0+128),w
  2976  0234                     u322_25:	
  2977  0234  1803               	skipnc
  2978  0235  2A3D               	goto	i1l2762
  2979  0236  3001               	movlw	1
  2980  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0239  00E1               	movwf	_delta^(0+128)
  2983  023A  3000               	movlw	0
  2984  023B  00E2               	movwf	(_delta^(0+128)+1)
  2985  023C  2AA5               	goto	i1l2770
  2986  023D                     i1l2762:	
  2987  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2988  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2989  023F  0963               	comf	_erro_anterior^(0+128),w
  2990  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0242  00DB               	movwf	??_ISR
  2993  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2994  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2995  0245  0964               	comf	(_erro_anterior+1)^(0+128),w
  2996  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0248  00DC               	movwf	??_ISR+1
  2999  0249  0ADB               	incf	??_ISR,f
  3000  024A  1903               	skipnz
  3001  024B  0ADC               	incf	??_ISR+1,f
  3002  024C  1683               	bsf	3,5	;RP0=1, select bank1
  3003  024D  1303               	bcf	3,6	;RP1=0, select bank1
  3004  024E  0865               	movf	_erro_atual^(0+128),w
  3005  024F  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0250  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0251  075B               	addwf	??_ISR,w
  3008  0252  00F0               	movwf	abs@a
  3009  0253  1683               	bsf	3,5	;RP0=1, select bank1
  3010  0254  1303               	bcf	3,6	;RP1=0, select bank1
  3011  0255  0866               	movf	(_erro_atual+1)^(0+128),w
  3012  0256  1803               	skipnc
  3013  0257  0A66               	incf	(_erro_atual+1)^(0+128),w
  3014  0258  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0259  1303               	bcf	3,6	;RP1=0, select bank0
  3016  025A  075C               	addwf	??_ISR+1,w
  3017  025B  00F1               	movwf	abs@a+1
  3018  025C  120A  158A  202E  120A  118A  	fcall	_abs
  3019  0261  0871               	movf	?_abs+1,w
  3020  0262  3A80               	xorlw	128
  3021  0263  00FF               	movwf	127
  3022  0264  3083               	movlw	131
  3023  0265  027F               	subwf	127,w
  3024  0266  1D03               	skipz
  3025  0267  2A6A               	goto	u323_25
  3026  0268  30E8               	movlw	232
  3027  0269  0270               	subwf	?_abs,w
  3028  026A                     u323_25:	
  3029  026A  1C03               	skipc
  3030  026B  2A73               	goto	i1l2766
  3031  026C  30E8               	movlw	232
  3032  026D  1683               	bsf	3,5	;RP0=1, select bank1
  3033  026E  1303               	bcf	3,6	;RP1=0, select bank1
  3034  026F  00AE               	movwf	_ISR$228^(0+128)
  3035  0270  3003               	movlw	3
  3036  0271  00AF               	movwf	(_ISR$228^(0+128)+1)
  3037  0272  2A9F               	goto	i1l2768
  3038  0273                     i1l2766:	
  3039  0273  1683               	bsf	3,5	;RP0=1, select bank1
  3040  0274  1303               	bcf	3,6	;RP1=0, select bank1
  3041  0275  0963               	comf	_erro_anterior^(0+128),w
  3042  0276  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0277  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0278  00DB               	movwf	??_ISR
  3045  0279  1683               	bsf	3,5	;RP0=1, select bank1
  3046  027A  1303               	bcf	3,6	;RP1=0, select bank1
  3047  027B  0964               	comf	(_erro_anterior+1)^(0+128),w
  3048  027C  1283               	bcf	3,5	;RP0=0, select bank0
  3049  027D  1303               	bcf	3,6	;RP1=0, select bank0
  3050  027E  00DC               	movwf	??_ISR+1
  3051  027F  0ADB               	incf	??_ISR,f
  3052  0280  1903               	skipnz
  3053  0281  0ADC               	incf	??_ISR+1,f
  3054  0282  1683               	bsf	3,5	;RP0=1, select bank1
  3055  0283  1303               	bcf	3,6	;RP1=0, select bank1
  3056  0284  0865               	movf	_erro_atual^(0+128),w
  3057  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0286  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0287  075B               	addwf	??_ISR,w
  3060  0288  00F0               	movwf	abs@a
  3061  0289  1683               	bsf	3,5	;RP0=1, select bank1
  3062  028A  1303               	bcf	3,6	;RP1=0, select bank1
  3063  028B  0866               	movf	(_erro_atual+1)^(0+128),w
  3064  028C  1803               	skipnc
  3065  028D  0A66               	incf	(_erro_atual+1)^(0+128),w
  3066  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3067  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0290  075C               	addwf	??_ISR+1,w
  3069  0291  00F1               	movwf	abs@a+1
  3070  0292  120A  158A  202E  120A  118A  	fcall	_abs
  3071  0297  0871               	movf	?_abs+1,w
  3072  0298  1683               	bsf	3,5	;RP0=1, select bank1
  3073  0299  1303               	bcf	3,6	;RP1=0, select bank1
  3074  029A  01AF               	clrf	(_ISR$228+1)^(0+128)
  3075  029B  07AF               	addwf	(_ISR$228+1)^(0+128),f
  3076  029C  0870               	movf	?_abs,w
  3077  029D  01AE               	clrf	_ISR$228^(0+128)
  3078  029E  07AE               	addwf	_ISR$228^(0+128),f
  3079  029F                     i1l2768:	
  3080  029F  082F               	movf	(_ISR$228+1)^(0+128),w
  3081  02A0  01E2               	clrf	(_delta+1)^(0+128)
  3082  02A1  07E2               	addwf	(_delta+1)^(0+128),f
  3083  02A2  082E               	movf	_ISR$228^(0+128),w
  3084  02A3  01E1               	clrf	_delta^(0+128)
  3085  02A4  07E1               	addwf	_delta^(0+128),f
  3086  02A5                     i1l2770:	
  3087                           
  3088                           ;main.c: 207: if (erro_atual <= 100)
  3089  02A5  0866               	movf	(_erro_atual+1)^(0+128),w
  3090  02A6  3A80               	xorlw	128
  3091  02A7  00FF               	movwf	127
  3092  02A8  3080               	movlw	128
  3093  02A9  027F               	subwf	127,w
  3094  02AA  1D03               	skipz
  3095  02AB  2AAE               	goto	u324_25
  3096  02AC  3065               	movlw	101
  3097  02AD  0265               	subwf	_erro_atual^(0+128),w
  3098  02AE                     u324_25:	
  3099  02AE  1803               	skipnc
  3100  02AF  2BDD               	goto	i1l2798
  3101                           
  3102                           ;main.c: 208: {
  3103                           ;main.c: 210: fiDistancia = trapmf(erro_atual,-1,0,1,100);
  3104  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  3105  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  3106  02B2  0866               	movf	(_erro_atual+1)^(0+128),w
  3107  02B3  01F9               	clrf	___awtoft@c+1
  3108  02B4  07F9               	addwf	___awtoft@c+1,f
  3109  02B5  0865               	movf	_erro_atual^(0+128),w
  3110  02B6  01F8               	clrf	___awtoft@c
  3111  02B7  07F8               	addwf	___awtoft@c,f
  3112  02B8  160A  118A  217E  120A  118A  	fcall	___awtoft
  3113  02BD  0878               	movf	?___awtoft,w
  3114  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3115  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3116  02C0  00B7               	movwf	trapmf@x
  3117  02C1  0879               	movf	?___awtoft+1,w
  3118  02C2  00B8               	movwf	trapmf@x+1
  3119  02C3  087A               	movf	?___awtoft+2,w
  3120  02C4  00B9               	movwf	trapmf@x+2
  3121  02C5  3000               	movlw	0
  3122  02C6  00BA               	movwf	trapmf@a
  3123  02C7  3080               	movlw	128
  3124  02C8  00BB               	movwf	trapmf@a+1
  3125  02C9  30BF               	movlw	191
  3126  02CA  00BC               	movwf	trapmf@a+2
  3127  02CB  3000               	movlw	0
  3128  02CC  00BD               	movwf	trapmf@b
  3129  02CD  3000               	movlw	0
  3130  02CE  00BE               	movwf	trapmf@b+1
  3131  02CF  3000               	movlw	0
  3132  02D0  00BF               	movwf	trapmf@b+2
  3133  02D1  3000               	movlw	0
  3134  02D2  00C0               	movwf	trapmf@c
  3135  02D3  3080               	movlw	128
  3136  02D4  00C1               	movwf	trapmf@c+1
  3137  02D5  303F               	movlw	63
  3138  02D6  00C2               	movwf	trapmf@c+2
  3139  02D7  3000               	movlw	0
  3140  02D8  00C3               	movwf	trapmf@d
  3141  02D9  30C8               	movlw	200
  3142  02DA  00C4               	movwf	trapmf@d+1
  3143  02DB  3042               	movlw	66
  3144  02DC  00C5               	movwf	trapmf@d+2
  3145  02DD  120A  158A  203C  120A  118A  	fcall	_trapmf
  3146  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3147  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3148  02E4  0837               	movf	?_trapmf,w
  3149  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  3150  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  3151  02E7  00CC               	movwf	_fiDistancia^(0+128)
  3152  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3153  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3154  02EA  0838               	movf	?_trapmf+1,w
  3155  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  3156  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  3157  02ED  00CD               	movwf	(_fiDistancia+1)^(0+128)
  3158  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3159  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3160  02F0  0839               	movf	?_trapmf+2,w
  3161  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  3162  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  3163  02F3  00CE               	movwf	(_fiDistancia+2)^(0+128)
  3164                           
  3165                           ;main.c: 213: rule = fiDistancia;
  3166  02F4  084C               	movf	_fiDistancia^(0+128),w
  3167  02F5  00D2               	movwf	_rule^(0+128)
  3168  02F6  084D               	movf	(_fiDistancia+1)^(0+128),w
  3169  02F7  00D3               	movwf	(_rule+1)^(0+128)
  3170  02F8  084E               	movf	(_fiDistancia+2)^(0+128),w
  3171  02F9  00D4               	movwf	(_rule+2)^(0+128)
  3172                           
  3173                           ;main.c: 216: x=0;
  3174  02FA  3000               	movlw	0
  3175  02FB  00DB               	movwf	_x^(0+128)
  3176  02FC  3000               	movlw	0
  3177  02FD  00DC               	movwf	(_x+1)^(0+128)
  3178  02FE  3000               	movlw	0
  3179  02FF  00DD               	movwf	(_x+2)^(0+128)
  3180                           
  3181                           ;main.c: 217: y=0;
  3182  0300  3000               	movlw	0
  3183  0301  00DE               	movwf	_y^(0+128)
  3184  0302  3000               	movlw	0
  3185  0303  00DF               	movwf	(_y+1)^(0+128)
  3186  0304  3000               	movlw	0
  3187  0305  00E0               	movwf	(_y+2)^(0+128)
  3188                           
  3189                           ;main.c: 218: for (int a=0; a<=15; a++)
  3190  0306  01BF               	clrf	ISR@a^(0+128)
  3191  0307  01C0               	clrf	(ISR@a+1)^(0+128)
  3192  0308  0840               	movf	(ISR@a+1)^(0+128),w
  3193  0309  3A80               	xorlw	128
  3194  030A  00FF               	movwf	127
  3195  030B  3080               	movlw	128
  3196  030C  027F               	subwf	127,w
  3197  030D  1D03               	skipz
  3198  030E  2B11               	goto	u325_25
  3199  030F  3010               	movlw	16
  3200  0310  023F               	subwf	ISR@a^(0+128),w
  3201  0311                     u325_25:	
  3202  0311  1803               	btfsc	3,0
  3203  0312  2BDD               	goto	i1l2798
  3204  0313                     i1l2786:	
  3205                           
  3206                           ;main.c: 219: {
  3207                           ;main.c: 220: y = trapmf(x,-1,0,0,5);
  3208  0313  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0314  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0315  085B               	movf	_x^(0+128),w
  3211  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0318  00B7               	movwf	trapmf@x
  3214  0319  1683               	bsf	3,5	;RP0=1, select bank1
  3215  031A  1303               	bcf	3,6	;RP1=0, select bank1
  3216  031B  085C               	movf	(_x+1)^(0+128),w
  3217  031C  1283               	bcf	3,5	;RP0=0, select bank0
  3218  031D  1303               	bcf	3,6	;RP1=0, select bank0
  3219  031E  00B8               	movwf	trapmf@x+1
  3220  031F  1683               	bsf	3,5	;RP0=1, select bank1
  3221  0320  1303               	bcf	3,6	;RP1=0, select bank1
  3222  0321  085D               	movf	(_x+2)^(0+128),w
  3223  0322  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0323  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0324  00B9               	movwf	trapmf@x+2
  3226  0325  3000               	movlw	0
  3227  0326  00BA               	movwf	trapmf@a
  3228  0327  3080               	movlw	128
  3229  0328  00BB               	movwf	trapmf@a+1
  3230  0329  30BF               	movlw	191
  3231  032A  00BC               	movwf	trapmf@a+2
  3232  032B  3000               	movlw	0
  3233  032C  00BD               	movwf	trapmf@b
  3234  032D  3000               	movlw	0
  3235  032E  00BE               	movwf	trapmf@b+1
  3236  032F  3000               	movlw	0
  3237  0330  00BF               	movwf	trapmf@b+2
  3238  0331  3000               	movlw	0
  3239  0332  00C0               	movwf	trapmf@c
  3240  0333  3000               	movlw	0
  3241  0334  00C1               	movwf	trapmf@c+1
  3242  0335  3000               	movlw	0
  3243  0336  00C2               	movwf	trapmf@c+2
  3244  0337  3000               	movlw	0
  3245  0338  00C3               	movwf	trapmf@d
  3246  0339  30A0               	movlw	160
  3247  033A  00C4               	movwf	trapmf@d+1
  3248  033B  3040               	movlw	64
  3249  033C  00C5               	movwf	trapmf@d+2
  3250  033D  120A  158A  203C  120A  118A  	fcall	_trapmf
  3251  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0344  0837               	movf	?_trapmf,w
  3254  0345  1683               	bsf	3,5	;RP0=1, select bank1
  3255  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3256  0347  00DE               	movwf	_y^(0+128)
  3257  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3259  034A  0838               	movf	?_trapmf+1,w
  3260  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3261  034C  1303               	bcf	3,6	;RP1=0, select bank1
  3262  034D  00DF               	movwf	(_y+1)^(0+128)
  3263  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3264  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0350  0839               	movf	?_trapmf+2,w
  3266  0351  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0352  1303               	bcf	3,6	;RP1=0, select bank1
  3268  0353  00E0               	movwf	(_y+2)^(0+128)
  3269                           
  3270                           ;main.c: 222: if (y >= rule)
  3271  0354  085E               	movf	_y^(0+128),w
  3272  0355  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0356  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0357  00A0               	movwf	___ftge@ff1
  3275  0358  1683               	bsf	3,5	;RP0=1, select bank1
  3276  0359  1303               	bcf	3,6	;RP1=0, select bank1
  3277  035A  085F               	movf	(_y+1)^(0+128),w
  3278  035B  1283               	bcf	3,5	;RP0=0, select bank0
  3279  035C  1303               	bcf	3,6	;RP1=0, select bank0
  3280  035D  00A1               	movwf	___ftge@ff1+1
  3281  035E  1683               	bsf	3,5	;RP0=1, select bank1
  3282  035F  1303               	bcf	3,6	;RP1=0, select bank1
  3283  0360  0860               	movf	(_y+2)^(0+128),w
  3284  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0363  00A2               	movwf	___ftge@ff1+2
  3287  0364  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0365  1303               	bcf	3,6	;RP1=0, select bank1
  3289  0366  0852               	movf	_rule^(0+128),w
  3290  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0368  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0369  00A3               	movwf	___ftge@ff2
  3293  036A  1683               	bsf	3,5	;RP0=1, select bank1
  3294  036B  1303               	bcf	3,6	;RP1=0, select bank1
  3295  036C  0853               	movf	(_rule+1)^(0+128),w
  3296  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3297  036E  1303               	bcf	3,6	;RP1=0, select bank0
  3298  036F  00A4               	movwf	___ftge@ff2+1
  3299  0370  1683               	bsf	3,5	;RP0=1, select bank1
  3300  0371  1303               	bcf	3,6	;RP1=0, select bank1
  3301  0372  0854               	movf	(_rule+2)^(0+128),w
  3302  0373  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0374  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0375  00A5               	movwf	___ftge@ff2+2
  3305  0376  160A  118A  22BF  120A  118A  	fcall	___ftge
  3306  037B  1C03               	btfss	3,0
  3307  037C  2B98               	goto	i1l2790
  3308                           
  3309                           ;main.c: 223: {
  3310                           ;main.c: 224: reajuste_baixo[a] = rule;
  3311  037D  3003               	movlw	3
  3312  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3313  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0380  00DB               	movwf	??_ISR
  3315  0381  085B               	movf	??_ISR,w
  3316  0382  00F0               	movwf	___bmul@multiplicand
  3317  0383  1683               	bsf	3,5	;RP0=1, select bank1
  3318  0384  1303               	bcf	3,6	;RP1=0, select bank1
  3319  0385  083F               	movf	ISR@a^(0+128),w
  3320  0386  160A  118A  20F8  120A  118A  	fcall	___bmul
  3321  038B  3E90               	addlw	_reajuste_baixo& (0+255)
  3322  038C  0084               	movwf	4
  3323  038D  1683               	bsf	3,5	;RP0=1, select bank1
  3324  038E  1303               	bcf	3,6	;RP1=0, select bank1
  3325  038F  0852               	movf	_rule^(0+128),w
  3326  0390  1783               	bsf	3,7	;select IRP bank3
  3327  0391  0080               	movwf	0
  3328  0392  0A84               	incf	4,f
  3329  0393  0853               	movf	(_rule+1)^(0+128),w
  3330  0394  0080               	movwf	0
  3331  0395  0A84               	incf	4,f
  3332  0396  0854               	movf	(_rule+2)^(0+128),w
  3333  0397  2BB2               	goto	L1
  3334  0398                     i1l2790:	
  3335                           ;main.c: 225: }
  3336                           
  3337                           
  3338                           ;main.c: 226: else
  3339                           ;main.c: 227: {
  3340                           ;main.c: 228: reajuste_baixo[a] = y;
  3341  0398  3003               	movlw	3
  3342  0399  1283               	bcf	3,5	;RP0=0, select bank0
  3343  039A  1303               	bcf	3,6	;RP1=0, select bank0
  3344  039B  00DB               	movwf	??_ISR
  3345  039C  085B               	movf	??_ISR,w
  3346  039D  00F0               	movwf	___bmul@multiplicand
  3347  039E  1683               	bsf	3,5	;RP0=1, select bank1
  3348  039F  1303               	bcf	3,6	;RP1=0, select bank1
  3349  03A0  083F               	movf	ISR@a^(0+128),w
  3350  03A1  160A  118A  20F8  120A  118A  	fcall	___bmul
  3351  03A6  3E90               	addlw	_reajuste_baixo& (0+255)
  3352  03A7  0084               	movwf	4
  3353  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  3354  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  3355  03AA  085E               	movf	_y^(0+128),w
  3356  03AB  1783               	bsf	3,7	;select IRP bank3
  3357  03AC  0080               	movwf	0
  3358  03AD  0A84               	incf	4,f
  3359  03AE  085F               	movf	(_y+1)^(0+128),w
  3360  03AF  0080               	movwf	0
  3361  03B0  0A84               	incf	4,f
  3362  03B1  0860               	movf	(_y+2)^(0+128),w
  3363  03B2                     L1:	
  3364  03B2  0080               	movwf	0
  3365                           
  3366                           ;main.c: 229: }
  3367                           ;main.c: 231: x=x+1;
  3368  03B3  3000               	movlw	0
  3369  03B4  00F8               	movwf	___ftadd@f1
  3370  03B5  3080               	movlw	128
  3371  03B6  00F9               	movwf	___ftadd@f1+1
  3372  03B7  303F               	movlw	63
  3373  03B8  00FA               	movwf	___ftadd@f1+2
  3374  03B9  085B               	movf	_x^(0+128),w
  3375  03BA  00FB               	movwf	___ftadd@f2
  3376  03BB  085C               	movf	(_x+1)^(0+128),w
  3377  03BC  00FC               	movwf	___ftadd@f2+1
  3378  03BD  085D               	movf	(_x+2)^(0+128),w
  3379  03BE  00FD               	movwf	___ftadd@f2+2
  3380  03BF  160A  118A  25DB  120A  118A  	fcall	___ftadd
  3381  03C4  0878               	movf	?___ftadd,w
  3382  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3383  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3384  03C7  00DB               	movwf	_x^(0+128)
  3385  03C8  0879               	movf	?___ftadd+1,w
  3386  03C9  00DC               	movwf	(_x+1)^(0+128)
  3387  03CA  087A               	movf	?___ftadd+2,w
  3388  03CB  00DD               	movwf	(_x+2)^(0+128)
  3389  03CC  3001               	movlw	1
  3390  03CD  07BF               	addwf	ISR@a^(0+128),f
  3391  03CE  1803               	skipnc
  3392  03CF  0AC0               	incf	(ISR@a+1)^(0+128),f
  3393  03D0  3000               	movlw	0
  3394  03D1  07C0               	addwf	(ISR@a+1)^(0+128),f
  3395  03D2  0840               	movf	(ISR@a+1)^(0+128),w
  3396  03D3  3A80               	xorlw	128
  3397  03D4  00FF               	movwf	127
  3398  03D5  3080               	movlw	128
  3399  03D6  027F               	subwf	127,w
  3400  03D7  1D03               	skipz
  3401  03D8  2BDB               	goto	u327_25
  3402  03D9  3010               	movlw	16
  3403  03DA  023F               	subwf	ISR@a^(0+128),w
  3404  03DB                     u327_25:	
  3405  03DB  1C03               	skipc
  3406  03DC  2B13               	goto	i1l2786
  3407  03DD                     i1l2798:	
  3408                           
  3409                           ;main.c: 232: }
  3410                           ;main.c: 233: }
  3411                           ;main.c: 236: if (erro_atual >= 100 && erro_atual <= 1001 && delta <= 200)
  3412  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  3413  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  3414  03DF  0866               	movf	(_erro_atual+1)^(0+128),w
  3415  03E0  3A80               	xorlw	128
  3416  03E1  00FF               	movwf	127
  3417  03E2  3080               	movlw	128
  3418  03E3  027F               	subwf	127,w
  3419  03E4  1D03               	skipz
  3420  03E5  2BE8               	goto	u328_25
  3421  03E6  3064               	movlw	100
  3422  03E7  0265               	subwf	_erro_atual^(0+128),w
  3423  03E8                     u328_25:	
  3424  03E8  1C03               	skipc
  3425  03E9  2DAE               	goto	i1l2828
  3426  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  3427  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  3428  03EC  0866               	movf	(_erro_atual+1)^(0+128),w
  3429  03ED  3A80               	xorlw	128
  3430  03EE  00FF               	movwf	127
  3431  03EF  3083               	movlw	131
  3432  03F0  027F               	subwf	127,w
  3433  03F1  1D03               	skipz
  3434  03F2  2BF5               	goto	u329_25
  3435  03F3  30EA               	movlw	234
  3436  03F4  0265               	subwf	_erro_atual^(0+128),w
  3437  03F5                     u329_25:	
  3438  03F5  1803               	skipnc
  3439  03F6  2DAE               	goto	i1l2828
  3440  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  3441  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  3442  03F9  0862               	movf	(_delta+1)^(0+128),w
  3443  03FA  3A80               	xorlw	128
  3444  03FB  00FF               	movwf	127
  3445  03FC  3080               	movlw	128
  3446  03FD  027F               	subwf	127,w
  3447  03FE  1D03               	skipz
  3448  03FF  2C02               	goto	u330_25
  3449  0400  30C9               	movlw	201
  3450  0401  0261               	subwf	_delta^(0+128),w
  3451  0402                     u330_25:	
  3452  0402  1803               	skipnc
  3453  0403  2DAE               	goto	i1l2828
  3454                           
  3455                           ;main.c: 237: {
  3456                           ;main.c: 239: fiDistancia = trimf(erro_atual,50,800,1550);
  3457  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0405  1303               	bcf	3,6	;RP1=0, select bank1
  3459  0406  0866               	movf	(_erro_atual+1)^(0+128),w
  3460  0407  01F9               	clrf	___awtoft@c+1
  3461  0408  07F9               	addwf	___awtoft@c+1,f
  3462  0409  0865               	movf	_erro_atual^(0+128),w
  3463  040A  01F8               	clrf	___awtoft@c
  3464  040B  07F8               	addwf	___awtoft@c,f
  3465  040C  160A  118A  217E  120A  118A  	fcall	___awtoft
  3466  0411  0878               	movf	?___awtoft,w
  3467  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0413  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0414  00B7               	movwf	trimf@x
  3470  0415  0879               	movf	?___awtoft+1,w
  3471  0416  00B8               	movwf	trimf@x+1
  3472  0417  087A               	movf	?___awtoft+2,w
  3473  0418  00B9               	movwf	trimf@x+2
  3474  0419  3000               	movlw	0
  3475  041A  00BA               	movwf	trimf@a
  3476  041B  3048               	movlw	72
  3477  041C  00BB               	movwf	trimf@a+1
  3478  041D  3042               	movlw	66
  3479  041E  00BC               	movwf	trimf@a+2
  3480  041F  3000               	movlw	0
  3481  0420  00BD               	movwf	trimf@b
  3482  0421  3048               	movlw	72
  3483  0422  00BE               	movwf	trimf@b+1
  3484  0423  3044               	movlw	68
  3485  0424  00BF               	movwf	trimf@b+2
  3486  0425  30C0               	movlw	192
  3487  0426  00C0               	movwf	trimf@c
  3488  0427  30C1               	movlw	193
  3489  0428  00C1               	movwf	trimf@c+1
  3490  0429  3044               	movlw	68
  3491  042A  00C2               	movwf	trimf@c+2
  3492  042B  160A  118A  26E2  120A  118A  	fcall	_trimf
  3493  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3495  0432  0837               	movf	?_trimf,w
  3496  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3497  0434  1303               	bcf	3,6	;RP1=0, select bank1
  3498  0435  00CC               	movwf	_fiDistancia^(0+128)
  3499  0436  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0437  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0438  0838               	movf	?_trimf+1,w
  3502  0439  1683               	bsf	3,5	;RP0=1, select bank1
  3503  043A  1303               	bcf	3,6	;RP1=0, select bank1
  3504  043B  00CD               	movwf	(_fiDistancia+1)^(0+128)
  3505  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3506  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3507  043E  0839               	movf	?_trimf+2,w
  3508  043F  1683               	bsf	3,5	;RP0=1, select bank1
  3509  0440  1303               	bcf	3,6	;RP1=0, select bank1
  3510  0441  00CE               	movwf	(_fiDistancia+2)^(0+128)
  3511                           
  3512                           ;main.c: 240: fiDelta = trapmf(delta,-1,0,1,200);
  3513  0442  0862               	movf	(_delta+1)^(0+128),w
  3514  0443  01F9               	clrf	___awtoft@c+1
  3515  0444  07F9               	addwf	___awtoft@c+1,f
  3516  0445  0861               	movf	_delta^(0+128),w
  3517  0446  01F8               	clrf	___awtoft@c
  3518  0447  07F8               	addwf	___awtoft@c,f
  3519  0448  160A  118A  217E  120A  118A  	fcall	___awtoft
  3520  044D  0878               	movf	?___awtoft,w
  3521  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3522  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0450  00B7               	movwf	trapmf@x
  3524  0451  0879               	movf	?___awtoft+1,w
  3525  0452  00B8               	movwf	trapmf@x+1
  3526  0453  087A               	movf	?___awtoft+2,w
  3527  0454  00B9               	movwf	trapmf@x+2
  3528  0455  3000               	movlw	0
  3529  0456  00BA               	movwf	trapmf@a
  3530  0457  3080               	movlw	128
  3531  0458  00BB               	movwf	trapmf@a+1
  3532  0459  30BF               	movlw	191
  3533  045A  00BC               	movwf	trapmf@a+2
  3534  045B  3000               	movlw	0
  3535  045C  00BD               	movwf	trapmf@b
  3536  045D  3000               	movlw	0
  3537  045E  00BE               	movwf	trapmf@b+1
  3538  045F  3000               	movlw	0
  3539  0460  00BF               	movwf	trapmf@b+2
  3540  0461  3000               	movlw	0
  3541  0462  00C0               	movwf	trapmf@c
  3542  0463  3080               	movlw	128
  3543  0464  00C1               	movwf	trapmf@c+1
  3544  0465  303F               	movlw	63
  3545  0466  00C2               	movwf	trapmf@c+2
  3546  0467  3000               	movlw	0
  3547  0468  00C3               	movwf	trapmf@d
  3548  0469  3048               	movlw	72
  3549  046A  00C4               	movwf	trapmf@d+1
  3550  046B  3043               	movlw	67
  3551  046C  00C5               	movwf	trapmf@d+2
  3552  046D  120A  158A  203C  120A  118A  	fcall	_trapmf
  3553  0472  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0473  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0474  0837               	movf	?_trapmf,w
  3556  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0476  1303               	bcf	3,6	;RP1=0, select bank1
  3558  0477  00C9               	movwf	_fiDelta^(0+128)
  3559  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3561  047A  0838               	movf	?_trapmf+1,w
  3562  047B  1683               	bsf	3,5	;RP0=1, select bank1
  3563  047C  1303               	bcf	3,6	;RP1=0, select bank1
  3564  047D  00CA               	movwf	(_fiDelta+1)^(0+128)
  3565  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3566  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3567  0480  0839               	movf	?_trapmf+2,w
  3568  0481  1683               	bsf	3,5	;RP0=1, select bank1
  3569  0482  1303               	bcf	3,6	;RP1=0, select bank1
  3570  0483  00CB               	movwf	(_fiDelta+2)^(0+128)
  3571                           
  3572                           ;main.c: 243: rule = fiDistancia * (1 - fiDelta);
  3573  0484  084C               	movf	_fiDistancia^(0+128),w
  3574  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0486  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0487  00B7               	movwf	___ftmul@f1
  3577  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3578  0489  1303               	bcf	3,6	;RP1=0, select bank1
  3579  048A  084D               	movf	(_fiDistancia+1)^(0+128),w
  3580  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3581  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3582  048D  00B8               	movwf	___ftmul@f1+1
  3583  048E  1683               	bsf	3,5	;RP0=1, select bank1
  3584  048F  1303               	bcf	3,6	;RP1=0, select bank1
  3585  0490  084E               	movf	(_fiDistancia+2)^(0+128),w
  3586  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0493  00B9               	movwf	___ftmul@f1+2
  3589  0494  3000               	movlw	0
  3590  0495  00F8               	movwf	___ftadd@f1
  3591  0496  3080               	movlw	128
  3592  0497  00F9               	movwf	___ftadd@f1+1
  3593  0498  303F               	movlw	63
  3594  0499  00FA               	movwf	___ftadd@f1+2
  3595  049A  1683               	bsf	3,5	;RP0=1, select bank1
  3596  049B  1303               	bcf	3,6	;RP1=0, select bank1
  3597  049C  0849               	movf	_fiDelta^(0+128),w
  3598  049D  00F0               	movwf	___ftneg@f1
  3599  049E  084A               	movf	(_fiDelta+1)^(0+128),w
  3600  049F  00F1               	movwf	___ftneg@f1+1
  3601  04A0  084B               	movf	(_fiDelta+2)^(0+128),w
  3602  04A1  00F2               	movwf	___ftneg@f1+2
  3603  04A2  160A  118A  20D5  120A  118A  	fcall	___ftneg
  3604  04A7  0870               	movf	?___ftneg,w
  3605  04A8  00FB               	movwf	___ftadd@f2
  3606  04A9  0871               	movf	?___ftneg+1,w
  3607  04AA  00FC               	movwf	___ftadd@f2+1
  3608  04AB  0872               	movf	?___ftneg+2,w
  3609  04AC  00FD               	movwf	___ftadd@f2+2
  3610  04AD  160A  118A  25DB  120A  118A  	fcall	___ftadd
  3611  04B2  0878               	movf	?___ftadd,w
  3612  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3613  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3614  04B5  00BA               	movwf	___ftmul@f2
  3615  04B6  0879               	movf	?___ftadd+1,w
  3616  04B7  00BB               	movwf	___ftmul@f2+1
  3617  04B8  087A               	movf	?___ftadd+2,w
  3618  04B9  00BC               	movwf	___ftmul@f2+2
  3619  04BA  120A  118A  272B  120A  118A  	fcall	___ftmul
  3620  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3621  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3622  04C1  0837               	movf	?___ftmul,w
  3623  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  3624  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  3625  04C4  00D2               	movwf	_rule^(0+128)
  3626  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3627  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3628  04C7  0838               	movf	?___ftmul+1,w
  3629  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  3630  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  3631  04CA  00D3               	movwf	(_rule+1)^(0+128)
  3632  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  3633  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  3634  04CD  0839               	movf	?___ftmul+2,w
  3635  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  3636  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  3637  04D0  00D4               	movwf	(_rule+2)^(0+128)
  3638                           
  3639                           ;main.c: 246: x=0;
  3640  04D1  3000               	movlw	0
  3641  04D2  00DB               	movwf	_x^(0+128)
  3642  04D3  3000               	movlw	0
  3643  04D4  00DC               	movwf	(_x+1)^(0+128)
  3644  04D5  3000               	movlw	0
  3645  04D6  00DD               	movwf	(_x+2)^(0+128)
  3646                           
  3647                           ;main.c: 247: y=0;
  3648  04D7  3000               	movlw	0
  3649  04D8  00DE               	movwf	_y^(0+128)
  3650  04D9  3000               	movlw	0
  3651  04DA  00DF               	movwf	(_y+1)^(0+128)
  3652  04DB  3000               	movlw	0
  3653  04DC  00E0               	movwf	(_y+2)^(0+128)
  3654                           
  3655                           ;main.c: 248: for (int a=0; a<=15; a++)
  3656  04DD  01C1               	clrf	ISR@a_232^(0+128)
  3657  04DE  01C2               	clrf	(ISR@a_232+1)^(0+128)
  3658  04DF  0842               	movf	(ISR@a_232+1)^(0+128),w
  3659  04E0  3A80               	xorlw	128
  3660  04E1  00FF               	movwf	127
  3661  04E2  3080               	movlw	128
  3662  04E3  027F               	subwf	127,w
  3663  04E4  1D03               	skipz
  3664  04E5  2CE8               	goto	u331_25
  3665  04E6  3010               	movlw	16
  3666  04E7  0241               	subwf	ISR@a_232^(0+128),w
  3667  04E8                     u331_25:	
  3668  04E8  1803               	btfsc	3,0
  3669  04E9  2DAE               	goto	i1l2828
  3670  04EA                     i1l2816:	
  3671                           
  3672                           ;main.c: 249: {
  3673                           ;main.c: 250: y = trimf(x,2,5,10);
  3674  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  3675  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  3676  04EC  085B               	movf	_x^(0+128),w
  3677  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  3678  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  3679  04EF  00B7               	movwf	trimf@x
  3680  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  3681  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  3682  04F2  085C               	movf	(_x+1)^(0+128),w
  3683  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3684  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3685  04F5  00B8               	movwf	trimf@x+1
  3686  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3687  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  3688  04F8  085D               	movf	(_x+2)^(0+128),w
  3689  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3690  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3691  04FB  00B9               	movwf	trimf@x+2
  3692  04FC  3000               	movlw	0
  3693  04FD  00BA               	movwf	trimf@a
  3694  04FE  3000               	movlw	0
  3695  04FF  00BB               	movwf	trimf@a+1
  3696  0500  3040               	movlw	64
  3697  0501  00BC               	movwf	trimf@a+2
  3698  0502  3000               	movlw	0
  3699  0503  00BD               	movwf	trimf@b
  3700  0504  30A0               	movlw	160
  3701  0505  00BE               	movwf	trimf@b+1
  3702  0506  3040               	movlw	64
  3703  0507  00BF               	movwf	trimf@b+2
  3704  0508  3000               	movlw	0
  3705  0509  00C0               	movwf	trimf@c
  3706  050A  3020               	movlw	32
  3707  050B  00C1               	movwf	trimf@c+1
  3708  050C  3041               	movlw	65
  3709  050D  00C2               	movwf	trimf@c+2
  3710  050E  160A  118A  26E2  120A  118A  	fcall	_trimf
  3711  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3713  0515  0837               	movf	?_trimf,w
  3714  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3715  0517  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0518  00DE               	movwf	_y^(0+128)
  3717  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3718  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3719  051B  0838               	movf	?_trimf+1,w
  3720  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3721  051D  1303               	bcf	3,6	;RP1=0, select bank1
  3722  051E  00DF               	movwf	(_y+1)^(0+128)
  3723  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0521  0839               	movf	?_trimf+2,w
  3726  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0523  1303               	bcf	3,6	;RP1=0, select bank1
  3728  0524  00E0               	movwf	(_y+2)^(0+128)
  3729                           
  3730                           ;main.c: 252: if (y >= rule)
  3731  0525  085E               	movf	_y^(0+128),w
  3732  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0528  00A0               	movwf	___ftge@ff1
  3735  0529  1683               	bsf	3,5	;RP0=1, select bank1
  3736  052A  1303               	bcf	3,6	;RP1=0, select bank1
  3737  052B  085F               	movf	(_y+1)^(0+128),w
  3738  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3739  052D  1303               	bcf	3,6	;RP1=0, select bank0
  3740  052E  00A1               	movwf	___ftge@ff1+1
  3741  052F  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0530  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0531  0860               	movf	(_y+2)^(0+128),w
  3744  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0534  00A2               	movwf	___ftge@ff1+2
  3747  0535  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0536  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0537  0852               	movf	_rule^(0+128),w
  3750  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0539  1303               	bcf	3,6	;RP1=0, select bank0
  3752  053A  00A3               	movwf	___ftge@ff2
  3753  053B  1683               	bsf	3,5	;RP0=1, select bank1
  3754  053C  1303               	bcf	3,6	;RP1=0, select bank1
  3755  053D  0853               	movf	(_rule+1)^(0+128),w
  3756  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3757  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3758  0540  00A4               	movwf	___ftge@ff2+1
  3759  0541  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0542  1303               	bcf	3,6	;RP1=0, select bank1
  3761  0543  0854               	movf	(_rule+2)^(0+128),w
  3762  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0546  00A5               	movwf	___ftge@ff2+2
  3765  0547  160A  118A  22BF  120A  118A  	fcall	___ftge
  3766  054C  1C03               	btfss	3,0
  3767  054D  2D69               	goto	i1l2820
  3768                           
  3769                           ;main.c: 253: {
  3770                           ;main.c: 254: reajuste_baixo[a] = rule;
  3771  054E  3003               	movlw	3
  3772  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3773  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3774  0551  00DB               	movwf	??_ISR
  3775  0552  085B               	movf	??_ISR,w
  3776  0553  00F0               	movwf	___bmul@multiplicand
  3777  0554  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0555  1303               	bcf	3,6	;RP1=0, select bank1
  3779  0556  0841               	movf	ISR@a_232^(0+128),w
  3780  0557  160A  118A  20F8  120A  118A  	fcall	___bmul
  3781  055C  3E90               	addlw	_reajuste_baixo& (0+255)
  3782  055D  0084               	movwf	4
  3783  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3784  055F  1303               	bcf	3,6	;RP1=0, select bank1
  3785  0560  0852               	movf	_rule^(0+128),w
  3786  0561  1783               	bsf	3,7	;select IRP bank3
  3787  0562  0080               	movwf	0
  3788  0563  0A84               	incf	4,f
  3789  0564  0853               	movf	(_rule+1)^(0+128),w
  3790  0565  0080               	movwf	0
  3791  0566  0A84               	incf	4,f
  3792  0567  0854               	movf	(_rule+2)^(0+128),w
  3793  0568  2D83               	goto	L2
  3794  0569                     i1l2820:	
  3795                           ;main.c: 255: }
  3796                           
  3797                           
  3798                           ;main.c: 256: else
  3799                           ;main.c: 257: {
  3800                           ;main.c: 258: reajuste_baixo[a] = y;
  3801  0569  3003               	movlw	3
  3802  056A  1283               	bcf	3,5	;RP0=0, select bank0
  3803  056B  1303               	bcf	3,6	;RP1=0, select bank0
  3804  056C  00DB               	movwf	??_ISR
  3805  056D  085B               	movf	??_ISR,w
  3806  056E  00F0               	movwf	___bmul@multiplicand
  3807  056F  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0570  1303               	bcf	3,6	;RP1=0, select bank1
  3809  0571  0841               	movf	ISR@a_232^(0+128),w
  3810  0572  160A  118A  20F8  120A  118A  	fcall	___bmul
  3811  0577  3E90               	addlw	_reajuste_baixo& (0+255)
  3812  0578  0084               	movwf	4
  3813  0579  1683               	bsf	3,5	;RP0=1, select bank1
  3814  057A  1303               	bcf	3,6	;RP1=0, select bank1
  3815  057B  085E               	movf	_y^(0+128),w
  3816  057C  1783               	bsf	3,7	;select IRP bank3
  3817  057D  0080               	movwf	0
  3818  057E  0A84               	incf	4,f
  3819  057F  085F               	movf	(_y+1)^(0+128),w
  3820  0580  0080               	movwf	0
  3821  0581  0A84               	incf	4,f
  3822  0582  0860               	movf	(_y+2)^(0+128),w
  3823  0583                     L2:	
  3824  0583  0080               	movwf	0
  3825                           
  3826                           ;main.c: 259: }
  3827                           ;main.c: 261: x=x+1;
  3828  0584  3000               	movlw	0
  3829  0585  00F8               	movwf	___ftadd@f1
  3830  0586  3080               	movlw	128
  3831  0587  00F9               	movwf	___ftadd@f1+1
  3832  0588  303F               	movlw	63
  3833  0589  00FA               	movwf	___ftadd@f1+2
  3834  058A  085B               	movf	_x^(0+128),w
  3835  058B  00FB               	movwf	___ftadd@f2
  3836  058C  085C               	movf	(_x+1)^(0+128),w
  3837  058D  00FC               	movwf	___ftadd@f2+1
  3838  058E  085D               	movf	(_x+2)^(0+128),w
  3839  058F  00FD               	movwf	___ftadd@f2+2
  3840  0590  160A  118A  25DB  120A  118A  	fcall	___ftadd
  3841  0595  0878               	movf	?___ftadd,w
  3842  0596  1683               	bsf	3,5	;RP0=1, select bank1
  3843  0597  1303               	bcf	3,6	;RP1=0, select bank1
  3844  0598  00DB               	movwf	_x^(0+128)
  3845  0599  0879               	movf	?___ftadd+1,w
  3846  059A  00DC               	movwf	(_x+1)^(0+128)
  3847  059B  087A               	movf	?___ftadd+2,w
  3848  059C  00DD               	movwf	(_x+2)^(0+128)
  3849  059D  3001               	movlw	1
  3850  059E  07C1               	addwf	ISR@a_232^(0+128),f
  3851  059F  1803               	skipnc
  3852  05A0  0AC2               	incf	(ISR@a_232+1)^(0+128),f
  3853  05A1  3000               	movlw	0
  3854  05A2  07C2               	addwf	(ISR@a_232+1)^(0+128),f
  3855  05A3  0842               	movf	(ISR@a_232+1)^(0+128),w
  3856  05A4  3A80               	xorlw	128
  3857  05A5  00FF               	movwf	127
  3858  05A6  3080               	movlw	128
  3859  05A7  027F               	subwf	127,w
  3860  05A8  1D03               	skipz
  3861  05A9  2DAC               	goto	u333_25
  3862  05AA  3010               	movlw	16
  3863  05AB  0241               	subwf	ISR@a_232^(0+128),w
  3864  05AC                     u333_25:	
  3865  05AC  1C03               	skipc
  3866  05AD  2CEA               	goto	i1l2816
  3867  05AE                     i1l2828:	
  3868                           
  3869                           ;main.c: 262: }
  3870                           ;main.c: 263: }
  3871                           ;main.c: 267: if (erro_atual >= 100 && erro_atual <= 1001 && delta >= 201)
  3872  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  3873  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  3874  05B0  0866               	movf	(_erro_atual+1)^(0+128),w
  3875  05B1  3A80               	xorlw	128
  3876  05B2  00FF               	movwf	127
  3877  05B3  3080               	movlw	128
  3878  05B4  027F               	subwf	127,w
  3879  05B5  1D03               	skipz
  3880  05B6  2DB9               	goto	u334_25
  3881  05B7  3064               	movlw	100
  3882  05B8  0265               	subwf	_erro_atual^(0+128),w
  3883  05B9                     u334_25:	
  3884  05B9  1C03               	skipc
  3885  05BA  2F28               	goto	L29
  3886  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3887  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3888  05BD  0866               	movf	(_erro_atual+1)^(0+128),w
  3889  05BE  3A80               	xorlw	128
  3890  05BF  00FF               	movwf	127
  3891  05C0  3083               	movlw	131
  3892  05C1  027F               	subwf	127,w
  3893  05C2  1D03               	skipz
  3894  05C3  2DC6               	goto	u335_25
  3895  05C4  30EA               	movlw	234
  3896  05C5  0265               	subwf	_erro_atual^(0+128),w
  3897  05C6                     u335_25:	
  3898  05C6  1803               	skipnc
  3899  05C7  2F28               	goto	L29
  3900  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3901  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  3902  05CA  0862               	movf	(_delta+1)^(0+128),w
  3903  05CB  3A80               	xorlw	128
  3904  05CC  00FF               	movwf	127
  3905  05CD  3080               	movlw	128
  3906  05CE  027F               	subwf	127,w
  3907  05CF  1D03               	skipz
  3908  05D0  2DD3               	goto	u336_25
  3909  05D1  30C9               	movlw	201
  3910  05D2  0261               	subwf	_delta^(0+128),w
  3911  05D3                     u336_25:	
  3912  05D3  1C03               	skipc
  3913  05D4  2F28               	goto	L29
  3914                           
  3915                           ;main.c: 268: {
  3916                           ;main.c: 270: fiDistancia = trimf(erro_atual,50,800,1550);
  3917  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  3918  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  3919  05D7  0866               	movf	(_erro_atual+1)^(0+128),w
  3920  05D8  01F9               	clrf	___awtoft@c+1
  3921  05D9  07F9               	addwf	___awtoft@c+1,f
  3922  05DA  0865               	movf	_erro_atual^(0+128),w
  3923  05DB  01F8               	clrf	___awtoft@c
  3924  05DC  07F8               	addwf	___awtoft@c,f
  3925  05DD  160A  118A  217E  120A  118A  	fcall	___awtoft
  3926  05E2  0878               	movf	?___awtoft,w
  3927  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3928  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3929  05E5  00B7               	movwf	trimf@x
  3930  05E6  0879               	movf	?___awtoft+1,w
  3931  05E7  00B8               	movwf	trimf@x+1
  3932  05E8  087A               	movf	?___awtoft+2,w
  3933  05E9  00B9               	movwf	trimf@x+2
  3934  05EA  3000               	movlw	0
  3935  05EB  00BA               	movwf	trimf@a
  3936  05EC  3048               	movlw	72
  3937  05ED  00BB               	movwf	trimf@a+1
  3938  05EE  3042               	movlw	66
  3939  05EF  00BC               	movwf	trimf@a+2
  3940  05F0  3000               	movlw	0
  3941  05F1  00BD               	movwf	trimf@b
  3942  05F2  3048               	movlw	72
  3943  05F3  00BE               	movwf	trimf@b+1
  3944  05F4  3044               	movlw	68
  3945  05F5  00BF               	movwf	trimf@b+2
  3946  05F6  30C0               	movlw	192
  3947  05F7  00C0               	movwf	trimf@c
  3948  05F8  30C1               	movlw	193
  3949  05F9  00C1               	movwf	trimf@c+1
  3950  05FA  3044               	movlw	68
  3951  05FB  00C2               	movwf	trimf@c+2
  3952  05FC  160A  118A  26E2  120A  118A  	fcall	_trimf
  3953  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0603  0837               	movf	?_trimf,w
  3956  0604  1683               	bsf	3,5	;RP0=1, select bank1
  3957  0605  1303               	bcf	3,6	;RP1=0, select bank1
  3958  0606  00CC               	movwf	_fiDistancia^(0+128)
  3959  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3960  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0609  0838               	movf	?_trimf+1,w
  3962  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3963  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3964  060C  00CD               	movwf	(_fiDistancia+1)^(0+128)
  3965  060D  1283               	bcf	3,5	;RP0=0, select bank0
  3966  060E  1303               	bcf	3,6	;RP1=0, select bank0
  3967  060F  0839               	movf	?_trimf+2,w
  3968  0610  1683               	bsf	3,5	;RP0=1, select bank1
  3969  0611  1303               	bcf	3,6	;RP1=0, select bank1
  3970  0612  00CE               	movwf	(_fiDistancia+2)^(0+128)
  3971                           
  3972                           ;main.c: 271: fiDelta = trapmf(delta,200,500,2000,2001);
  3973  0613  0862               	movf	(_delta+1)^(0+128),w
  3974  0614  01F9               	clrf	___awtoft@c+1
  3975  0615  07F9               	addwf	___awtoft@c+1,f
  3976  0616  0861               	movf	_delta^(0+128),w
  3977  0617  01F8               	clrf	___awtoft@c
  3978  0618  07F8               	addwf	___awtoft@c,f
  3979  0619  160A  118A  217E  120A  118A  	fcall	___awtoft
  3980  061E  0878               	movf	?___awtoft,w
  3981  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0621  00B7               	movwf	trapmf@x
  3984  0622  0879               	movf	?___awtoft+1,w
  3985  0623  00B8               	movwf	trapmf@x+1
  3986  0624  087A               	movf	?___awtoft+2,w
  3987  0625  00B9               	movwf	trapmf@x+2
  3988  0626  3000               	movlw	0
  3989  0627  00BA               	movwf	trapmf@a
  3990  0628  3048               	movlw	72
  3991  0629  00BB               	movwf	trapmf@a+1
  3992  062A  3043               	movlw	67
  3993  062B  00BC               	movwf	trapmf@a+2
  3994  062C  3000               	movlw	0
  3995  062D  00BD               	movwf	trapmf@b
  3996  062E  30FA               	movlw	250
  3997  062F  00BE               	movwf	trapmf@b+1
  3998  0630  3043               	movlw	67
  3999  0631  00BF               	movwf	trapmf@b+2
  4000  0632  3000               	movlw	0
  4001  0633  00C0               	movwf	trapmf@c
  4002  0634  30FA               	movlw	250
  4003  0635  00C1               	movwf	trapmf@c+1
  4004  0636  3044               	movlw	68
  4005  0637  00C2               	movwf	trapmf@c+2
  4006  0638  3020               	movlw	32
  4007  0639  00C3               	movwf	trapmf@d
  4008  063A  30FA               	movlw	250
  4009  063B  00C4               	movwf	trapmf@d+1
  4010  063C  3044               	movlw	68
  4011  063D  00C5               	movwf	trapmf@d+2
  4012  063E  120A  158A  203C  120A  118A  	fcall	_trapmf
  4013  0643  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0644  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0645  0837               	movf	?_trapmf,w
  4016  0646  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0647  1303               	bcf	3,6	;RP1=0, select bank1
  4018  0648  00C9               	movwf	_fiDelta^(0+128)
  4019  0649  1283               	bcf	3,5	;RP0=0, select bank0
  4020  064A  1303               	bcf	3,6	;RP1=0, select bank0
  4021  064B  0838               	movf	?_trapmf+1,w
  4022  064C  1683               	bsf	3,5	;RP0=1, select bank1
  4023  064D  1303               	bcf	3,6	;RP1=0, select bank1
  4024  064E  00CA               	movwf	(_fiDelta+1)^(0+128)
  4025  064F  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0650  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0651  0839               	movf	?_trapmf+2,w
  4028  0652  1683               	bsf	3,5	;RP0=1, select bank1
  4029  0653  1303               	bcf	3,6	;RP1=0, select bank1
  4030  0654  00CB               	movwf	(_fiDelta+2)^(0+128)
  4031                           
  4032                           ;main.c: 274: rule = fiDistancia * fiDelta;
  4033  0655  0849               	movf	_fiDelta^(0+128),w
  4034  0656  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0657  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0658  00B7               	movwf	___ftmul@f1
  4037  0659  1683               	bsf	3,5	;RP0=1, select bank1
  4038  065A  1303               	bcf	3,6	;RP1=0, select bank1
  4039  065B  084A               	movf	(_fiDelta+1)^(0+128),w
  4040  065C  1283               	bcf	3,5	;RP0=0, select bank0
  4041  065D  1303               	bcf	3,6	;RP1=0, select bank0
  4042  065E  00B8               	movwf	___ftmul@f1+1
  4043  065F  1683               	bsf	3,5	;RP0=1, select bank1
  4044  0660  1303               	bcf	3,6	;RP1=0, select bank1
  4045  0661  084B               	movf	(_fiDelta+2)^(0+128),w
  4046  0662  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0663  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0664  00B9               	movwf	___ftmul@f1+2
  4049  0665  1683               	bsf	3,5	;RP0=1, select bank1
  4050  0666  1303               	bcf	3,6	;RP1=0, select bank1
  4051  0667  084C               	movf	_fiDistancia^(0+128),w
  4052  0668  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0669  1303               	bcf	3,6	;RP1=0, select bank0
  4054  066A  00BA               	movwf	___ftmul@f2
  4055  066B  1683               	bsf	3,5	;RP0=1, select bank1
  4056  066C  1303               	bcf	3,6	;RP1=0, select bank1
  4057  066D  084D               	movf	(_fiDistancia+1)^(0+128),w
  4058  066E  1283               	bcf	3,5	;RP0=0, select bank0
  4059  066F  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0670  00BB               	movwf	___ftmul@f2+1
  4061  0671  1683               	bsf	3,5	;RP0=1, select bank1
  4062  0672  1303               	bcf	3,6	;RP1=0, select bank1
  4063  0673  084E               	movf	(_fiDistancia+2)^(0+128),w
  4064  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4065  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4066  0676  00BC               	movwf	___ftmul@f2+2
  4067  0677  120A  118A  272B  120A  118A  	fcall	___ftmul
  4068  067C  1283               	bcf	3,5	;RP0=0, select bank0
  4069  067D  1303               	bcf	3,6	;RP1=0, select bank0
  4070  067E  0837               	movf	?___ftmul,w
  4071  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4072  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4073  0681  00D2               	movwf	_rule^(0+128)
  4074  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4076  0684  0838               	movf	?___ftmul+1,w
  4077  0685  1683               	bsf	3,5	;RP0=1, select bank1
  4078  0686  1303               	bcf	3,6	;RP1=0, select bank1
  4079  0687  00D3               	movwf	(_rule+1)^(0+128)
  4080  0688  1283               	bcf	3,5	;RP0=0, select bank0
  4081  0689  1303               	bcf	3,6	;RP1=0, select bank0
  4082  068A  0839               	movf	?___ftmul+2,w
  4083  068B  1683               	bsf	3,5	;RP0=1, select bank1
  4084  068C  1303               	bcf	3,6	;RP1=0, select bank1
  4085  068D  00D4               	movwf	(_rule+2)^(0+128)
  4086                           
  4087                           ;main.c: 277: x=0;
  4088  068E  3000               	movlw	0
  4089  068F  00DB               	movwf	_x^(0+128)
  4090  0690  3000               	movlw	0
  4091  0691  00DC               	movwf	(_x+1)^(0+128)
  4092  0692  3000               	movlw	0
  4093  0693  00DD               	movwf	(_x+2)^(0+128)
  4094                           
  4095                           ;main.c: 278: y=0;
  4096  0694  3000               	movlw	0
  4097  0695  00DE               	movwf	_y^(0+128)
  4098  0696  3000               	movlw	0
  4099  0697  00DF               	movwf	(_y+1)^(0+128)
  4100  0698  3000               	movlw	0
  4101  0699  00E0               	movwf	(_y+2)^(0+128)
  4102                           
  4103                           ;main.c: 279: for (int a=0; a<=15; a++)
  4104  069A  01C3               	clrf	ISR@a_233^(0+128)
  4105  069B  01C4               	clrf	(ISR@a_233+1)^(0+128)
  4106  069C  0844               	movf	(ISR@a_233+1)^(0+128),w
  4107  069D  3A80               	xorlw	128
  4108  069E  00FF               	movwf	127
  4109  069F  3080               	movlw	128
  4110  06A0  027F               	subwf	127,w
  4111  06A1  1D03               	skipz
  4112  06A2  2EA5               	goto	u337_25
  4113  06A3  3010               	movlw	16
  4114  06A4  0243               	subwf	ISR@a_233^(0+128),w
  4115  06A5                     u337_25:	
  4116  06A5  1803               	btfsc	3,0
  4117  06A6  2F28               	goto	L29
  4118  06A7                     i1l2846:	
  4119                           
  4120                           ;main.c: 280: {
  4121                           ;main.c: 281: y = trimf(x,2,5,10);
  4122  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  4123  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  4124  06A9  085B               	movf	_x^(0+128),w
  4125  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  4126  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  4127  06AC  00B7               	movwf	trimf@x
  4128  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  4129  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  4130  06AF  085C               	movf	(_x+1)^(0+128),w
  4131  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  4132  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  4133  06B2  00B8               	movwf	trimf@x+1
  4134  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  4135  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  4136  06B5  085D               	movf	(_x+2)^(0+128),w
  4137  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4138  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  4139  06B8  00B9               	movwf	trimf@x+2
  4140  06B9  3000               	movlw	0
  4141  06BA  00BA               	movwf	trimf@a
  4142  06BB  3000               	movlw	0
  4143  06BC  00BB               	movwf	trimf@a+1
  4144  06BD  3040               	movlw	64
  4145  06BE  00BC               	movwf	trimf@a+2
  4146  06BF  3000               	movlw	0
  4147  06C0  00BD               	movwf	trimf@b
  4148  06C1  30A0               	movlw	160
  4149  06C2  00BE               	movwf	trimf@b+1
  4150  06C3  3040               	movlw	64
  4151  06C4  00BF               	movwf	trimf@b+2
  4152  06C5  3000               	movlw	0
  4153  06C6  00C0               	movwf	trimf@c
  4154  06C7  3020               	movlw	32
  4155  06C8  00C1               	movwf	trimf@c+1
  4156  06C9  3041               	movlw	65
  4157  06CA  00C2               	movwf	trimf@c+2
  4158  06CB  160A  118A  26E2  120A  118A  	fcall	_trimf
  4159  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  4160  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  4161  06D2  0837               	movf	?_trimf,w
  4162  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  4163  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  4164  06D5  00DE               	movwf	_y^(0+128)
  4165  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  4166  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  4167  06D8  0838               	movf	?_trimf+1,w
  4168  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  4169  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  4170  06DB  00DF               	movwf	(_y+1)^(0+128)
  4171  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  4172  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  4173  06DE  0839               	movf	?_trimf+2,w
  4174  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  4175  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  4176  06E1  00E0               	movwf	(_y+2)^(0+128)
  4177                           
  4178                           ;main.c: 283: if (y >= rule)
  4179  06E2  085E               	movf	_y^(0+128),w
  4180  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4181  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4182  06E5  00A0               	movwf	___ftge@ff1
  4183  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  4184  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  4185  06E8  085F               	movf	(_y+1)^(0+128),w
  4186  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  4187  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  4188  06EB  00A1               	movwf	___ftge@ff1+1
  4189  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  4190  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  4191  06EE  0860               	movf	(_y+2)^(0+128),w
  4192  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  4193  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  4194  06F1  00A2               	movwf	___ftge@ff1+2
  4195  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  4196  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  4197  06F4  0852               	movf	_rule^(0+128),w
  4198  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  4199  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  4200  06F7  00A3               	movwf	___ftge@ff2
  4201  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  4202  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  4203  06FA  0853               	movf	(_rule+1)^(0+128),w
  4204  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  4205  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  4206  06FD  00A4               	movwf	___ftge@ff2+1
  4207  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  4208  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  4209  0700  0854               	movf	(_rule+2)^(0+128),w
  4210  0701  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0702  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0703  00A5               	movwf	___ftge@ff2+2
  4213  0704  160A  118A  22BF  120A  118A  	fcall	___ftge
  4214  0709  120A  158A  1C03   	btfss	3,0
  4215  070C  2C47               	goto	i1l2850
  4216                           
  4217                           ;main.c: 284: {
  4218                           ;main.c: 285: reajuste_medio[a] = rule;
  4219  070D  3003               	movlw	3
  4220  070E  1283               	bcf	3,5	;RP0=0, select bank0
  4221  070F  1303               	bcf	3,6	;RP1=0, select bank0
  4222  0710  00DB               	movwf	??_ISR
  4223  0711  085B               	movf	??_ISR,w
  4224  0712  00F0               	movwf	___bmul@multiplicand
  4225  0713  1683               	bsf	3,5	;RP0=1, select bank1
  4226  0714  1303               	bcf	3,6	;RP1=0, select bank1
  4227  0715  0843               	movf	ISR@a_233^(0+128),w
  4228  0716  160A  118A  20F8   	fcall	___bmul
  4229  0719  3E40               	addlw	_reajuste_medio& (0+255)
  4230  071A  0084               	movwf	4
  4231  071B  1683               	bsf	3,5	;RP0=1, select bank1
  4232  071C  1303               	bcf	3,6	;RP1=0, select bank1
  4233  071D  0852               	movf	_rule^(0+128),w
  4234  071E  1783               	bsf	3,7	;select IRP bank2
  4235  071F  0080               	movwf	0
  4236  0720  0A84               	incf	4,f
  4237  0721  0853               	movf	(_rule+1)^(0+128),w
  4238  0722  0080               	movwf	0
  4239  0723  0A84               	incf	4,f
  4240  0724  0854               	movf	(_rule+2)^(0+128),w
  4241  0725  120A  158A  2C61   	goto	L3
  4242  0728                     L29:	
  4243  0728  120A  158A  2C8C   	ljmp	i1l2858
  4244                           
  4245                           	psect	intentry
  4246  0004                     __pintentry:	
  4247                           ;incstack = 0
  4248                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4249                           
  4250  0004                     interrupt_function:	
  4251  007E                     saved_w	set	btemp
  4252  0004  00FE               	movwf	btemp
  4253  0005  0E03               	swapf	3,w
  4254  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4255  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4256  0008  00DD               	movwf	??_ISR+2
  4257  0009  0804               	movf	4,w
  4258  000A  00DE               	movwf	??_ISR+3
  4259  000B  080A               	movf	10,w
  4260  000C  00DF               	movwf	??_ISR+4
  4261  000D  087F               	movf	btemp+1,w
  4262  000E  00E0               	movwf	??_ISR+5
  4263  000F  120A  118A  2855   	ljmp	_ISR
  4264                           
  4265                           	psect	text10
  4266  10C7                     __ptext10:	
  4267 ;; *************** function i1_TIMER0_Set *****************
  4268 ;; Defined at:
  4269 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  contagens       1    wreg     unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  contagens       1    0[COMMON] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       0       0       0       0
  4284 ;;      Locals:         1       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0
  4286 ;;      Totals:         1       0       0       0       0
  4287 ;;Total ram usage:        1 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_ISR
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function i1_TIMER0_Set
  4298  10C7                     i1_TIMER0_Set:	
  4299                           
  4300                           ;incstack = 0
  4301                           ; Regs used in i1_TIMER0_Set: [wreg]
  4302                           ;i1TIMER0_Set@contagens stored from wreg
  4303  10C7  00F0               	movwf	i1TIMER0_Set@contagens
  4304                           
  4305                           ;timers.c: 22: TMR0 = contagens;
  4306  10C8  0870               	movf	i1TIMER0_Set@contagens,w
  4307  10C9  1283               	bcf	3,5	;RP0=0, select bank0
  4308  10CA  1303               	bcf	3,6	;RP1=0, select bank0
  4309  10CB  0081               	movwf	1	;volatile
  4310  10CC  0008               	return
  4311  10CD                     __end_ofi1_TIMER0_Set:	
  4312                           
  4313                           	psect	text11
  4314  1147                     __ptext11:	
  4315 ;; *************** function i1_PWM_DutyCycle2 *****************
  4316 ;; Defined at:
  4317 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  valor           2    0[COMMON] int 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;		None               void
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4331 ;;      Params:         2       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0
  4333 ;;      Temps:          2       0       0       0       0
  4334 ;;      Totals:         4       0       0       0       0
  4335 ;;Total ram usage:        4 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_ISR
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function i1_PWM_DutyCycle2
  4346  1147                     i1_PWM_DutyCycle2:	
  4347                           
  4348                           ;pwm.c: 98: CCPR2L = valor >> 2;
  4349                           
  4350                           ;incstack = 0
  4351                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  4352  1147  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  4353  1148  00F3               	movwf	??i1_PWM_DutyCycle2+1
  4354  1149  0870               	movf	i1PWM_DutyCycle2@valor,w
  4355  114A  00F2               	movwf	??i1_PWM_DutyCycle2
  4356  114B  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4357  114C  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4358  114D  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4359  114E  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  4360  114F  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  4361  1150  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  4362  1151  0872               	movf	??i1_PWM_DutyCycle2,w
  4363  1152  1283               	bcf	3,5	;RP0=0, select bank0
  4364  1153  1303               	bcf	3,6	;RP1=0, select bank0
  4365  1154  009B               	movwf	27	;volatile
  4366                           
  4367                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  4368  1155  0870               	movf	i1PWM_DutyCycle2@valor,w
  4369  1156  00F2               	movwf	??i1_PWM_DutyCycle2
  4370  1157  3003               	movlw	3
  4371  1158                     u304_25:	
  4372  1158  1003               	clrc
  4373  1159  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  4374  115A  3EFF               	addlw	-1
  4375  115B  1D03               	skipz
  4376  115C  2958               	goto	u304_25
  4377  115D  1003               	clrc
  4378  115E  0D72               	rlf	??i1_PWM_DutyCycle2,w
  4379  115F  380C               	iorlw	12
  4380  1160  009D               	movwf	29	;volatile
  4381  1161  0008               	return
  4382  1162                     __end_ofi1_PWM_DutyCycle2:	
  4383                           
  4384                           	psect	text12
  4385  16E2                     __ptext12:	
  4386 ;; *************** function _trimf *****************
  4387 ;; Defined at:
  4388 ;;		line 69 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  x               3   23[BANK0 ] float 
  4391 ;;  a               3   26[BANK0 ] float 
  4392 ;;  b               3   29[BANK0 ] float 
  4393 ;;  c               3   32[BANK0 ] float 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  ua              3   35[BANK0 ] float 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  3   23[BANK0 ] float 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4405 ;;      Params:         0      12       0       0       0
  4406 ;;      Locals:         0       3       0       0       0
  4407 ;;      Temps:          0       0       0       0       0
  4408 ;;      Totals:         0      15       0       0       0
  4409 ;;Total ram usage:       15 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    2
  4412 ;; This function calls:
  4413 ;;		___ftadd
  4414 ;;		___ftdiv
  4415 ;;		___ftge
  4416 ;;		___ftneg
  4417 ;; This function is called by:
  4418 ;;		_ISR
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _trimf
  4424  16E2                     _trimf:	
  4425                           
  4426                           ;main.c: 71: float ua = 0;
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _trimf: [wreg+status,2+status,0+pclath+cstack]
  4430  16E2  3000               	movlw	0
  4431  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  4432  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  4433  16E5  00C3               	movwf	trimf@ua
  4434  16E6  3000               	movlw	0
  4435  16E7  00C4               	movwf	trimf@ua+1
  4436  16E8  3000               	movlw	0
  4437  16E9  00C5               	movwf	trimf@ua+2
  4438                           
  4439                           ;main.c: 73: if (x <= a)
  4440  16EA  083A               	movf	trimf@a,w
  4441  16EB  00A0               	movwf	___ftge@ff1
  4442  16EC  083B               	movf	trimf@a+1,w
  4443  16ED  00A1               	movwf	___ftge@ff1+1
  4444  16EE  083C               	movf	trimf@a+2,w
  4445  16EF  00A2               	movwf	___ftge@ff1+2
  4446  16F0  0837               	movf	trimf@x,w
  4447  16F1  00A3               	movwf	___ftge@ff2
  4448  16F2  0838               	movf	trimf@x+1,w
  4449  16F3  00A4               	movwf	___ftge@ff2+1
  4450  16F4  0839               	movf	trimf@x+2,w
  4451  16F5  00A5               	movwf	___ftge@ff2+2
  4452  16F6  160A  118A  22BF  160A  118A  	fcall	___ftge
  4453  16FB  1803               	btfsc	3,0
  4454  16FC  2FEF               	goto	L18
  4455                           
  4456                           ;main.c: 75: else if ((a < x) && (x <= b))
  4457                           
  4458                           ;main.c: 74: ua = 0;
  4459  16FD  1283               	bcf	3,5	;RP0=0, select bank0
  4460  16FE  1303               	bcf	3,6	;RP1=0, select bank0
  4461  16FF  083A               	movf	trimf@a,w
  4462  1700  00A0               	movwf	___ftge@ff1
  4463  1701  083B               	movf	trimf@a+1,w
  4464  1702  00A1               	movwf	___ftge@ff1+1
  4465  1703  083C               	movf	trimf@a+2,w
  4466  1704  00A2               	movwf	___ftge@ff1+2
  4467  1705  0837               	movf	trimf@x,w
  4468  1706  00A3               	movwf	___ftge@ff2
  4469  1707  0838               	movf	trimf@x+1,w
  4470  1708  00A4               	movwf	___ftge@ff2+1
  4471  1709  0839               	movf	trimf@x+2,w
  4472  170A  00A5               	movwf	___ftge@ff2+2
  4473  170B  160A  118A  22BF  160A  118A  	fcall	___ftge
  4474  1710  1803               	btfsc	3,0
  4475  1711  2F59               	goto	i1l2358
  4476  1712  1283               	bcf	3,5	;RP0=0, select bank0
  4477  1713  1303               	bcf	3,6	;RP1=0, select bank0
  4478  1714  083D               	movf	trimf@b,w
  4479  1715  00A0               	movwf	___ftge@ff1
  4480  1716  083E               	movf	trimf@b+1,w
  4481  1717  00A1               	movwf	___ftge@ff1+1
  4482  1718  083F               	movf	trimf@b+2,w
  4483  1719  00A2               	movwf	___ftge@ff1+2
  4484  171A  0837               	movf	trimf@x,w
  4485  171B  00A3               	movwf	___ftge@ff2
  4486  171C  0838               	movf	trimf@x+1,w
  4487  171D  00A4               	movwf	___ftge@ff2+1
  4488  171E  0839               	movf	trimf@x+2,w
  4489  171F  00A5               	movwf	___ftge@ff2+2
  4490  1720  160A  118A  22BF  160A  118A  	fcall	___ftge
  4491  1725  1C03               	btfss	3,0
  4492  1726  2F59               	goto	i1l2358
  4493                           
  4494                           ;main.c: 76: ua = ((x - a) / (b - a));
  4495  1727  1283               	bcf	3,5	;RP0=0, select bank0
  4496  1728  1303               	bcf	3,6	;RP1=0, select bank0
  4497  1729  083D               	movf	trimf@b,w
  4498  172A  00F8               	movwf	___ftadd@f1
  4499  172B  083E               	movf	trimf@b+1,w
  4500  172C  00F9               	movwf	___ftadd@f1+1
  4501  172D  083F               	movf	trimf@b+2,w
  4502  172E  00FA               	movwf	___ftadd@f1+2
  4503  172F  083A               	movf	trimf@a,w
  4504  1730  00F0               	movwf	___ftneg@f1
  4505  1731  083B               	movf	trimf@a+1,w
  4506  1732  00F1               	movwf	___ftneg@f1+1
  4507  1733  083C               	movf	trimf@a+2,w
  4508  1734  00F2               	movwf	___ftneg@f1+2
  4509  1735  160A  118A  20D5  160A  118A  	fcall	___ftneg
  4510  173A  0870               	movf	?___ftneg,w
  4511  173B  00FB               	movwf	___ftadd@f2
  4512  173C  0871               	movf	?___ftneg+1,w
  4513  173D  00FC               	movwf	___ftadd@f2+1
  4514  173E  0872               	movf	?___ftneg+2,w
  4515  173F  00FD               	movwf	___ftadd@f2+2
  4516  1740  160A  118A  25DB  160A  118A  	fcall	___ftadd
  4517  1745  0878               	movf	?___ftadd,w
  4518  1746  1283               	bcf	3,5	;RP0=0, select bank0
  4519  1747  1303               	bcf	3,6	;RP1=0, select bank0
  4520  1748  00A7               	movwf	___ftdiv@f2
  4521  1749  0879               	movf	?___ftadd+1,w
  4522  174A  00A8               	movwf	___ftdiv@f2+1
  4523  174B  087A               	movf	?___ftadd+2,w
  4524  174C  00A9               	movwf	___ftdiv@f2+2
  4525  174D  0837               	movf	trimf@x,w
  4526  174E  00F8               	movwf	___ftadd@f1
  4527  174F  0838               	movf	trimf@x+1,w
  4528  1750  00F9               	movwf	___ftadd@f1+1
  4529  1751  0839               	movf	trimf@x+2,w
  4530  1752  00FA               	movwf	___ftadd@f1+2
  4531  1753  083A               	movf	trimf@a,w
  4532  1754  00F0               	movwf	___ftneg@f1
  4533  1755  083B               	movf	trimf@a+1,w
  4534  1756  00F1               	movwf	___ftneg@f1+1
  4535  1757  083C               	movf	trimf@a+2,w
  4536  1758  2FB4               	goto	L19
  4537  1759                     i1l2358:	
  4538                           
  4539                           ;main.c: 77: else if ((b < x) && (x <= c))
  4540  1759  1283               	bcf	3,5	;RP0=0, select bank0
  4541  175A  1303               	bcf	3,6	;RP1=0, select bank0
  4542  175B  083D               	movf	trimf@b,w
  4543  175C  00A0               	movwf	___ftge@ff1
  4544  175D  083E               	movf	trimf@b+1,w
  4545  175E  00A1               	movwf	___ftge@ff1+1
  4546  175F  083F               	movf	trimf@b+2,w
  4547  1760  00A2               	movwf	___ftge@ff1+2
  4548  1761  0837               	movf	trimf@x,w
  4549  1762  00A3               	movwf	___ftge@ff2
  4550  1763  0838               	movf	trimf@x+1,w
  4551  1764  00A4               	movwf	___ftge@ff2+1
  4552  1765  0839               	movf	trimf@x+2,w
  4553  1766  00A5               	movwf	___ftge@ff2+2
  4554  1767  160A  118A  22BF  160A  118A  	fcall	___ftge
  4555  176C  1803               	btfsc	3,0
  4556  176D  2FDA               	goto	i1l2364
  4557  176E  1283               	bcf	3,5	;RP0=0, select bank0
  4558  176F  1303               	bcf	3,6	;RP1=0, select bank0
  4559  1770  0840               	movf	trimf@c,w
  4560  1771  00A0               	movwf	___ftge@ff1
  4561  1772  0841               	movf	trimf@c+1,w
  4562  1773  00A1               	movwf	___ftge@ff1+1
  4563  1774  0842               	movf	trimf@c+2,w
  4564  1775  00A2               	movwf	___ftge@ff1+2
  4565  1776  0837               	movf	trimf@x,w
  4566  1777  00A3               	movwf	___ftge@ff2
  4567  1778  0838               	movf	trimf@x+1,w
  4568  1779  00A4               	movwf	___ftge@ff2+1
  4569  177A  0839               	movf	trimf@x+2,w
  4570  177B  00A5               	movwf	___ftge@ff2+2
  4571  177C  160A  118A  22BF  160A  118A  	fcall	___ftge
  4572  1781  1C03               	btfss	3,0
  4573  1782  2FDA               	goto	i1l2364
  4574                           
  4575                           ;main.c: 78: ua = ((x - c) / (b - c));
  4576  1783  1283               	bcf	3,5	;RP0=0, select bank0
  4577  1784  1303               	bcf	3,6	;RP1=0, select bank0
  4578  1785  083D               	movf	trimf@b,w
  4579  1786  00F8               	movwf	___ftadd@f1
  4580  1787  083E               	movf	trimf@b+1,w
  4581  1788  00F9               	movwf	___ftadd@f1+1
  4582  1789  083F               	movf	trimf@b+2,w
  4583  178A  00FA               	movwf	___ftadd@f1+2
  4584  178B  0840               	movf	trimf@c,w
  4585  178C  00F0               	movwf	___ftneg@f1
  4586  178D  0841               	movf	trimf@c+1,w
  4587  178E  00F1               	movwf	___ftneg@f1+1
  4588  178F  0842               	movf	trimf@c+2,w
  4589  1790  00F2               	movwf	___ftneg@f1+2
  4590  1791  160A  118A  20D5  160A  118A  	fcall	___ftneg
  4591  1796  0870               	movf	?___ftneg,w
  4592  1797  00FB               	movwf	___ftadd@f2
  4593  1798  0871               	movf	?___ftneg+1,w
  4594  1799  00FC               	movwf	___ftadd@f2+1
  4595  179A  0872               	movf	?___ftneg+2,w
  4596  179B  00FD               	movwf	___ftadd@f2+2
  4597  179C  160A  118A  25DB  160A  118A  	fcall	___ftadd
  4598  17A1  0878               	movf	?___ftadd,w
  4599  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  4600  17A3  1303               	bcf	3,6	;RP1=0, select bank0
  4601  17A4  00A7               	movwf	___ftdiv@f2
  4602  17A5  0879               	movf	?___ftadd+1,w
  4603  17A6  00A8               	movwf	___ftdiv@f2+1
  4604  17A7  087A               	movf	?___ftadd+2,w
  4605  17A8  00A9               	movwf	___ftdiv@f2+2
  4606  17A9  0837               	movf	trimf@x,w
  4607  17AA  00F8               	movwf	___ftadd@f1
  4608  17AB  0838               	movf	trimf@x+1,w
  4609  17AC  00F9               	movwf	___ftadd@f1+1
  4610  17AD  0839               	movf	trimf@x+2,w
  4611  17AE  00FA               	movwf	___ftadd@f1+2
  4612  17AF  0840               	movf	trimf@c,w
  4613  17B0  00F0               	movwf	___ftneg@f1
  4614  17B1  0841               	movf	trimf@c+1,w
  4615  17B2  00F1               	movwf	___ftneg@f1+1
  4616  17B3  0842               	movf	trimf@c+2,w
  4617  17B4                     L19:	
  4618  17B4  00F2               	movwf	___ftneg@f1+2
  4619  17B5  160A  118A  20D5  160A  118A  	fcall	___ftneg
  4620  17BA  0870               	movf	?___ftneg,w
  4621  17BB  00FB               	movwf	___ftadd@f2
  4622  17BC  0871               	movf	?___ftneg+1,w
  4623  17BD  00FC               	movwf	___ftadd@f2+1
  4624  17BE  0872               	movf	?___ftneg+2,w
  4625  17BF  00FD               	movwf	___ftadd@f2+2
  4626  17C0  160A  118A  25DB  160A  118A  	fcall	___ftadd
  4627  17C5  0878               	movf	?___ftadd,w
  4628  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  4629  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  4630  17C8  00AA               	movwf	___ftdiv@f1
  4631  17C9  0879               	movf	?___ftadd+1,w
  4632  17CA  00AB               	movwf	___ftdiv@f1+1
  4633  17CB  087A               	movf	?___ftadd+2,w
  4634  17CC  00AC               	movwf	___ftdiv@f1+2
  4635  17CD  160A  118A  2523  160A  118A  	fcall	___ftdiv
  4636  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  4637  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  4638  17D4  0827               	movf	?___ftdiv,w
  4639  17D5  00C3               	movwf	trimf@ua
  4640  17D6  0828               	movf	?___ftdiv+1,w
  4641  17D7  00C4               	movwf	trimf@ua+1
  4642  17D8  0829               	movf	?___ftdiv+2,w
  4643  17D9  2FF6               	goto	L16
  4644  17DA                     i1l2364:	
  4645                           
  4646                           ;main.c: 79: else if (x > c)
  4647  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  4648  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  4649  17DC  0840               	movf	trimf@c,w
  4650  17DD  00A0               	movwf	___ftge@ff1
  4651  17DE  0841               	movf	trimf@c+1,w
  4652  17DF  00A1               	movwf	___ftge@ff1+1
  4653  17E0  0842               	movf	trimf@c+2,w
  4654  17E1  00A2               	movwf	___ftge@ff1+2
  4655  17E2  0837               	movf	trimf@x,w
  4656  17E3  00A3               	movwf	___ftge@ff2
  4657  17E4  0838               	movf	trimf@x+1,w
  4658  17E5  00A4               	movwf	___ftge@ff2+1
  4659  17E6  0839               	movf	trimf@x+2,w
  4660  17E7  00A5               	movwf	___ftge@ff2+2
  4661  17E8  160A  118A  22BF  160A  118A  	fcall	___ftge
  4662  17ED  1803               	btfsc	3,0
  4663  17EE  2FF7               	goto	i1l112
  4664  17EF                     L18:	
  4665                           
  4666                           ;main.c: 80: ua = 0;
  4667  17EF  3000               	movlw	0
  4668  17F0  1283               	bcf	3,5	;RP0=0, select bank0
  4669  17F1  1303               	bcf	3,6	;RP1=0, select bank0
  4670  17F2  00C3               	movwf	trimf@ua
  4671  17F3  3000               	movlw	0
  4672  17F4  00C4               	movwf	trimf@ua+1
  4673  17F5  3000               	movlw	0
  4674  17F6                     L16:	
  4675  17F6  00C5               	movwf	trimf@ua+2
  4676  17F7                     i1l112:	
  4677                           
  4678                           ;main.c: 82: return(ua);
  4679  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  4680  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  4681  17F9  0843               	movf	trimf@ua,w
  4682  17FA  00B7               	movwf	?_trimf
  4683  17FB  0844               	movf	trimf@ua+1,w
  4684  17FC  00B8               	movwf	?_trimf+1
  4685  17FD  0845               	movf	trimf@ua+2,w
  4686  17FE  00B9               	movwf	?_trimf+2
  4687  17FF  0008               	return
  4688  1800                     __end_of_trimf:	
  4689                           
  4690                           	psect	text13
  4691  083C                     __ptext13:	
  4692 ;; *************** function _trapmf *****************
  4693 ;; Defined at:
  4694 ;;		line 87 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  x               3   23[BANK0 ] float 
  4697 ;;  a               3   26[BANK0 ] float 
  4698 ;;  b               3   29[BANK0 ] float 
  4699 ;;  c               3   32[BANK0 ] float 
  4700 ;;  d               3   35[BANK0 ] float 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  ua              3   38[BANK0 ] float 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  3   23[BANK0 ] float 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         0      15       0       0       0
  4713 ;;      Locals:         0       3       0       0       0
  4714 ;;      Temps:          0       0       0       0       0
  4715 ;;      Totals:         0      18       0       0       0
  4716 ;;Total ram usage:       18 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    2
  4719 ;; This function calls:
  4720 ;;		___ftadd
  4721 ;;		___ftdiv
  4722 ;;		___ftge
  4723 ;;		___ftneg
  4724 ;; This function is called by:
  4725 ;;		_ISR
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _trapmf
  4731  083C                     _trapmf:	
  4732                           
  4733                           ;main.c: 89: float ua = 0;
  4734                           
  4735                           ;incstack = 0
  4736                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  4737  083C  3000               	movlw	0
  4738  083D  1283               	bcf	3,5	;RP0=0, select bank0
  4739  083E  1303               	bcf	3,6	;RP1=0, select bank0
  4740  083F  00C6               	movwf	trapmf@ua
  4741  0840  3000               	movlw	0
  4742  0841  00C7               	movwf	trapmf@ua+1
  4743  0842  3000               	movlw	0
  4744  0843  00C8               	movwf	trapmf@ua+2
  4745                           
  4746                           ;main.c: 91: if (x <= a)
  4747  0844  083A               	movf	trapmf@a,w
  4748  0845  00A0               	movwf	___ftge@ff1
  4749  0846  083B               	movf	trapmf@a+1,w
  4750  0847  00A1               	movwf	___ftge@ff1+1
  4751  0848  083C               	movf	trapmf@a+2,w
  4752  0849  00A2               	movwf	___ftge@ff1+2
  4753  084A  0837               	movf	trapmf@x,w
  4754  084B  00A3               	movwf	___ftge@ff2
  4755  084C  0838               	movf	trapmf@x+1,w
  4756  084D  00A4               	movwf	___ftge@ff2+1
  4757  084E  0839               	movf	trapmf@x+2,w
  4758  084F  00A5               	movwf	___ftge@ff2+2
  4759  0850  160A  118A  22BF  120A  158A  	fcall	___ftge
  4760  0855  1803               	btfsc	3,0
  4761  0856  297B               	goto	L24
  4762                           
  4763                           ;main.c: 93: else if ((a < x) && (x <= b))
  4764                           
  4765                           ;main.c: 92: ua = 0;
  4766  0857  1283               	bcf	3,5	;RP0=0, select bank0
  4767  0858  1303               	bcf	3,6	;RP1=0, select bank0
  4768  0859  083A               	movf	trapmf@a,w
  4769  085A  00A0               	movwf	___ftge@ff1
  4770  085B  083B               	movf	trapmf@a+1,w
  4771  085C  00A1               	movwf	___ftge@ff1+1
  4772  085D  083C               	movf	trapmf@a+2,w
  4773  085E  00A2               	movwf	___ftge@ff1+2
  4774  085F  0837               	movf	trapmf@x,w
  4775  0860  00A3               	movwf	___ftge@ff2
  4776  0861  0838               	movf	trapmf@x+1,w
  4777  0862  00A4               	movwf	___ftge@ff2+1
  4778  0863  0839               	movf	trapmf@x+2,w
  4779  0864  00A5               	movwf	___ftge@ff2+2
  4780  0865  160A  118A  22BF  120A  158A  	fcall	___ftge
  4781  086A  1803               	btfsc	3,0
  4782  086B  28B3               	goto	i1l2382
  4783  086C  1283               	bcf	3,5	;RP0=0, select bank0
  4784  086D  1303               	bcf	3,6	;RP1=0, select bank0
  4785  086E  083D               	movf	trapmf@b,w
  4786  086F  00A0               	movwf	___ftge@ff1
  4787  0870  083E               	movf	trapmf@b+1,w
  4788  0871  00A1               	movwf	___ftge@ff1+1
  4789  0872  083F               	movf	trapmf@b+2,w
  4790  0873  00A2               	movwf	___ftge@ff1+2
  4791  0874  0837               	movf	trapmf@x,w
  4792  0875  00A3               	movwf	___ftge@ff2
  4793  0876  0838               	movf	trapmf@x+1,w
  4794  0877  00A4               	movwf	___ftge@ff2+1
  4795  0878  0839               	movf	trapmf@x+2,w
  4796  0879  00A5               	movwf	___ftge@ff2+2
  4797  087A  160A  118A  22BF  120A  158A  	fcall	___ftge
  4798  087F  1C03               	btfss	3,0
  4799  0880  28B3               	goto	i1l2382
  4800                           
  4801                           ;main.c: 94: ua = ((x - a) / (b - a));
  4802  0881  1283               	bcf	3,5	;RP0=0, select bank0
  4803  0882  1303               	bcf	3,6	;RP1=0, select bank0
  4804  0883  083D               	movf	trapmf@b,w
  4805  0884  00F8               	movwf	___ftadd@f1
  4806  0885  083E               	movf	trapmf@b+1,w
  4807  0886  00F9               	movwf	___ftadd@f1+1
  4808  0887  083F               	movf	trapmf@b+2,w
  4809  0888  00FA               	movwf	___ftadd@f1+2
  4810  0889  083A               	movf	trapmf@a,w
  4811  088A  00F0               	movwf	___ftneg@f1
  4812  088B  083B               	movf	trapmf@a+1,w
  4813  088C  00F1               	movwf	___ftneg@f1+1
  4814  088D  083C               	movf	trapmf@a+2,w
  4815  088E  00F2               	movwf	___ftneg@f1+2
  4816  088F  160A  118A  20D5  120A  158A  	fcall	___ftneg
  4817  0894  0870               	movf	?___ftneg,w
  4818  0895  00FB               	movwf	___ftadd@f2
  4819  0896  0871               	movf	?___ftneg+1,w
  4820  0897  00FC               	movwf	___ftadd@f2+1
  4821  0898  0872               	movf	?___ftneg+2,w
  4822  0899  00FD               	movwf	___ftadd@f2+2
  4823  089A  160A  118A  25DB  120A  158A  	fcall	___ftadd
  4824  089F  0878               	movf	?___ftadd,w
  4825  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  4826  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  4827  08A2  00A7               	movwf	___ftdiv@f2
  4828  08A3  0879               	movf	?___ftadd+1,w
  4829  08A4  00A8               	movwf	___ftdiv@f2+1
  4830  08A5  087A               	movf	?___ftadd+2,w
  4831  08A6  00A9               	movwf	___ftdiv@f2+2
  4832  08A7  0837               	movf	trapmf@x,w
  4833  08A8  00F8               	movwf	___ftadd@f1
  4834  08A9  0838               	movf	trapmf@x+1,w
  4835  08AA  00F9               	movwf	___ftadd@f1+1
  4836  08AB  0839               	movf	trapmf@x+2,w
  4837  08AC  00FA               	movwf	___ftadd@f1+2
  4838  08AD  083A               	movf	trapmf@a,w
  4839  08AE  00F0               	movwf	___ftneg@f1
  4840  08AF  083B               	movf	trapmf@a+1,w
  4841  08B0  00F1               	movwf	___ftneg@f1+1
  4842  08B1  083C               	movf	trapmf@a+2,w
  4843  08B2  2940               	goto	L26
  4844  08B3                     i1l2382:	
  4845                           
  4846                           ;main.c: 95: else if ((b <= x) && (x <= c))
  4847  08B3  1283               	bcf	3,5	;RP0=0, select bank0
  4848  08B4  1303               	bcf	3,6	;RP1=0, select bank0
  4849  08B5  0837               	movf	trapmf@x,w
  4850  08B6  00A0               	movwf	___ftge@ff1
  4851  08B7  0838               	movf	trapmf@x+1,w
  4852  08B8  00A1               	movwf	___ftge@ff1+1
  4853  08B9  0839               	movf	trapmf@x+2,w
  4854  08BA  00A2               	movwf	___ftge@ff1+2
  4855  08BB  083D               	movf	trapmf@b,w
  4856  08BC  00A3               	movwf	___ftge@ff2
  4857  08BD  083E               	movf	trapmf@b+1,w
  4858  08BE  00A4               	movwf	___ftge@ff2+1
  4859  08BF  083F               	movf	trapmf@b+2,w
  4860  08C0  00A5               	movwf	___ftge@ff2+2
  4861  08C1  160A  118A  22BF  120A  158A  	fcall	___ftge
  4862  08C6  1C03               	btfss	3,0
  4863  08C7  28E5               	goto	i1l2388
  4864  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  4865  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  4866  08CA  0840               	movf	trapmf@c,w
  4867  08CB  00A0               	movwf	___ftge@ff1
  4868  08CC  0841               	movf	trapmf@c+1,w
  4869  08CD  00A1               	movwf	___ftge@ff1+1
  4870  08CE  0842               	movf	trapmf@c+2,w
  4871  08CF  00A2               	movwf	___ftge@ff1+2
  4872  08D0  0837               	movf	trapmf@x,w
  4873  08D1  00A3               	movwf	___ftge@ff2
  4874  08D2  0838               	movf	trapmf@x+1,w
  4875  08D3  00A4               	movwf	___ftge@ff2+1
  4876  08D4  0839               	movf	trapmf@x+2,w
  4877  08D5  00A5               	movwf	___ftge@ff2+2
  4878  08D6  160A  118A  22BF  120A  158A  	fcall	___ftge
  4879  08DB  1C03               	btfss	3,0
  4880  08DC  28E5               	goto	i1l2388
  4881                           
  4882                           ;main.c: 96: ua = 1;
  4883  08DD  3000               	movlw	0
  4884  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  4885  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  4886  08E0  00C6               	movwf	trapmf@ua
  4887  08E1  3080               	movlw	128
  4888  08E2  00C7               	movwf	trapmf@ua+1
  4889  08E3  303F               	movlw	63
  4890  08E4  2982               	goto	L23
  4891  08E5                     i1l2388:	
  4892                           
  4893                           ;main.c: 97: else if ((c < x) && (x <= d))
  4894  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  4895  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  4896  08E7  0840               	movf	trapmf@c,w
  4897  08E8  00A0               	movwf	___ftge@ff1
  4898  08E9  0841               	movf	trapmf@c+1,w
  4899  08EA  00A1               	movwf	___ftge@ff1+1
  4900  08EB  0842               	movf	trapmf@c+2,w
  4901  08EC  00A2               	movwf	___ftge@ff1+2
  4902  08ED  0837               	movf	trapmf@x,w
  4903  08EE  00A3               	movwf	___ftge@ff2
  4904  08EF  0838               	movf	trapmf@x+1,w
  4905  08F0  00A4               	movwf	___ftge@ff2+1
  4906  08F1  0839               	movf	trapmf@x+2,w
  4907  08F2  00A5               	movwf	___ftge@ff2+2
  4908  08F3  160A  118A  22BF  120A  158A  	fcall	___ftge
  4909  08F8  1803               	btfsc	3,0
  4910  08F9  2966               	goto	i1l2394
  4911  08FA  1283               	bcf	3,5	;RP0=0, select bank0
  4912  08FB  1303               	bcf	3,6	;RP1=0, select bank0
  4913  08FC  0843               	movf	trapmf@d,w
  4914  08FD  00A0               	movwf	___ftge@ff1
  4915  08FE  0844               	movf	trapmf@d+1,w
  4916  08FF  00A1               	movwf	___ftge@ff1+1
  4917  0900  0845               	movf	trapmf@d+2,w
  4918  0901  00A2               	movwf	___ftge@ff1+2
  4919  0902  0837               	movf	trapmf@x,w
  4920  0903  00A3               	movwf	___ftge@ff2
  4921  0904  0838               	movf	trapmf@x+1,w
  4922  0905  00A4               	movwf	___ftge@ff2+1
  4923  0906  0839               	movf	trapmf@x+2,w
  4924  0907  00A5               	movwf	___ftge@ff2+2
  4925  0908  160A  118A  22BF  120A  158A  	fcall	___ftge
  4926  090D  1C03               	btfss	3,0
  4927  090E  2966               	goto	i1l2394
  4928                           
  4929                           ;main.c: 98: ua = ((d - x) / (d - c));
  4930  090F  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0910  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0911  0843               	movf	trapmf@d,w
  4933  0912  00F8               	movwf	___ftadd@f1
  4934  0913  0844               	movf	trapmf@d+1,w
  4935  0914  00F9               	movwf	___ftadd@f1+1
  4936  0915  0845               	movf	trapmf@d+2,w
  4937  0916  00FA               	movwf	___ftadd@f1+2
  4938  0917  0840               	movf	trapmf@c,w
  4939  0918  00F0               	movwf	___ftneg@f1
  4940  0919  0841               	movf	trapmf@c+1,w
  4941  091A  00F1               	movwf	___ftneg@f1+1
  4942  091B  0842               	movf	trapmf@c+2,w
  4943  091C  00F2               	movwf	___ftneg@f1+2
  4944  091D  160A  118A  20D5  120A  158A  	fcall	___ftneg
  4945  0922  0870               	movf	?___ftneg,w
  4946  0923  00FB               	movwf	___ftadd@f2
  4947  0924  0871               	movf	?___ftneg+1,w
  4948  0925  00FC               	movwf	___ftadd@f2+1
  4949  0926  0872               	movf	?___ftneg+2,w
  4950  0927  00FD               	movwf	___ftadd@f2+2
  4951  0928  160A  118A  25DB  120A  158A  	fcall	___ftadd
  4952  092D  0878               	movf	?___ftadd,w
  4953  092E  1283               	bcf	3,5	;RP0=0, select bank0
  4954  092F  1303               	bcf	3,6	;RP1=0, select bank0
  4955  0930  00A7               	movwf	___ftdiv@f2
  4956  0931  0879               	movf	?___ftadd+1,w
  4957  0932  00A8               	movwf	___ftdiv@f2+1
  4958  0933  087A               	movf	?___ftadd+2,w
  4959  0934  00A9               	movwf	___ftdiv@f2+2
  4960  0935  0843               	movf	trapmf@d,w
  4961  0936  00F8               	movwf	___ftadd@f1
  4962  0937  0844               	movf	trapmf@d+1,w
  4963  0938  00F9               	movwf	___ftadd@f1+1
  4964  0939  0845               	movf	trapmf@d+2,w
  4965  093A  00FA               	movwf	___ftadd@f1+2
  4966  093B  0837               	movf	trapmf@x,w
  4967  093C  00F0               	movwf	___ftneg@f1
  4968  093D  0838               	movf	trapmf@x+1,w
  4969  093E  00F1               	movwf	___ftneg@f1+1
  4970  093F  0839               	movf	trapmf@x+2,w
  4971  0940                     L26:	
  4972  0940  00F2               	movwf	___ftneg@f1+2
  4973  0941  160A  118A  20D5  120A  158A  	fcall	___ftneg
  4974  0946  0870               	movf	?___ftneg,w
  4975  0947  00FB               	movwf	___ftadd@f2
  4976  0948  0871               	movf	?___ftneg+1,w
  4977  0949  00FC               	movwf	___ftadd@f2+1
  4978  094A  0872               	movf	?___ftneg+2,w
  4979  094B  00FD               	movwf	___ftadd@f2+2
  4980  094C  160A  118A  25DB  120A  158A  	fcall	___ftadd
  4981  0951  0878               	movf	?___ftadd,w
  4982  0952  1283               	bcf	3,5	;RP0=0, select bank0
  4983  0953  1303               	bcf	3,6	;RP1=0, select bank0
  4984  0954  00AA               	movwf	___ftdiv@f1
  4985  0955  0879               	movf	?___ftadd+1,w
  4986  0956  00AB               	movwf	___ftdiv@f1+1
  4987  0957  087A               	movf	?___ftadd+2,w
  4988  0958  00AC               	movwf	___ftdiv@f1+2
  4989  0959  160A  118A  2523  120A  158A  	fcall	___ftdiv
  4990  095E  1283               	bcf	3,5	;RP0=0, select bank0
  4991  095F  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0960  0827               	movf	?___ftdiv,w
  4993  0961  00C6               	movwf	trapmf@ua
  4994  0962  0828               	movf	?___ftdiv+1,w
  4995  0963  00C7               	movwf	trapmf@ua+1
  4996  0964  0829               	movf	?___ftdiv+2,w
  4997  0965  2982               	goto	L23
  4998  0966                     i1l2394:	
  4999                           
  5000                           ;main.c: 99: else if (x > d)
  5001  0966  1283               	bcf	3,5	;RP0=0, select bank0
  5002  0967  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0968  0843               	movf	trapmf@d,w
  5004  0969  00A0               	movwf	___ftge@ff1
  5005  096A  0844               	movf	trapmf@d+1,w
  5006  096B  00A1               	movwf	___ftge@ff1+1
  5007  096C  0845               	movf	trapmf@d+2,w
  5008  096D  00A2               	movwf	___ftge@ff1+2
  5009  096E  0837               	movf	trapmf@x,w
  5010  096F  00A3               	movwf	___ftge@ff2
  5011  0970  0838               	movf	trapmf@x+1,w
  5012  0971  00A4               	movwf	___ftge@ff2+1
  5013  0972  0839               	movf	trapmf@x+2,w
  5014  0973  00A5               	movwf	___ftge@ff2+2
  5015  0974  160A  118A  22BF  120A  158A  	fcall	___ftge
  5016  0979  1803               	btfsc	3,0
  5017  097A  2983               	goto	i1l122
  5018  097B                     L24:	
  5019                           
  5020                           ;main.c: 100: ua = 0;
  5021  097B  3000               	movlw	0
  5022  097C  1283               	bcf	3,5	;RP0=0, select bank0
  5023  097D  1303               	bcf	3,6	;RP1=0, select bank0
  5024  097E  00C6               	movwf	trapmf@ua
  5025  097F  3000               	movlw	0
  5026  0980  00C7               	movwf	trapmf@ua+1
  5027  0981  3000               	movlw	0
  5028  0982                     L23:	
  5029  0982  00C8               	movwf	trapmf@ua+2
  5030  0983                     i1l122:	
  5031                           
  5032                           ;main.c: 102: return(ua);
  5033  0983  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0984  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0985  0846               	movf	trapmf@ua,w
  5036  0986  00B7               	movwf	?_trapmf
  5037  0987  0847               	movf	trapmf@ua+1,w
  5038  0988  00B8               	movwf	?_trapmf+1
  5039  0989  0848               	movf	trapmf@ua+2,w
  5040  098A  00B9               	movwf	?_trapmf+2
  5041  098B  0008               	return
  5042  098C                     __end_of_trapmf:	
  5043                           
  5044                           	psect	text14
  5045  10D5                     __ptext14:	
  5046 ;; *************** function ___ftneg *****************
  5047 ;; Defined at:
  5048 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  f1              3    0[COMMON] float 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;		None
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  3    0[COMMON] float 
  5055 ;; Registers used:
  5056 ;;		wreg
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5062 ;;      Params:         3       0       0       0       0
  5063 ;;      Locals:         0       0       0       0       0
  5064 ;;      Temps:          0       0       0       0       0
  5065 ;;      Totals:         3       0       0       0       0
  5066 ;;Total ram usage:        3 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_trimf
  5072 ;;		_trapmf
  5073 ;;		_ISR
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function ___ftneg
  5079  10D5                     ___ftneg:	
  5080                           
  5081                           ;incstack = 0
  5082                           ; Regs used in ___ftneg: [wreg]
  5083  10D5  0872               	movf	___ftneg@f1+2,w
  5084  10D6  0471               	iorwf	___ftneg@f1+1,w
  5085  10D7  0470               	iorwf	___ftneg@f1,w
  5086  10D8  1903               	skipnz
  5087  10D9  0008               	return
  5088  10DA  3080               	movlw	128
  5089  10DB  06F2               	xorwf	___ftneg@f1+2,f
  5090  10DC  0008               	return
  5091  10DD                     __end_of___ftneg:	
  5092                           
  5093                           	psect	text15
  5094  12BF                     __ptext15:	
  5095 ;; *************** function ___ftge *****************
  5096 ;; Defined at:
  5097 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  ff1             3    0[BANK0 ] float 
  5100 ;;  ff2             3    3[BANK0 ] float 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;		None
  5103 ;; Return value:  Size  Location     Type
  5104 ;;		None               void
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       6       0       0       0
  5113 ;;      Locals:         0       0       0       0       0
  5114 ;;      Temps:          0       6       0       0       0
  5115 ;;      Totals:         0      12       0       0       0
  5116 ;;Total ram usage:       12 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_trimf
  5122 ;;		_trapmf
  5123 ;;		_ISR
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function ___ftge
  5129  12BF                     ___ftge:	
  5130                           
  5131                           ;incstack = 0
  5132                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5133  12BF  1283               	bcf	3,5	;RP0=0, select bank0
  5134  12C0  1303               	bcf	3,6	;RP1=0, select bank0
  5135  12C1  1FA2               	btfss	___ftge@ff1+2,7
  5136  12C2  2AE8               	goto	i1l2322
  5137  12C3  3000               	movlw	0
  5138  12C4  00A6               	movwf	??___ftge
  5139  12C5  3000               	movlw	0
  5140  12C6  00A7               	movwf	??___ftge+1
  5141  12C7  3080               	movlw	128
  5142  12C8  00A8               	movwf	??___ftge+2
  5143  12C9  0920               	comf	___ftge@ff1,w
  5144  12CA  00A9               	movwf	??___ftge+3
  5145  12CB  0921               	comf	___ftge@ff1+1,w
  5146  12CC  00AA               	movwf	??___ftge+4
  5147  12CD  0922               	comf	___ftge@ff1+2,w
  5148  12CE  00AB               	movwf	??___ftge+5
  5149  12CF  0AA9               	incf	??___ftge+3,f
  5150  12D0  1903               	skipnz
  5151  12D1  0AAA               	incf	??___ftge+4,f
  5152  12D2  1903               	skipnz
  5153  12D3  0AAB               	incf	??___ftge+5,f
  5154  12D4  0829               	movf	??___ftge+3,w
  5155  12D5  07A6               	addwf	??___ftge,f
  5156  12D6  082A               	movf	??___ftge+4,w
  5157  12D7  1803               	skipnc
  5158  12D8  0F2A               	incfsz	??___ftge+4,w
  5159  12D9  2ADB               	goto	u247_21
  5160  12DA  2ADC               	goto	u247_22
  5161  12DB                     u247_21:	
  5162  12DB  07A7               	addwf	??___ftge+1,f
  5163  12DC                     u247_22:	
  5164  12DC  082B               	movf	??___ftge+5,w
  5165  12DD  1803               	skipnc
  5166  12DE  0F2B               	incfsz	??___ftge+5,w
  5167  12DF  2AE1               	goto	u247_23
  5168  12E0  2AE2               	goto	u247_24
  5169  12E1                     u247_23:	
  5170  12E1  07A8               	addwf	??___ftge+2,f
  5171  12E2                     u247_24:	
  5172  12E2  0826               	movf	??___ftge,w
  5173  12E3  00A0               	movwf	___ftge@ff1
  5174  12E4  0827               	movf	??___ftge+1,w
  5175  12E5  00A1               	movwf	___ftge@ff1+1
  5176  12E6  0828               	movf	??___ftge+2,w
  5177  12E7  00A2               	movwf	___ftge@ff1+2
  5178  12E8                     i1l2322:	
  5179  12E8  1FA5               	btfss	___ftge@ff2+2,7
  5180  12E9  2B0F               	goto	i1l2326
  5181  12EA  3000               	movlw	0
  5182  12EB  00A6               	movwf	??___ftge
  5183  12EC  3000               	movlw	0
  5184  12ED  00A7               	movwf	??___ftge+1
  5185  12EE  3080               	movlw	128
  5186  12EF  00A8               	movwf	??___ftge+2
  5187  12F0  0923               	comf	___ftge@ff2,w
  5188  12F1  00A9               	movwf	??___ftge+3
  5189  12F2  0924               	comf	___ftge@ff2+1,w
  5190  12F3  00AA               	movwf	??___ftge+4
  5191  12F4  0925               	comf	___ftge@ff2+2,w
  5192  12F5  00AB               	movwf	??___ftge+5
  5193  12F6  0AA9               	incf	??___ftge+3,f
  5194  12F7  1903               	skipnz
  5195  12F8  0AAA               	incf	??___ftge+4,f
  5196  12F9  1903               	skipnz
  5197  12FA  0AAB               	incf	??___ftge+5,f
  5198  12FB  0829               	movf	??___ftge+3,w
  5199  12FC  07A6               	addwf	??___ftge,f
  5200  12FD  082A               	movf	??___ftge+4,w
  5201  12FE  1803               	skipnc
  5202  12FF  0F2A               	incfsz	??___ftge+4,w
  5203  1300  2B02               	goto	u249_21
  5204  1301  2B03               	goto	u249_22
  5205  1302                     u249_21:	
  5206  1302  07A7               	addwf	??___ftge+1,f
  5207  1303                     u249_22:	
  5208  1303  082B               	movf	??___ftge+5,w
  5209  1304  1803               	skipnc
  5210  1305  0F2B               	incfsz	??___ftge+5,w
  5211  1306  2B08               	goto	u249_23
  5212  1307  2B09               	goto	u249_24
  5213  1308                     u249_23:	
  5214  1308  07A8               	addwf	??___ftge+2,f
  5215  1309                     u249_24:	
  5216  1309  0826               	movf	??___ftge,w
  5217  130A  00A3               	movwf	___ftge@ff2
  5218  130B  0827               	movf	??___ftge+1,w
  5219  130C  00A4               	movwf	___ftge@ff2+1
  5220  130D  0828               	movf	??___ftge+2,w
  5221  130E  00A5               	movwf	___ftge@ff2+2
  5222  130F                     i1l2326:	
  5223  130F  3080               	movlw	128
  5224  1310  06A2               	xorwf	___ftge@ff1+2,f
  5225  1311  3080               	movlw	128
  5226  1312  06A5               	xorwf	___ftge@ff2+2,f
  5227  1313  0825               	movf	___ftge@ff2+2,w
  5228  1314  0222               	subwf	___ftge@ff1+2,w
  5229  1315  1D03               	skipz
  5230  1316  0008               	return
  5231  1317  0824               	movf	___ftge@ff2+1,w
  5232  1318  0221               	subwf	___ftge@ff1+1,w
  5233  1319  1D03               	skipz
  5234  131A  0008               	return
  5235  131B  0823               	movf	___ftge@ff2,w
  5236  131C  0220               	subwf	___ftge@ff1,w
  5237  131D  0008               	return
  5238  131E                     __end_of___ftge:	
  5239                           
  5240                           	psect	text16
  5241  1523                     __ptext16:	
  5242 ;; *************** function ___ftdiv *****************
  5243 ;; Defined at:
  5244 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  f2              3    7[BANK0 ] float 
  5247 ;;  f1              3   10[BANK0 ] float 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  f3              3   18[BANK0 ] float 
  5250 ;;  sign            1   22[BANK0 ] unsigned char 
  5251 ;;  exp             1   21[BANK0 ] unsigned char 
  5252 ;;  cntr            1   17[BANK0 ] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  3    7[BANK0 ] float 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0, pclath, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5262 ;;      Params:         0       6       0       0       0
  5263 ;;      Locals:         0       6       0       0       0
  5264 ;;      Temps:          0       4       0       0       0
  5265 ;;      Totals:         0      16       0       0       0
  5266 ;;Total ram usage:       16 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; Hardware stack levels required when called:    1
  5269 ;; This function calls:
  5270 ;;		___ftpack
  5271 ;; This function is called by:
  5272 ;;		_trimf
  5273 ;;		_trapmf
  5274 ;;		_ISR
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           
  5279                           ;psect for function ___ftdiv
  5280  1523                     ___ftdiv:	
  5281                           
  5282                           ;incstack = 0
  5283                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5284  1523  1283               	bcf	3,5	;RP0=0, select bank0
  5285  1524  1303               	bcf	3,6	;RP1=0, select bank0
  5286  1525  082A               	movf	___ftdiv@f1,w
  5287  1526  00AD               	movwf	??___ftdiv
  5288  1527  082B               	movf	___ftdiv@f1+1,w
  5289  1528  00AE               	movwf	??___ftdiv+1
  5290  1529  082C               	movf	___ftdiv@f1+2,w
  5291  152A  00AF               	movwf	??___ftdiv+2
  5292  152B  1003               	clrc
  5293  152C  0D2E               	rlf	??___ftdiv+1,w
  5294  152D  0D2F               	rlf	??___ftdiv+2,w
  5295  152E  00B0               	movwf	??___ftdiv+3
  5296  152F  0830               	movf	??___ftdiv+3,w
  5297  1530  00B5               	movwf	___ftdiv@exp
  5298  1531  08B5               	movf	___ftdiv@exp,f
  5299  1532  1D03               	skipz
  5300  1533  2D3B               	goto	i1l2282
  5301  1534  3000               	movlw	0
  5302  1535  00A7               	movwf	?___ftdiv
  5303  1536  3000               	movlw	0
  5304  1537  00A8               	movwf	?___ftdiv+1
  5305  1538  3000               	movlw	0
  5306  1539  00A9               	movwf	?___ftdiv+2
  5307  153A  0008               	return
  5308  153B                     i1l2282:	
  5309  153B  0827               	movf	___ftdiv@f2,w
  5310  153C  00AD               	movwf	??___ftdiv
  5311  153D  0828               	movf	___ftdiv@f2+1,w
  5312  153E  00AE               	movwf	??___ftdiv+1
  5313  153F  0829               	movf	___ftdiv@f2+2,w
  5314  1540  00AF               	movwf	??___ftdiv+2
  5315  1541  1003               	clrc
  5316  1542  0D2E               	rlf	??___ftdiv+1,w
  5317  1543  0D2F               	rlf	??___ftdiv+2,w
  5318  1544  00B0               	movwf	??___ftdiv+3
  5319  1545  0830               	movf	??___ftdiv+3,w
  5320  1546  00B6               	movwf	___ftdiv@sign
  5321  1547  08B6               	movf	___ftdiv@sign,f
  5322  1548  1D03               	skipz
  5323  1549  2D51               	goto	i1l2288
  5324  154A  3000               	movlw	0
  5325  154B  00A7               	movwf	?___ftdiv
  5326  154C  3000               	movlw	0
  5327  154D  00A8               	movwf	?___ftdiv+1
  5328  154E  3000               	movlw	0
  5329  154F  00A9               	movwf	?___ftdiv+2
  5330  1550  0008               	return
  5331  1551                     i1l2288:	
  5332  1551  3000               	movlw	0
  5333  1552  00B2               	movwf	___ftdiv@f3
  5334  1553  3000               	movlw	0
  5335  1554  00B3               	movwf	___ftdiv@f3+1
  5336  1555  3000               	movlw	0
  5337  1556  00B4               	movwf	___ftdiv@f3+2
  5338  1557  3089               	movlw	137
  5339  1558  0736               	addwf	___ftdiv@sign,w
  5340  1559  00AD               	movwf	??___ftdiv
  5341  155A  082D               	movf	??___ftdiv,w
  5342  155B  02B5               	subwf	___ftdiv@exp,f
  5343  155C  082A               	movf	___ftdiv@f1,w
  5344  155D  00AD               	movwf	??___ftdiv
  5345  155E  082B               	movf	___ftdiv@f1+1,w
  5346  155F  00AE               	movwf	??___ftdiv+1
  5347  1560  082C               	movf	___ftdiv@f1+2,w
  5348  1561  00AF               	movwf	??___ftdiv+2
  5349  1562  3010               	movlw	16
  5350  1563                     u240_25:	
  5351  1563  1003               	clrc
  5352  1564  0CAF               	rrf	??___ftdiv+2,f
  5353  1565  0CAE               	rrf	??___ftdiv+1,f
  5354  1566  0CAD               	rrf	??___ftdiv,f
  5355  1567  3EFF               	addlw	-1
  5356  1568  1D03               	skipz
  5357  1569  2D63               	goto	u240_25
  5358  156A  082D               	movf	??___ftdiv,w
  5359  156B  00B0               	movwf	??___ftdiv+3
  5360  156C  0830               	movf	??___ftdiv+3,w
  5361  156D  00B6               	movwf	___ftdiv@sign
  5362  156E  0827               	movf	___ftdiv@f2,w
  5363  156F  00AD               	movwf	??___ftdiv
  5364  1570  0828               	movf	___ftdiv@f2+1,w
  5365  1571  00AE               	movwf	??___ftdiv+1
  5366  1572  0829               	movf	___ftdiv@f2+2,w
  5367  1573  00AF               	movwf	??___ftdiv+2
  5368  1574  3010               	movlw	16
  5369  1575                     u241_25:	
  5370  1575  1003               	clrc
  5371  1576  0CAF               	rrf	??___ftdiv+2,f
  5372  1577  0CAE               	rrf	??___ftdiv+1,f
  5373  1578  0CAD               	rrf	??___ftdiv,f
  5374  1579  3EFF               	addlw	-1
  5375  157A  1D03               	skipz
  5376  157B  2D75               	goto	u241_25
  5377  157C  082D               	movf	??___ftdiv,w
  5378  157D  00B0               	movwf	??___ftdiv+3
  5379  157E  0830               	movf	??___ftdiv+3,w
  5380  157F  06B6               	xorwf	___ftdiv@sign,f
  5381  1580  3080               	movlw	128
  5382  1581  00AD               	movwf	??___ftdiv
  5383  1582  082D               	movf	??___ftdiv,w
  5384  1583  05B6               	andwf	___ftdiv@sign,f
  5385  1584  17AB               	bsf	___ftdiv@f1+1,7
  5386  1585  30FF               	movlw	255
  5387  1586  05AA               	andwf	___ftdiv@f1,f
  5388  1587  30FF               	movlw	255
  5389  1588  05AB               	andwf	___ftdiv@f1+1,f
  5390  1589  3000               	movlw	0
  5391  158A  05AC               	andwf	___ftdiv@f1+2,f
  5392  158B  17A8               	bsf	___ftdiv@f2+1,7
  5393  158C  30FF               	movlw	255
  5394  158D  05A7               	andwf	___ftdiv@f2,f
  5395  158E  30FF               	movlw	255
  5396  158F  05A8               	andwf	___ftdiv@f2+1,f
  5397  1590  3000               	movlw	0
  5398  1591  05A9               	andwf	___ftdiv@f2+2,f
  5399  1592  3018               	movlw	24
  5400  1593  00AD               	movwf	??___ftdiv
  5401  1594  082D               	movf	??___ftdiv,w
  5402  1595  00B1               	movwf	___ftdiv@cntr
  5403  1596                     i1l2302:	
  5404  1596  3001               	movlw	1
  5405  1597                     u242_25:	
  5406  1597  1003               	clrc
  5407  1598  0DB2               	rlf	___ftdiv@f3,f
  5408  1599  0DB3               	rlf	___ftdiv@f3+1,f
  5409  159A  0DB4               	rlf	___ftdiv@f3+2,f
  5410  159B  3EFF               	addlw	-1
  5411  159C  1D03               	skipz
  5412  159D  2D97               	goto	u242_25
  5413  159E  0829               	movf	___ftdiv@f2+2,w
  5414  159F  022C               	subwf	___ftdiv@f1+2,w
  5415  15A0  1D03               	skipz
  5416  15A1  2DA8               	goto	u243_25
  5417  15A2  0828               	movf	___ftdiv@f2+1,w
  5418  15A3  022B               	subwf	___ftdiv@f1+1,w
  5419  15A4  1D03               	skipz
  5420  15A5  2DA8               	goto	u243_25
  5421  15A6  0827               	movf	___ftdiv@f2,w
  5422  15A7  022A               	subwf	___ftdiv@f1,w
  5423  15A8                     u243_25:	
  5424  15A8  1C03               	skipc
  5425  15A9  2DB5               	goto	i1l2310
  5426  15AA  0827               	movf	___ftdiv@f2,w
  5427  15AB  02AA               	subwf	___ftdiv@f1,f
  5428  15AC  0828               	movf	___ftdiv@f2+1,w
  5429  15AD  1C03               	skipc
  5430  15AE  0F28               	incfsz	___ftdiv@f2+1,w
  5431  15AF  02AB               	subwf	___ftdiv@f1+1,f
  5432  15B0  0829               	movf	___ftdiv@f2+2,w
  5433  15B1  1C03               	skipc
  5434  15B2  0A29               	incf	___ftdiv@f2+2,w
  5435  15B3  02AC               	subwf	___ftdiv@f1+2,f
  5436  15B4  1432               	bsf	___ftdiv@f3,0
  5437  15B5                     i1l2310:	
  5438  15B5  3001               	movlw	1
  5439  15B6                     u244_25:	
  5440  15B6  1003               	clrc
  5441  15B7  0DAA               	rlf	___ftdiv@f1,f
  5442  15B8  0DAB               	rlf	___ftdiv@f1+1,f
  5443  15B9  0DAC               	rlf	___ftdiv@f1+2,f
  5444  15BA  3EFF               	addlw	-1
  5445  15BB  1D03               	skipz
  5446  15BC  2DB6               	goto	u244_25
  5447  15BD  3001               	movlw	1
  5448  15BE  02B1               	subwf	___ftdiv@cntr,f
  5449  15BF  1D03               	btfss	3,2
  5450  15C0  2D96               	goto	i1l2302
  5451  15C1  0832               	movf	___ftdiv@f3,w
  5452  15C2  00F0               	movwf	___ftpack@arg
  5453  15C3  0833               	movf	___ftdiv@f3+1,w
  5454  15C4  00F1               	movwf	___ftpack@arg+1
  5455  15C5  0834               	movf	___ftdiv@f3+2,w
  5456  15C6  00F2               	movwf	___ftpack@arg+2
  5457  15C7  0835               	movf	___ftdiv@exp,w
  5458  15C8  00AD               	movwf	??___ftdiv
  5459  15C9  082D               	movf	??___ftdiv,w
  5460  15CA  00F3               	movwf	___ftpack@exp
  5461  15CB  0836               	movf	___ftdiv@sign,w
  5462  15CC  00AE               	movwf	??___ftdiv+1
  5463  15CD  082E               	movf	??___ftdiv+1,w
  5464  15CE  00F4               	movwf	___ftpack@sign
  5465  15CF  160A  118A  231E   	fcall	___ftpack
  5466  15D2  0870               	movf	?___ftpack,w
  5467  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  5468  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  5469  15D5  00A7               	movwf	?___ftdiv
  5470  15D6  0871               	movf	?___ftpack+1,w
  5471  15D7  00A8               	movwf	?___ftdiv+1
  5472  15D8  0872               	movf	?___ftpack+2,w
  5473  15D9  00A9               	movwf	?___ftdiv+2
  5474  15DA  0008               	return
  5475  15DB                     __end_of___ftdiv:	
  5476                           
  5477                           	psect	text17
  5478  15DB                     __ptext17:	
  5479 ;; *************** function ___ftadd *****************
  5480 ;; Defined at:
  5481 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  f1              3    8[COMMON] float 
  5484 ;;  f2              3   11[COMMON] float 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  exp1            1    6[BANK0 ] unsigned char 
  5487 ;;  exp2            1    5[BANK0 ] unsigned char 
  5488 ;;  sign            1    4[BANK0 ] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  3    8[COMMON] float 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0, pclath, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5498 ;;      Params:         6       0       0       0       0
  5499 ;;      Locals:         0       3       0       0       0
  5500 ;;      Temps:          0       4       0       0       0
  5501 ;;      Totals:         6       7       0       0       0
  5502 ;;Total ram usage:       13 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    1
  5505 ;; This function calls:
  5506 ;;		___ftpack
  5507 ;; This function is called by:
  5508 ;;		_trimf
  5509 ;;		_trapmf
  5510 ;;		_ISR
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function ___ftadd
  5516  15DB                     ___ftadd:	
  5517                           
  5518                           ;incstack = 0
  5519                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5520  15DB  0878               	movf	___ftadd@f1,w
  5521  15DC  1283               	bcf	3,5	;RP0=0, select bank0
  5522  15DD  1303               	bcf	3,6	;RP1=0, select bank0
  5523  15DE  00A0               	movwf	??___ftadd
  5524  15DF  0879               	movf	___ftadd@f1+1,w
  5525  15E0  00A1               	movwf	??___ftadd+1
  5526  15E1  087A               	movf	___ftadd@f1+2,w
  5527  15E2  00A2               	movwf	??___ftadd+2
  5528  15E3  1003               	clrc
  5529  15E4  0D21               	rlf	??___ftadd+1,w
  5530  15E5  0D22               	rlf	??___ftadd+2,w
  5531  15E6  00A3               	movwf	??___ftadd+3
  5532  15E7  0823               	movf	??___ftadd+3,w
  5533  15E8  00A6               	movwf	___ftadd@exp1
  5534  15E9  087B               	movf	___ftadd@f2,w
  5535  15EA  00A0               	movwf	??___ftadd
  5536  15EB  087C               	movf	___ftadd@f2+1,w
  5537  15EC  00A1               	movwf	??___ftadd+1
  5538  15ED  087D               	movf	___ftadd@f2+2,w
  5539  15EE  00A2               	movwf	??___ftadd+2
  5540  15EF  1003               	clrc
  5541  15F0  0D21               	rlf	??___ftadd+1,w
  5542  15F1  0D22               	rlf	??___ftadd+2,w
  5543  15F2  00A3               	movwf	??___ftadd+3
  5544  15F3  0823               	movf	??___ftadd+3,w
  5545  15F4  00A5               	movwf	___ftadd@exp2
  5546  15F5  0826               	movf	___ftadd@exp1,w
  5547  15F6  1903               	btfsc	3,2
  5548  15F7  2E04               	goto	i1l2212
  5549  15F8  0825               	movf	___ftadd@exp2,w
  5550  15F9  0226               	subwf	___ftadd@exp1,w
  5551  15FA  1803               	skipnc
  5552  15FB  2E0B               	goto	i1l2216
  5553  15FC  0326               	decf	___ftadd@exp1,w
  5554  15FD  3AFF               	xorlw	255
  5555  15FE  0725               	addwf	___ftadd@exp2,w
  5556  15FF  00A0               	movwf	??___ftadd
  5557  1600  3019               	movlw	25
  5558  1601  0220               	subwf	??___ftadd,w
  5559  1602  1C03               	skipc
  5560  1603  2E0B               	goto	i1l2216
  5561  1604                     i1l2212:	
  5562  1604  087B               	movf	___ftadd@f2,w
  5563  1605  00F8               	movwf	?___ftadd
  5564  1606  087C               	movf	___ftadd@f2+1,w
  5565  1607  00F9               	movwf	?___ftadd+1
  5566  1608  087D               	movf	___ftadd@f2+2,w
  5567  1609  00FA               	movwf	?___ftadd+2
  5568  160A  0008               	return
  5569  160B                     i1l2216:	
  5570  160B  0825               	movf	___ftadd@exp2,w
  5571  160C  1903               	btfsc	3,2
  5572  160D  0008               	return
  5573  160E  0826               	movf	___ftadd@exp1,w
  5574  160F  0225               	subwf	___ftadd@exp2,w
  5575  1610  1803               	skipnc
  5576  1611  2E1A               	goto	i1l2222
  5577  1612  0325               	decf	___ftadd@exp2,w
  5578  1613  3AFF               	xorlw	255
  5579  1614  0726               	addwf	___ftadd@exp1,w
  5580  1615  00A0               	movwf	??___ftadd
  5581  1616  3019               	movlw	25
  5582  1617  0220               	subwf	??___ftadd,w
  5583  1618  1803               	btfsc	3,0
  5584  1619  0008               	return
  5585  161A                     i1l2222:	
  5586  161A  3006               	movlw	6
  5587  161B  00A0               	movwf	??___ftadd
  5588  161C  0820               	movf	??___ftadd,w
  5589  161D  00A4               	movwf	___ftadd@sign
  5590  161E  1BFA               	btfsc	___ftadd@f1+2,7
  5591  161F  17A4               	bsf	___ftadd@sign,7
  5592  1620  1BFD               	btfsc	___ftadd@f2+2,7
  5593  1621  1724               	bsf	___ftadd@sign,6
  5594  1622  17F9               	bsf	___ftadd@f1+1,7
  5595  1623  30FF               	movlw	255
  5596  1624  05F8               	andwf	___ftadd@f1,f
  5597  1625  30FF               	movlw	255
  5598  1626  05F9               	andwf	___ftadd@f1+1,f
  5599  1627  3000               	movlw	0
  5600  1628  05FA               	andwf	___ftadd@f1+2,f
  5601  1629  17FC               	bsf	___ftadd@f2+1,7
  5602  162A  30FF               	movlw	255
  5603  162B  05FB               	andwf	___ftadd@f2,f
  5604  162C  30FF               	movlw	255
  5605  162D  05FC               	andwf	___ftadd@f2+1,f
  5606  162E  3000               	movlw	0
  5607  162F  05FD               	andwf	___ftadd@f2+2,f
  5608  1630  0825               	movf	___ftadd@exp2,w
  5609  1631  0226               	subwf	___ftadd@exp1,w
  5610  1632  1803               	skipnc
  5611  1633  2E5A               	goto	i1l2244
  5612  1634                     i1l2234:	
  5613  1634  3001               	movlw	1
  5614  1635                     u223_25:	
  5615  1635  1003               	clrc
  5616  1636  0DFB               	rlf	___ftadd@f2,f
  5617  1637  0DFC               	rlf	___ftadd@f2+1,f
  5618  1638  0DFD               	rlf	___ftadd@f2+2,f
  5619  1639  3EFF               	addlw	-1
  5620  163A  1D03               	skipz
  5621  163B  2E35               	goto	u223_25
  5622  163C  3001               	movlw	1
  5623  163D  02A5               	subwf	___ftadd@exp2,f
  5624  163E  0825               	movf	___ftadd@exp2,w
  5625  163F  0626               	xorwf	___ftadd@exp1,w
  5626  1640  1903               	skipnz
  5627  1641  2E55               	goto	i1l2242
  5628  1642  3001               	movlw	1
  5629  1643  02A4               	subwf	___ftadd@sign,f
  5630  1644  0824               	movf	___ftadd@sign,w
  5631  1645  3907               	andlw	7
  5632  1646  1903               	btfsc	3,2
  5633  1647  2E55               	goto	i1l2242
  5634  1648  2E34               	goto	i1l2234
  5635  1649                     i1l2240:	
  5636  1649  3001               	movlw	1
  5637  164A                     u226_25:	
  5638  164A  1003               	clrc
  5639  164B  0CFA               	rrf	___ftadd@f1+2,f
  5640  164C  0CF9               	rrf	___ftadd@f1+1,f
  5641  164D  0CF8               	rrf	___ftadd@f1,f
  5642  164E  3EFF               	addlw	-1
  5643  164F  1D03               	skipz
  5644  1650  2E4A               	goto	u226_25
  5645  1651  3001               	movlw	1
  5646  1652  00A0               	movwf	??___ftadd
  5647  1653  0820               	movf	??___ftadd,w
  5648  1654  07A6               	addwf	___ftadd@exp1,f
  5649  1655                     i1l2242:	
  5650  1655  0826               	movf	___ftadd@exp1,w
  5651  1656  0625               	xorwf	___ftadd@exp2,w
  5652  1657  1903               	btfsc	3,2
  5653  1658  2E83               	goto	i1l785
  5654  1659  2E49               	goto	i1l2240
  5655  165A                     i1l2244:	
  5656  165A  0826               	movf	___ftadd@exp1,w
  5657  165B  0225               	subwf	___ftadd@exp2,w
  5658  165C  1803               	skipnc
  5659  165D  2E83               	goto	i1l785
  5660  165E                     i1l2246:	
  5661  165E  3001               	movlw	1
  5662  165F                     u229_25:	
  5663  165F  1003               	clrc
  5664  1660  0DF8               	rlf	___ftadd@f1,f
  5665  1661  0DF9               	rlf	___ftadd@f1+1,f
  5666  1662  0DFA               	rlf	___ftadd@f1+2,f
  5667  1663  3EFF               	addlw	-1
  5668  1664  1D03               	skipz
  5669  1665  2E5F               	goto	u229_25
  5670  1666  3001               	movlw	1
  5671  1667  02A6               	subwf	___ftadd@exp1,f
  5672  1668  0825               	movf	___ftadd@exp2,w
  5673  1669  0626               	xorwf	___ftadd@exp1,w
  5674  166A  1903               	skipnz
  5675  166B  2E7F               	goto	i1l2254
  5676  166C  3001               	movlw	1
  5677  166D  02A4               	subwf	___ftadd@sign,f
  5678  166E  0824               	movf	___ftadd@sign,w
  5679  166F  3907               	andlw	7
  5680  1670  1903               	btfsc	3,2
  5681  1671  2E7F               	goto	i1l2254
  5682  1672  2E5E               	goto	i1l2246
  5683  1673                     i1l2252:	
  5684  1673  3001               	movlw	1
  5685  1674                     u232_25:	
  5686  1674  1003               	clrc
  5687  1675  0CFD               	rrf	___ftadd@f2+2,f
  5688  1676  0CFC               	rrf	___ftadd@f2+1,f
  5689  1677  0CFB               	rrf	___ftadd@f2,f
  5690  1678  3EFF               	addlw	-1
  5691  1679  1D03               	skipz
  5692  167A  2E74               	goto	u232_25
  5693  167B  3001               	movlw	1
  5694  167C  00A0               	movwf	??___ftadd
  5695  167D  0820               	movf	??___ftadd,w
  5696  167E  07A5               	addwf	___ftadd@exp2,f
  5697  167F                     i1l2254:	
  5698  167F  0826               	movf	___ftadd@exp1,w
  5699  1680  0625               	xorwf	___ftadd@exp2,w
  5700  1681  1D03               	skipz
  5701  1682  2E73               	goto	i1l2252
  5702  1683                     i1l785:	
  5703  1683  1FA4               	btfss	___ftadd@sign,7
  5704  1684  2E95               	goto	i1l2258
  5705  1685  30FF               	movlw	255
  5706  1686  06F8               	xorwf	___ftadd@f1,f
  5707  1687  30FF               	movlw	255
  5708  1688  06F9               	xorwf	___ftadd@f1+1,f
  5709  1689  30FF               	movlw	255
  5710  168A  06FA               	xorwf	___ftadd@f1+2,f
  5711  168B  3001               	movlw	1
  5712  168C  07F8               	addwf	___ftadd@f1,f
  5713  168D  3000               	movlw	0
  5714  168E  1803               	skipnc
  5715  168F  3001               	movlw	1
  5716  1690  07F9               	addwf	___ftadd@f1+1,f
  5717  1691  3000               	movlw	0
  5718  1692  1803               	skipnc
  5719  1693  3001               	movlw	1
  5720  1694  07FA               	addwf	___ftadd@f1+2,f
  5721  1695                     i1l2258:	
  5722  1695  1F24               	btfss	___ftadd@sign,6
  5723  1696  2EA7               	goto	i1l2262
  5724  1697  30FF               	movlw	255
  5725  1698  06FB               	xorwf	___ftadd@f2,f
  5726  1699  30FF               	movlw	255
  5727  169A  06FC               	xorwf	___ftadd@f2+1,f
  5728  169B  30FF               	movlw	255
  5729  169C  06FD               	xorwf	___ftadd@f2+2,f
  5730  169D  3001               	movlw	1
  5731  169E  07FB               	addwf	___ftadd@f2,f
  5732  169F  3000               	movlw	0
  5733  16A0  1803               	skipnc
  5734  16A1  3001               	movlw	1
  5735  16A2  07FC               	addwf	___ftadd@f2+1,f
  5736  16A3  3000               	movlw	0
  5737  16A4  1803               	skipnc
  5738  16A5  3001               	movlw	1
  5739  16A6  07FD               	addwf	___ftadd@f2+2,f
  5740  16A7                     i1l2262:	
  5741  16A7  01A4               	clrf	___ftadd@sign
  5742  16A8  0878               	movf	___ftadd@f1,w
  5743  16A9  07FB               	addwf	___ftadd@f2,f
  5744  16AA  0879               	movf	___ftadd@f1+1,w
  5745  16AB  1103               	clrz
  5746  16AC  1803               	skipnc
  5747  16AD  0A79               	incf	___ftadd@f1+1,w
  5748  16AE  1D03               	btfss	3,2
  5749  16AF  07FC               	addwf	___ftadd@f2+1,f
  5750  16B0  087A               	movf	___ftadd@f1+2,w
  5751  16B1  1103               	clrz
  5752  16B2  1803               	skipnc
  5753  16B3  0A7A               	incf	___ftadd@f1+2,w
  5754  16B4  1D03               	btfss	3,2
  5755  16B5  07FD               	addwf	___ftadd@f2+2,f
  5756  16B6  1FFD               	btfss	___ftadd@f2+2,7
  5757  16B7  2ECA               	goto	i1l2272
  5758  16B8  30FF               	movlw	255
  5759  16B9  06FB               	xorwf	___ftadd@f2,f
  5760  16BA  30FF               	movlw	255
  5761  16BB  06FC               	xorwf	___ftadd@f2+1,f
  5762  16BC  30FF               	movlw	255
  5763  16BD  06FD               	xorwf	___ftadd@f2+2,f
  5764  16BE  3001               	movlw	1
  5765  16BF  07FB               	addwf	___ftadd@f2,f
  5766  16C0  3000               	movlw	0
  5767  16C1  1803               	skipnc
  5768  16C2  3001               	movlw	1
  5769  16C3  07FC               	addwf	___ftadd@f2+1,f
  5770  16C4  3000               	movlw	0
  5771  16C5  1803               	skipnc
  5772  16C6  3001               	movlw	1
  5773  16C7  07FD               	addwf	___ftadd@f2+2,f
  5774  16C8  01A4               	clrf	___ftadd@sign
  5775  16C9  0AA4               	incf	___ftadd@sign,f
  5776  16CA                     i1l2272:	
  5777  16CA  087B               	movf	___ftadd@f2,w
  5778  16CB  00F0               	movwf	___ftpack@arg
  5779  16CC  087C               	movf	___ftadd@f2+1,w
  5780  16CD  00F1               	movwf	___ftpack@arg+1
  5781  16CE  087D               	movf	___ftadd@f2+2,w
  5782  16CF  00F2               	movwf	___ftpack@arg+2
  5783  16D0  0826               	movf	___ftadd@exp1,w
  5784  16D1  00A0               	movwf	??___ftadd
  5785  16D2  0820               	movf	??___ftadd,w
  5786  16D3  00F3               	movwf	___ftpack@exp
  5787  16D4  0824               	movf	___ftadd@sign,w
  5788  16D5  00A1               	movwf	??___ftadd+1
  5789  16D6  0821               	movf	??___ftadd+1,w
  5790  16D7  00F4               	movwf	___ftpack@sign
  5791  16D8  160A  118A  231E   	fcall	___ftpack
  5792  16DB  0870               	movf	?___ftpack,w
  5793  16DC  00F8               	movwf	?___ftadd
  5794  16DD  0871               	movf	?___ftpack+1,w
  5795  16DE  00F9               	movwf	?___ftadd+1
  5796  16DF  0872               	movf	?___ftpack+2,w
  5797  16E0  00FA               	movwf	?___ftadd+2
  5798  16E1  0008               	return
  5799  16E2                     __end_of___ftadd:	
  5800                           
  5801                           	psect	text18
  5802  122A                     __ptext18:	
  5803 ;; *************** function _send *****************
  5804 ;; Defined at:
  5805 ;;		line 106 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  index           1    3[COMMON] unsigned char 
  5810 ;;  checksum        1    2[COMMON] unsigned char 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;		None               void
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5820 ;;      Params:         0       0       0       0       0
  5821 ;;      Locals:         2       0       0       0       0
  5822 ;;      Temps:          1       0       0       0       0
  5823 ;;      Totals:         3       0       0       0       0
  5824 ;;Total ram usage:        3 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    1
  5827 ;; This function calls:
  5828 ;;		_USART_WriteChar
  5829 ;; This function is called by:
  5830 ;;		_ISR
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _send
  5836  122A                     _send:	
  5837                           
  5838                           ;main.c: 110: buffer[0] = '#';
  5839                           
  5840                           ;incstack = 0
  5841                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5842  122A  3023               	movlw	35
  5843  122B  00F1               	movwf	??_send
  5844  122C  0871               	movf	??_send,w
  5845  122D  1283               	bcf	3,5	;RP0=0, select bank0
  5846  122E  1303               	bcf	3,6	;RP1=0, select bank0
  5847  122F  00E1               	movwf	_buffer
  5848                           
  5849                           ;main.c: 111: buffer[1] = '$';
  5850  1230  3024               	movlw	36
  5851  1231  00F1               	movwf	??_send
  5852  1232  0871               	movf	??_send,w
  5853  1233  00E2               	movwf	_buffer+1
  5854                           
  5855                           ;main.c: 112: buffer[2] = ':';
  5856  1234  303A               	movlw	58
  5857  1235  00F1               	movwf	??_send
  5858  1236  0871               	movf	??_send,w
  5859  1237  00E3               	movwf	_buffer+2
  5860                           
  5861                           ;main.c: 115: buffer[3] = (rpm >> 8) & 0xFF;
  5862  1238  1683               	bsf	3,5	;RP0=1, select bank1
  5863  1239  1303               	bcf	3,6	;RP1=0, select bank1
  5864  123A  086C               	movf	(_rpm+1)^(0+128),w
  5865  123B  00F1               	movwf	??_send
  5866  123C  0871               	movf	??_send,w
  5867  123D  1283               	bcf	3,5	;RP0=0, select bank0
  5868  123E  1303               	bcf	3,6	;RP1=0, select bank0
  5869  123F  00E4               	movwf	_buffer+3
  5870                           
  5871                           ;main.c: 116: buffer[4] = rpm & 0xFF;
  5872  1240  1683               	bsf	3,5	;RP0=1, select bank1
  5873  1241  1303               	bcf	3,6	;RP1=0, select bank1
  5874  1242  086B               	movf	_rpm^(0+128),w
  5875  1243  00F1               	movwf	??_send
  5876  1244  0871               	movf	??_send,w
  5877  1245  1283               	bcf	3,5	;RP0=0, select bank0
  5878  1246  1303               	bcf	3,6	;RP1=0, select bank0
  5879  1247  00E5               	movwf	_buffer+4
  5880                           
  5881                           ;main.c: 117: buffer[5] = 0;
  5882  1248  01E6               	clrf	_buffer+5
  5883                           
  5884                           ;main.c: 119: unsigned char checksum = 0x00;
  5885  1249  01F2               	clrf	send@checksum
  5886                           
  5887                           ;main.c: 120: for (unsigned char index = 0; index < 6; index++)
  5888  124A  01F3               	clrf	send@index
  5889  124B  3006               	movlw	6
  5890  124C  0273               	subwf	send@index,w
  5891  124D  1803               	btfsc	3,0
  5892  124E  2A69               	goto	i1l2422
  5893  124F                     i1l2414:	
  5894                           
  5895                           ;main.c: 121: {
  5896                           ;main.c: 122: USART_WriteChar(buffer[index]);
  5897  124F  0873               	movf	send@index,w
  5898  1250  3E61               	addlw	_buffer& (0+255)
  5899  1251  0084               	movwf	4
  5900  1252  1383               	bcf	3,7	;select IRP bank0
  5901  1253  0800               	movf	0,w
  5902  1254  160A  118A  20CD  160A  118A  	fcall	_USART_WriteChar
  5903                           
  5904                           ;main.c: 123: checksum ^= buffer[index];
  5905  1259  0873               	movf	send@index,w
  5906  125A  3E61               	addlw	_buffer& (0+255)
  5907  125B  0084               	movwf	4
  5908  125C  1383               	bcf	3,7	;select IRP bank0
  5909  125D  0800               	movf	0,w
  5910  125E  00F1               	movwf	??_send
  5911  125F  0871               	movf	??_send,w
  5912  1260  06F2               	xorwf	send@checksum,f
  5913  1261  3001               	movlw	1
  5914  1262  00F1               	movwf	??_send
  5915  1263  0871               	movf	??_send,w
  5916  1264  07F3               	addwf	send@index,f
  5917  1265  3006               	movlw	6
  5918  1266  0273               	subwf	send@index,w
  5919  1267  1C03               	skipc
  5920  1268  2A4F               	goto	i1l2414
  5921  1269                     i1l2422:	
  5922                           
  5923                           ;main.c: 124: }
  5924                           ;main.c: 125: buffer[6] = checksum;
  5925  1269  0872               	movf	send@checksum,w
  5926  126A  00F1               	movwf	??_send
  5927  126B  0871               	movf	??_send,w
  5928  126C  1283               	bcf	3,5	;RP0=0, select bank0
  5929  126D  1303               	bcf	3,6	;RP1=0, select bank0
  5930  126E  00E7               	movwf	_buffer+6
  5931                           
  5932                           ;main.c: 126: USART_WriteChar(buffer[6]);
  5933  126F  0867               	movf	_buffer+6,w
  5934  1270  160A  118A  20CD   	fcall	_USART_WriteChar
  5935  1273  0008               	return
  5936  1274                     __end_of_send:	
  5937                           
  5938                           	psect	text19
  5939  082E                     __ptext19:	
  5940 ;; *************** function _abs *****************
  5941 ;; Defined at:
  5942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  a               2    0[COMMON] int 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;		None
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  2    0[COMMON] int 
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5956 ;;      Params:         2       0       0       0       0
  5957 ;;      Locals:         0       0       0       0       0
  5958 ;;      Temps:          2       0       0       0       0
  5959 ;;      Totals:         4       0       0       0       0
  5960 ;;Total ram usage:        4 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_ISR
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           
  5970                           ;psect for function _abs
  5971  082E                     _abs:	
  5972                           
  5973                           ;incstack = 0
  5974                           ; Regs used in _abs: [wreg+status,2+status,0]
  5975  082E  1FF1               	btfss	abs@a+1,7
  5976  082F  0008               	return
  5977  0830  0970               	comf	abs@a,w
  5978  0831  00F2               	movwf	??_abs
  5979  0832  0971               	comf	abs@a+1,w
  5980  0833  00F3               	movwf	??_abs+1
  5981  0834  0AF2               	incf	??_abs,f
  5982  0835  1903               	skipnz
  5983  0836  0AF3               	incf	??_abs+1,f
  5984  0837  0872               	movf	??_abs,w
  5985  0838  00F0               	movwf	?_abs
  5986  0839  0873               	movf	??_abs+1,w
  5987  083A  00F1               	movwf	?_abs+1
  5988  083B  0008               	return
  5989  083C                     __end_of_abs:	
  5990                           
  5991                           	psect	text20
  5992  1205                     __ptext20:	
  5993 ;; *************** function ___wmul *****************
  5994 ;; Defined at:
  5995 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  multiplier      2   53[BANK0 ] unsigned int 
  5998 ;;  multiplicand    2   55[BANK0 ] unsigned int 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  product         2   57[BANK0 ] unsigned int 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  2   53[BANK0 ] unsigned int 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6010 ;;      Params:         0       4       0       0       0
  6011 ;;      Locals:         0       2       0       0       0
  6012 ;;      Temps:          0       0       0       0       0
  6013 ;;      Totals:         0       6       0       0       0
  6014 ;;Total ram usage:        6 bytes
  6015 ;; Hardware stack levels used:    1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_ISR
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           
  6024                           ;psect for function ___wmul
  6025  1205                     ___wmul:	
  6026                           
  6027                           ;incstack = 0
  6028                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6029  1205  1283               	bcf	3,5	;RP0=0, select bank0
  6030  1206  1303               	bcf	3,6	;RP1=0, select bank0
  6031  1207  01D9               	clrf	___wmul@product
  6032  1208  01DA               	clrf	___wmul@product+1
  6033  1209                     i1l2536:	
  6034  1209  1C55               	btfss	___wmul@multiplier,0
  6035  120A  2A11               	goto	i1l591
  6036  120B  0857               	movf	___wmul@multiplicand,w
  6037  120C  07D9               	addwf	___wmul@product,f
  6038  120D  1803               	skipnc
  6039  120E  0ADA               	incf	___wmul@product+1,f
  6040  120F  0858               	movf	___wmul@multiplicand+1,w
  6041  1210  07DA               	addwf	___wmul@product+1,f
  6042  1211                     i1l591:	
  6043  1211  3001               	movlw	1
  6044  1212                     u274_25:	
  6045  1212  1003               	clrc
  6046  1213  0DD7               	rlf	___wmul@multiplicand,f
  6047  1214  0DD8               	rlf	___wmul@multiplicand+1,f
  6048  1215  3EFF               	addlw	-1
  6049  1216  1D03               	skipz
  6050  1217  2A12               	goto	u274_25
  6051  1218  3001               	movlw	1
  6052  1219                     u275_25:	
  6053  1219  1003               	clrc
  6054  121A  0CD6               	rrf	___wmul@multiplier+1,f
  6055  121B  0CD5               	rrf	___wmul@multiplier,f
  6056  121C  3EFF               	addlw	-1
  6057  121D  1D03               	skipz
  6058  121E  2A19               	goto	u275_25
  6059  121F  0856               	movf	___wmul@multiplier+1,w
  6060  1220  0455               	iorwf	___wmul@multiplier,w
  6061  1221  1D03               	skipz
  6062  1222  2A09               	goto	i1l2536
  6063  1223  085A               	movf	___wmul@product+1,w
  6064  1224  01D6               	clrf	?___wmul+1
  6065  1225  07D6               	addwf	?___wmul+1,f
  6066  1226  0859               	movf	___wmul@product,w
  6067  1227  01D5               	clrf	?___wmul
  6068  1228  07D5               	addwf	?___wmul,f
  6069  1229  0008               	return
  6070  122A                     __end_of___wmul:	
  6071                           
  6072                           	psect	text21
  6073  111B                     __ptext21:	
  6074 ;; *************** function ___lwtoft *****************
  6075 ;; Defined at:
  6076 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  c               2    8[COMMON] unsigned int 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  3    8[COMMON] float 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0, pclath, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6090 ;;      Params:         3       0       0       0       0
  6091 ;;      Locals:         0       0       0       0       0
  6092 ;;      Temps:          1       0       0       0       0
  6093 ;;      Totals:         4       0       0       0       0
  6094 ;;Total ram usage:        4 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    1
  6097 ;; This function calls:
  6098 ;;		___ftpack
  6099 ;; This function is called by:
  6100 ;;		_ISR
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function ___lwtoft
  6106  111B                     ___lwtoft:	
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6110  111B  0878               	movf	___lwtoft@c,w
  6111  111C  00F0               	movwf	___ftpack@arg
  6112  111D  0879               	movf	___lwtoft@c+1,w
  6113  111E  00F1               	movwf	___ftpack@arg+1
  6114  111F  01F2               	clrf	___ftpack@arg+2
  6115  1120  308E               	movlw	142
  6116  1121  00FB               	movwf	??___lwtoft
  6117  1122  087B               	movf	??___lwtoft,w
  6118  1123  00F3               	movwf	___ftpack@exp
  6119  1124  01F4               	clrf	___ftpack@sign
  6120  1125  160A  118A  231E   	fcall	___ftpack
  6121  1128  0870               	movf	?___ftpack,w
  6122  1129  00F8               	movwf	?___lwtoft
  6123  112A  0871               	movf	?___ftpack+1,w
  6124  112B  00F9               	movwf	?___lwtoft+1
  6125  112C  0872               	movf	?___ftpack+2,w
  6126  112D  00FA               	movwf	?___lwtoft+2
  6127  112E  0008               	return
  6128  112F                     __end_of___lwtoft:	
  6129                           
  6130                           	psect	text22
  6131  1406                     __ptext22:	
  6132 ;; *************** function ___fttol *****************
  6133 ;; Defined at:
  6134 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  f1              3   39[BANK0 ] float 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  lval            4   48[BANK0 ] unsigned long 
  6139 ;;  exp1            1   52[BANK0 ] unsigned char 
  6140 ;;  sign1           1   47[BANK0 ] unsigned char 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  4   39[BANK0 ] long 
  6143 ;; Registers used:
  6144 ;;		wreg, status,2, status,0
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6150 ;;      Params:         0       4       0       0       0
  6151 ;;      Locals:         0       6       0       0       0
  6152 ;;      Temps:          0       4       0       0       0
  6153 ;;      Totals:         0      14       0       0       0
  6154 ;;Total ram usage:       14 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_ISR
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function ___fttol
  6165  1406                     ___fttol:	
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6169  1406  1283               	bcf	3,5	;RP0=0, select bank0
  6170  1407  1303               	bcf	3,6	;RP1=0, select bank0
  6171  1408  0847               	movf	___fttol@f1,w
  6172  1409  00CB               	movwf	??___fttol
  6173  140A  0848               	movf	___fttol@f1+1,w
  6174  140B  00CC               	movwf	??___fttol+1
  6175  140C  0849               	movf	___fttol@f1+2,w
  6176  140D  00CD               	movwf	??___fttol+2
  6177  140E  1003               	clrc
  6178  140F  0D4C               	rlf	??___fttol+1,w
  6179  1410  0D4D               	rlf	??___fttol+2,w
  6180  1411  00CE               	movwf	??___fttol+3
  6181  1412  084E               	movf	??___fttol+3,w
  6182  1413  00D4               	movwf	___fttol@exp1
  6183  1414  08D4               	movf	___fttol@exp1,f
  6184  1415  1D03               	skipz
  6185  1416  2C20               	goto	i1l2630
  6186  1417  3000               	movlw	0
  6187  1418  00CA               	movwf	?___fttol+3
  6188  1419  3000               	movlw	0
  6189  141A  00C9               	movwf	?___fttol+2
  6190  141B  3000               	movlw	0
  6191  141C  00C8               	movwf	?___fttol+1
  6192  141D  3000               	movlw	0
  6193  141E  00C7               	movwf	?___fttol
  6194  141F  0008               	return
  6195  1420                     i1l2630:	
  6196  1420  0847               	movf	___fttol@f1,w
  6197  1421  00CB               	movwf	??___fttol
  6198  1422  0848               	movf	___fttol@f1+1,w
  6199  1423  00CC               	movwf	??___fttol+1
  6200  1424  0849               	movf	___fttol@f1+2,w
  6201  1425  00CD               	movwf	??___fttol+2
  6202  1426  3017               	movlw	23
  6203  1427                     u295_25:	
  6204  1427  1003               	clrc
  6205  1428  0CCD               	rrf	??___fttol+2,f
  6206  1429  0CCC               	rrf	??___fttol+1,f
  6207  142A  0CCB               	rrf	??___fttol,f
  6208  142B  3EFF               	addlw	-1
  6209  142C  1D03               	skipz
  6210  142D  2C27               	goto	u295_25
  6211  142E  084B               	movf	??___fttol,w
  6212  142F  00CE               	movwf	??___fttol+3
  6213  1430  084E               	movf	??___fttol+3,w
  6214  1431  00CF               	movwf	___fttol@sign1
  6215  1432  17C8               	bsf	___fttol@f1+1,7
  6216  1433  30FF               	movlw	255
  6217  1434  05C7               	andwf	___fttol@f1,f
  6218  1435  30FF               	movlw	255
  6219  1436  05C8               	andwf	___fttol@f1+1,f
  6220  1437  3000               	movlw	0
  6221  1438  05C9               	andwf	___fttol@f1+2,f
  6222  1439  0847               	movf	___fttol@f1,w
  6223  143A  00D0               	movwf	___fttol@lval
  6224  143B  0848               	movf	___fttol@f1+1,w
  6225  143C  00D1               	movwf	___fttol@lval+1
  6226  143D  0849               	movf	___fttol@f1+2,w
  6227  143E  00D2               	movwf	___fttol@lval+2
  6228  143F  01D3               	clrf	___fttol@lval+3
  6229  1440  308E               	movlw	142
  6230  1441  02D4               	subwf	___fttol@exp1,f
  6231  1442  1FD4               	btfss	___fttol@exp1,7
  6232  1443  2C62               	goto	i1l2650
  6233  1444  0854               	movf	___fttol@exp1,w
  6234  1445  3A80               	xorlw	128
  6235  1446  3E8F               	addlw	143
  6236  1447  1803               	skipnc
  6237  1448  2C52               	goto	i1l2648
  6238  1449  3000               	movlw	0
  6239  144A  00CA               	movwf	?___fttol+3
  6240  144B  3000               	movlw	0
  6241  144C  00C9               	movwf	?___fttol+2
  6242  144D  3000               	movlw	0
  6243  144E  00C8               	movwf	?___fttol+1
  6244  144F  3000               	movlw	0
  6245  1450  00C7               	movwf	?___fttol
  6246  1451  0008               	return
  6247  1452                     i1l2648:	
  6248  1452  3001               	movlw	1
  6249  1453                     u298_25:	
  6250  1453  1003               	clrc
  6251  1454  0CD3               	rrf	___fttol@lval+3,f
  6252  1455  0CD2               	rrf	___fttol@lval+2,f
  6253  1456  0CD1               	rrf	___fttol@lval+1,f
  6254  1457  0CD0               	rrf	___fttol@lval,f
  6255  1458  3EFF               	addlw	-1
  6256  1459  1D03               	skipz
  6257  145A  2C53               	goto	u298_25
  6258  145B  3001               	movlw	1
  6259  145C  00CB               	movwf	??___fttol
  6260  145D  084B               	movf	??___fttol,w
  6261  145E  07D4               	addwf	___fttol@exp1,f
  6262  145F  1903               	btfsc	3,2
  6263  1460  2C7D               	goto	i1l2660
  6264  1461  2C52               	goto	i1l2648
  6265  1462                     i1l2650:	
  6266  1462  3018               	movlw	24
  6267  1463  0254               	subwf	___fttol@exp1,w
  6268  1464  1C03               	skipc
  6269  1465  2C7A               	goto	i1l2658
  6270  1466  3000               	movlw	0
  6271  1467  00CA               	movwf	?___fttol+3
  6272  1468  3000               	movlw	0
  6273  1469  00C9               	movwf	?___fttol+2
  6274  146A  3000               	movlw	0
  6275  146B  00C8               	movwf	?___fttol+1
  6276  146C  3000               	movlw	0
  6277  146D  00C7               	movwf	?___fttol
  6278  146E  0008               	return
  6279  146F                     i1l2656:	
  6280  146F  3001               	movlw	1
  6281  1470  00CB               	movwf	??___fttol
  6282  1471                     u301_25:	
  6283  1471  1003               	clrc
  6284  1472  0DD0               	rlf	___fttol@lval,f
  6285  1473  0DD1               	rlf	___fttol@lval+1,f
  6286  1474  0DD2               	rlf	___fttol@lval+2,f
  6287  1475  0DD3               	rlf	___fttol@lval+3,f
  6288  1476  0BCB               	decfsz	??___fttol,f
  6289  1477  2C71               	goto	u301_25
  6290  1478  3001               	movlw	1
  6291  1479  02D4               	subwf	___fttol@exp1,f
  6292  147A                     i1l2658:	
  6293  147A  08D4               	movf	___fttol@exp1,f
  6294  147B  1D03               	skipz
  6295  147C  2C6F               	goto	i1l2656
  6296  147D                     i1l2660:	
  6297  147D  084F               	movf	___fttol@sign1,w
  6298  147E  1903               	btfsc	3,2
  6299  147F  2C8B               	goto	i1l2664
  6300  1480  09D0               	comf	___fttol@lval,f
  6301  1481  09D1               	comf	___fttol@lval+1,f
  6302  1482  09D2               	comf	___fttol@lval+2,f
  6303  1483  09D3               	comf	___fttol@lval+3,f
  6304  1484  0AD0               	incf	___fttol@lval,f
  6305  1485  1903               	skipnz
  6306  1486  0AD1               	incf	___fttol@lval+1,f
  6307  1487  1903               	skipnz
  6308  1488  0AD2               	incf	___fttol@lval+2,f
  6309  1489  1903               	skipnz
  6310  148A  0AD3               	incf	___fttol@lval+3,f
  6311  148B                     i1l2664:	
  6312  148B  0853               	movf	___fttol@lval+3,w
  6313  148C  00CA               	movwf	?___fttol+3
  6314  148D  0852               	movf	___fttol@lval+2,w
  6315  148E  00C9               	movwf	?___fttol+2
  6316  148F  0851               	movf	___fttol@lval+1,w
  6317  1490  00C8               	movwf	?___fttol+1
  6318  1491  0850               	movf	___fttol@lval,w
  6319  1492  00C7               	movwf	?___fttol
  6320  1493  0008               	return
  6321  1494                     __end_of___fttol:	
  6322                           
  6323                           	psect	text23
  6324  072B                     __ptext23:	
  6325 ;; *************** function ___ftmul *****************
  6326 ;; Defined at:
  6327 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  f1              3   23[BANK0 ] float 
  6330 ;;  f2              3   26[BANK0 ] float 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  f3_as_produc    3   34[BANK0 ] unsigned um
  6333 ;;  sign            1   38[BANK0 ] unsigned char 
  6334 ;;  cntr            1   37[BANK0 ] unsigned char 
  6335 ;;  exp             1   33[BANK0 ] unsigned char 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  3   23[BANK0 ] float 
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0, pclath, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6345 ;;      Params:         0       6       0       0       0
  6346 ;;      Locals:         0       6       0       0       0
  6347 ;;      Temps:          0       4       0       0       0
  6348 ;;      Totals:         0      16       0       0       0
  6349 ;;Total ram usage:       16 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    1
  6352 ;; This function calls:
  6353 ;;		___ftpack
  6354 ;; This function is called by:
  6355 ;;		_ISR
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           
  6360                           ;psect for function ___ftmul
  6361  072B                     ___ftmul:	
  6362                           
  6363                           ;incstack = 0
  6364                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6365  072B  1283               	bcf	3,5	;RP0=0, select bank0
  6366  072C  1303               	bcf	3,6	;RP1=0, select bank0
  6367  072D  0837               	movf	___ftmul@f1,w
  6368  072E  00BD               	movwf	??___ftmul
  6369  072F  0838               	movf	___ftmul@f1+1,w
  6370  0730  00BE               	movwf	??___ftmul+1
  6371  0731  0839               	movf	___ftmul@f1+2,w
  6372  0732  00BF               	movwf	??___ftmul+2
  6373  0733  1003               	clrc
  6374  0734  0D3E               	rlf	??___ftmul+1,w
  6375  0735  0D3F               	rlf	??___ftmul+2,w
  6376  0736  00C0               	movwf	??___ftmul+3
  6377  0737  0840               	movf	??___ftmul+3,w
  6378  0738  00C1               	movwf	___ftmul@exp
  6379  0739  08C1               	movf	___ftmul@exp,f
  6380  073A  1D03               	skipz
  6381  073B  2F43               	goto	i1l2580
  6382  073C  3000               	movlw	0
  6383  073D  00B7               	movwf	?___ftmul
  6384  073E  3000               	movlw	0
  6385  073F  00B8               	movwf	?___ftmul+1
  6386  0740  3000               	movlw	0
  6387  0741  00B9               	movwf	?___ftmul+2
  6388  0742  0008               	return
  6389  0743                     i1l2580:	
  6390  0743  083A               	movf	___ftmul@f2,w
  6391  0744  00BD               	movwf	??___ftmul
  6392  0745  083B               	movf	___ftmul@f2+1,w
  6393  0746  00BE               	movwf	??___ftmul+1
  6394  0747  083C               	movf	___ftmul@f2+2,w
  6395  0748  00BF               	movwf	??___ftmul+2
  6396  0749  1003               	clrc
  6397  074A  0D3E               	rlf	??___ftmul+1,w
  6398  074B  0D3F               	rlf	??___ftmul+2,w
  6399  074C  00C0               	movwf	??___ftmul+3
  6400  074D  0840               	movf	??___ftmul+3,w
  6401  074E  00C6               	movwf	___ftmul@sign
  6402  074F  08C6               	movf	___ftmul@sign,f
  6403  0750  1D03               	skipz
  6404  0751  2F59               	goto	i1l2586
  6405  0752  3000               	movlw	0
  6406  0753  00B7               	movwf	?___ftmul
  6407  0754  3000               	movlw	0
  6408  0755  00B8               	movwf	?___ftmul+1
  6409  0756  3000               	movlw	0
  6410  0757  00B9               	movwf	?___ftmul+2
  6411  0758  0008               	return
  6412  0759                     i1l2586:	
  6413  0759  0846               	movf	___ftmul@sign,w
  6414  075A  3E7B               	addlw	123
  6415  075B  00BD               	movwf	??___ftmul
  6416  075C  083D               	movf	??___ftmul,w
  6417  075D  07C1               	addwf	___ftmul@exp,f
  6418  075E  0837               	movf	___ftmul@f1,w
  6419  075F  00BD               	movwf	??___ftmul
  6420  0760  0838               	movf	___ftmul@f1+1,w
  6421  0761  00BE               	movwf	??___ftmul+1
  6422  0762  0839               	movf	___ftmul@f1+2,w
  6423  0763  00BF               	movwf	??___ftmul+2
  6424  0764  3010               	movlw	16
  6425  0765                     u282_25:	
  6426  0765  1003               	clrc
  6427  0766  0CBF               	rrf	??___ftmul+2,f
  6428  0767  0CBE               	rrf	??___ftmul+1,f
  6429  0768  0CBD               	rrf	??___ftmul,f
  6430  0769  3EFF               	addlw	-1
  6431  076A  1D03               	skipz
  6432  076B  2F65               	goto	u282_25
  6433  076C  083D               	movf	??___ftmul,w
  6434  076D  00C0               	movwf	??___ftmul+3
  6435  076E  0840               	movf	??___ftmul+3,w
  6436  076F  00C6               	movwf	___ftmul@sign
  6437  0770  083A               	movf	___ftmul@f2,w
  6438  0771  00BD               	movwf	??___ftmul
  6439  0772  083B               	movf	___ftmul@f2+1,w
  6440  0773  00BE               	movwf	??___ftmul+1
  6441  0774  083C               	movf	___ftmul@f2+2,w
  6442  0775  00BF               	movwf	??___ftmul+2
  6443  0776  3010               	movlw	16
  6444  0777                     u283_25:	
  6445  0777  1003               	clrc
  6446  0778  0CBF               	rrf	??___ftmul+2,f
  6447  0779  0CBE               	rrf	??___ftmul+1,f
  6448  077A  0CBD               	rrf	??___ftmul,f
  6449  077B  3EFF               	addlw	-1
  6450  077C  1D03               	skipz
  6451  077D  2F77               	goto	u283_25
  6452  077E  083D               	movf	??___ftmul,w
  6453  077F  00C0               	movwf	??___ftmul+3
  6454  0780  0840               	movf	??___ftmul+3,w
  6455  0781  06C6               	xorwf	___ftmul@sign,f
  6456  0782  3080               	movlw	128
  6457  0783  00BD               	movwf	??___ftmul
  6458  0784  083D               	movf	??___ftmul,w
  6459  0785  05C6               	andwf	___ftmul@sign,f
  6460  0786  17B8               	bsf	___ftmul@f1+1,7
  6461  0787  17BB               	bsf	___ftmul@f2+1,7
  6462  0788  30FF               	movlw	255
  6463  0789  05BA               	andwf	___ftmul@f2,f
  6464  078A  30FF               	movlw	255
  6465  078B  05BB               	andwf	___ftmul@f2+1,f
  6466  078C  3000               	movlw	0
  6467  078D  05BC               	andwf	___ftmul@f2+2,f
  6468  078E  3000               	movlw	0
  6469  078F  00C2               	movwf	___ftmul@f3_as_product
  6470  0790  3000               	movlw	0
  6471  0791  00C3               	movwf	___ftmul@f3_as_product+1
  6472  0792  3000               	movlw	0
  6473  0793  00C4               	movwf	___ftmul@f3_as_product+2
  6474  0794  3007               	movlw	7
  6475  0795  00BD               	movwf	??___ftmul
  6476  0796  083D               	movf	??___ftmul,w
  6477  0797  00C5               	movwf	___ftmul@cntr
  6478  0798                     i1l2598:	
  6479  0798  1C37               	btfss	___ftmul@f1,0
  6480  0799  2FA8               	goto	i1l2602
  6481  079A  083A               	movf	___ftmul@f2,w
  6482  079B  07C2               	addwf	___ftmul@f3_as_product,f
  6483  079C  083B               	movf	___ftmul@f2+1,w
  6484  079D  1103               	clrz
  6485  079E  1803               	skipnc
  6486  079F  0A3B               	incf	___ftmul@f2+1,w
  6487  07A0  1D03               	btfss	3,2
  6488  07A1  07C3               	addwf	___ftmul@f3_as_product+1,f
  6489  07A2  083C               	movf	___ftmul@f2+2,w
  6490  07A3  1103               	clrz
  6491  07A4  1803               	skipnc
  6492  07A5  0A3C               	incf	___ftmul@f2+2,w
  6493  07A6  1D03               	btfss	3,2
  6494  07A7  07C4               	addwf	___ftmul@f3_as_product+2,f
  6495  07A8                     i1l2602:	
  6496  07A8  3001               	movlw	1
  6497  07A9                     u286_25:	
  6498  07A9  1003               	clrc
  6499  07AA  0CB9               	rrf	___ftmul@f1+2,f
  6500  07AB  0CB8               	rrf	___ftmul@f1+1,f
  6501  07AC  0CB7               	rrf	___ftmul@f1,f
  6502  07AD  3EFF               	addlw	-1
  6503  07AE  1D03               	skipz
  6504  07AF  2FA9               	goto	u286_25
  6505  07B0  3001               	movlw	1
  6506  07B1                     u287_25:	
  6507  07B1  1003               	clrc
  6508  07B2  0DBA               	rlf	___ftmul@f2,f
  6509  07B3  0DBB               	rlf	___ftmul@f2+1,f
  6510  07B4  0DBC               	rlf	___ftmul@f2+2,f
  6511  07B5  3EFF               	addlw	-1
  6512  07B6  1D03               	skipz
  6513  07B7  2FB1               	goto	u287_25
  6514  07B8  3001               	movlw	1
  6515  07B9  02C5               	subwf	___ftmul@cntr,f
  6516  07BA  1D03               	btfss	3,2
  6517  07BB  2F98               	goto	i1l2598
  6518  07BC  3009               	movlw	9
  6519  07BD  00BD               	movwf	??___ftmul
  6520  07BE  083D               	movf	??___ftmul,w
  6521  07BF  00C5               	movwf	___ftmul@cntr
  6522  07C0                     i1l2610:	
  6523  07C0  1C37               	btfss	___ftmul@f1,0
  6524  07C1  2FD0               	goto	i1l2614
  6525  07C2  083A               	movf	___ftmul@f2,w
  6526  07C3  07C2               	addwf	___ftmul@f3_as_product,f
  6527  07C4  083B               	movf	___ftmul@f2+1,w
  6528  07C5  1103               	clrz
  6529  07C6  1803               	skipnc
  6530  07C7  0A3B               	incf	___ftmul@f2+1,w
  6531  07C8  1D03               	btfss	3,2
  6532  07C9  07C3               	addwf	___ftmul@f3_as_product+1,f
  6533  07CA  083C               	movf	___ftmul@f2+2,w
  6534  07CB  1103               	clrz
  6535  07CC  1803               	skipnc
  6536  07CD  0A3C               	incf	___ftmul@f2+2,w
  6537  07CE  1D03               	btfss	3,2
  6538  07CF  07C4               	addwf	___ftmul@f3_as_product+2,f
  6539  07D0                     i1l2614:	
  6540  07D0  3001               	movlw	1
  6541  07D1                     u291_25:	
  6542  07D1  1003               	clrc
  6543  07D2  0CB9               	rrf	___ftmul@f1+2,f
  6544  07D3  0CB8               	rrf	___ftmul@f1+1,f
  6545  07D4  0CB7               	rrf	___ftmul@f1,f
  6546  07D5  3EFF               	addlw	-1
  6547  07D6  1D03               	skipz
  6548  07D7  2FD1               	goto	u291_25
  6549  07D8  3001               	movlw	1
  6550  07D9                     u292_25:	
  6551  07D9  1003               	clrc
  6552  07DA  0CC4               	rrf	___ftmul@f3_as_product+2,f
  6553  07DB  0CC3               	rrf	___ftmul@f3_as_product+1,f
  6554  07DC  0CC2               	rrf	___ftmul@f3_as_product,f
  6555  07DD  3EFF               	addlw	-1
  6556  07DE  1D03               	skipz
  6557  07DF  2FD9               	goto	u292_25
  6558  07E0  3001               	movlw	1
  6559  07E1  02C5               	subwf	___ftmul@cntr,f
  6560  07E2  1D03               	btfss	3,2
  6561  07E3  2FC0               	goto	i1l2610
  6562  07E4  0842               	movf	___ftmul@f3_as_product,w
  6563  07E5  00F0               	movwf	___ftpack@arg
  6564  07E6  0843               	movf	___ftmul@f3_as_product+1,w
  6565  07E7  00F1               	movwf	___ftpack@arg+1
  6566  07E8  0844               	movf	___ftmul@f3_as_product+2,w
  6567  07E9  00F2               	movwf	___ftpack@arg+2
  6568  07EA  0841               	movf	___ftmul@exp,w
  6569  07EB  00BD               	movwf	??___ftmul
  6570  07EC  083D               	movf	??___ftmul,w
  6571  07ED  00F3               	movwf	___ftpack@exp
  6572  07EE  0846               	movf	___ftmul@sign,w
  6573  07EF  00BE               	movwf	??___ftmul+1
  6574  07F0  083E               	movf	??___ftmul+1,w
  6575  07F1  00F4               	movwf	___ftpack@sign
  6576  07F2  160A  118A  231E   	fcall	___ftpack
  6577  07F5  0870               	movf	?___ftpack,w
  6578  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  6579  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  6580  07F8  00B7               	movwf	?___ftmul
  6581  07F9  0871               	movf	?___ftpack+1,w
  6582  07FA  00B8               	movwf	?___ftmul+1
  6583  07FB  0872               	movf	?___ftpack+2,w
  6584  07FC  00B9               	movwf	?___ftmul+2
  6585  07FD  0008               	return
  6586  07FE                     __end_of___ftmul:	
  6587                           
  6588                           	psect	text24
  6589  10F8                     __ptext24:	
  6590 ;; *************** function ___bmul *****************
  6591 ;; Defined at:
  6592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  multiplier      1    wreg     unsigned char 
  6595 ;;  multiplicand    1    0[COMMON] unsigned char 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  multiplier      1    3[COMMON] unsigned char 
  6598 ;;  product         1    2[COMMON] unsigned char 
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  1    wreg      unsigned char 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6608 ;;      Params:         1       0       0       0       0
  6609 ;;      Locals:         2       0       0       0       0
  6610 ;;      Temps:          1       0       0       0       0
  6611 ;;      Totals:         4       0       0       0       0
  6612 ;;Total ram usage:        4 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_ISR
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           
  6622                           ;psect for function ___bmul
  6623  10F8                     ___bmul:	
  6624                           
  6625                           ;incstack = 0
  6626                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6627                           ;___bmul@multiplier stored from wreg
  6628  10F8  00F3               	movwf	___bmul@multiplier
  6629  10F9  01F2               	clrf	___bmul@product
  6630  10FA                     i1l2548:	
  6631  10FA  1C73               	btfss	___bmul@multiplier,0
  6632  10FB  2900               	goto	i1l2552
  6633  10FC  0870               	movf	___bmul@multiplicand,w
  6634  10FD  00F1               	movwf	??___bmul
  6635  10FE  0871               	movf	??___bmul,w
  6636  10FF  07F2               	addwf	___bmul@product,f
  6637  1100                     i1l2552:	
  6638  1100  1003               	clrc
  6639  1101  0DF0               	rlf	___bmul@multiplicand,f
  6640  1102  1003               	clrc
  6641  1103  0CF3               	rrf	___bmul@multiplier,f
  6642  1104  08F3               	movf	___bmul@multiplier,f
  6643  1105  1D03               	skipz
  6644  1106  28FA               	goto	i1l2548
  6645  1107  0872               	movf	___bmul@product,w
  6646  1108  0008               	return
  6647  1109                     __end_of___bmul:	
  6648                           
  6649                           	psect	text25
  6650  117E                     __ptext25:	
  6651 ;; *************** function ___awtoft *****************
  6652 ;; Defined at:
  6653 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  c               2    8[COMMON] int 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  sign            1   13[COMMON] unsigned char 
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  3    8[COMMON] float 
  6660 ;; Registers used:
  6661 ;;		wreg, status,2, status,0, pclath, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6667 ;;      Params:         3       0       0       0       0
  6668 ;;      Locals:         1       0       0       0       0
  6669 ;;      Temps:          2       0       0       0       0
  6670 ;;      Totals:         6       0       0       0       0
  6671 ;;Total ram usage:        6 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    1
  6674 ;; This function calls:
  6675 ;;		___ftpack
  6676 ;; This function is called by:
  6677 ;;		_ISR
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           
  6682                           ;psect for function ___awtoft
  6683  117E                     ___awtoft:	
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6687  117E  01FD               	clrf	___awtoft@sign
  6688  117F  1FF9               	btfss	___awtoft@c+1,7
  6689  1180  2988               	goto	i1l2570
  6690  1181  09F8               	comf	___awtoft@c,f
  6691  1182  09F9               	comf	___awtoft@c+1,f
  6692  1183  0AF8               	incf	___awtoft@c,f
  6693  1184  1903               	skipnz
  6694  1185  0AF9               	incf	___awtoft@c+1,f
  6695  1186  01FD               	clrf	___awtoft@sign
  6696  1187  0AFD               	incf	___awtoft@sign,f
  6697  1188                     i1l2570:	
  6698  1188  0878               	movf	___awtoft@c,w
  6699  1189  00F0               	movwf	___ftpack@arg
  6700  118A  0879               	movf	___awtoft@c+1,w
  6701  118B  00F1               	movwf	___ftpack@arg+1
  6702  118C  01F2               	clrf	___ftpack@arg+2
  6703  118D  308E               	movlw	142
  6704  118E  00FB               	movwf	??___awtoft
  6705  118F  087B               	movf	??___awtoft,w
  6706  1190  00F3               	movwf	___ftpack@exp
  6707  1191  087D               	movf	___awtoft@sign,w
  6708  1192  00FC               	movwf	??___awtoft+1
  6709  1193  087C               	movf	??___awtoft+1,w
  6710  1194  00F4               	movwf	___ftpack@sign
  6711  1195  160A  118A  231E   	fcall	___ftpack
  6712  1198  0870               	movf	?___ftpack,w
  6713  1199  00F8               	movwf	?___awtoft
  6714  119A  0871               	movf	?___ftpack+1,w
  6715  119B  00F9               	movwf	?___awtoft+1
  6716  119C  0872               	movf	?___ftpack+2,w
  6717  119D  00FA               	movwf	?___awtoft+2
  6718  119E  0008               	return
  6719  119F                     __end_of___awtoft:	
  6720                           
  6721                           	psect	text26
  6722  131E                     __ptext26:	
  6723 ;; *************** function ___ftpack *****************
  6724 ;; Defined at:
  6725 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  arg             3    0[COMMON] unsigned um
  6728 ;;  exp             1    3[COMMON] unsigned char 
  6729 ;;  sign            1    4[COMMON] unsigned char 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  3    0[COMMON] float 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6741 ;;      Params:         5       0       0       0       0
  6742 ;;      Locals:         0       0       0       0       0
  6743 ;;      Temps:          3       0       0       0       0
  6744 ;;      Totals:         8       0       0       0       0
  6745 ;;Total ram usage:        8 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		___awtoft
  6751 ;;		___ftadd
  6752 ;;		___ftdiv
  6753 ;;		___ftmul
  6754 ;;		___lwtoft
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function ___ftpack
  6760  131E                     ___ftpack:	
  6761                           
  6762                           ;incstack = 0
  6763                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6764  131E  0873               	movf	___ftpack@exp,w
  6765  131F  1903               	btfsc	3,2
  6766  1320  2B26               	goto	i1l2130
  6767  1321  0872               	movf	___ftpack@arg+2,w
  6768  1322  0471               	iorwf	___ftpack@arg+1,w
  6769  1323  0470               	iorwf	___ftpack@arg,w
  6770  1324  1D03               	skipz
  6771  1325  2B39               	goto	i1l2136
  6772  1326                     i1l2130:	
  6773  1326  3000               	movlw	0
  6774  1327  00F0               	movwf	?___ftpack
  6775  1328  3000               	movlw	0
  6776  1329  00F1               	movwf	?___ftpack+1
  6777  132A  3000               	movlw	0
  6778  132B  00F2               	movwf	?___ftpack+2
  6779  132C  0008               	return
  6780  132D                     i1l2134:	
  6781  132D  3001               	movlw	1
  6782  132E  00F5               	movwf	??___ftpack
  6783  132F  0875               	movf	??___ftpack,w
  6784  1330  07F3               	addwf	___ftpack@exp,f
  6785  1331  3001               	movlw	1
  6786  1332                     u194_25:	
  6787  1332  1003               	clrc
  6788  1333  0CF2               	rrf	___ftpack@arg+2,f
  6789  1334  0CF1               	rrf	___ftpack@arg+1,f
  6790  1335  0CF0               	rrf	___ftpack@arg,f
  6791  1336  3EFF               	addlw	-1
  6792  1337  1D03               	skipz
  6793  1338  2B32               	goto	u194_25
  6794  1339                     i1l2136:	
  6795  1339  30FE               	movlw	254
  6796  133A  0572               	andwf	___ftpack@arg+2,w
  6797  133B  1903               	btfsc	3,2
  6798  133C  2B54               	goto	i1l756
  6799  133D  2B2D               	goto	i1l2134
  6800  133E                     i1l2138:	
  6801  133E  3001               	movlw	1
  6802  133F  00F5               	movwf	??___ftpack
  6803  1340  0875               	movf	??___ftpack,w
  6804  1341  07F3               	addwf	___ftpack@exp,f
  6805  1342  3001               	movlw	1
  6806  1343  07F0               	addwf	___ftpack@arg,f
  6807  1344  3000               	movlw	0
  6808  1345  1803               	skipnc
  6809  1346  3001               	movlw	1
  6810  1347  07F1               	addwf	___ftpack@arg+1,f
  6811  1348  3000               	movlw	0
  6812  1349  1803               	skipnc
  6813  134A  3001               	movlw	1
  6814  134B  07F2               	addwf	___ftpack@arg+2,f
  6815  134C  3001               	movlw	1
  6816  134D                     u196_25:	
  6817  134D  1003               	clrc
  6818  134E  0CF2               	rrf	___ftpack@arg+2,f
  6819  134F  0CF1               	rrf	___ftpack@arg+1,f
  6820  1350  0CF0               	rrf	___ftpack@arg,f
  6821  1351  3EFF               	addlw	-1
  6822  1352  1D03               	skipz
  6823  1353  2B4D               	goto	u196_25
  6824  1354                     i1l756:	
  6825  1354  30FF               	movlw	255
  6826  1355  0572               	andwf	___ftpack@arg+2,w
  6827  1356  1903               	btfsc	3,2
  6828  1357  2B63               	goto	i1l2146
  6829  1358  2B3E               	goto	i1l2138
  6830  1359                     i1l2144:	
  6831  1359  3001               	movlw	1
  6832  135A  02F3               	subwf	___ftpack@exp,f
  6833  135B  3001               	movlw	1
  6834  135C                     u198_25:	
  6835  135C  1003               	clrc
  6836  135D  0DF0               	rlf	___ftpack@arg,f
  6837  135E  0DF1               	rlf	___ftpack@arg+1,f
  6838  135F  0DF2               	rlf	___ftpack@arg+2,f
  6839  1360  3EFF               	addlw	-1
  6840  1361  1D03               	skipz
  6841  1362  2B5C               	goto	u198_25
  6842  1363                     i1l2146:	
  6843  1363  1FF1               	btfss	___ftpack@arg+1,7
  6844  1364  2B59               	goto	i1l2144
  6845  1365  1873               	btfsc	___ftpack@exp,0
  6846  1366  2B6D               	goto	i1l762
  6847  1367  30FF               	movlw	255
  6848  1368  05F0               	andwf	___ftpack@arg,f
  6849  1369  307F               	movlw	127
  6850  136A  05F1               	andwf	___ftpack@arg+1,f
  6851  136B  30FF               	movlw	255
  6852  136C  05F2               	andwf	___ftpack@arg+2,f
  6853  136D                     i1l762:	
  6854  136D  1003               	clrc
  6855  136E  0CF3               	rrf	___ftpack@exp,f
  6856  136F  0873               	movf	___ftpack@exp,w
  6857  1370  00F5               	movwf	??___ftpack
  6858  1371  01F6               	clrf	??___ftpack+1
  6859  1372  01F7               	clrf	??___ftpack+2
  6860  1373  3010               	movlw	16
  6861  1374                     u201_25:	
  6862  1374  1003               	clrc
  6863  1375  0DF5               	rlf	??___ftpack,f
  6864  1376  0DF6               	rlf	??___ftpack+1,f
  6865  1377  0DF7               	rlf	??___ftpack+2,f
  6866  1378  3EFF               	addlw	-1
  6867  1379  1D03               	skipz
  6868  137A  2B74               	goto	u201_25
  6869  137B  0875               	movf	??___ftpack,w
  6870  137C  04F0               	iorwf	___ftpack@arg,f
  6871  137D  0876               	movf	??___ftpack+1,w
  6872  137E  04F1               	iorwf	___ftpack@arg+1,f
  6873  137F  0877               	movf	??___ftpack+2,w
  6874  1380  04F2               	iorwf	___ftpack@arg+2,f
  6875  1381  0874               	movf	___ftpack@sign,w
  6876  1382  1903               	btfsc	3,2
  6877  1383  0008               	return
  6878  1384  17F2               	bsf	___ftpack@arg+2,7
  6879  1385  0008               	return
  6880  1386                     __end_of___ftpack:	
  6881                           
  6882                           	psect	text27
  6883  112F                     __ptext27:	
  6884 ;; *************** function _USART_ReceiveChar *****************
  6885 ;; Defined at:
  6886 ;;		line 63 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;		None
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  byte            1    4[COMMON] unsigned char 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  1    wreg      unsigned char 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6900 ;;      Params:         0       0       0       0       0
  6901 ;;      Locals:         1       0       0       0       0
  6902 ;;      Temps:          1       0       0       0       0
  6903 ;;      Totals:         2       0       0       0       0
  6904 ;;Total ram usage:        2 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    2
  6907 ;; This function calls:
  6908 ;;		_USART_WriteString
  6909 ;; This function is called by:
  6910 ;;		_ISR
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           
  6915                           ;psect for function _USART_ReceiveChar
  6916  112F                     _USART_ReceiveChar:	
  6917                           
  6918                           ;usart.c: 65: unsigned char byte;
  6919                           ;usart.c: 67: if (!OERR)
  6920                           
  6921                           ;incstack = 0
  6922                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6923  112F  1283               	bcf	3,5	;RP0=0, select bank0
  6924  1130  1303               	bcf	3,6	;RP1=0, select bank0
  6925  1131  1898               	btfsc	24,1	;volatile
  6926  1132  2938               	goto	i1l2432
  6927                           
  6928                           ;usart.c: 68: {
  6929                           ;usart.c: 69: byte = RCREG;
  6930  1133  081A               	movf	26,w	;volatile
  6931  1134  00F3               	movwf	??_USART_ReceiveChar
  6932  1135  0873               	movf	??_USART_ReceiveChar,w
  6933  1136  00F4               	movwf	USART_ReceiveChar@byte
  6934  1137  2944               	goto	i1l2440
  6935  1138                     i1l2432:	
  6936                           ;usart.c: 71: }
  6937                           
  6938                           ;usart.c: 70: PIR1bits.RCIF = 0;
  6939                           
  6940                           
  6941                           ;usart.c: 72: else
  6942                           ;usart.c: 73: {
  6943                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  6944  1138  3001               	movlw	(STR_1-__stringbase)& (0+255)
  6945  1139  160A  118A  2162   	fcall	_USART_WriteString
  6946                           
  6947                           ;usart.c: 76: RCSTAbits.CREN = 0;
  6948  113C  1283               	bcf	3,5	;RP0=0, select bank0
  6949  113D  1303               	bcf	3,6	;RP1=0, select bank0
  6950  113E  1218               	bcf	24,4	;volatile
  6951                           
  6952                           ;usart.c: 77: byte = RCREG;
  6953  113F  081A               	movf	26,w	;volatile
  6954  1140  00F3               	movwf	??_USART_ReceiveChar
  6955  1141  0873               	movf	??_USART_ReceiveChar,w
  6956  1142  00F4               	movwf	USART_ReceiveChar@byte
  6957                           
  6958                           ;usart.c: 78: RCSTAbits.CREN = 1;
  6959  1143  1618               	bsf	24,4	;volatile
  6960  1144                     i1l2440:	
  6961                           
  6962                           ;usart.c: 79: PIR1bits.RCIF = 0;
  6963  1144  128C               	bcf	12,5	;volatile
  6964                           
  6965                           ;usart.c: 80: }
  6966                           ;usart.c: 82: return(byte);
  6967  1145  0874               	movf	USART_ReceiveChar@byte,w
  6968  1146  0008               	return
  6969  1147                     __end_of_USART_ReceiveChar:	
  6970                           
  6971                           	psect	text28
  6972  1162                     __ptext28:	
  6973 ;; *************** function _USART_WriteString *****************
  6974 ;; Defined at:
  6975 ;;		line 52 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  str             1    wreg     PTR const unsigned char 
  6978 ;;		 -> STR_1(40), 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  str             1    2[COMMON] PTR const unsigned char 
  6981 ;;		 -> STR_1(40), 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;		None               void
  6984 ;; Registers used:
  6985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6991 ;;      Params:         0       0       0       0       0
  6992 ;;      Locals:         1       0       0       0       0
  6993 ;;      Temps:          1       0       0       0       0
  6994 ;;      Totals:         2       0       0       0       0
  6995 ;;Total ram usage:        2 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    1
  6998 ;; This function calls:
  6999 ;;		_USART_WriteChar
  7000 ;; This function is called by:
  7001 ;;		_USART_ReceiveChar
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function _USART_WriteString
  7007  1162                     _USART_WriteString:	
  7008                           
  7009                           ;incstack = 0
  7010                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7011                           ;USART_WriteString@str stored from wreg
  7012  1162  00F2               	movwf	USART_WriteString@str
  7013  1163                     i1l2162:	
  7014                           ;usart.c: 54: while(*str != '\0')
  7015                           
  7016  1163  0872               	movf	USART_WriteString@str,w
  7017  1164  0084               	movwf	4
  7018  1165  120A  158A  2000  160A  118A  	fcall	stringdir
  7019  116A  3800               	iorlw	0
  7020  116B  1903               	btfsc	3,2
  7021  116C  0008               	return
  7022                           
  7023                           ;usart.c: 55: {
  7024                           ;usart.c: 56: USART_WriteChar(*str);
  7025  116D  0872               	movf	USART_WriteString@str,w
  7026  116E  0084               	movwf	4
  7027  116F  120A  158A  2000  160A  118A  	fcall	stringdir
  7028  1174  160A  118A  20CD  160A  118A  	fcall	_USART_WriteChar
  7029                           
  7030                           ;usart.c: 57: str++;
  7031  1179  3001               	movlw	1
  7032  117A  00F1               	movwf	??_USART_WriteString
  7033  117B  0871               	movf	??_USART_WriteString,w
  7034  117C  07F2               	addwf	USART_WriteString@str,f
  7035  117D  2963               	goto	i1l2162
  7036  117E                     __end_of_USART_WriteString:	
  7037                           
  7038                           	psect	text29
  7039  10CD                     __ptext29:	
  7040 ;; *************** function _USART_WriteChar *****************
  7041 ;; Defined at:
  7042 ;;		line 44 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  byte            1    wreg     unsigned char 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  byte            1    0[COMMON] unsigned char 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;		None               void
  7049 ;; Registers used:
  7050 ;;		wreg
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7056 ;;      Params:         0       0       0       0       0
  7057 ;;      Locals:         1       0       0       0       0
  7058 ;;      Temps:          0       0       0       0       0
  7059 ;;      Totals:         1       0       0       0       0
  7060 ;;Total ram usage:        1 bytes
  7061 ;; Hardware stack levels used:    1
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_send
  7066 ;;		_USART_WriteString
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           
  7071                           ;psect for function _USART_WriteChar
  7072  10CD                     _USART_WriteChar:	
  7073                           
  7074                           ;incstack = 0
  7075                           ; Regs used in _USART_WriteChar: [wreg]
  7076                           ;USART_WriteChar@byte stored from wreg
  7077  10CD  00F0               	movwf	USART_WriteChar@byte
  7078  10CE                     i1l271:	
  7079                           ;usart.c: 46: while(!PIR1bits.TXIF);
  7080                           
  7081  10CE  1283               	bcf	3,5	;RP0=0, select bank0
  7082  10CF  1303               	bcf	3,6	;RP1=0, select bank0
  7083  10D0  1E0C               	btfss	12,4	;volatile
  7084  10D1  28CE               	goto	i1l271
  7085                           
  7086                           ;usart.c: 47: TXREG = byte;
  7087  10D2  0870               	movf	USART_WriteChar@byte,w
  7088  10D3  0099               	movwf	25	;volatile
  7089  10D4  0008               	return
  7090  10D5                     __end_of_USART_WriteChar:	
  7091  007E                     btemp	set	126	;btemp
  7092  007E                     wtemp	set	126
  7093  007E                     wtemp0	set	126
  7094  0080                     wtemp1	set	128
  7095  0082                     wtemp2	set	130
  7096  0084                     wtemp3	set	132
  7097  0086                     wtemp4	set	134
  7098  0088                     wtemp5	set	136
  7099  007F                     wtemp6	set	127
  7100  007E                     ttemp	set	126
  7101  007E                     ttemp0	set	126
  7102  0081                     ttemp1	set	129
  7103  0084                     ttemp2	set	132
  7104  0087                     ttemp3	set	135
  7105  007F                     ttemp4	set	127
  7106  007E                     ltemp	set	126
  7107  007E                     ltemp0	set	126
  7108  0082                     ltemp1	set	130
  7109  0086                     ltemp2	set	134
  7110  0080                     ltemp3	set	128
  7111                           
  7112                           	psect	text9_split_1
  7113  098C                     i1l2920:	
  7114                           ;main.c: 360: } else {
  7115                           
  7116                           
  7117                           ;main.c: 361: reajuste = 0;
  7118  098C  3000               	movlw	0
  7119  098D  00CF               	movwf	_reajuste^(0+128)
  7120  098E  3000               	movlw	0
  7121  098F  00D0               	movwf	(_reajuste+1)^(0+128)
  7122  0990  3000               	movlw	0
  7123  0991                     L5:	
  7124  0991  00D1               	movwf	(_reajuste+2)^(0+128)
  7125                           
  7126                           ;main.c: 362: }
  7127                           ;main.c: 364: pwm = ((((((pwm + ((int) (((reajuste)<(erro_atual))?(reajuste):(erro_atual
      +                          ))) * (setpoint > rpm ? 1 : -1) * 1)<(1023))?(pwm + ((int) (((reajuste)<(erro_atual))?(r
      +                          eajuste):(erro_atual))) * (setpoint > rpm ? 1 : -1) * 1):(1023)))>(0))?((((pwm + ((int) 
  7128  0992  086E               	movf	(_setpoint+1)^(0+128),w
  7129  0993  026C               	subwf	(_rpm+1)^(0+128),w
  7130  0994  1D03               	skipz
  7131  0995  2998               	goto	u353_25
  7132  0996  086D               	movf	_setpoint^(0+128),w
  7133  0997  026B               	subwf	_rpm^(0+128),w
  7134  0998                     u353_25:	
  7135  0998  1C03               	skipc
  7136  0999  299E               	goto	i1l2924
  7137  099A  30FF               	movlw	255
  7138  099B  00B2               	movwf	_ISR$237^(0+128)
  7139  099C  30FF               	movlw	255
  7140  099D  29A1               	goto	L6
  7141  099E                     i1l2924:	
  7142  099E  3001               	movlw	1
  7143  099F  00B2               	movwf	_ISR$237^(0+128)
  7144  09A0  3000               	movlw	0
  7145  09A1                     L6:	
  7146  09A1  00B3               	movwf	(_ISR$237^(0+128)+1)
  7147  09A2  084F               	movf	_reajuste^(0+128),w
  7148  09A3  1283               	bcf	3,5	;RP0=0, select bank0
  7149  09A4  1303               	bcf	3,6	;RP1=0, select bank0
  7150  09A5  00A0               	movwf	___ftge@ff1
  7151  09A6  1683               	bsf	3,5	;RP0=1, select bank1
  7152  09A7  1303               	bcf	3,6	;RP1=0, select bank1
  7153  09A8  0850               	movf	(_reajuste+1)^(0+128),w
  7154  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  7155  09AA  1303               	bcf	3,6	;RP1=0, select bank0
  7156  09AB  00A1               	movwf	___ftge@ff1+1
  7157  09AC  1683               	bsf	3,5	;RP0=1, select bank1
  7158  09AD  1303               	bcf	3,6	;RP1=0, select bank1
  7159  09AE  0851               	movf	(_reajuste+2)^(0+128),w
  7160  09AF  1283               	bcf	3,5	;RP0=0, select bank0
  7161  09B0  1303               	bcf	3,6	;RP1=0, select bank0
  7162  09B1  00A2               	movwf	___ftge@ff1+2
  7163  09B2  1683               	bsf	3,5	;RP0=1, select bank1
  7164  09B3  1303               	bcf	3,6	;RP1=0, select bank1
  7165  09B4  0866               	movf	(_erro_atual+1)^(0+128),w
  7166  09B5  01F9               	clrf	___awtoft@c+1
  7167  09B6  07F9               	addwf	___awtoft@c+1,f
  7168  09B7  0865               	movf	_erro_atual^(0+128),w
  7169  09B8  01F8               	clrf	___awtoft@c
  7170  09B9  07F8               	addwf	___awtoft@c,f
  7171  09BA  160A  118A  217E  120A  158A  	fcall	___awtoft
  7172  09BF  0878               	movf	?___awtoft,w
  7173  09C0  1283               	bcf	3,5	;RP0=0, select bank0
  7174  09C1  1303               	bcf	3,6	;RP1=0, select bank0
  7175  09C2  00A3               	movwf	___ftge@ff2
  7176  09C3  0879               	movf	?___awtoft+1,w
  7177  09C4  00A4               	movwf	___ftge@ff2+1
  7178  09C5  087A               	movf	?___awtoft+2,w
  7179  09C6  00A5               	movwf	___ftge@ff2+2
  7180  09C7  160A  118A  22BF  120A  158A  	fcall	___ftge
  7181  09CC  1C03               	btfss	3,0
  7182  09CD  29E3               	goto	i1l2930
  7183  09CE  1683               	bsf	3,5	;RP0=1, select bank1
  7184  09CF  1303               	bcf	3,6	;RP1=0, select bank1
  7185  09D0  0866               	movf	(_erro_atual+1)^(0+128),w
  7186  09D1  01F9               	clrf	___awtoft@c+1
  7187  09D2  07F9               	addwf	___awtoft@c+1,f
  7188  09D3  0865               	movf	_erro_atual^(0+128),w
  7189  09D4  01F8               	clrf	___awtoft@c
  7190  09D5  07F8               	addwf	___awtoft@c,f
  7191  09D6  160A  118A  217E  120A  158A  	fcall	___awtoft
  7192  09DB  0878               	movf	?___awtoft,w
  7193  09DC  1683               	bsf	3,5	;RP0=1, select bank1
  7194  09DD  1303               	bcf	3,6	;RP1=0, select bank1
  7195  09DE  00A0               	movwf	_ISR$238^(0+128)
  7196  09DF  0879               	movf	?___awtoft+1,w
  7197  09E0  00A1               	movwf	(_ISR$238+1)^(0+128)
  7198  09E1  087A               	movf	?___awtoft+2,w
  7199  09E2  29EA               	goto	L7
  7200  09E3                     i1l2930:	
  7201  09E3  1683               	bsf	3,5	;RP0=1, select bank1
  7202  09E4  1303               	bcf	3,6	;RP1=0, select bank1
  7203  09E5  084F               	movf	_reajuste^(0+128),w
  7204  09E6  00A0               	movwf	_ISR$238^(0+128)
  7205  09E7  0850               	movf	(_reajuste+1)^(0+128),w
  7206  09E8  00A1               	movwf	(_ISR$238+1)^(0+128)
  7207  09E9  0851               	movf	(_reajuste+2)^(0+128),w
  7208  09EA                     L7:	
  7209  09EA  00A2               	movwf	(_ISR$238+2)^(0+128)
  7210  09EB  0820               	movf	_ISR$238^(0+128),w
  7211  09EC  1283               	bcf	3,5	;RP0=0, select bank0
  7212  09ED  1303               	bcf	3,6	;RP1=0, select bank0
  7213  09EE  00C7               	movwf	___fttol@f1
  7214  09EF  1683               	bsf	3,5	;RP0=1, select bank1
  7215  09F0  1303               	bcf	3,6	;RP1=0, select bank1
  7216  09F1  0821               	movf	(_ISR$238+1)^(0+128),w
  7217  09F2  1283               	bcf	3,5	;RP0=0, select bank0
  7218  09F3  1303               	bcf	3,6	;RP1=0, select bank0
  7219  09F4  00C8               	movwf	___fttol@f1+1
  7220  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  7221  09F6  1303               	bcf	3,6	;RP1=0, select bank1
  7222  09F7  0822               	movf	(_ISR$238+2)^(0+128),w
  7223  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  7224  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  7225  09FA  00C9               	movwf	___fttol@f1+2
  7226  09FB  160A  118A  2406  120A  158A  	fcall	___fttol
  7227  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  7228  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  7229  0A02  0848               	movf	?___fttol+1,w
  7230  0A03  01D6               	clrf	___wmul@multiplier+1
  7231  0A04  07D6               	addwf	___wmul@multiplier+1,f
  7232  0A05  0847               	movf	?___fttol,w
  7233  0A06  01D5               	clrf	___wmul@multiplier
  7234  0A07  07D5               	addwf	___wmul@multiplier,f
  7235  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  7236  0A09  1303               	bcf	3,6	;RP1=0, select bank1
  7237  0A0A  0833               	movf	(_ISR$237+1)^(0+128),w
  7238  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  7239  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  7240  0A0D  01D8               	clrf	___wmul@multiplicand+1
  7241  0A0E  07D8               	addwf	___wmul@multiplicand+1,f
  7242  0A0F  1683               	bsf	3,5	;RP0=1, select bank1
  7243  0A10  1303               	bcf	3,6	;RP1=0, select bank1
  7244  0A11  0832               	movf	_ISR$237^(0+128),w
  7245  0A12  1283               	bcf	3,5	;RP0=0, select bank0
  7246  0A13  1303               	bcf	3,6	;RP1=0, select bank0
  7247  0A14  01D7               	clrf	___wmul@multiplicand
  7248  0A15  07D7               	addwf	___wmul@multiplicand,f
  7249  0A16  160A  118A  2205  120A  158A  	fcall	___wmul
  7250  0A1B  1683               	bsf	3,5	;RP0=1, select bank1
  7251  0A1C  1303               	bcf	3,6	;RP1=0, select bank1
  7252  0A1D  0867               	movf	_pwm^(0+128),w
  7253  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  7254  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  7255  0A20  0755               	addwf	?___wmul,w
  7256  0A21  00DB               	movwf	??_ISR
  7257  0A22  1683               	bsf	3,5	;RP0=1, select bank1
  7258  0A23  1303               	bcf	3,6	;RP1=0, select bank1
  7259  0A24  0868               	movf	(_pwm+1)^(0+128),w
  7260  0A25  1803               	skipnc
  7261  0A26  0A68               	incf	(_pwm+1)^(0+128),w
  7262  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  7263  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  7264  0A29  0756               	addwf	?___wmul+1,w
  7265  0A2A  00DC               	movwf	??_ISR+1
  7266  0A2B  3003               	movlw	3
  7267  0A2C  025C               	subwf	??_ISR+1,w
  7268  0A2D  30FF               	movlw	255
  7269  0A2E  1903               	skipnz
  7270  0A2F  025B               	subwf	??_ISR,w
  7271  0A30  1C03               	skipc
  7272  0A31  2A39               	goto	i1l2936
  7273  0A32  30FF               	movlw	255
  7274  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  7275  0A34  1303               	bcf	3,6	;RP1=0, select bank1
  7276  0A35  00B0               	movwf	_ISR$236^(0+128)
  7277  0A36  3003               	movlw	3
  7278  0A37  00B1               	movwf	(_ISR$236^(0+128)+1)
  7279  0A38  2AD6               	goto	i1l2950
  7280  0A39                     i1l2936:	
  7281  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  7282  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  7283  0A3B  086E               	movf	(_setpoint+1)^(0+128),w
  7284  0A3C  026C               	subwf	(_rpm+1)^(0+128),w
  7285  0A3D  1D03               	skipz
  7286  0A3E  2A41               	goto	u356_25
  7287  0A3F  086D               	movf	_setpoint^(0+128),w
  7288  0A40  026B               	subwf	_rpm^(0+128),w
  7289  0A41                     u356_25:	
  7290  0A41  1C03               	skipc
  7291  0A42  2A47               	goto	i1l2940
  7292  0A43  30FF               	movlw	255
  7293  0A44  00B4               	movwf	_ISR$239^(0+128)
  7294  0A45  30FF               	movlw	255
  7295  0A46  2A4A               	goto	L8
  7296  0A47                     i1l2940:	
  7297  0A47  3001               	movlw	1
  7298  0A48  00B4               	movwf	_ISR$239^(0+128)
  7299  0A49  3000               	movlw	0
  7300  0A4A                     L8:	
  7301  0A4A  00B5               	movwf	(_ISR$239^(0+128)+1)
  7302  0A4B  084F               	movf	_reajuste^(0+128),w
  7303  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  7304  0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  7305  0A4E  00A0               	movwf	___ftge@ff1
  7306  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  7307  0A50  1303               	bcf	3,6	;RP1=0, select bank1
  7308  0A51  0850               	movf	(_reajuste+1)^(0+128),w
  7309  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  7310  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  7311  0A54  00A1               	movwf	___ftge@ff1+1
  7312  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  7313  0A56  1303               	bcf	3,6	;RP1=0, select bank1
  7314  0A57  0851               	movf	(_reajuste+2)^(0+128),w
  7315  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  7316  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  7317  0A5A  00A2               	movwf	___ftge@ff1+2
  7318  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  7319  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  7320  0A5D  0866               	movf	(_erro_atual+1)^(0+128),w
  7321  0A5E  01F9               	clrf	___awtoft@c+1
  7322  0A5F  07F9               	addwf	___awtoft@c+1,f
  7323  0A60  0865               	movf	_erro_atual^(0+128),w
  7324  0A61  01F8               	clrf	___awtoft@c
  7325  0A62  07F8               	addwf	___awtoft@c,f
  7326  0A63  160A  118A  217E  120A  158A  	fcall	___awtoft
  7327  0A68  0878               	movf	?___awtoft,w
  7328  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  7329  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  7330  0A6B  00A3               	movwf	___ftge@ff2
  7331  0A6C  0879               	movf	?___awtoft+1,w
  7332  0A6D  00A4               	movwf	___ftge@ff2+1
  7333  0A6E  087A               	movf	?___awtoft+2,w
  7334  0A6F  00A5               	movwf	___ftge@ff2+2
  7335  0A70  160A  118A  22BF  120A  158A  	fcall	___ftge
  7336  0A75  1C03               	btfss	3,0
  7337  0A76  2A8C               	goto	i1l2946
  7338  0A77  1683               	bsf	3,5	;RP0=1, select bank1
  7339  0A78  1303               	bcf	3,6	;RP1=0, select bank1
  7340  0A79  0866               	movf	(_erro_atual+1)^(0+128),w
  7341  0A7A  01F9               	clrf	___awtoft@c+1
  7342  0A7B  07F9               	addwf	___awtoft@c+1,f
  7343  0A7C  0865               	movf	_erro_atual^(0+128),w
  7344  0A7D  01F8               	clrf	___awtoft@c
  7345  0A7E  07F8               	addwf	___awtoft@c,f
  7346  0A7F  160A  118A  217E  120A  158A  	fcall	___awtoft
  7347  0A84  0878               	movf	?___awtoft,w
  7348  0A85  1683               	bsf	3,5	;RP0=1, select bank1
  7349  0A86  1303               	bcf	3,6	;RP1=0, select bank1
  7350  0A87  00A3               	movwf	_ISR$240^(0+128)
  7351  0A88  0879               	movf	?___awtoft+1,w
  7352  0A89  00A4               	movwf	(_ISR$240+1)^(0+128)
  7353  0A8A  087A               	movf	?___awtoft+2,w
  7354  0A8B  2A93               	goto	L9
  7355  0A8C                     i1l2946:	
  7356  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  7357  0A8D  1303               	bcf	3,6	;RP1=0, select bank1
  7358  0A8E  084F               	movf	_reajuste^(0+128),w
  7359  0A8F  00A3               	movwf	_ISR$240^(0+128)
  7360  0A90  0850               	movf	(_reajuste+1)^(0+128),w
  7361  0A91  00A4               	movwf	(_ISR$240+1)^(0+128)
  7362  0A92  0851               	movf	(_reajuste+2)^(0+128),w
  7363  0A93                     L9:	
  7364  0A93  00A5               	movwf	(_ISR$240+2)^(0+128)
  7365  0A94  0823               	movf	_ISR$240^(0+128),w
  7366  0A95  1283               	bcf	3,5	;RP0=0, select bank0
  7367  0A96  1303               	bcf	3,6	;RP1=0, select bank0
  7368  0A97  00C7               	movwf	___fttol@f1
  7369  0A98  1683               	bsf	3,5	;RP0=1, select bank1
  7370  0A99  1303               	bcf	3,6	;RP1=0, select bank1
  7371  0A9A  0824               	movf	(_ISR$240+1)^(0+128),w
  7372  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  7373  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  7374  0A9D  00C8               	movwf	___fttol@f1+1
  7375  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  7376  0A9F  1303               	bcf	3,6	;RP1=0, select bank1
  7377  0AA0  0825               	movf	(_ISR$240+2)^(0+128),w
  7378  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  7379  0AA2  1303               	bcf	3,6	;RP1=0, select bank0
  7380  0AA3  00C9               	movwf	___fttol@f1+2
  7381  0AA4  160A  118A  2406  120A  158A  	fcall	___fttol
  7382  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  7383  0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  7384  0AAB  0848               	movf	?___fttol+1,w
  7385  0AAC  01D6               	clrf	___wmul@multiplier+1
  7386  0AAD  07D6               	addwf	___wmul@multiplier+1,f
  7387  0AAE  0847               	movf	?___fttol,w
  7388  0AAF  01D5               	clrf	___wmul@multiplier
  7389  0AB0  07D5               	addwf	___wmul@multiplier,f
  7390  0AB1  1683               	bsf	3,5	;RP0=1, select bank1
  7391  0AB2  1303               	bcf	3,6	;RP1=0, select bank1
  7392  0AB3  0835               	movf	(_ISR$239+1)^(0+128),w
  7393  0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  7394  0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  7395  0AB6  01D8               	clrf	___wmul@multiplicand+1
  7396  0AB7  07D8               	addwf	___wmul@multiplicand+1,f
  7397  0AB8  1683               	bsf	3,5	;RP0=1, select bank1
  7398  0AB9  1303               	bcf	3,6	;RP1=0, select bank1
  7399  0ABA  0834               	movf	_ISR$239^(0+128),w
  7400  0ABB  1283               	bcf	3,5	;RP0=0, select bank0
  7401  0ABC  1303               	bcf	3,6	;RP1=0, select bank0
  7402  0ABD  01D7               	clrf	___wmul@multiplicand
  7403  0ABE  07D7               	addwf	___wmul@multiplicand,f
  7404  0ABF  160A  118A  2205  120A  158A  	fcall	___wmul
  7405  0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  7406  0AC5  1303               	bcf	3,6	;RP1=0, select bank1
  7407  0AC6  0867               	movf	_pwm^(0+128),w
  7408  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  7409  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  7410  0AC9  0755               	addwf	?___wmul,w
  7411  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  7412  0ACB  1303               	bcf	3,6	;RP1=0, select bank1
  7413  0ACC  00B0               	movwf	_ISR$236^(0+128)
  7414  0ACD  0868               	movf	(_pwm+1)^(0+128),w
  7415  0ACE  1803               	skipnc
  7416  0ACF  0A68               	incf	(_pwm+1)^(0+128),w
  7417  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  7418  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0AD2  0756               	addwf	?___wmul+1,w
  7420  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  7421  0AD4  1303               	bcf	3,6	;RP1=0, select bank1
  7422  0AD5  00B1               	movwf	(_ISR$236+1)^(0+128)
  7423  0AD6                     i1l2950:	
  7424  0AD6  0831               	movf	(_ISR$236+1)^(0+128),w
  7425  0AD7  0430               	iorwf	_ISR$236^(0+128),w
  7426  0AD8  1D03               	skipz
  7427  0AD9  2ADD               	goto	i1l2954
  7428  0ADA  01E7               	clrf	_pwm^(0+128)
  7429  0ADB  01E8               	clrf	(_pwm+1)^(0+128)
  7430  0ADC  2C27               	goto	i1l2986
  7431  0ADD                     i1l2954:	
  7432  0ADD  086E               	movf	(_setpoint+1)^(0+128),w
  7433  0ADE  026C               	subwf	(_rpm+1)^(0+128),w
  7434  0ADF  1D03               	skipz
  7435  0AE0  2AE3               	goto	u359_25
  7436  0AE1  086D               	movf	_setpoint^(0+128),w
  7437  0AE2  026B               	subwf	_rpm^(0+128),w
  7438  0AE3                     u359_25:	
  7439  0AE3  1C03               	skipc
  7440  0AE4  2AE9               	goto	i1l2958
  7441  0AE5  30FF               	movlw	255
  7442  0AE6  00B8               	movwf	_ISR$242^(0+128)
  7443  0AE7  30FF               	movlw	255
  7444  0AE8  2AEC               	goto	L10
  7445  0AE9                     i1l2958:	
  7446  0AE9  3001               	movlw	1
  7447  0AEA  00B8               	movwf	_ISR$242^(0+128)
  7448  0AEB  3000               	movlw	0
  7449  0AEC                     L10:	
  7450  0AEC  00B9               	movwf	(_ISR$242^(0+128)+1)
  7451  0AED  084F               	movf	_reajuste^(0+128),w
  7452  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  7453  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  7454  0AF0  00A0               	movwf	___ftge@ff1
  7455  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  7456  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  7457  0AF3  0850               	movf	(_reajuste+1)^(0+128),w
  7458  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0AF6  00A1               	movwf	___ftge@ff1+1
  7461  0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  7462  0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  7463  0AF9  0851               	movf	(_reajuste+2)^(0+128),w
  7464  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  7465  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  7466  0AFC  00A2               	movwf	___ftge@ff1+2
  7467  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  7468  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  7469  0AFF  0866               	movf	(_erro_atual+1)^(0+128),w
  7470  0B00  01F9               	clrf	___awtoft@c+1
  7471  0B01  07F9               	addwf	___awtoft@c+1,f
  7472  0B02  0865               	movf	_erro_atual^(0+128),w
  7473  0B03  01F8               	clrf	___awtoft@c
  7474  0B04  07F8               	addwf	___awtoft@c,f
  7475  0B05  160A  118A  217E  120A  158A  	fcall	___awtoft
  7476  0B0A  0878               	movf	?___awtoft,w
  7477  0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  7478  0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  7479  0B0D  00A3               	movwf	___ftge@ff2
  7480  0B0E  0879               	movf	?___awtoft+1,w
  7481  0B0F  00A4               	movwf	___ftge@ff2+1
  7482  0B10  087A               	movf	?___awtoft+2,w
  7483  0B11  00A5               	movwf	___ftge@ff2+2
  7484  0B12  160A  118A  22BF  120A  158A  	fcall	___ftge
  7485  0B17  1C03               	btfss	3,0
  7486  0B18  2B2E               	goto	i1l2964
  7487  0B19  1683               	bsf	3,5	;RP0=1, select bank1
  7488  0B1A  1303               	bcf	3,6	;RP1=0, select bank1
  7489  0B1B  0866               	movf	(_erro_atual+1)^(0+128),w
  7490  0B1C  01F9               	clrf	___awtoft@c+1
  7491  0B1D  07F9               	addwf	___awtoft@c+1,f
  7492  0B1E  0865               	movf	_erro_atual^(0+128),w
  7493  0B1F  01F8               	clrf	___awtoft@c
  7494  0B20  07F8               	addwf	___awtoft@c,f
  7495  0B21  160A  118A  217E  120A  158A  	fcall	___awtoft
  7496  0B26  0878               	movf	?___awtoft,w
  7497  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  7498  0B28  1303               	bcf	3,6	;RP1=0, select bank1
  7499  0B29  00A6               	movwf	_ISR$243^(0+128)
  7500  0B2A  0879               	movf	?___awtoft+1,w
  7501  0B2B  00A7               	movwf	(_ISR$243+1)^(0+128)
  7502  0B2C  087A               	movf	?___awtoft+2,w
  7503  0B2D  2B35               	goto	L11
  7504  0B2E                     i1l2964:	
  7505  0B2E  1683               	bsf	3,5	;RP0=1, select bank1
  7506  0B2F  1303               	bcf	3,6	;RP1=0, select bank1
  7507  0B30  084F               	movf	_reajuste^(0+128),w
  7508  0B31  00A6               	movwf	_ISR$243^(0+128)
  7509  0B32  0850               	movf	(_reajuste+1)^(0+128),w
  7510  0B33  00A7               	movwf	(_ISR$243+1)^(0+128)
  7511  0B34  0851               	movf	(_reajuste+2)^(0+128),w
  7512  0B35                     L11:	
  7513  0B35  00A8               	movwf	(_ISR$243+2)^(0+128)
  7514  0B36  0826               	movf	_ISR$243^(0+128),w
  7515  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  7516  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  7517  0B39  00C7               	movwf	___fttol@f1
  7518  0B3A  1683               	bsf	3,5	;RP0=1, select bank1
  7519  0B3B  1303               	bcf	3,6	;RP1=0, select bank1
  7520  0B3C  0827               	movf	(_ISR$243+1)^(0+128),w
  7521  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  7522  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  7523  0B3F  00C8               	movwf	___fttol@f1+1
  7524  0B40  1683               	bsf	3,5	;RP0=1, select bank1
  7525  0B41  1303               	bcf	3,6	;RP1=0, select bank1
  7526  0B42  0828               	movf	(_ISR$243+2)^(0+128),w
  7527  0B43  1283               	bcf	3,5	;RP0=0, select bank0
  7528  0B44  1303               	bcf	3,6	;RP1=0, select bank0
  7529  0B45  00C9               	movwf	___fttol@f1+2
  7530  0B46  160A  118A  2406  120A  158A  	fcall	___fttol
  7531  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  7532  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  7533  0B4D  0848               	movf	?___fttol+1,w
  7534  0B4E  01D6               	clrf	___wmul@multiplier+1
  7535  0B4F  07D6               	addwf	___wmul@multiplier+1,f
  7536  0B50  0847               	movf	?___fttol,w
  7537  0B51  01D5               	clrf	___wmul@multiplier
  7538  0B52  07D5               	addwf	___wmul@multiplier,f
  7539  0B53  1683               	bsf	3,5	;RP0=1, select bank1
  7540  0B54  1303               	bcf	3,6	;RP1=0, select bank1
  7541  0B55  0839               	movf	(_ISR$242+1)^(0+128),w
  7542  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  7543  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  7544  0B58  01D8               	clrf	___wmul@multiplicand+1
  7545  0B59  07D8               	addwf	___wmul@multiplicand+1,f
  7546  0B5A  1683               	bsf	3,5	;RP0=1, select bank1
  7547  0B5B  1303               	bcf	3,6	;RP1=0, select bank1
  7548  0B5C  0838               	movf	_ISR$242^(0+128),w
  7549  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  7550  0B5E  1303               	bcf	3,6	;RP1=0, select bank0
  7551  0B5F  01D7               	clrf	___wmul@multiplicand
  7552  0B60  07D7               	addwf	___wmul@multiplicand,f
  7553  0B61  160A  118A  2205  120A  158A  	fcall	___wmul
  7554  0B66  1683               	bsf	3,5	;RP0=1, select bank1
  7555  0B67  1303               	bcf	3,6	;RP1=0, select bank1
  7556  0B68  0867               	movf	_pwm^(0+128),w
  7557  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  7558  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  7559  0B6B  0755               	addwf	?___wmul,w
  7560  0B6C  00DB               	movwf	??_ISR
  7561  0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  7562  0B6E  1303               	bcf	3,6	;RP1=0, select bank1
  7563  0B6F  0868               	movf	(_pwm+1)^(0+128),w
  7564  0B70  1803               	skipnc
  7565  0B71  0A68               	incf	(_pwm+1)^(0+128),w
  7566  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  7567  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  7568  0B74  0756               	addwf	?___wmul+1,w
  7569  0B75  00DC               	movwf	??_ISR+1
  7570  0B76  3003               	movlw	3
  7571  0B77  025C               	subwf	??_ISR+1,w
  7572  0B78  30FF               	movlw	255
  7573  0B79  1903               	skipnz
  7574  0B7A  025B               	subwf	??_ISR,w
  7575  0B7B  1C03               	skipc
  7576  0B7C  2B84               	goto	i1l2970
  7577  0B7D  30FF               	movlw	255
  7578  0B7E  1683               	bsf	3,5	;RP0=1, select bank1
  7579  0B7F  1303               	bcf	3,6	;RP1=0, select bank1
  7580  0B80  00B6               	movwf	_ISR$241^(0+128)
  7581  0B81  3003               	movlw	3
  7582  0B82  00B7               	movwf	(_ISR$241^(0+128)+1)
  7583  0B83  2C21               	goto	i1l2984
  7584  0B84                     i1l2970:	
  7585  0B84  1683               	bsf	3,5	;RP0=1, select bank1
  7586  0B85  1303               	bcf	3,6	;RP1=0, select bank1
  7587  0B86  086E               	movf	(_setpoint+1)^(0+128),w
  7588  0B87  026C               	subwf	(_rpm+1)^(0+128),w
  7589  0B88  1D03               	skipz
  7590  0B89  2B8C               	goto	u362_25
  7591  0B8A  086D               	movf	_setpoint^(0+128),w
  7592  0B8B  026B               	subwf	_rpm^(0+128),w
  7593  0B8C                     u362_25:	
  7594  0B8C  1C03               	skipc
  7595  0B8D  2B92               	goto	i1l2974
  7596  0B8E  30FF               	movlw	255
  7597  0B8F  00BA               	movwf	_ISR$244^(0+128)
  7598  0B90  30FF               	movlw	255
  7599  0B91  2B95               	goto	L12
  7600  0B92                     i1l2974:	
  7601  0B92  3001               	movlw	1
  7602  0B93  00BA               	movwf	_ISR$244^(0+128)
  7603  0B94  3000               	movlw	0
  7604  0B95                     L12:	
  7605  0B95  00BB               	movwf	(_ISR$244^(0+128)+1)
  7606  0B96  084F               	movf	_reajuste^(0+128),w
  7607  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  7608  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  7609  0B99  00A0               	movwf	___ftge@ff1
  7610  0B9A  1683               	bsf	3,5	;RP0=1, select bank1
  7611  0B9B  1303               	bcf	3,6	;RP1=0, select bank1
  7612  0B9C  0850               	movf	(_reajuste+1)^(0+128),w
  7613  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  7614  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  7615  0B9F  00A1               	movwf	___ftge@ff1+1
  7616  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  7617  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  7618  0BA2  0851               	movf	(_reajuste+2)^(0+128),w
  7619  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  7620  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  7621  0BA5  00A2               	movwf	___ftge@ff1+2
  7622  0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  7623  0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  7624  0BA8  0866               	movf	(_erro_atual+1)^(0+128),w
  7625  0BA9  01F9               	clrf	___awtoft@c+1
  7626  0BAA  07F9               	addwf	___awtoft@c+1,f
  7627  0BAB  0865               	movf	_erro_atual^(0+128),w
  7628  0BAC  01F8               	clrf	___awtoft@c
  7629  0BAD  07F8               	addwf	___awtoft@c,f
  7630  0BAE  160A  118A  217E  120A  158A  	fcall	___awtoft
  7631  0BB3  0878               	movf	?___awtoft,w
  7632  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  7633  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  7634  0BB6  00A3               	movwf	___ftge@ff2
  7635  0BB7  0879               	movf	?___awtoft+1,w
  7636  0BB8  00A4               	movwf	___ftge@ff2+1
  7637  0BB9  087A               	movf	?___awtoft+2,w
  7638  0BBA  00A5               	movwf	___ftge@ff2+2
  7639  0BBB  160A  118A  22BF  120A  158A  	fcall	___ftge
  7640  0BC0  1C03               	btfss	3,0
  7641  0BC1  2BD7               	goto	i1l2980
  7642  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  7643  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  7644  0BC4  0866               	movf	(_erro_atual+1)^(0+128),w
  7645  0BC5  01F9               	clrf	___awtoft@c+1
  7646  0BC6  07F9               	addwf	___awtoft@c+1,f
  7647  0BC7  0865               	movf	_erro_atual^(0+128),w
  7648  0BC8  01F8               	clrf	___awtoft@c
  7649  0BC9  07F8               	addwf	___awtoft@c,f
  7650  0BCA  160A  118A  217E  120A  158A  	fcall	___awtoft
  7651  0BCF  0878               	movf	?___awtoft,w
  7652  0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  7653  0BD1  1303               	bcf	3,6	;RP1=0, select bank1
  7654  0BD2  00A9               	movwf	_ISR$245^(0+128)
  7655  0BD3  0879               	movf	?___awtoft+1,w
  7656  0BD4  00AA               	movwf	(_ISR$245+1)^(0+128)
  7657  0BD5  087A               	movf	?___awtoft+2,w
  7658  0BD6  2BDE               	goto	L13
  7659  0BD7                     i1l2980:	
  7660  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  7661  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  7662  0BD9  084F               	movf	_reajuste^(0+128),w
  7663  0BDA  00A9               	movwf	_ISR$245^(0+128)
  7664  0BDB  0850               	movf	(_reajuste+1)^(0+128),w
  7665  0BDC  00AA               	movwf	(_ISR$245+1)^(0+128)
  7666  0BDD  0851               	movf	(_reajuste+2)^(0+128),w
  7667  0BDE                     L13:	
  7668  0BDE  00AB               	movwf	(_ISR$245+2)^(0+128)
  7669  0BDF  0829               	movf	_ISR$245^(0+128),w
  7670  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  7671  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  7672  0BE2  00C7               	movwf	___fttol@f1
  7673  0BE3  1683               	bsf	3,5	;RP0=1, select bank1
  7674  0BE4  1303               	bcf	3,6	;RP1=0, select bank1
  7675  0BE5  082A               	movf	(_ISR$245+1)^(0+128),w
  7676  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  7677  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  7678  0BE8  00C8               	movwf	___fttol@f1+1
  7679  0BE9  1683               	bsf	3,5	;RP0=1, select bank1
  7680  0BEA  1303               	bcf	3,6	;RP1=0, select bank1
  7681  0BEB  082B               	movf	(_ISR$245+2)^(0+128),w
  7682  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  7683  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  7684  0BEE  00C9               	movwf	___fttol@f1+2
  7685  0BEF  160A  118A  2406  120A  158A  	fcall	___fttol
  7686  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  7687  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  7688  0BF6  0848               	movf	?___fttol+1,w
  7689  0BF7  01D6               	clrf	___wmul@multiplier+1
  7690  0BF8  07D6               	addwf	___wmul@multiplier+1,f
  7691  0BF9  0847               	movf	?___fttol,w
  7692  0BFA  01D5               	clrf	___wmul@multiplier
  7693  0BFB  07D5               	addwf	___wmul@multiplier,f
  7694  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  7695  0BFD  1303               	bcf	3,6	;RP1=0, select bank1
  7696  0BFE  083B               	movf	(_ISR$244+1)^(0+128),w
  7697  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  7698  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  7699  0C01  01D8               	clrf	___wmul@multiplicand+1
  7700  0C02  07D8               	addwf	___wmul@multiplicand+1,f
  7701  0C03  1683               	bsf	3,5	;RP0=1, select bank1
  7702  0C04  1303               	bcf	3,6	;RP1=0, select bank1
  7703  0C05  083A               	movf	_ISR$244^(0+128),w
  7704  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  7705  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  7706  0C08  01D7               	clrf	___wmul@multiplicand
  7707  0C09  07D7               	addwf	___wmul@multiplicand,f
  7708  0C0A  160A  118A  2205  120A  158A  	fcall	___wmul
  7709  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  7710  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  7711  0C11  0867               	movf	_pwm^(0+128),w
  7712  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  7713  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  7714  0C14  0755               	addwf	?___wmul,w
  7715  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  7716  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  7717  0C17  00B6               	movwf	_ISR$241^(0+128)
  7718  0C18  0868               	movf	(_pwm+1)^(0+128),w
  7719  0C19  1803               	skipnc
  7720  0C1A  0A68               	incf	(_pwm+1)^(0+128),w
  7721  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  7722  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  7723  0C1D  0756               	addwf	?___wmul+1,w
  7724  0C1E  1683               	bsf	3,5	;RP0=1, select bank1
  7725  0C1F  1303               	bcf	3,6	;RP1=0, select bank1
  7726  0C20  00B7               	movwf	(_ISR$241+1)^(0+128)
  7727  0C21                     i1l2984:	
  7728  0C21  0837               	movf	(_ISR$241+1)^(0+128),w
  7729  0C22  01E8               	clrf	(_pwm+1)^(0+128)
  7730  0C23  07E8               	addwf	(_pwm+1)^(0+128),f
  7731  0C24  0836               	movf	_ISR$241^(0+128),w
  7732  0C25  01E7               	clrf	_pwm^(0+128)
  7733  0C26  07E7               	addwf	_pwm^(0+128),f
  7734  0C27                     i1l2986:	
  7735                           
  7736                           ;main.c: 366: PWM_DutyCycle2(pwm);
  7737  0C27  0868               	movf	(_pwm+1)^(0+128),w
  7738  0C28  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  7739  0C29  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  7740  0C2A  0867               	movf	_pwm^(0+128),w
  7741  0C2B  01F0               	clrf	i1PWM_DutyCycle2@valor
  7742  0C2C  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  7743  0C2D  160A  118A  2147  120A  158A  	fcall	i1_PWM_DutyCycle2
  7744                           
  7745                           ;main.c: 369: TMR1L = 0x00;
  7746  0C32  1283               	bcf	3,5	;RP0=0, select bank0
  7747  0C33  1303               	bcf	3,6	;RP1=0, select bank0
  7748  0C34  018E               	clrf	14	;volatile
  7749                           
  7750                           ;main.c: 370: TMR1H = 0x00;
  7751  0C35  018F               	clrf	15	;volatile
  7752                           
  7753                           ;main.c: 373: PORTBbits.RB6 = 0;
  7754  0C36  1306               	bcf	6,6	;volatile
  7755  0C37                     i1l2994:	
  7756                           
  7757                           ;main.c: 374: }
  7758                           ;main.c: 377: INTCONbits.T0IF = 0;
  7759  0C37  110B               	bcf	11,2	;volatile
  7760  0C38                     i1l2996:	
  7761                           
  7762                           ;main.c: 378: }
  7763                           ;main.c: 381: if (PIR1bits.TMR1IF)
  7764  0C38  180C               	btfsc	12,0	;volatile
  7765                           
  7766                           ;main.c: 382: {
  7767                           ;main.c: 386: PIR1bits.TMR1IF = 0;
  7768  0C39  100C               	bcf	12,0	;volatile
  7769                           
  7770                           ;main.c: 387: }
  7771                           ;main.c: 390: if (PIR1bits.SSPIF)
  7772  0C3A  198C               	btfsc	12,3	;volatile
  7773                           
  7774                           ;main.c: 391: {
  7775                           ;main.c: 395: PIR1bits.SSPIF = 0;
  7776  0C3B  118C               	bcf	12,3	;volatile
  7777  0C3C  0860               	movf	??_ISR+5,w
  7778  0C3D  00FF               	movwf	127
  7779  0C3E  085F               	movf	??_ISR+4,w
  7780  0C3F  008A               	movwf	10
  7781  0C40  085E               	movf	??_ISR+3,w
  7782  0C41  0084               	movwf	4
  7783  0C42  0E5D               	swapf	(??_ISR+2)^0,w
  7784  0C43  0083               	movwf	3
  7785  0C44  0EFE               	swapf	126,f
  7786  0C45  0E7E               	swapf	126,w
  7787  0C46  0009               	retfie
  7788  0C47                     __end_of_ISR:	
  7789                           
  7790                           	psect	text9_split_2
  7791  0C47                     i1l2850:	
  7792                           ;main.c: 286: }
  7793                           
  7794                           
  7795                           ;main.c: 287: else
  7796                           ;main.c: 288: {
  7797                           ;main.c: 289: reajuste_medio[a] = y;
  7798  0C47  3003               	movlw	3
  7799  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  7800  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  7801  0C4A  00DB               	movwf	??_ISR
  7802  0C4B  085B               	movf	??_ISR,w
  7803  0C4C  00F0               	movwf	___bmul@multiplicand
  7804  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  7805  0C4E  1303               	bcf	3,6	;RP1=0, select bank1
  7806  0C4F  0843               	movf	ISR@a_233^(0+128),w
  7807  0C50  160A  118A  20F8  120A  158A  	fcall	___bmul
  7808  0C55  3E40               	addlw	_reajuste_medio& (0+255)
  7809  0C56  0084               	movwf	4
  7810  0C57  1683               	bsf	3,5	;RP0=1, select bank1
  7811  0C58  1303               	bcf	3,6	;RP1=0, select bank1
  7812  0C59  085E               	movf	_y^(0+128),w
  7813  0C5A  1783               	bsf	3,7	;select IRP bank2
  7814  0C5B  0080               	movwf	0
  7815  0C5C  0A84               	incf	4,f
  7816  0C5D  085F               	movf	(_y+1)^(0+128),w
  7817  0C5E  0080               	movwf	0
  7818  0C5F  0A84               	incf	4,f
  7819  0C60  0860               	movf	(_y+2)^(0+128),w
  7820  0C61                     L3:	
  7821  0C61  0080               	movwf	0
  7822                           
  7823                           ;main.c: 290: }
  7824                           ;main.c: 292: x=x+1;
  7825  0C62  3000               	movlw	0
  7826  0C63  00F8               	movwf	___ftadd@f1
  7827  0C64  3080               	movlw	128
  7828  0C65  00F9               	movwf	___ftadd@f1+1
  7829  0C66  303F               	movlw	63
  7830  0C67  00FA               	movwf	___ftadd@f1+2
  7831  0C68  085B               	movf	_x^(0+128),w
  7832  0C69  00FB               	movwf	___ftadd@f2
  7833  0C6A  085C               	movf	(_x+1)^(0+128),w
  7834  0C6B  00FC               	movwf	___ftadd@f2+1
  7835  0C6C  085D               	movf	(_x+2)^(0+128),w
  7836  0C6D  00FD               	movwf	___ftadd@f2+2
  7837  0C6E  160A  118A  25DB  120A  158A  	fcall	___ftadd
  7838  0C73  0878               	movf	?___ftadd,w
  7839  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  7840  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  7841  0C76  00DB               	movwf	_x^(0+128)
  7842  0C77  0879               	movf	?___ftadd+1,w
  7843  0C78  00DC               	movwf	(_x+1)^(0+128)
  7844  0C79  087A               	movf	?___ftadd+2,w
  7845  0C7A  00DD               	movwf	(_x+2)^(0+128)
  7846  0C7B  3001               	movlw	1
  7847  0C7C  07C3               	addwf	ISR@a_233^(0+128),f
  7848  0C7D  1803               	skipnc
  7849  0C7E  0AC4               	incf	(ISR@a_233+1)^(0+128),f
  7850  0C7F  3000               	movlw	0
  7851  0C80  07C4               	addwf	(ISR@a_233+1)^(0+128),f
  7852  0C81  0844               	movf	(ISR@a_233+1)^(0+128),w
  7853  0C82  3A80               	xorlw	128
  7854  0C83  00FF               	movwf	127
  7855  0C84  3080               	movlw	128
  7856  0C85  027F               	subwf	127,w
  7857  0C86  1D03               	skipz
  7858  0C87  2C8A               	goto	u339_25
  7859  0C88  3010               	movlw	16
  7860  0C89  0243               	subwf	ISR@a_233^(0+128),w
  7861  0C8A                     u339_25:	
  7862  0C8A  1C03               	skipc
  7863  0C8B  2FFD               	goto	L31
  7864  0C8C                     i1l2858:	
  7865                           
  7866                           ;main.c: 293: }
  7867                           ;main.c: 294: }
  7868                           ;main.c: 301: if (erro_atual >= 1001)
  7869  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  7870  0C8D  1303               	bcf	3,6	;RP1=0, select bank1
  7871  0C8E  0866               	movf	(_erro_atual+1)^(0+128),w
  7872  0C8F  3A80               	xorlw	128
  7873  0C90  00FF               	movwf	127
  7874  0C91  3083               	movlw	131
  7875  0C92  027F               	subwf	127,w
  7876  0C93  1D03               	skipz
  7877  0C94  2C97               	goto	u340_25
  7878  0C95  30E9               	movlw	233
  7879  0C96  0265               	subwf	_erro_atual^(0+128),w
  7880  0C97                     u340_25:	
  7881  0C97  1C03               	skipc
  7882  0C98  2DC6               	goto	i1l2886
  7883                           
  7884                           ;main.c: 302: {
  7885                           ;main.c: 304: fiDistancia = trapmf(erro_atual, 1001,1500,2000,2001);
  7886  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  7887  0C9A  1303               	bcf	3,6	;RP1=0, select bank1
  7888  0C9B  0866               	movf	(_erro_atual+1)^(0+128),w
  7889  0C9C  01F9               	clrf	___awtoft@c+1
  7890  0C9D  07F9               	addwf	___awtoft@c+1,f
  7891  0C9E  0865               	movf	_erro_atual^(0+128),w
  7892  0C9F  01F8               	clrf	___awtoft@c
  7893  0CA0  07F8               	addwf	___awtoft@c,f
  7894  0CA1  160A  118A  217E  120A  158A  	fcall	___awtoft
  7895  0CA6  0878               	movf	?___awtoft,w
  7896  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  7897  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  7898  0CA9  00B7               	movwf	trapmf@x
  7899  0CAA  0879               	movf	?___awtoft+1,w
  7900  0CAB  00B8               	movwf	trapmf@x+1
  7901  0CAC  087A               	movf	?___awtoft+2,w
  7902  0CAD  00B9               	movwf	trapmf@x+2
  7903  0CAE  3040               	movlw	64
  7904  0CAF  00BA               	movwf	trapmf@a
  7905  0CB0  307A               	movlw	122
  7906  0CB1  00BB               	movwf	trapmf@a+1
  7907  0CB2  3044               	movlw	68
  7908  0CB3  00BC               	movwf	trapmf@a+2
  7909  0CB4  3080               	movlw	128
  7910  0CB5  00BD               	movwf	trapmf@b
  7911  0CB6  30BB               	movlw	187
  7912  0CB7  00BE               	movwf	trapmf@b+1
  7913  0CB8  3044               	movlw	68
  7914  0CB9  00BF               	movwf	trapmf@b+2
  7915  0CBA  3000               	movlw	0
  7916  0CBB  00C0               	movwf	trapmf@c
  7917  0CBC  30FA               	movlw	250
  7918  0CBD  00C1               	movwf	trapmf@c+1
  7919  0CBE  3044               	movlw	68
  7920  0CBF  00C2               	movwf	trapmf@c+2
  7921  0CC0  3020               	movlw	32
  7922  0CC1  00C3               	movwf	trapmf@d
  7923  0CC2  30FA               	movlw	250
  7924  0CC3  00C4               	movwf	trapmf@d+1
  7925  0CC4  3044               	movlw	68
  7926  0CC5  00C5               	movwf	trapmf@d+2
  7927  0CC6  120A  158A  203C  120A  158A  	fcall	_trapmf
  7928  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  7929  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  7930  0CCD  0837               	movf	?_trapmf,w
  7931  0CCE  1683               	bsf	3,5	;RP0=1, select bank1
  7932  0CCF  1303               	bcf	3,6	;RP1=0, select bank1
  7933  0CD0  00CC               	movwf	_fiDistancia^(0+128)
  7934  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  7935  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  7936  0CD3  0838               	movf	?_trapmf+1,w
  7937  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  7938  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  7939  0CD6  00CD               	movwf	(_fiDistancia+1)^(0+128)
  7940  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  7941  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  7942  0CD9  0839               	movf	?_trapmf+2,w
  7943  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  7944  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  7945  0CDC  00CE               	movwf	(_fiDistancia+2)^(0+128)
  7946                           
  7947                           ;main.c: 307: rule = fiDistancia;
  7948  0CDD  084C               	movf	_fiDistancia^(0+128),w
  7949  0CDE  00D2               	movwf	_rule^(0+128)
  7950  0CDF  084D               	movf	(_fiDistancia+1)^(0+128),w
  7951  0CE0  00D3               	movwf	(_rule+1)^(0+128)
  7952  0CE1  084E               	movf	(_fiDistancia+2)^(0+128),w
  7953  0CE2  00D4               	movwf	(_rule+2)^(0+128)
  7954                           
  7955                           ;main.c: 310: x=0;
  7956  0CE3  3000               	movlw	0
  7957  0CE4  00DB               	movwf	_x^(0+128)
  7958  0CE5  3000               	movlw	0
  7959  0CE6  00DC               	movwf	(_x+1)^(0+128)
  7960  0CE7  3000               	movlw	0
  7961  0CE8  00DD               	movwf	(_x+2)^(0+128)
  7962                           
  7963                           ;main.c: 311: y=0;
  7964  0CE9  3000               	movlw	0
  7965  0CEA  00DE               	movwf	_y^(0+128)
  7966  0CEB  3000               	movlw	0
  7967  0CEC  00DF               	movwf	(_y+1)^(0+128)
  7968  0CED  3000               	movlw	0
  7969  0CEE  00E0               	movwf	(_y+2)^(0+128)
  7970                           
  7971                           ;main.c: 312: for (int a=0; a<=15; a++)
  7972  0CEF  01C5               	clrf	ISR@a_234^(0+128)
  7973  0CF0  01C6               	clrf	(ISR@a_234+1)^(0+128)
  7974  0CF1  0846               	movf	(ISR@a_234+1)^(0+128),w
  7975  0CF2  3A80               	xorlw	128
  7976  0CF3  00FF               	movwf	127
  7977  0CF4  3080               	movlw	128
  7978  0CF5  027F               	subwf	127,w
  7979  0CF6  1D03               	skipz
  7980  0CF7  2CFA               	goto	u341_25
  7981  0CF8  3010               	movlw	16
  7982  0CF9  0245               	subwf	ISR@a_234^(0+128),w
  7983  0CFA                     u341_25:	
  7984  0CFA  1803               	btfsc	3,0
  7985  0CFB  2DC6               	goto	i1l2886
  7986  0CFC                     i1l2874:	
  7987                           
  7988                           ;main.c: 313: {
  7989                           ;main.c: 314: y = trapmf(x,5,10,15,16);
  7990  0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  7991  0CFD  1303               	bcf	3,6	;RP1=0, select bank1
  7992  0CFE  085B               	movf	_x^(0+128),w
  7993  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  7994  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  7995  0D01  00B7               	movwf	trapmf@x
  7996  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  7997  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  7998  0D04  085C               	movf	(_x+1)^(0+128),w
  7999  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  8000  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  8001  0D07  00B8               	movwf	trapmf@x+1
  8002  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  8003  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  8004  0D0A  085D               	movf	(_x+2)^(0+128),w
  8005  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  8006  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  8007  0D0D  00B9               	movwf	trapmf@x+2
  8008  0D0E  3000               	movlw	0
  8009  0D0F  00BA               	movwf	trapmf@a
  8010  0D10  30A0               	movlw	160
  8011  0D11  00BB               	movwf	trapmf@a+1
  8012  0D12  3040               	movlw	64
  8013  0D13  00BC               	movwf	trapmf@a+2
  8014  0D14  3000               	movlw	0
  8015  0D15  00BD               	movwf	trapmf@b
  8016  0D16  3020               	movlw	32
  8017  0D17  00BE               	movwf	trapmf@b+1
  8018  0D18  3041               	movlw	65
  8019  0D19  00BF               	movwf	trapmf@b+2
  8020  0D1A  3000               	movlw	0
  8021  0D1B  00C0               	movwf	trapmf@c
  8022  0D1C  3070               	movlw	112
  8023  0D1D  00C1               	movwf	trapmf@c+1
  8024  0D1E  3041               	movlw	65
  8025  0D1F  00C2               	movwf	trapmf@c+2
  8026  0D20  3000               	movlw	0
  8027  0D21  00C3               	movwf	trapmf@d
  8028  0D22  3080               	movlw	128
  8029  0D23  00C4               	movwf	trapmf@d+1
  8030  0D24  3041               	movlw	65
  8031  0D25  00C5               	movwf	trapmf@d+2
  8032  0D26  120A  158A  203C  120A  158A  	fcall	_trapmf
  8033  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  8034  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  8035  0D2D  0837               	movf	?_trapmf,w
  8036  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  8037  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  8038  0D30  00DE               	movwf	_y^(0+128)
  8039  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  8040  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  8041  0D33  0838               	movf	?_trapmf+1,w
  8042  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  8043  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  8044  0D36  00DF               	movwf	(_y+1)^(0+128)
  8045  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  8046  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  8047  0D39  0839               	movf	?_trapmf+2,w
  8048  0D3A  1683               	bsf	3,5	;RP0=1, select bank1
  8049  0D3B  1303               	bcf	3,6	;RP1=0, select bank1
  8050  0D3C  00E0               	movwf	(_y+2)^(0+128)
  8051                           
  8052                           ;main.c: 316: if (y >= rule)
  8053  0D3D  085E               	movf	_y^(0+128),w
  8054  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  8055  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  8056  0D40  00A0               	movwf	___ftge@ff1
  8057  0D41  1683               	bsf	3,5	;RP0=1, select bank1
  8058  0D42  1303               	bcf	3,6	;RP1=0, select bank1
  8059  0D43  085F               	movf	(_y+1)^(0+128),w
  8060  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  8061  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  8062  0D46  00A1               	movwf	___ftge@ff1+1
  8063  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  8064  0D48  1303               	bcf	3,6	;RP1=0, select bank1
  8065  0D49  0860               	movf	(_y+2)^(0+128),w
  8066  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  8067  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  8068  0D4C  00A2               	movwf	___ftge@ff1+2
  8069  0D4D  1683               	bsf	3,5	;RP0=1, select bank1
  8070  0D4E  1303               	bcf	3,6	;RP1=0, select bank1
  8071  0D4F  0852               	movf	_rule^(0+128),w
  8072  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  8073  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  8074  0D52  00A3               	movwf	___ftge@ff2
  8075  0D53  1683               	bsf	3,5	;RP0=1, select bank1
  8076  0D54  1303               	bcf	3,6	;RP1=0, select bank1
  8077  0D55  0853               	movf	(_rule+1)^(0+128),w
  8078  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  8079  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  8080  0D58  00A4               	movwf	___ftge@ff2+1
  8081  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  8082  0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  8083  0D5B  0854               	movf	(_rule+2)^(0+128),w
  8084  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  8085  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  8086  0D5E  00A5               	movwf	___ftge@ff2+2
  8087  0D5F  160A  118A  22BF  120A  158A  	fcall	___ftge
  8088  0D64  1C03               	btfss	3,0
  8089  0D65  2D81               	goto	i1l2878
  8090                           
  8091                           ;main.c: 317: {
  8092                           ;main.c: 318: reajuste_grande[a] = rule;
  8093  0D66  3003               	movlw	3
  8094  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  8095  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  8096  0D69  00DB               	movwf	??_ISR
  8097  0D6A  085B               	movf	??_ISR,w
  8098  0D6B  00F0               	movwf	___bmul@multiplicand
  8099  0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  8100  0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  8101  0D6E  0845               	movf	ISR@a_234^(0+128),w
  8102  0D6F  160A  118A  20F8  120A  158A  	fcall	___bmul
  8103  0D74  3E10               	addlw	_reajuste_grande& (0+255)
  8104  0D75  0084               	movwf	4
  8105  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  8106  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  8107  0D78  0852               	movf	_rule^(0+128),w
  8108  0D79  1783               	bsf	3,7	;select IRP bank2
  8109  0D7A  0080               	movwf	0
  8110  0D7B  0A84               	incf	4,f
  8111  0D7C  0853               	movf	(_rule+1)^(0+128),w
  8112  0D7D  0080               	movwf	0
  8113  0D7E  0A84               	incf	4,f
  8114  0D7F  0854               	movf	(_rule+2)^(0+128),w
  8115  0D80  2D9B               	goto	L4
  8116  0D81                     i1l2878:	
  8117                           ;main.c: 319: }
  8118                           
  8119                           
  8120                           ;main.c: 320: else
  8121                           ;main.c: 321: {
  8122                           ;main.c: 322: reajuste_grande[a] = y;
  8123  0D81  3003               	movlw	3
  8124  0D82  1283               	bcf	3,5	;RP0=0, select bank0
  8125  0D83  1303               	bcf	3,6	;RP1=0, select bank0
  8126  0D84  00DB               	movwf	??_ISR
  8127  0D85  085B               	movf	??_ISR,w
  8128  0D86  00F0               	movwf	___bmul@multiplicand
  8129  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  8130  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  8131  0D89  0845               	movf	ISR@a_234^(0+128),w
  8132  0D8A  160A  118A  20F8  120A  158A  	fcall	___bmul
  8133  0D8F  3E10               	addlw	_reajuste_grande& (0+255)
  8134  0D90  0084               	movwf	4
  8135  0D91  1683               	bsf	3,5	;RP0=1, select bank1
  8136  0D92  1303               	bcf	3,6	;RP1=0, select bank1
  8137  0D93  085E               	movf	_y^(0+128),w
  8138  0D94  1783               	bsf	3,7	;select IRP bank2
  8139  0D95  0080               	movwf	0
  8140  0D96  0A84               	incf	4,f
  8141  0D97  085F               	movf	(_y+1)^(0+128),w
  8142  0D98  0080               	movwf	0
  8143  0D99  0A84               	incf	4,f
  8144  0D9A  0860               	movf	(_y+2)^(0+128),w
  8145  0D9B                     L4:	
  8146  0D9B  0080               	movwf	0
  8147                           
  8148                           ;main.c: 323: }
  8149                           ;main.c: 325: x=x+1;
  8150  0D9C  3000               	movlw	0
  8151  0D9D  00F8               	movwf	___ftadd@f1
  8152  0D9E  3080               	movlw	128
  8153  0D9F  00F9               	movwf	___ftadd@f1+1
  8154  0DA0  303F               	movlw	63
  8155  0DA1  00FA               	movwf	___ftadd@f1+2
  8156  0DA2  085B               	movf	_x^(0+128),w
  8157  0DA3  00FB               	movwf	___ftadd@f2
  8158  0DA4  085C               	movf	(_x+1)^(0+128),w
  8159  0DA5  00FC               	movwf	___ftadd@f2+1
  8160  0DA6  085D               	movf	(_x+2)^(0+128),w
  8161  0DA7  00FD               	movwf	___ftadd@f2+2
  8162  0DA8  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8163  0DAD  0878               	movf	?___ftadd,w
  8164  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  8165  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  8166  0DB0  00DB               	movwf	_x^(0+128)
  8167  0DB1  0879               	movf	?___ftadd+1,w
  8168  0DB2  00DC               	movwf	(_x+1)^(0+128)
  8169  0DB3  087A               	movf	?___ftadd+2,w
  8170  0DB4  00DD               	movwf	(_x+2)^(0+128)
  8171  0DB5  3001               	movlw	1
  8172  0DB6  07C5               	addwf	ISR@a_234^(0+128),f
  8173  0DB7  1803               	skipnc
  8174  0DB8  0AC6               	incf	(ISR@a_234+1)^(0+128),f
  8175  0DB9  3000               	movlw	0
  8176  0DBA  07C6               	addwf	(ISR@a_234+1)^(0+128),f
  8177  0DBB  0846               	movf	(ISR@a_234+1)^(0+128),w
  8178  0DBC  3A80               	xorlw	128
  8179  0DBD  00FF               	movwf	127
  8180  0DBE  3080               	movlw	128
  8181  0DBF  027F               	subwf	127,w
  8182  0DC0  1D03               	skipz
  8183  0DC1  2DC4               	goto	u343_25
  8184  0DC2  3010               	movlw	16
  8185  0DC3  0245               	subwf	ISR@a_234^(0+128),w
  8186  0DC4                     u343_25:	
  8187  0DC4  1C03               	skipc
  8188  0DC5  2CFC               	goto	i1l2874
  8189  0DC6                     i1l2886:	
  8190                           
  8191                           ;main.c: 326: }
  8192                           ;main.c: 327: }
  8193                           ;main.c: 332: x = 0;
  8194  0DC6  3000               	movlw	0
  8195  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  8196  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  8197  0DC9  00DB               	movwf	_x^(0+128)
  8198  0DCA  3000               	movlw	0
  8199  0DCB  00DC               	movwf	(_x+1)^(0+128)
  8200  0DCC  3000               	movlw	0
  8201  0DCD  00DD               	movwf	(_x+2)^(0+128)
  8202                           
  8203                           ;main.c: 333: total_area = 0;
  8204  0DCE  3000               	movlw	0
  8205  0DCF  00D8               	movwf	_total_area^(0+128)
  8206  0DD0  3000               	movlw	0
  8207  0DD1  00D9               	movwf	(_total_area+1)^(0+128)
  8208  0DD2  3000               	movlw	0
  8209  0DD3  00DA               	movwf	(_total_area+2)^(0+128)
  8210                           
  8211                           ;main.c: 334: sum = 0;
  8212  0DD4  3000               	movlw	0
  8213  0DD5  00D5               	movwf	_sum^(0+128)
  8214  0DD6  3000               	movlw	0
  8215  0DD7  00D6               	movwf	(_sum+1)^(0+128)
  8216  0DD8  3000               	movlw	0
  8217  0DD9  00D7               	movwf	(_sum+2)^(0+128)
  8218                           
  8219                           ;main.c: 335: for (int a=0; a<=15; a++)
  8220  0DDA  01C7               	clrf	ISR@a_235^(0+128)
  8221  0DDB  01C8               	clrf	(ISR@a_235+1)^(0+128)
  8222  0DDC  0848               	movf	(ISR@a_235+1)^(0+128),w
  8223  0DDD  3A80               	xorlw	128
  8224  0DDE  00FF               	movwf	127
  8225  0DDF  3080               	movlw	128
  8226  0DE0  027F               	subwf	127,w
  8227  0DE1  1D03               	skipz
  8228  0DE2  2DE5               	goto	u344_25
  8229  0DE3  3010               	movlw	16
  8230  0DE4  0247               	subwf	ISR@a_235^(0+128),w
  8231  0DE5                     u344_25:	
  8232  0DE5  1803               	btfsc	3,0
  8233  0DE6  2FBB               	goto	i1l2916
  8234  0DE7                     i1l190:	
  8235                           
  8236                           ;main.c: 336: {
  8237                           ;main.c: 337: if (a >= 0 && a <= 5)
  8238  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  8239  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  8240  0DE9  1BC8               	btfsc	(ISR@a_235+1)^(0+128),7
  8241  0DEA  2E6D               	goto	i1l2898
  8242  0DEB  0848               	movf	(ISR@a_235+1)^(0+128),w
  8243  0DEC  3A80               	xorlw	128
  8244  0DED  00FF               	movwf	127
  8245  0DEE  3080               	movlw	128
  8246  0DEF  027F               	subwf	127,w
  8247  0DF0  1D03               	skipz
  8248  0DF1  2DF4               	goto	u346_25
  8249  0DF2  3006               	movlw	6
  8250  0DF3  0247               	subwf	ISR@a_235^(0+128),w
  8251  0DF4                     u346_25:	
  8252  0DF4  1803               	skipnc
  8253  0DF5  2E6D               	goto	i1l2898
  8254                           
  8255                           ;main.c: 338: {
  8256                           ;main.c: 339: total_area = total_area + reajuste_baixo[a];
  8257  0DF6  1683               	bsf	3,5	;RP0=1, select bank1
  8258  0DF7  1303               	bcf	3,6	;RP1=0, select bank1
  8259  0DF8  0858               	movf	_total_area^(0+128),w
  8260  0DF9  00F8               	movwf	___ftadd@f1
  8261  0DFA  0859               	movf	(_total_area+1)^(0+128),w
  8262  0DFB  00F9               	movwf	___ftadd@f1+1
  8263  0DFC  085A               	movf	(_total_area+2)^(0+128),w
  8264  0DFD  00FA               	movwf	___ftadd@f1+2
  8265  0DFE  3003               	movlw	3
  8266  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  8267  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  8268  0E01  00DB               	movwf	??_ISR
  8269  0E02  085B               	movf	??_ISR,w
  8270  0E03  00F0               	movwf	___bmul@multiplicand
  8271  0E04  1683               	bsf	3,5	;RP0=1, select bank1
  8272  0E05  1303               	bcf	3,6	;RP1=0, select bank1
  8273  0E06  0847               	movf	ISR@a_235^(0+128),w
  8274  0E07  160A  118A  20F8  120A  158A  	fcall	___bmul
  8275  0E0C  3E90               	addlw	_reajuste_baixo& (0+255)
  8276  0E0D  0084               	movwf	4
  8277  0E0E  1783               	bsf	3,7	;select IRP bank3
  8278  0E0F  0800               	movf	0,w
  8279  0E10  00FB               	movwf	___ftadd@f2
  8280  0E11  0A84               	incf	4,f
  8281  0E12  0800               	movf	0,w
  8282  0E13  00FC               	movwf	___ftadd@f2+1
  8283  0E14  0A84               	incf	4,f
  8284  0E15  0800               	movf	0,w
  8285  0E16  00FD               	movwf	___ftadd@f2+2
  8286  0E17  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8287  0E1C  0878               	movf	?___ftadd,w
  8288  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  8289  0E1E  1303               	bcf	3,6	;RP1=0, select bank1
  8290  0E1F  00D8               	movwf	_total_area^(0+128)
  8291  0E20  0879               	movf	?___ftadd+1,w
  8292  0E21  00D9               	movwf	(_total_area+1)^(0+128)
  8293  0E22  087A               	movf	?___ftadd+2,w
  8294  0E23  00DA               	movwf	(_total_area+2)^(0+128)
  8295                           
  8296                           ;main.c: 340: sum = sum + (x * reajuste_baixo[a]);
  8297  0E24  0855               	movf	_sum^(0+128),w
  8298  0E25  00F8               	movwf	___ftadd@f1
  8299  0E26  0856               	movf	(_sum+1)^(0+128),w
  8300  0E27  00F9               	movwf	___ftadd@f1+1
  8301  0E28  0857               	movf	(_sum+2)^(0+128),w
  8302  0E29  00FA               	movwf	___ftadd@f1+2
  8303  0E2A  085B               	movf	_x^(0+128),w
  8304  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  8305  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  8306  0E2D  00B7               	movwf	___ftmul@f1
  8307  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  8308  0E2F  1303               	bcf	3,6	;RP1=0, select bank1
  8309  0E30  085C               	movf	(_x+1)^(0+128),w
  8310  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  8311  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  8312  0E33  00B8               	movwf	___ftmul@f1+1
  8313  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  8314  0E35  1303               	bcf	3,6	;RP1=0, select bank1
  8315  0E36  085D               	movf	(_x+2)^(0+128),w
  8316  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  8317  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  8318  0E39  00B9               	movwf	___ftmul@f1+2
  8319  0E3A  3003               	movlw	3
  8320  0E3B  00DB               	movwf	??_ISR
  8321  0E3C  085B               	movf	??_ISR,w
  8322  0E3D  00F0               	movwf	___bmul@multiplicand
  8323  0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  8324  0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  8325  0E40  0847               	movf	ISR@a_235^(0+128),w
  8326  0E41  160A  118A  20F8  120A  158A  	fcall	___bmul
  8327  0E46  3E90               	addlw	_reajuste_baixo& (0+255)
  8328  0E47  0084               	movwf	4
  8329  0E48  1783               	bsf	3,7	;select IRP bank3
  8330  0E49  0800               	movf	0,w
  8331  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  8332  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  8333  0E4C  00BA               	movwf	___ftmul@f2
  8334  0E4D  0A84               	incf	4,f
  8335  0E4E  0800               	movf	0,w
  8336  0E4F  00BB               	movwf	___ftmul@f2+1
  8337  0E50  0A84               	incf	4,f
  8338  0E51  0800               	movf	0,w
  8339  0E52  00BC               	movwf	___ftmul@f2+2
  8340  0E53  120A  118A  272B  120A  158A  	fcall	___ftmul
  8341  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  8342  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  8343  0E5A  0837               	movf	?___ftmul,w
  8344  0E5B  00FB               	movwf	___ftadd@f2
  8345  0E5C  0838               	movf	?___ftmul+1,w
  8346  0E5D  00FC               	movwf	___ftadd@f2+1
  8347  0E5E  0839               	movf	?___ftmul+2,w
  8348  0E5F  00FD               	movwf	___ftadd@f2+2
  8349  0E60  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8350  0E65  0878               	movf	?___ftadd,w
  8351  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  8352  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  8353  0E68  00D5               	movwf	_sum^(0+128)
  8354  0E69  0879               	movf	?___ftadd+1,w
  8355  0E6A  00D6               	movwf	(_sum+1)^(0+128)
  8356  0E6B  087A               	movf	?___ftadd+2,w
  8357  0E6C  00D7               	movwf	(_sum+2)^(0+128)
  8358  0E6D                     i1l2898:	
  8359                           
  8360                           ;main.c: 341: }
  8361                           ;main.c: 343: if (a >= 5 && a <= 10)
  8362  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  8363  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  8364  0E6F  0848               	movf	(ISR@a_235+1)^(0+128),w
  8365  0E70  3A80               	xorlw	128
  8366  0E71  00FF               	movwf	127
  8367  0E72  3080               	movlw	128
  8368  0E73  027F               	subwf	127,w
  8369  0E74  1D03               	skipz
  8370  0E75  2E78               	goto	u347_25
  8371  0E76  3005               	movlw	5
  8372  0E77  0247               	subwf	ISR@a_235^(0+128),w
  8373  0E78                     u347_25:	
  8374  0E78  1C03               	skipc
  8375  0E79  2EFE               	goto	i1l2904
  8376  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  8377  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  8378  0E7C  0848               	movf	(ISR@a_235+1)^(0+128),w
  8379  0E7D  3A80               	xorlw	128
  8380  0E7E  00FF               	movwf	127
  8381  0E7F  3080               	movlw	128
  8382  0E80  027F               	subwf	127,w
  8383  0E81  1D03               	skipz
  8384  0E82  2E85               	goto	u348_25
  8385  0E83  300B               	movlw	11
  8386  0E84  0247               	subwf	ISR@a_235^(0+128),w
  8387  0E85                     u348_25:	
  8388  0E85  1803               	skipnc
  8389  0E86  2EFE               	goto	i1l2904
  8390                           
  8391                           ;main.c: 344: {
  8392                           ;main.c: 345: total_area = total_area + reajuste_medio[a];
  8393  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  8394  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  8395  0E89  0858               	movf	_total_area^(0+128),w
  8396  0E8A  00F8               	movwf	___ftadd@f1
  8397  0E8B  0859               	movf	(_total_area+1)^(0+128),w
  8398  0E8C  00F9               	movwf	___ftadd@f1+1
  8399  0E8D  085A               	movf	(_total_area+2)^(0+128),w
  8400  0E8E  00FA               	movwf	___ftadd@f1+2
  8401  0E8F  3003               	movlw	3
  8402  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  8403  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  8404  0E92  00DB               	movwf	??_ISR
  8405  0E93  085B               	movf	??_ISR,w
  8406  0E94  00F0               	movwf	___bmul@multiplicand
  8407  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  8408  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  8409  0E97  0847               	movf	ISR@a_235^(0+128),w
  8410  0E98  160A  118A  20F8  120A  158A  	fcall	___bmul
  8411  0E9D  3E40               	addlw	_reajuste_medio& (0+255)
  8412  0E9E  0084               	movwf	4
  8413  0E9F  1783               	bsf	3,7	;select IRP bank2
  8414  0EA0  0800               	movf	0,w
  8415  0EA1  00FB               	movwf	___ftadd@f2
  8416  0EA2  0A84               	incf	4,f
  8417  0EA3  0800               	movf	0,w
  8418  0EA4  00FC               	movwf	___ftadd@f2+1
  8419  0EA5  0A84               	incf	4,f
  8420  0EA6  0800               	movf	0,w
  8421  0EA7  00FD               	movwf	___ftadd@f2+2
  8422  0EA8  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8423  0EAD  0878               	movf	?___ftadd,w
  8424  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  8425  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  8426  0EB0  00D8               	movwf	_total_area^(0+128)
  8427  0EB1  0879               	movf	?___ftadd+1,w
  8428  0EB2  00D9               	movwf	(_total_area+1)^(0+128)
  8429  0EB3  087A               	movf	?___ftadd+2,w
  8430  0EB4  00DA               	movwf	(_total_area+2)^(0+128)
  8431                           
  8432                           ;main.c: 346: sum = sum + (x * reajuste_medio[a]);
  8433  0EB5  0855               	movf	_sum^(0+128),w
  8434  0EB6  00F8               	movwf	___ftadd@f1
  8435  0EB7  0856               	movf	(_sum+1)^(0+128),w
  8436  0EB8  00F9               	movwf	___ftadd@f1+1
  8437  0EB9  0857               	movf	(_sum+2)^(0+128),w
  8438  0EBA  00FA               	movwf	___ftadd@f1+2
  8439  0EBB  085B               	movf	_x^(0+128),w
  8440  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  8441  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  8442  0EBE  00B7               	movwf	___ftmul@f1
  8443  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  8444  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  8445  0EC1  085C               	movf	(_x+1)^(0+128),w
  8446  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  8447  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  8448  0EC4  00B8               	movwf	___ftmul@f1+1
  8449  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  8450  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  8451  0EC7  085D               	movf	(_x+2)^(0+128),w
  8452  0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  8453  0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  8454  0ECA  00B9               	movwf	___ftmul@f1+2
  8455  0ECB  3003               	movlw	3
  8456  0ECC  00DB               	movwf	??_ISR
  8457  0ECD  085B               	movf	??_ISR,w
  8458  0ECE  00F0               	movwf	___bmul@multiplicand
  8459  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  8460  0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  8461  0ED1  0847               	movf	ISR@a_235^(0+128),w
  8462  0ED2  160A  118A  20F8  120A  158A  	fcall	___bmul
  8463  0ED7  3E40               	addlw	_reajuste_medio& (0+255)
  8464  0ED8  0084               	movwf	4
  8465  0ED9  1783               	bsf	3,7	;select IRP bank2
  8466  0EDA  0800               	movf	0,w
  8467  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  8468  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  8469  0EDD  00BA               	movwf	___ftmul@f2
  8470  0EDE  0A84               	incf	4,f
  8471  0EDF  0800               	movf	0,w
  8472  0EE0  00BB               	movwf	___ftmul@f2+1
  8473  0EE1  0A84               	incf	4,f
  8474  0EE2  0800               	movf	0,w
  8475  0EE3  00BC               	movwf	___ftmul@f2+2
  8476  0EE4  120A  118A  272B  120A  158A  	fcall	___ftmul
  8477  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  8478  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  8479  0EEB  0837               	movf	?___ftmul,w
  8480  0EEC  00FB               	movwf	___ftadd@f2
  8481  0EED  0838               	movf	?___ftmul+1,w
  8482  0EEE  00FC               	movwf	___ftadd@f2+1
  8483  0EEF  0839               	movf	?___ftmul+2,w
  8484  0EF0  00FD               	movwf	___ftadd@f2+2
  8485  0EF1  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8486  0EF6  0878               	movf	?___ftadd,w
  8487  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  8488  0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  8489  0EF9  00D5               	movwf	_sum^(0+128)
  8490  0EFA  0879               	movf	?___ftadd+1,w
  8491  0EFB  00D6               	movwf	(_sum+1)^(0+128)
  8492  0EFC  087A               	movf	?___ftadd+2,w
  8493  0EFD  00D7               	movwf	(_sum+2)^(0+128)
  8494  0EFE                     i1l2904:	
  8495                           
  8496                           ;main.c: 347: }
  8497                           ;main.c: 349: if (a >= 10 && a <= 15)
  8498  0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  8499  0EFF  1303               	bcf	3,6	;RP1=0, select bank1
  8500  0F00  0848               	movf	(ISR@a_235+1)^(0+128),w
  8501  0F01  3A80               	xorlw	128
  8502  0F02  00FF               	movwf	127
  8503  0F03  3080               	movlw	128
  8504  0F04  027F               	subwf	127,w
  8505  0F05  1D03               	skipz
  8506  0F06  2F09               	goto	u349_25
  8507  0F07  300A               	movlw	10
  8508  0F08  0247               	subwf	ISR@a_235^(0+128),w
  8509  0F09                     u349_25:	
  8510  0F09  1C03               	skipc
  8511  0F0A  2F8F               	goto	i1l2910
  8512  0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  8513  0F0C  1303               	bcf	3,6	;RP1=0, select bank1
  8514  0F0D  0848               	movf	(ISR@a_235+1)^(0+128),w
  8515  0F0E  3A80               	xorlw	128
  8516  0F0F  00FF               	movwf	127
  8517  0F10  3080               	movlw	128
  8518  0F11  027F               	subwf	127,w
  8519  0F12  1D03               	skipz
  8520  0F13  2F16               	goto	u350_25
  8521  0F14  3010               	movlw	16
  8522  0F15  0247               	subwf	ISR@a_235^(0+128),w
  8523  0F16                     u350_25:	
  8524  0F16  1803               	skipnc
  8525  0F17  2F8F               	goto	i1l2910
  8526                           
  8527                           ;main.c: 350: {
  8528                           ;main.c: 351: total_area = total_area + reajuste_grande[a];
  8529  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  8530  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  8531  0F1A  0858               	movf	_total_area^(0+128),w
  8532  0F1B  00F8               	movwf	___ftadd@f1
  8533  0F1C  0859               	movf	(_total_area+1)^(0+128),w
  8534  0F1D  00F9               	movwf	___ftadd@f1+1
  8535  0F1E  085A               	movf	(_total_area+2)^(0+128),w
  8536  0F1F  00FA               	movwf	___ftadd@f1+2
  8537  0F20  3003               	movlw	3
  8538  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  8539  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  8540  0F23  00DB               	movwf	??_ISR
  8541  0F24  085B               	movf	??_ISR,w
  8542  0F25  00F0               	movwf	___bmul@multiplicand
  8543  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  8544  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  8545  0F28  0847               	movf	ISR@a_235^(0+128),w
  8546  0F29  160A  118A  20F8  120A  158A  	fcall	___bmul
  8547  0F2E  3E10               	addlw	_reajuste_grande& (0+255)
  8548  0F2F  0084               	movwf	4
  8549  0F30  1783               	bsf	3,7	;select IRP bank2
  8550  0F31  0800               	movf	0,w
  8551  0F32  00FB               	movwf	___ftadd@f2
  8552  0F33  0A84               	incf	4,f
  8553  0F34  0800               	movf	0,w
  8554  0F35  00FC               	movwf	___ftadd@f2+1
  8555  0F36  0A84               	incf	4,f
  8556  0F37  0800               	movf	0,w
  8557  0F38  00FD               	movwf	___ftadd@f2+2
  8558  0F39  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8559  0F3E  0878               	movf	?___ftadd,w
  8560  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
  8561  0F40  1303               	bcf	3,6	;RP1=0, select bank1
  8562  0F41  00D8               	movwf	_total_area^(0+128)
  8563  0F42  0879               	movf	?___ftadd+1,w
  8564  0F43  00D9               	movwf	(_total_area+1)^(0+128)
  8565  0F44  087A               	movf	?___ftadd+2,w
  8566  0F45  00DA               	movwf	(_total_area+2)^(0+128)
  8567                           
  8568                           ;main.c: 352: sum = sum + (x * reajuste_grande[a]);
  8569  0F46  0855               	movf	_sum^(0+128),w
  8570  0F47  00F8               	movwf	___ftadd@f1
  8571  0F48  0856               	movf	(_sum+1)^(0+128),w
  8572  0F49  00F9               	movwf	___ftadd@f1+1
  8573  0F4A  0857               	movf	(_sum+2)^(0+128),w
  8574  0F4B  00FA               	movwf	___ftadd@f1+2
  8575  0F4C  085B               	movf	_x^(0+128),w
  8576  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  8577  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  8578  0F4F  00B7               	movwf	___ftmul@f1
  8579  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  8580  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  8581  0F52  085C               	movf	(_x+1)^(0+128),w
  8582  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  8583  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  8584  0F55  00B8               	movwf	___ftmul@f1+1
  8585  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  8586  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  8587  0F58  085D               	movf	(_x+2)^(0+128),w
  8588  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  8589  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  8590  0F5B  00B9               	movwf	___ftmul@f1+2
  8591  0F5C  3003               	movlw	3
  8592  0F5D  00DB               	movwf	??_ISR
  8593  0F5E  085B               	movf	??_ISR,w
  8594  0F5F  00F0               	movwf	___bmul@multiplicand
  8595  0F60  1683               	bsf	3,5	;RP0=1, select bank1
  8596  0F61  1303               	bcf	3,6	;RP1=0, select bank1
  8597  0F62  0847               	movf	ISR@a_235^(0+128),w
  8598  0F63  160A  118A  20F8  120A  158A  	fcall	___bmul
  8599  0F68  3E10               	addlw	_reajuste_grande& (0+255)
  8600  0F69  0084               	movwf	4
  8601  0F6A  1783               	bsf	3,7	;select IRP bank2
  8602  0F6B  0800               	movf	0,w
  8603  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  8604  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  8605  0F6E  00BA               	movwf	___ftmul@f2
  8606  0F6F  0A84               	incf	4,f
  8607  0F70  0800               	movf	0,w
  8608  0F71  00BB               	movwf	___ftmul@f2+1
  8609  0F72  0A84               	incf	4,f
  8610  0F73  0800               	movf	0,w
  8611  0F74  00BC               	movwf	___ftmul@f2+2
  8612  0F75  120A  118A  272B  120A  158A  	fcall	___ftmul
  8613  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  8614  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  8615  0F7C  0837               	movf	?___ftmul,w
  8616  0F7D  00FB               	movwf	___ftadd@f2
  8617  0F7E  0838               	movf	?___ftmul+1,w
  8618  0F7F  00FC               	movwf	___ftadd@f2+1
  8619  0F80  0839               	movf	?___ftmul+2,w
  8620  0F81  00FD               	movwf	___ftadd@f2+2
  8621  0F82  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8622  0F87  0878               	movf	?___ftadd,w
  8623  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  8624  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  8625  0F8A  00D5               	movwf	_sum^(0+128)
  8626  0F8B  0879               	movf	?___ftadd+1,w
  8627  0F8C  00D6               	movwf	(_sum+1)^(0+128)
  8628  0F8D  087A               	movf	?___ftadd+2,w
  8629  0F8E  00D7               	movwf	(_sum+2)^(0+128)
  8630  0F8F                     i1l2910:	
  8631                           
  8632                           ;main.c: 353: }
  8633                           ;main.c: 354: x=x+1;
  8634  0F8F  3000               	movlw	0
  8635  0F90  00F8               	movwf	___ftadd@f1
  8636  0F91  3080               	movlw	128
  8637  0F92  00F9               	movwf	___ftadd@f1+1
  8638  0F93  303F               	movlw	63
  8639  0F94  00FA               	movwf	___ftadd@f1+2
  8640  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  8641  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  8642  0F97  085B               	movf	_x^(0+128),w
  8643  0F98  00FB               	movwf	___ftadd@f2
  8644  0F99  085C               	movf	(_x+1)^(0+128),w
  8645  0F9A  00FC               	movwf	___ftadd@f2+1
  8646  0F9B  085D               	movf	(_x+2)^(0+128),w
  8647  0F9C  00FD               	movwf	___ftadd@f2+2
  8648  0F9D  160A  118A  25DB  120A  158A  	fcall	___ftadd
  8649  0FA2  0878               	movf	?___ftadd,w
  8650  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  8651  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  8652  0FA5  00DB               	movwf	_x^(0+128)
  8653  0FA6  0879               	movf	?___ftadd+1,w
  8654  0FA7  00DC               	movwf	(_x+1)^(0+128)
  8655  0FA8  087A               	movf	?___ftadd+2,w
  8656  0FA9  00DD               	movwf	(_x+2)^(0+128)
  8657  0FAA  3001               	movlw	1
  8658  0FAB  07C7               	addwf	ISR@a_235^(0+128),f
  8659  0FAC  1803               	skipnc
  8660  0FAD  0AC8               	incf	(ISR@a_235+1)^(0+128),f
  8661  0FAE  3000               	movlw	0
  8662  0FAF  07C8               	addwf	(ISR@a_235+1)^(0+128),f
  8663  0FB0  0848               	movf	(ISR@a_235+1)^(0+128),w
  8664  0FB1  3A80               	xorlw	128
  8665  0FB2  00FF               	movwf	127
  8666  0FB3  3080               	movlw	128
  8667  0FB4  027F               	subwf	127,w
  8668  0FB5  1D03               	skipz
  8669  0FB6  2FB9               	goto	u351_25
  8670  0FB7  3010               	movlw	16
  8671  0FB8  0247               	subwf	ISR@a_235^(0+128),w
  8672  0FB9                     u351_25:	
  8673  0FB9  1C03               	skipc
  8674  0FBA  2DE7               	goto	i1l190
  8675  0FBB                     i1l2916:	
  8676                           
  8677                           ;main.c: 355: }
  8678                           ;main.c: 358: if (total_area != 0) {
  8679  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  8680  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  8681  0FBD  085A               	movf	(_total_area+2)^(0+128),w
  8682  0FBE  0459               	iorwf	(_total_area+1)^(0+128),w
  8683  0FBF  0458               	iorwf	_total_area^(0+128),w
  8684  0FC0  120A  158A  1903   	skipnz
  8685  0FC3  298C               	goto	i1l2920
  8686                           
  8687                           ;main.c: 359: reajuste = sum/total_area;
  8688  0FC4  0858               	movf	_total_area^(0+128),w
  8689  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  8690  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  8691  0FC7  00A7               	movwf	___ftdiv@f2
  8692  0FC8  1683               	bsf	3,5	;RP0=1, select bank1
  8693  0FC9  1303               	bcf	3,6	;RP1=0, select bank1
  8694  0FCA  0859               	movf	(_total_area+1)^(0+128),w
  8695  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  8696  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  8697  0FCD  00A8               	movwf	___ftdiv@f2+1
  8698  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  8699  0FCF  1303               	bcf	3,6	;RP1=0, select bank1
  8700  0FD0  085A               	movf	(_total_area+2)^(0+128),w
  8701  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  8702  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  8703  0FD3  00A9               	movwf	___ftdiv@f2+2
  8704  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  8705  0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  8706  0FD6  0855               	movf	_sum^(0+128),w
  8707  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  8708  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  8709  0FD9  00AA               	movwf	___ftdiv@f1
  8710  0FDA  1683               	bsf	3,5	;RP0=1, select bank1
  8711  0FDB  1303               	bcf	3,6	;RP1=0, select bank1
  8712  0FDC  0856               	movf	(_sum+1)^(0+128),w
  8713  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  8714  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  8715  0FDF  00AB               	movwf	___ftdiv@f1+1
  8716  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  8717  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  8718  0FE2  0857               	movf	(_sum+2)^(0+128),w
  8719  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  8720  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  8721  0FE5  00AC               	movwf	___ftdiv@f1+2
  8722  0FE6  160A  118A  2523   	fcall	___ftdiv
  8723  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  8724  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  8725  0FEB  0827               	movf	?___ftdiv,w
  8726  0FEC  1683               	bsf	3,5	;RP0=1, select bank1
  8727  0FED  1303               	bcf	3,6	;RP1=0, select bank1
  8728  0FEE  00CF               	movwf	_reajuste^(0+128)
  8729  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  8730  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  8731  0FF1  0828               	movf	?___ftdiv+1,w
  8732  0FF2  1683               	bsf	3,5	;RP0=1, select bank1
  8733  0FF3  1303               	bcf	3,6	;RP1=0, select bank1
  8734  0FF4  00D0               	movwf	(_reajuste+1)^(0+128)
  8735  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  8736  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  8737  0FF7  0829               	movf	?___ftdiv+2,w
  8738  0FF8  1683               	bsf	3,5	;RP0=1, select bank1
  8739  0FF9  1303               	bcf	3,6	;RP1=0, select bank1
  8740  0FFA  120A  158A  2991   	goto	L5
  8741  0FFD                     L31:	
  8742  0FFD  120A  118A  2EA7   	ljmp	i1l2846


Data Sizes:
    Strings     40
    Constant    0
    Data        4
    BSS         202
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      80
    BANK1            80     41      79
    BANK3            96     26      83
    BANK2            96      0      96

Pointer List with Targets:

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _ISR->___ftadd
    _trimf->___awtoft
    _trimf->___ftadd
    _trapmf->___awtoft
    _trapmf->___ftadd
    ___ftge->___awtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftpack
    _send->_USART_WriteChar
    ___lwtoft->___ftpack
    ___ftmul->___ftadd
    ___awtoft->___ftpack
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___wmul
    _trimf->___ftdiv
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___wmul->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     790
                                             23 BANK3      3     3      0
                           _ADC_Init
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     146
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 47    47      0   53876
                                             59 BANK0      6     6      0
                                              0 BANK1     41    41      0
                  _USART_ReceiveChar
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul
                                _abs
                               _send
                             _trapmf
                              _trimf
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _trimf                                               15     3     12   13788
                                             23 BANK0     15     3     12
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (4) _trapmf                                              18     3     15   14773
                                             23 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     621
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    2952
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    3135
                                              7 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    5589
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                             ___bmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     136
                                              1 COMMON     3     3      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     450
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1668
                                             53 BANK0      6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     572
                                             39 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3181
                                             23 BANK0     16    10      6
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     456
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    3074
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   ___awtoft
     ___ftpack
   ___bmul
   ___ftadd
     ___bmul (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
     ___awtoft (ARG)
       ___ftpack
   ___ftmul
     ___bmul (ARG)
     ___ftadd (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
   ___fttol
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___bmul (ARG)
       ___ftadd (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   ___wmul
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___bmul (ARG)
         ___ftadd (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___bmul (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   _abs
   _send
     _USART_WriteChar
   _trapmf
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftge (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
   _trimf
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftge (ARG)
       ___awtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      11      100.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     29      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     160      12        0.0%
ABS                  0      0     160       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 31 01:53:28 2022

         ?i1_PWM_DutyCycle2 0070                           _x 00DB                           _y 00DE  
                         pc 0002              ___bmul@product 0072     __size_of_PWM_DutyCycle1 0021  
   __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000                 _SSPSTATbits 0094  
                        fsr 0004         ___wmul@multiplicand 0057          ??i1_PWM_DutyCycle2 0072  
            _reajuste_baixo 0190                ___ftadd@exp1 0026                ___ftadd@exp2 0025  
            _reajuste_medio 0140               _contagens_tm0 006A                ___ftadd@sign 0024  
                       l650 14A6                         _PR2 0092                __CFG_CPD$OFF 0000  
                       _ISR 0055                         _abs 082E                         _rpm 00EB  
                       fsr0 0004                         _pwm 00E7                         _sum 00D5  
__size_of_USART_WriteString 001C                         indf 0000                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        ?_ISR 0070             _reajuste_grande 0110  
              ___ftdiv@cntr 0031                        ISR@a 00BF                ___ftdiv@sign 0036  
                      ?_abs 0070                        l2200 151A                        l3036 13F7  
                      l2182 14C7                        l2174 14B7                        l2192 14FF  
                      l2184 14D7                        l2196 150C                        STR_1 0806  
                      u2105 14EE                        u2115 1500                        u2075 14CB  
                      u2095 14D9                        u2705 11D5                        u2715 127F  
                      u2725 11B4                        u3667 13F0                        u3677 13FF  
                      _OERR 00C1                        _TMR0 0001                        _TMR1 000E  
                      abs@a 0070                        _main 1386                ___ftpack@arg 0070  
              ___ftpack@exp 0073                        _send 122A                        _rule 00D2  
                      btemp 007E            __end_of_ADC_Init 111B                        ltemp 007E  
                      start 0012                        ttemp 007E                        wtemp 007E  
         ___bmul@multiplier 0073                ___ftmul@cntr 0045                ___ftmul@sign 0046  
   __end_of_USART_WriteChar 10D5                       ??_ISR 005B                ___fttol@exp1 0054  
                     ??_abs 0072                ___fttol@lval 0050                 ?_TIMER0_Set 0070  
           __end_of___aldiv 1523                       ?_main 0070                       _EEADR 010D  
           __end_of___ftadd 16E2                       ?_send 0070               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 15DB             __end_of___ftneg 10DD             __end_of___ftmul 07FE  
                     _T1CON 0010             __end_of___fttol 1494                       i1l112 17F7  
                     i1l122 0983                       i1l190 0DE7                       i1l271 10CE  
                     i1l591 1211                       i1l762 136D                       i1l756 1354  
                     i1l785 1683                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000               ___awtoft@sign 007D  
                     _delta 00E1               ___ftpack@sign 0074                       _trimf 16E2  
            __CFG_BOREN$OFF 0000                       pclath 000A            __end_of_PWM_Init 1205  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F                 ?_USART_Init 01D6  
     i1TIMER0_Set@contagens 0070             __initialization 0015                __end_of_main 1406  
              __end_of_send 1274                      ??_main 01DE               ___fttol@sign1 004F  
                    ??_send 0071                ?_TIMER0_Init 0070                      _ADRESH 001E  
                    _ADRESL 009E                      _EEDATA 010C                      _CCPR1L 0015  
                    _CCPR2L 001B                      _EECON2 018D            __end_of___awtoft 119F  
          __end_of___ftpack 1386                      ?_trimf 0037                      i1l2130 1326  
                    i1l2212 1604                      i1l2134 132D                      i1l2222 161A  
                    i1l2310 15B5                      i1l2302 1596                      i1l2144 1359  
                    i1l2136 1339                      i1l2240 1649                      i1l2216 160B  
                    i1l2162 1163                      i1l2146 1363                      i1l2138 133E  
                    i1l2242 1655                      i1l2234 1634                      i1l2322 12E8  
                    i1l2252 1673                      i1l2244 165A                      i1l2422 1269  
                    i1l2414 124F                      i1l2262 16A7                      i1l2254 167F  
                    i1l2246 165E                      i1l2326 130F                      i1l2440 1144  
                    i1l2432 1138                      i1l2272 16CA                      i1l2610 07C0  
                    i1l2602 07A8                      i1l2258 1695                      i1l2282 153B  
                    i1l2364 17DA                      i1l2700 009D                      u201_25 1374  
                    i1l2614 07D0                      i1l2630 1420                      i1l2382 08B3  
                    i1l2358 1759                      i1l2702 00A3                      i1l2552 1100  
                    i1l2536 1209                      i1l2288 1551                      i1l2720 00D1  
                    i1l2570 1188                      i1l2650 1462                      i1l2394 0966  
                    i1l2714 00B9                      i1l2548 10FA                      i1l2580 0743  
                    i1l2660 147D                      i1l2388 08E5                      i1l2820 0569  
                    i1l2724 00EF                      i1l2910 0F8F                      i1l2750 019F  
                    i1l2726 00F2                      i1l2664 148B                      i1l2656 146F  
                    i1l2648 1452                      i1l2920 098C                      i1l2904 0EFE  
                    i1l2816 04EA                      i1l2752 01CB                      i1l2586 0759  
                    i1l2658 147A                      i1l2930 09E3                      i1l2850 0C47  
                    i1l2770 02A5                      i1l2762 023D                      i1l2738 0111  
                    i1l2940 0A47                      i1l2924 099E                      i1l2916 0FBB  
                    i1l2828 05AE                      i1l2756 01FF                      i1l2598 0798  
                    i1l2950 0AD6                      i1l2846 06A7                      i1l2790 0398  
                    i1l2766 0273                      i1l2758 022B                      i1l2686 006A  
                    i1l2936 0A39                      i1l2768 029F                      i1l2688 0070  
                    i1l2970 0B84                      i1l2954 0ADD                      i1l2946 0A8C  
                    i1l2874 0CFC                      i1l2858 0C8C                      i1l2786 0313  
                    i1l2980 0BD7                      i1l2964 0B2E                      i1l2974 0B92  
                    i1l2958 0AE9                      i1l2878 0D81                      i1l2886 0DC6  
                    i1l2798 03DD                      i1l2984 0C21                      i1l2986 0C27  
                    i1l2898 0E6D                      i1l2994 0C37                      i1l2996 0C38  
                    u301_25 1471                      u223_25 1635                      u232_25 1674  
                    u240_25 1563                      u304_25 1158                      u320_25 0196  
                    u241_25 1575                      u321_25 01F6                      u226_25 164A  
                    u242_25 1597                      u330_25 0402                      u322_25 0234  
                    u243_25 15A8                      u331_25 04E8                      u323_25 026A  
                    u307_25 0089                      u244_25 15B6                      u340_25 0C97  
                    u324_25 02AE                      u229_25 165F                      u341_25 0CFA  
                    u333_25 05AC                      u325_25 0311                      u350_25 0F16  
                    u334_25 05B9                      u247_21 12DB                      u247_22 12DC  
                    u247_23 12E1                      u247_24 12E2                      u351_25 0FB9  
                    u343_25 0DC4                      u335_25 05C6                      u327_25 03DB  
                    u344_25 0DE5                      u336_25 05D3                      u328_25 03E8  
                    u249_21 1302                      u249_22 1303                      u249_23 1308  
                    u249_24 1309                      u353_25 0998                      u337_25 06A5  
                    u329_25 03F5            __end_of___lwtoft 112F                      u194_25 1332  
                    u282_25 0765                      u274_25 1212                      u362_25 0B8C  
                    u346_25 0DF4                      u291_25 07D1                      u283_25 0777  
                    u275_25 1219                      u347_25 0E78                      u339_25 0C8A  
                    u196_25 134D                      u292_25 07D9                      u356_25 0A41  
                    u348_25 0E85                      u349_25 0F09         __size_of_TIMER0_Set 0008  
                    u198_25 135C                      u286_25 07A9                      u287_25 07B1  
                    u295_25 1427                      u359_25 0AE3                      u298_25 1453  
                    _SSPADD 0093                      _SSPBUF 0013                      ___bmul 10F8  
                    ___ftge 12BF                   ??___aldiv 01CF                      ___wmul 1205  
                 ??___ftadd 0020              _PWM_DutyCycle1 119F              _PWM_DutyCycle2 11C0  
          ?_USART_WriteChar 0070                   ??___ftdiv 002D                   ??___ftneg 0073  
                 ??___ftmul 003D                   ??___fttol 004B                      _buffer 0061  
                    _ligado 01E1       USART_ReceiveChar@byte 0074                      _trapmf 083C  
                    _pulsos 006C                      _status 006E       ___ftmul@f3_as_product 0042  
                 ?_ADC_Init 0070                      saved_w 007E         __size_of_USART_Init 004B  
                    trimf@a 003A                      trimf@b 003D                      trimf@c 0040  
                    trimf@x 0037               ?i1_TIMER0_Set 0070     __end_of__initialization 0051  
                ___ftadd@f1 0078                  ___ftadd@f2 007B                  ___ftge@ff1 0020  
                ___ftge@ff2 0023                  ___ftdiv@f1 002A                  ___ftdiv@f2 0027  
                ___ftdiv@f3 0032                  ___ftneg@f1 0070                  ___awtoft@c 0078  
       ___bmul@multiplicand 0070      __end_of_PWM_DutyCycle1 11C0      __end_of_PWM_DutyCycle2 11E1  
                ___ftmul@f1 0037                  ___ftmul@f2 003A                  ___fttol@f1 0047  
            __pcstackCOMMON 0070                 ISR@checksum 00BC                __pidataBANK1 07FE  
              __pidataBANK3 10C5               _erro_anterior 00E3               __end_of_trimf 1800  
                ___lwtoft@c 0078                   ?_PWM_Init 0070              _OPTION_REGbits 0081  
                ??_ADC_Init 01C7   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
                   ??_trimf 007E                  __pbssBANK0 0061                  __pbssBANK1 00C9  
                __pbssBANK2 0110                  __pbssBANK3 0190                     ISR@byte 00BD  
                _foReajuste 01C0             ?_PWM_DutyCycle1 01C7             ?_PWM_DutyCycle2 01C7  
                __pmaintext 1386                     ?___bmul 0070                     ?___ftge 0020  
                   ?___wmul 0055                  __pintentry 0004                ??_TIMER0_Set 01C7  
                   _CCP1CON 0017                     _CCP2CON 001D                   ?___awtoft 0078  
                 ?___ftpack 0070                     ?_trapmf 0037                  ??_PWM_Init 01C7  
                 ?___lwtoft 0078                     _ISR$240 00A3                     _ISR$241 00B6  
                   _ISR$242 00B8                     _ISR$227 00AC                     _ISR$243 00A6  
                   _ISR$244 00BA                     _ISR$236 00B0                     _ISR$228 00AE  
                   _ISR$237 00B2                     _ISR$245 00A9                     _ISR$238 00A0  
                   _ISR$239 00B4        __size_of_TIMER0_Init 000B                     _SSPCON2 0091  
                __stringtab 0800          __end_of_TIMER0_Set 10E5                   _ADCResult 0068  
              ??_USART_Init 01DA                     ___aldiv 1494             __size_of___bmul 0011  
           __size_of___ftge 005F                     ___ftadd 15DB                     ___ftdiv 1523  
                   ___ftneg 10D5             __size_of___wmul 0025                     ___ftmul 072B  
                   ___fttol 1406                  _erro_atual 00E5                     _fiDelta 00C9  
                ??___awtoft 007B                  ??___ftpack 0075                     __ptext1 1274  
                   __ptext2 1494                     __ptext3 10DD                     __ptext4 10ED  
                   __ptext5 11E1                     __ptext6 11C0                     __ptext7 119F  
                   __ptext8 1109                     __ptext9 0055                  ??___lwtoft 007B  
           __size_of_trapmf 0150                __size_of_ISR 0BF2                   _T1CONbits 0010  
                 _T2CONbits 0012                __size_of_abs 000E            ___aldiv@dividend 01CB  
        __end_of_USART_Init 12BF                     clrloop0 10E6        end_of_initialization 0051  
                 _RCSTAbits 0018            ___aldiv@quotient 01D2                     psplit$0 1A0030  
                   psplit$1 1A0031                     trapmf@a 003A                     trapmf@b 003D  
                   trapmf@c 0040                     trapmf@d 0043                     trapmf@x 0037  
                   trimf@ua 0043        __end_ofi1_TIMER0_Set 10CD                   _PORTBbits 0006  
                 _PORTEbits 0009            i1_PWM_DutyCycle2 1147           __size_of_ADC_Init 0012  
              _contador_rb6 01C3         PWM_DutyCycle1@valor 01C7                  _total_area 00D8  
       PWM_DutyCycle2@valor 01C7                 _CCP1CONbits 0017                 ___ftdiv@exp 0035  
               _CCP2CONbits 001D                   _TXSTAbits 0098                 ___ftmul@exp 0041  
            __end_of___bmul 1109              __end_of___ftge 131E              __end_of___wmul 122A  
            __end_of_trapmf 098C    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 0C47                 __end_of_abs 083C  
               _fiDistancia 00CC           pnum$text9_split_1 0030           pnum$text9_split_2 0031  
          ??_PWM_DutyCycle1 01C9            ??_PWM_DutyCycle2 01C9           _USART_ReceiveChar 112F  
                  ??___bmul 0071                    ??___ftge 0026          ?_USART_ReceiveChar 0070  
                  ??___wmul 007E                 __pdataBANK1 00ED                 __pdataBANK3 01E1  
              send@checksum 0072                    ??_trapmf 007E         ??_USART_ReceiveChar 0073  
         __size_of___awtoft 0021           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 01C7         __end_of__stringdata 082E                    ISR@a_232 00C1  
                  ISR@a_233 00C3                    ISR@a_234 00C5                    ISR@a_235 00C7  
 __end_of_USART_ReceiveChar 1147                    ISR@index 00BE       __size_ofi1_TIMER0_Set 0006  
       TIMER0_Set@contagens 01C7                    ?___aldiv 01C7                    ?___ftadd 0078  
                  ?___ftdiv 0027                    ?___ftneg 0070                    ?___ftmul 0037  
                  ?___fttol 0047                   __pstrings 0800               ??_TIMER0_Init 01C7  
        USART_Init@BaudRate 01D6                    _ADC_Init 1109              __size_of_trimf 011E  
         ??_USART_WriteChar 0070                i1_TIMER0_Set 10C7                _receiveIndex 00E9  
           ___aldiv@divisor 01C7           interrupt_function 0004             ___aldiv@counter 01D0  
            ___wmul@product 0059                   clear_ram0 10E5                    _PIE1bits 008C  
                  _PIE2bits 008D                    _PIR1bits 000C                    _PIR2bits 000D  
  __end_ofi1_PWM_DutyCycle2 1162                   _tempo_rb6 01C5                  _ADCON0bits 001F  
               __stringbase 0805                  _ADCON1bits 009F                 __stringdata 0806  
                  _PWM_Init 11E1           ___wmul@multiplier 0055         __end_of_TIMER0_Init 10F8  
__size_of_USART_ReceiveChar 0018                  _EECON1bits 018C            __size_of___aldiv 008F  
          __size_of___ftadd 0107            __size_of___ftdiv 00B8            __size_of___ftneg 0008  
          __size_of___ftmul 00D3            __size_of___fttol 008E                    ___awtoft 117E  
                  ___ftpack 131E          __end_of__stringtab 0806                    ___lwtoft 111B  
                 send@index 0073           _USART_WriteString 1162                    __ptext10 10C7  
                  __ptext11 1147                    __ptext20 1205                    __ptext12 16E2  
                  __ptext21 111B                    __ptext13 083C                    __ptext22 1406  
                  __ptext14 10D5                    __ptext23 072B                    __ptext15 12BF  
                  __ptext24 10F8                    __ptext16 1523                    __ptext25 117E  
                  __ptext17 15DB                    __ptext26 131E                    __ptext18 122A  
                  __ptext27 112F                    __ptext19 082E                    __ptext28 1162  
                  __ptext29 10CD          ?_USART_WriteString 0070               __size_of_main 0080  
                 pnum$text9 001A               __size_of_send 004A         USART_WriteChar@byte 0070  
                  _reajuste 00CF         ??_USART_WriteString 0071                    _setpoint 00ED  
               _TIMER0_Init 10ED                  _INTCONbits 000B   __end_of_USART_WriteString 117E  
                  intlevel1 0000                   stringcode 0800        USART_WriteString@str 0072  
                _TIMER0_Set 10DD                    trapmf@ua 0046             _USART_WriteChar 10CD  
                  stringdir 0800                    stringtab 0800                ___aldiv@sign 01D1  
               _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014  
                _USART_Init 1274  
