

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 21:25:22 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text13_split_1,local,class=CODE,merge=1,delta=2
    62                           	psect	text13_split_2,local,class=CODE,merge=1,delta=2
    63                           	psect	text13_split_3,local,class=CODE,merge=1,delta=2
    64                           	psect	text13_split_4,local,class=CODE,merge=1,delta=2
    65                           	psect	text13_split_5,local,class=CODE,merge=1,delta=2
    66                           	psect	text13_split_6,local,class=CODE,merge=1,delta=2
    67                           	psect	text13_split_7,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  010E                     	;# 
   426  010F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  0081                     	;# 
   465  0085                     	;# 
   466  0086                     	;# 
   467  0087                     	;# 
   468  0088                     	;# 
   469  0089                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0091                     	;# 
   474  0092                     	;# 
   475  0093                     	;# 
   476  0094                     	;# 
   477  0098                     	;# 
   478  0099                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  009F                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0088                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0094                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  000E                     	;# 
   565  000F                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001D                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  0081                     	;# 
   585  0085                     	;# 
   586  0086                     	;# 
   587  0087                     	;# 
   588  0088                     	;# 
   589  0089                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  008E                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0098                     	;# 
   598  0099                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  010F                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609                           
   610                           	psect	idataBANK0
   611  07FD                     __pidataBANK0:	
   612                           
   613                           ;initializer for _velocidadeSetada
   614  07FD  34E8               	retlw	232
   615  07FE  3403               	retlw	3
   616                           
   617                           	psect	idataBANK1
   618  10A9                     __pidataBANK1:	
   619                           
   620                           ;initializer for _setpoint
   621  10A9  34E8               	retlw	232
   622  10AA  3403               	retlw	3
   623  000E                     _TMR1	set	14
   624  001F                     _ADCON0bits	set	31
   625  001E                     _ADRESH	set	30
   626  0017                     _CCP1CON	set	23
   627  0017                     _CCP1CONbits	set	23
   628  001D                     _CCP2CON	set	29
   629  001D                     _CCP2CONbits	set	29
   630  0015                     _CCPR1L	set	21
   631  001B                     _CCPR2L	set	27
   632  000B                     _INTCONbits	set	11
   633  000C                     _PIR1bits	set	12
   634  000D                     _PIR2bits	set	13
   635  0005                     _PORTA	set	5
   636  0006                     _PORTB	set	6
   637  0006                     _PORTBbits	set	6
   638  0007                     _PORTC	set	7
   639  0008                     _PORTD	set	8
   640  0009                     _PORTE	set	9
   641  0009                     _PORTEbits	set	9
   642  001A                     _RCREG	set	26
   643  0018                     _RCSTAbits	set	24
   644  0013                     _SSPBUF	set	19
   645  0014                     _SSPCONbits	set	20
   646  0010                     _T1CON	set	16
   647  0010                     _T1CONbits	set	16
   648  0012                     _T2CONbits	set	18
   649  0001                     _TMR0	set	1
   650  000F                     _TMR1H	set	15
   651  000E                     _TMR1L	set	14
   652  0019                     _TXREG	set	25
   653  00C1                     _OERR	set	193
   654  009F                     _ADCON1bits	set	159
   655  009E                     _ADRESL	set	158
   656  0081                     _OPTION_REGbits	set	129
   657  008C                     _PIE1bits	set	140
   658  008D                     _PIE2bits	set	141
   659  0092                     _PR2	set	146
   660  0099                     _SPBRG	set	153
   661  0093                     _SSPADD	set	147
   662  0091                     _SSPCON2	set	145
   663  0091                     _SSPCON2bits	set	145
   664  0094                     _SSPSTATbits	set	148
   665  0085                     _TRISA	set	133
   666  0086                     _TRISB	set	134
   667  0087                     _TRISC	set	135
   668  0088                     _TRISD	set	136
   669  0089                     _TRISE	set	137
   670  0098                     _TXSTAbits	set	152
   671  010D                     _EEADR	set	269
   672  010C                     _EEDATA	set	268
   673  018C                     _EECON1bits	set	396
   674  018D                     _EECON2	set	397
   675                           
   676                           	psect	strings
   677  1000                     __pstrings:	
   678  1000                     stringtab:	
   679  1000                     __stringtab:	
   680  1000                     stringcode:	
   681                           ;	String table - string pointers are 1 byte each
   682                           
   683  1000                     stringdir:	
   684  1000  3010               	movlw	high stringdir
   685  1001  008A               	movwf	10
   686  1002  0804               	movf	4,w
   687  1003  0A84               	incf	4,f
   688  1004  0782               	addwf	2,f
   689  1005                     __stringbase:	
   690  1005  3400               	retlw	0
   691  1006                     __end_of__stringtab:	
   692  1006                     __stringdata:	
   693  1006                     STR_1:	
   694  1006  340A               	retlw	10
   695  1007  340D               	retlw	13
   696  1008  3420               	retlw	32	;' '
   697  1009  342D               	retlw	45	;'-'
   698  100A  342D               	retlw	45	;'-'
   699  100B  342D               	retlw	45	;'-'
   700  100C  342D               	retlw	45	;'-'
   701  100D  342D               	retlw	45	;'-'
   702  100E  342D               	retlw	45	;'-'
   703  100F  342D               	retlw	45	;'-'
   704  1010  3420               	retlw	32	;' '
   705  1011  3445               	retlw	69	;'E'
   706  1012  3453               	retlw	83	;'S'
   707  1013  3454               	retlw	84	;'T'
   708  1014  344F               	retlw	79	;'O'
   709  1015  3455               	retlw	85	;'U'
   710  1016  3452               	retlw	82	;'R'
   711  1017  344F               	retlw	79	;'O'
   712  1018  3420               	retlw	32	;' '
   713  1019  3444               	retlw	68	;'D'
   714  101A  3445               	retlw	69	;'E'
   715  101B  3420               	retlw	32	;' '
   716  101C  3450               	retlw	80	;'P'
   717  101D  3449               	retlw	73	;'I'
   718  101E  344C               	retlw	76	;'L'
   719  101F  3448               	retlw	72	;'H'
   720  1020  3441               	retlw	65	;'A'
   721  1021  3420               	retlw	32	;' '
   722  1022  342D               	retlw	45	;'-'
   723  1023  342D               	retlw	45	;'-'
   724  1024  342D               	retlw	45	;'-'
   725  1025  342D               	retlw	45	;'-'
   726  1026  342D               	retlw	45	;'-'
   727  1027  342D               	retlw	45	;'-'
   728  1028  342D               	retlw	45	;'-'
   729  1029  3420               	retlw	32	;' '
   730  102A  340A               	retlw	10
   731  102B  340D               	retlw	13
   732  102C  3420               	retlw	32	;' '
   733  102D  3400               	retlw	0
   734  102E                     __end_of__stringdata:	
   735                           
   736                           ; #config settings
   737  0000                     
   738                           	psect	cinit
   739  0015                     start_initialization:	
   740  0015                     __initialization:	
   741                           
   742                           ; Clear objects allocated to BANK0
   743  0015  01E8               	clrf	__pbssBANK0& (0+127)
   744  0016  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   745  0017  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   746  0018  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   747  0019  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   748  001A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   749                           
   750                           ; Clear objects allocated to BANK1
   751  001B  1383               	bcf	3,7	;select IRP bank0
   752  001C  30C8               	movlw	low __pbssBANK1
   753  001D  0084               	movwf	4
   754  001E  30E5               	movlw	low (__pbssBANK1+29)
   755  001F  160A  118A  20C1  120A  118A  	fcall	clear_ram0
   756                           
   757                           ; Clear objects allocated to BANK3
   758  0024  1783               	bsf	3,7	;select IRP bank2
   759  0025  3090               	movlw	low __pbssBANK3
   760  0026  0084               	movwf	4
   761  0027  30C0               	movlw	low (__pbssBANK3+48)
   762  0028  160A  118A  20C1  120A  118A  	fcall	clear_ram0
   763                           
   764                           ; Clear objects allocated to BANK2
   765  002D  3010               	movlw	low __pbssBANK2
   766  002E  0084               	movwf	4
   767  002F  3070               	movlw	low (__pbssBANK2+96)
   768  0030  160A  118A  20C1  120A  118A  	fcall	clear_ram0
   769                           
   770                           ; Initialize objects allocated to BANK1
   771  0035  1683               	bsf	3,5	;RP0=1, select bank1
   772  0036  1303               	bcf	3,6	;RP1=0, select bank1
   773  0037  160A  118A  20A9  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   774  003C  00E5               	movwf	__pdataBANK1& (0+127)
   775  003D  160A  118A  20AA  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   776  0042  00E6               	movwf	(__pdataBANK1+1)& (0+127)
   777                           
   778                           ; Initialize objects allocated to BANK0
   779  0043  1283               	bcf	3,5	;RP0=0, select bank0
   780  0044  1303               	bcf	3,6	;RP1=0, select bank0
   781  0045  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   782  004A  00EE               	movwf	__pdataBANK0& (0+127)
   783  004B  120A  118A  27FE   	fcall	__pidataBANK0+1	;fetch initializer
   784  004E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   785  004F                     end_of_initialization:	
   786                           ;End of C runtime variable initialization code
   787                           
   788  004F                     __end_of__initialization:	
   789  004F  0183               	clrf	3
   790  0050  120A  158A  2CC8   	ljmp	_main	;jump to C main() function
   791                           
   792                           	psect	bssBANK0
   793  0068                     __pbssBANK0:	
   794  0068                     _contador_rb6:	
   795  0068                     	ds	2
   796  006A                     _kmph:	
   797  006A                     	ds	2
   798  006C                     _tempo_rb6:	
   799  006C                     	ds	2
   800                           
   801                           	psect	dataBANK0
   802  006E                     __pdataBANK0:	
   803  006E                     _velocidadeSetada:	
   804  006E                     	ds	2
   805                           
   806                           	psect	bssBANK1
   807  00C8                     __pbssBANK1:	
   808  00C8                     _buffer:	
   809  00C8                     	ds	9
   810  00D1                     _receivedBuffer:	
   811  00D1                     	ds	5
   812  00D6                     _contagens_tm0:	
   813  00D6                     	ds	2
   814  00D8                     _erro_anterior:	
   815  00D8                     	ds	2
   816  00DA                     _erro_atual:	
   817  00DA                     	ds	2
   818  00DC                     _pulsos:	
   819  00DC                     	ds	2
   820  00DE                     _pwm:	
   821  00DE                     	ds	2
   822  00E0                     _receiveIndex:	
   823  00E0                     	ds	2
   824  00E2                     _rpm:	
   825  00E2                     	ds	2
   826  00E4                     _pilotoAtivo:	
   827  00E4                     	ds	1
   828                           
   829                           	psect	dataBANK1
   830  00E5                     __pdataBANK1:	
   831  00E5                     _setpoint:	
   832  00E5                     	ds	2
   833                           
   834                           	psect	bssBANK3
   835  0190                     __pbssBANK3:	
   836  0190                     _rBaixo:	
   837  0190                     	ds	48
   838                           
   839                           	psect	bssBANK2
   840  0110                     __pbssBANK2:	
   841  0110                     _rGrande:	
   842  0110                     	ds	48
   843  0140                     _rMedio:	
   844  0140                     	ds	48
   845                           
   846                           	psect	clrtext
   847  10C1                     clear_ram0:	
   848                           ;	Called with FSR containing the base address, and
   849                           ;	W with the last address+1
   850                           
   851  10C1  0064               	clrwdt	;clear the watchdog before getting into this loop
   852  10C2                     clrloop0:	
   853  10C2  0180               	clrf	0	;clear RAM location pointed to by FSR
   854  10C3  0A84               	incf	4,f	;increment pointer
   855  10C4  0604               	xorwf	4,w	;XOR with final address
   856  10C5  1903               	btfsc	3,2	;have we reached the end yet?
   857  10C6  3400               	retlw	0	;all done for this memory range, return
   858  10C7  0604               	xorwf	4,w	;XOR again to restore value
   859  10C8  28C2               	goto	clrloop0	;do the next byte
   860                           
   861                           	psect	cstackBANK3
   862  01C0                     __pcstackBANK3:	
   863  01C0                     ??_TIMER0_Set:	
   864  01C0                     ?_PWM_DutyCycle2:	
   865                           ; 0 bytes @ 0x0
   866                           
   867  01C0                     ??_TIMER0_Init:	
   868                           ; 0 bytes @ 0x0
   869                           
   870  01C0                     ??_PWM_Init:	
   871                           ; 0 bytes @ 0x0
   872                           
   873  01C0                     ?_PWM_DutyCycle1:	
   874                           ; 0 bytes @ 0x0
   875                           
   876  01C0                     ??_inicia:	
   877                           ; 0 bytes @ 0x0
   878                           
   879  01C0                     ??_res:	
   880                           ; 0 bytes @ 0x0
   881                           
   882  01C0                     ??_set:	
   883                           ; 0 bytes @ 0x0
   884                           
   885  01C0                     ??_LCD_WriteCmd:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  01C0                     ?___aldiv:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  01C0                     TIMER0_Set@contagens:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  01C0                     PWM_DutyCycle1@valor:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  01C0                     PWM_DutyCycle2@valor:	
   898                           ; 2 bytes @ 0x0
   899                           
   900  01C0                     ___aldiv@divisor:	
   901                           ; 2 bytes @ 0x0
   902                           
   903                           
   904                           ; 4 bytes @ 0x0
   905  01C0                     	ds	1
   906  01C1                     LCD_WriteCmd@Byte:	
   907                           
   908                           ; 1 bytes @ 0x1
   909  01C1                     	ds	1
   910  01C2                     ??_PWM_DutyCycle2:	
   911  01C2                     ??_LCD_Init:	
   912                           ; 0 bytes @ 0x2
   913                           
   914  01C2                     ??_PWM_DutyCycle1:	
   915                           ; 0 bytes @ 0x2
   916                           
   917                           
   918                           ; 0 bytes @ 0x2
   919  01C2                     	ds	2
   920  01C4                     ___aldiv@dividend:	
   921                           
   922                           ; 4 bytes @ 0x4
   923  01C4                     	ds	4
   924  01C8                     ??___aldiv:	
   925                           
   926                           ; 0 bytes @ 0x8
   927  01C8                     	ds	1
   928  01C9                     ___aldiv@counter:	
   929                           
   930                           ; 1 bytes @ 0x9
   931  01C9                     	ds	1
   932  01CA                     ___aldiv@sign:	
   933                           
   934                           ; 1 bytes @ 0xA
   935  01CA                     	ds	1
   936  01CB                     ___aldiv@quotient:	
   937                           
   938                           ; 4 bytes @ 0xB
   939  01CB                     	ds	4
   940  01CF                     ?_USART_Init:	
   941  01CF                     USART_Init@BaudRate:	
   942                           ; 0 bytes @ 0xF
   943                           
   944                           
   945                           ; 4 bytes @ 0xF
   946  01CF                     	ds	4
   947  01D3                     ??_USART_Init:	
   948                           
   949                           ; 0 bytes @ 0x13
   950  01D3                     	ds	4
   951  01D7                     ??_main:	
   952                           
   953                           ; 0 bytes @ 0x17
   954  01D7                     	ds	3
   955                           
   956                           	psect	cstackBANK1
   957  00A0                     __pcstackBANK1:	
   958  00A0                     ISR@rpmAux:	
   959                           
   960                           ; 2 bytes @ 0x0
   961  00A0                     	ds	2
   962  00A2                     _ISR$1667:	
   963                           
   964                           ; 3 bytes @ 0x2
   965  00A2                     	ds	3
   966  00A5                     _ISR$1668:	
   967                           
   968                           ; 3 bytes @ 0x5
   969  00A5                     	ds	3
   970  00A8                     ISR@reajuste:	
   971                           
   972                           ; 3 bytes @ 0x8
   973  00A8                     	ds	3
   974  00AB                     ISR@auxiliar:	
   975                           
   976                           ; 2 bytes @ 0xB
   977  00AB                     	ds	2
   978  00AD                     ISR@checksum:	
   979                           
   980                           ; 1 bytes @ 0xD
   981  00AD                     	ds	1
   982  00AE                     ISR@byte:	
   983                           
   984                           ; 1 bytes @ 0xE
   985  00AE                     	ds	1
   986  00AF                     ISR@index:	
   987                           
   988                           ; 1 bytes @ 0xF
   989  00AF                     	ds	1
   990  00B0                     ISR@delta:	
   991                           
   992                           ; 2 bytes @ 0x10
   993  00B0                     	ds	2
   994  00B2                     ISR@soma:	
   995                           
   996                           ; 3 bytes @ 0x12
   997  00B2                     	ds	3
   998  00B5                     ISR@a:	
   999                           
  1000                           ; 2 bytes @ 0x15
  1001  00B5                     	ds	2
  1002  00B7                     ISR@a_243:	
  1003                           
  1004                           ; 2 bytes @ 0x17
  1005  00B7                     	ds	2
  1006  00B9                     ISR@a_244:	
  1007                           
  1008                           ; 2 bytes @ 0x19
  1009  00B9                     	ds	2
  1010  00BB                     ISR@a_245:	
  1011                           
  1012                           ; 2 bytes @ 0x1B
  1013  00BB                     	ds	2
  1014  00BD                     ISR@total_area:	
  1015                           
  1016                           ; 3 bytes @ 0x1D
  1017  00BD                     	ds	3
  1018  00C0                     ISR@rule:	
  1019                           
  1020                           ; 3 bytes @ 0x20
  1021  00C0                     	ds	3
  1022  00C3                     ISR@a_248:	
  1023                           
  1024                           ; 2 bytes @ 0x23
  1025  00C3                     	ds	2
  1026  00C5                     ISR@x:	
  1027                           
  1028                           ; 3 bytes @ 0x25
  1029  00C5                     	ds	3
  1030                           
  1031                           	psect	cstackCOMMON
  1032  0070                     __pcstackCOMMON:	
  1033  0070                     ?_USART_WriteChar:	
  1034  0070                     ??_USART_WriteChar:	
  1035                           ; 0 bytes @ 0x0
  1036                           
  1037  0070                     ?_LCD_Cursor:	
  1038                           ; 0 bytes @ 0x0
  1039                           
  1040  0070                     ?_LCD_WriteData:	
  1041                           ; 0 bytes @ 0x0
  1042                           
  1043  0070                     ??_LCD_WriteData:	
  1044                           ; 0 bytes @ 0x0
  1045                           
  1046  0070                     ?_TIMER0_Set:	
  1047                           ; 0 bytes @ 0x0
  1048                           
  1049  0070                     ?_TIMER0_Init:	
  1050                           ; 0 bytes @ 0x0
  1051                           
  1052  0070                     ?_PWM_Init:	
  1053                           ; 0 bytes @ 0x0
  1054                           
  1055  0070                     ?_LCD_Init:	
  1056                           ; 0 bytes @ 0x0
  1057                           
  1058  0070                     ?_inicia:	
  1059                           ; 0 bytes @ 0x0
  1060                           
  1061  0070                     ?_res:	
  1062                           ; 0 bytes @ 0x0
  1063                           
  1064  0070                     ?_set:	
  1065                           ; 0 bytes @ 0x0
  1066                           
  1067  0070                     ?_send:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  0070                     ?_ISR:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  0070                     ?_main:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  0070                     ?_USART_WriteString:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0070                     ?_LCD_WriteCmd:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0070                     ?i1_inicia:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ??i1_inicia:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ?i1_res:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ??i1_res:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?i1_set:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ??i1_set:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  0070                     ?i1_TIMER0_Set:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  0070                     ??i1_TIMER0_Set:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  0070                     ?i1_PWM_DutyCycle2:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_USART_ReceiveChar:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?___bmul:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_abs:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?___lwdiv:	
  1119                           ; 2 bytes @ 0x0
  1120                           
  1121  0070                     ?___ftpack:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124  0070                     USART_WriteChar@byte:	
  1125                           ; 3 bytes @ 0x0
  1126                           
  1127  0070                     LCD_Cursor@Col:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ___bmul@multiplicand:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     i1TIMER0_Set@contagens:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     abs@a:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ___lwdiv@divisor:	
  1140                           ; 2 bytes @ 0x0
  1141                           
  1142  0070                     i1PWM_DutyCycle2@valor:	
  1143                           ; 2 bytes @ 0x0
  1144                           
  1145  0070                     ___ftpack@arg:	
  1146                           ; 2 bytes @ 0x0
  1147                           
  1148                           
  1149                           ; 3 bytes @ 0x0
  1150  0070                     	ds	1
  1151  0071                     ??_LCD_Cursor:	
  1152  0071                     ??_USART_WriteString:	
  1153                           ; 0 bytes @ 0x1
  1154                           
  1155  0071                     ??___bmul:	
  1156                           ; 0 bytes @ 0x1
  1157                           
  1158  0071                     LCD_WriteData@Byte:	
  1159                           ; 0 bytes @ 0x1
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0x1
  1163  0071                     	ds	1
  1164  0072                     ??_abs:	
  1165  0072                     ??i1_PWM_DutyCycle2:	
  1166                           ; 0 bytes @ 0x2
  1167                           
  1168  0072                     USART_WriteString@str:	
  1169                           ; 0 bytes @ 0x2
  1170                           
  1171  0072                     LCD_Cursor@Row:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174  0072                     ___bmul@product:	
  1175                           ; 1 bytes @ 0x2
  1176                           
  1177  0072                     ___lwdiv@dividend:	
  1178                           ; 1 bytes @ 0x2
  1179                           
  1180                           
  1181                           ; 2 bytes @ 0x2
  1182  0072                     	ds	1
  1183  0073                     ??_USART_ReceiveChar:	
  1184  0073                     ___bmul@multiplier:	
  1185                           ; 0 bytes @ 0x3
  1186                           
  1187  0073                     ___ftpack@exp:	
  1188                           ; 1 bytes @ 0x3
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x3
  1192  0073                     	ds	1
  1193  0074                     ?___ftge:	
  1194  0074                     ??___lwdiv:	
  1195                           ; 1 bit 
  1196                           
  1197  0074                     USART_ReceiveChar@byte:	
  1198                           ; 0 bytes @ 0x4
  1199                           
  1200  0074                     ___ftpack@sign:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203  0074                     ___ftge@ff1:	
  1204                           ; 1 bytes @ 0x4
  1205                           
  1206                           
  1207                           ; 3 bytes @ 0x4
  1208  0074                     	ds	1
  1209  0075                     ??___ftpack:	
  1210  0075                     ___lwdiv@quotient:	
  1211                           ; 0 bytes @ 0x5
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x5
  1215  0075                     	ds	2
  1216  0077                     ___lwdiv@counter:	
  1217  0077                     ___ftge@ff2:	
  1218                           ; 1 bytes @ 0x7
  1219                           
  1220                           
  1221                           ; 3 bytes @ 0x7
  1222  0077                     	ds	1
  1223  0078                     ??_send:	
  1224  0078                     ?___awtoft:	
  1225                           ; 0 bytes @ 0x8
  1226                           
  1227  0078                     ___awtoft@c:	
  1228                           ; 3 bytes @ 0x8
  1229                           
  1230                           
  1231                           ; 2 bytes @ 0x8
  1232  0078                     	ds	1
  1233  0079                     send@checksum:	
  1234                           
  1235                           ; 1 bytes @ 0x9
  1236  0079                     	ds	1
  1237  007A                     send@index:	
  1238                           
  1239                           ; 1 bytes @ 0xA
  1240  007A                     	ds	1
  1241  007B                     ??___awtoft:	
  1242                           
  1243                           ; 0 bytes @ 0xB
  1244  007B                     	ds	2
  1245  007D                     ___awtoft@sign:	
  1246                           
  1247                           ; 1 bytes @ 0xD
  1248  007D                     	ds	1
  1249  007E                     ??_maximo:	
  1250  007E                     ??_minimo:	
  1251                           ; 0 bytes @ 0xE
  1252                           
  1253  007E                     ??_trapmf:	
  1254                           ; 0 bytes @ 0xE
  1255                           
  1256  007E                     ??___wmul:	
  1257                           ; 0 bytes @ 0xE
  1258                           
  1259  007E                     ??___ftneg:	
  1260                           ; 0 bytes @ 0xE
  1261                           
  1262                           
  1263                           	psect	cstackBANK0
  1264  0020                     __pcstackBANK0:	
  1265                           ; 0 bytes @ 0xE
  1266                           
  1267  0020                     ??___ftge:	
  1268  0020                     ?___ftneg:	
  1269                           ; 0 bytes @ 0x0
  1270                           
  1271  0020                     ___ftneg@f1:	
  1272                           ; 3 bytes @ 0x0
  1273                           
  1274                           
  1275                           ; 3 bytes @ 0x0
  1276  0020                     	ds	3
  1277  0023                     ?___ftadd:	
  1278  0023                     ___ftadd@f1:	
  1279                           ; 3 bytes @ 0x3
  1280                           
  1281                           
  1282                           ; 3 bytes @ 0x3
  1283  0023                     	ds	3
  1284  0026                     ?_minimo:	
  1285  0026                     minimo@a:	
  1286                           ; 3 bytes @ 0x6
  1287                           
  1288  0026                     ___ftadd@f2:	
  1289                           ; 3 bytes @ 0x6
  1290                           
  1291                           
  1292                           ; 3 bytes @ 0x6
  1293  0026                     	ds	3
  1294  0029                     ??___ftadd:	
  1295  0029                     minimo@b:	
  1296                           ; 0 bytes @ 0x9
  1297                           
  1298                           
  1299                           ; 3 bytes @ 0x9
  1300  0029                     	ds	3
  1301  002C                     ?_maximo:	
  1302  002C                     maximo@a:	
  1303                           ; 3 bytes @ 0xC
  1304                           
  1305                           
  1306                           ; 3 bytes @ 0xC
  1307  002C                     	ds	1
  1308  002D                     ___ftadd@sign:	
  1309                           
  1310                           ; 1 bytes @ 0xD
  1311  002D                     	ds	1
  1312  002E                     ___ftadd@exp2:	
  1313                           
  1314                           ; 1 bytes @ 0xE
  1315  002E                     	ds	1
  1316  002F                     ___ftadd@exp1:	
  1317  002F                     maximo@b:	
  1318                           ; 1 bytes @ 0xF
  1319                           
  1320                           
  1321                           ; 3 bytes @ 0xF
  1322  002F                     	ds	1
  1323  0030                     ?___ftdiv:	
  1324  0030                     ___ftdiv@f2:	
  1325                           ; 3 bytes @ 0x10
  1326                           
  1327                           
  1328                           ; 3 bytes @ 0x10
  1329  0030                     	ds	2
  1330  0032                     ?___fttol:	
  1331  0032                     ___fttol@f1:	
  1332                           ; 4 bytes @ 0x12
  1333                           
  1334                           
  1335                           ; 3 bytes @ 0x12
  1336  0032                     	ds	1
  1337  0033                     ___ftdiv@f1:	
  1338                           
  1339                           ; 3 bytes @ 0x13
  1340  0033                     	ds	3
  1341  0036                     ??___ftdiv:	
  1342  0036                     ??___fttol:	
  1343                           ; 0 bytes @ 0x16
  1344                           
  1345                           
  1346                           ; 0 bytes @ 0x16
  1347  0036                     	ds	4
  1348  003A                     ___ftdiv@cntr:	
  1349  003A                     ___fttol@sign1:	
  1350                           ; 1 bytes @ 0x1A
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x1A
  1354  003A                     	ds	1
  1355  003B                     ___ftdiv@f3:	
  1356  003B                     ___fttol@lval:	
  1357                           ; 3 bytes @ 0x1B
  1358                           
  1359                           
  1360                           ; 4 bytes @ 0x1B
  1361  003B                     	ds	3
  1362  003E                     ___ftdiv@exp:	
  1363                           
  1364                           ; 1 bytes @ 0x1E
  1365  003E                     	ds	1
  1366  003F                     ___ftdiv@sign:	
  1367  003F                     ___fttol@exp1:	
  1368                           ; 1 bytes @ 0x1F
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0x1F
  1372  003F                     	ds	1
  1373  0040                     ?___wmul:	
  1374  0040                     ?_trapmf:	
  1375                           ; 2 bytes @ 0x20
  1376                           
  1377  0040                     ___wmul@multiplier:	
  1378                           ; 3 bytes @ 0x20
  1379                           
  1380  0040                     trapmf@x:	
  1381                           ; 2 bytes @ 0x20
  1382                           
  1383                           
  1384                           ; 3 bytes @ 0x20
  1385  0040                     	ds	2
  1386  0042                     ___wmul@multiplicand:	
  1387                           
  1388                           ; 2 bytes @ 0x22
  1389  0042                     	ds	1
  1390  0043                     trapmf@a:	
  1391                           
  1392                           ; 3 bytes @ 0x23
  1393  0043                     	ds	1
  1394  0044                     ___wmul@product:	
  1395                           
  1396                           ; 2 bytes @ 0x24
  1397  0044                     	ds	2
  1398  0046                     ?___lwtoft:	
  1399  0046                     ___lwtoft@c:	
  1400                           ; 3 bytes @ 0x26
  1401                           
  1402  0046                     trapmf@b:	
  1403                           ; 2 bytes @ 0x26
  1404                           
  1405                           
  1406                           ; 3 bytes @ 0x26
  1407  0046                     	ds	3
  1408  0049                     ??___lwtoft:	
  1409  0049                     trapmf@c:	
  1410                           ; 0 bytes @ 0x29
  1411                           
  1412                           
  1413                           ; 3 bytes @ 0x29
  1414  0049                     	ds	3
  1415  004C                     trapmf@d:	
  1416                           
  1417                           ; 3 bytes @ 0x2C
  1418  004C                     	ds	3
  1419  004F                     trapmf@ua:	
  1420                           
  1421                           ; 3 bytes @ 0x2F
  1422  004F                     	ds	3
  1423  0052                     ?___ftmul:	
  1424  0052                     ___ftmul@f1:	
  1425                           ; 3 bytes @ 0x32
  1426                           
  1427                           
  1428                           ; 3 bytes @ 0x32
  1429  0052                     	ds	3
  1430  0055                     ___ftmul@f2:	
  1431                           
  1432                           ; 3 bytes @ 0x35
  1433  0055                     	ds	3
  1434  0058                     ??___ftmul:	
  1435                           
  1436                           ; 0 bytes @ 0x38
  1437  0058                     	ds	4
  1438  005C                     ___ftmul@exp:	
  1439                           
  1440                           ; 1 bytes @ 0x3C
  1441  005C                     	ds	1
  1442  005D                     ___ftmul@f3_as_product:	
  1443                           
  1444                           ; 3 bytes @ 0x3D
  1445  005D                     	ds	3
  1446  0060                     ___ftmul@cntr:	
  1447                           
  1448                           ; 1 bytes @ 0x40
  1449  0060                     	ds	1
  1450  0061                     ___ftmul@sign:	
  1451                           
  1452                           ; 1 bytes @ 0x41
  1453  0061                     	ds	1
  1454  0062                     ??_ISR:	
  1455                           
  1456                           ; 0 bytes @ 0x42
  1457  0062                     	ds	6
  1458                           
  1459                           	psect	maintext
  1460  0CC8                     __pmaintext:	
  1461 ;;
  1462 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1463 ;;
  1464 ;; *************** function _main *****************
  1465 ;; Defined at:
  1466 ;;		line 413 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;		None               void
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 17F/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       0       3       0
  1483 ;;      Totals:         0       0       0       3       0
  1484 ;;Total ram usage:        3 bytes
  1485 ;; Hardware stack levels required when called:    6
  1486 ;; This function calls:
  1487 ;;		_LCD_Init
  1488 ;;		_PWM_DutyCycle1
  1489 ;;		_PWM_DutyCycle2
  1490 ;;		_PWM_Init
  1491 ;;		_TIMER0_Init
  1492 ;;		_TIMER0_Set
  1493 ;;		_USART_Init
  1494 ;;		_inicia
  1495 ;;		_res
  1496 ;;		_set
  1497 ;; This function is called by:
  1498 ;;		Startup code after reset
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _main
  1504  0CC8                     _main:	
  1505                           
  1506                           ;main.c: 414: TRISA = 0b00000001;
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1510  0CC8  3001               	movlw	1
  1511  0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0CCB  0085               	movwf	5	;volatile
  1514                           
  1515                           ;main.c: 415: PORTA = 0b00000001;
  1516  0CCC  3001               	movlw	1
  1517  0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0CCF  0085               	movwf	5	;volatile
  1520                           
  1521                           ;main.c: 416: TRISB = 0b00001111;
  1522  0CD0  300F               	movlw	15
  1523  0CD1  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0CD2  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0CD3  0086               	movwf	6	;volatile
  1526                           
  1527                           ;main.c: 417: PORTB = 0b00000000;
  1528  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0CD6  0186               	clrf	6	;volatile
  1531                           
  1532                           ;main.c: 418: TRISC = 0b10000001;
  1533  0CD7  3081               	movlw	129
  1534  0CD8  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0CD9  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0CDA  0087               	movwf	7	;volatile
  1537                           
  1538                           ;main.c: 420: PORTC = 0b11000000;
  1539  0CDB  30C0               	movlw	192
  1540  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0CDE  0087               	movwf	7	;volatile
  1543                           
  1544                           ;main.c: 421: TRISD = 0b00000000;
  1545  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0CE1  0188               	clrf	8	;volatile
  1548                           
  1549                           ;main.c: 422: PORTD = 0b00000000;
  1550  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0CE4  0188               	clrf	8	;volatile
  1553                           
  1554                           ;main.c: 423: TRISE = 0b00000000;
  1555  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0CE7  0189               	clrf	9	;volatile
  1558                           
  1559                           ;main.c: 424: PORTE = 0b00000000;
  1560  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0CEA  0189               	clrf	9	;volatile
  1563                           
  1564                           ;main.c: 427: T1CON = 0x03;
  1565  0CEB  3003               	movlw	3
  1566  0CEC  0090               	movwf	16	;volatile
  1567                           
  1568                           ;main.c: 428: TMR1L = 0x00;
  1569  0CED  018E               	clrf	14	;volatile
  1570                           
  1571                           ;main.c: 429: TMR1H = 0x00;
  1572  0CEE  018F               	clrf	15	;volatile
  1573                           
  1574                           ;main.c: 433: USART_Init(115200);
  1575  0CEF  3000               	movlw	0
  1576  0CF0  1683               	bsf	3,5	;RP0=1, select bank3
  1577  0CF1  1703               	bsf	3,6	;RP1=1, select bank3
  1578  0CF2  00D2               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1579  0CF3  3001               	movlw	1
  1580  0CF4  00D1               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1581  0CF5  30C2               	movlw	194
  1582  0CF6  00D0               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1583  0CF7  3000               	movlw	0
  1584  0CF8  00CF               	movwf	USART_Init@BaudRate^(0+384)
  1585  0CF9  160A  118A  23C9  120A  158A  	fcall	_USART_Init
  1586                           
  1587                           ;main.c: 434: TIMER0_Init();
  1588  0CFE  160A  118A  20E5  120A  158A  	fcall	_TIMER0_Init
  1589                           
  1590                           ;main.c: 437: PWM_Init();
  1591  0D03  160A  118A  2240  120A  158A  	fcall	_PWM_Init
  1592                           
  1593                           ;main.c: 438: LCD_Init();
  1594  0D08  160A  118A  24DD  120A  158A  	fcall	_LCD_Init
  1595                           
  1596                           ;main.c: 441: INTCONbits.PEIE = 1;
  1597  0D0D  170B               	bsf	11,6	;volatile
  1598                           
  1599                           ;main.c: 442: INTCONbits.GIE = 1;
  1600  0D0E  178B               	bsf	11,7	;volatile
  1601                           
  1602                           ;main.c: 445: PWM_DutyCycle1(0);
  1603  0D0F  3000               	movlw	0
  1604  0D10  1683               	bsf	3,5	;RP0=1, select bank3
  1605  0D11  1703               	bsf	3,6	;RP1=1, select bank3
  1606  0D12  00C0               	movwf	PWM_DutyCycle1@valor^(0+384)
  1607  0D13  3000               	movlw	0
  1608  0D14  00C1               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1609  0D15  160A  118A  21FE  120A  158A  	fcall	_PWM_DutyCycle1
  1610                           
  1611                           ;main.c: 446: PWM_DutyCycle2(100);
  1612  0D1A  3064               	movlw	100
  1613  0D1B  1683               	bsf	3,5	;RP0=1, select bank3
  1614  0D1C  1703               	bsf	3,6	;RP1=1, select bank3
  1615  0D1D  00C0               	movwf	PWM_DutyCycle2@valor^(0+384)
  1616  0D1E  3000               	movlw	0
  1617  0D1F  00C1               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1618  0D20  160A  118A  221F  120A  158A  	fcall	_PWM_DutyCycle2
  1619                           
  1620                           ;main.c: 449: TIMER0_Set(238);
  1621  0D25  30EE               	movlw	238
  1622  0D26  160A  118A  20B9  120A  158A  	fcall	_TIMER0_Set
  1623                           
  1624                           ;main.c: 452: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1625  0D2B  3018               	movlw	24
  1626  0D2C  1683               	bsf	3,5	;RP0=1, select bank3
  1627  0D2D  1703               	bsf	3,6	;RP1=1, select bank3
  1628  0D2E  00D9               	movwf	(??_main^(0+384)+2)
  1629  0D2F  3061               	movlw	97
  1630  0D30  00D8               	movwf	(??_main^(0+384)+1)
  1631  0D31  306E               	movlw	110
  1632  0D32  00D7               	movwf	??_main^(0+384)
  1633  0D33                     u5797:	
  1634  0D33  0BD7               	decfsz	??_main^(0+384),f
  1635  0D34  2D33               	goto	u5797
  1636  0D35  0BD8               	decfsz	(??_main^(0+384)+1),f
  1637  0D36  2D33               	goto	u5797
  1638  0D37  0BD9               	decfsz	(??_main^(0+384)+2),f
  1639  0D38  2D33               	goto	u5797
  1640  0D39  0000               	nop
  1641  0D3A                     l3233:	
  1642                           ;main.c: 455: while (1) {
  1643                           
  1644                           
  1645                           ;main.c: 457: if(PORTBbits.RB0 == 0){
  1646  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0D3C  1806               	btfsc	6,0	;volatile
  1649  0D3D  2D45               	goto	l3239
  1650  0D3E                     l185:	
  1651                           ;main.c: 458: while(PORTBbits.RB0 == 0);
  1652                           
  1653  0D3E  1C06               	btfss	6,0	;volatile
  1654  0D3F  2D3E               	goto	l185
  1655                           
  1656                           ;main.c: 459: inicia();
  1657  0D40  160A  118A  20D2  120A  158A  	fcall	_inicia
  1658  0D45                     l3239:	
  1659                           
  1660                           ;main.c: 460: }
  1661                           ;main.c: 461: if(PORTBbits.RB1 == 0){
  1662  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0D47  1886               	btfsc	6,1	;volatile
  1665  0D48  2D5E               	goto	l3247
  1666  0D49                     l189:	
  1667                           ;main.c: 462: while(PORTBbits.RB1 == 0);
  1668                           
  1669  0D49  1C86               	btfss	6,1	;volatile
  1670  0D4A  2D49               	goto	l189
  1671                           
  1672                           ;main.c: 463: _delay((unsigned long)((20)*(18432000/4000.0)));
  1673  0D4B  3078               	movlw	120
  1674  0D4C  1683               	bsf	3,5	;RP0=1, select bank3
  1675  0D4D  1703               	bsf	3,6	;RP1=1, select bank3
  1676  0D4E  00D8               	movwf	(??_main^(0+384)+1)
  1677  0D4F  30AF               	movlw	175
  1678  0D50  00D7               	movwf	??_main^(0+384)
  1679  0D51                     u5807:	
  1680  0D51  0BD7               	decfsz	??_main^(0+384),f
  1681  0D52  2D51               	goto	u5807
  1682  0D53  0BD8               	decfsz	(??_main^(0+384)+1),f
  1683  0D54  2D51               	goto	u5807
  1684  0D55                     l192:	
  1685                           ;main.c: 464: while(PORTBbits.RB1 == 0);
  1686                           
  1687  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0D57  1C86               	btfss	6,1	;volatile
  1690  0D58  2D55               	goto	l192
  1691                           
  1692                           ;main.c: 465: res();
  1693  0D59  160A  118A  2301  120A  158A  	fcall	_res
  1694  0D5E                     l3247:	
  1695                           
  1696                           ;main.c: 466: }
  1697                           ;main.c: 467: if(PORTBbits.RB2 == 0){
  1698  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0D60  1906               	btfsc	6,2	;volatile
  1701  0D61  2D77               	goto	l3255
  1702  0D62                     l196:	
  1703                           ;main.c: 468: while(PORTBbits.RB2 == 0);
  1704                           
  1705  0D62  1D06               	btfss	6,2	;volatile
  1706  0D63  2D62               	goto	l196
  1707                           
  1708                           ;main.c: 469: _delay((unsigned long)((20)*(18432000/4000.0)));
  1709  0D64  3078               	movlw	120
  1710  0D65  1683               	bsf	3,5	;RP0=1, select bank3
  1711  0D66  1703               	bsf	3,6	;RP1=1, select bank3
  1712  0D67  00D8               	movwf	(??_main^(0+384)+1)
  1713  0D68  30AF               	movlw	175
  1714  0D69  00D7               	movwf	??_main^(0+384)
  1715  0D6A                     u5817:	
  1716  0D6A  0BD7               	decfsz	??_main^(0+384),f
  1717  0D6B  2D6A               	goto	u5817
  1718  0D6C  0BD8               	decfsz	(??_main^(0+384)+1),f
  1719  0D6D  2D6A               	goto	u5817
  1720  0D6E                     l199:	
  1721                           ;main.c: 470: while(PORTBbits.RB2 == 0);
  1722                           
  1723  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0D70  1D06               	btfss	6,2	;volatile
  1726  0D71  2D6E               	goto	l199
  1727                           
  1728                           ;main.c: 471: set();
  1729  0D72  160A  118A  2382  120A  158A  	fcall	_set
  1730  0D77                     l3255:	
  1731                           
  1732                           ;main.c: 472: }
  1733                           ;main.c: 473: if(PORTBbits.RB3 == 0){
  1734  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0D79  1986               	btfsc	6,3	;volatile
  1737  0D7A  2D92               	goto	l3263
  1738  0D7B                     l203:	
  1739                           ;main.c: 474: while(PORTBbits.RB3 == 0);
  1740                           
  1741  0D7B  1D86               	btfss	6,3	;volatile
  1742  0D7C  2D7B               	goto	l203
  1743                           
  1744                           ;main.c: 475: _delay((unsigned long)((20)*(18432000/4000.0)));
  1745  0D7D  3078               	movlw	120
  1746  0D7E  1683               	bsf	3,5	;RP0=1, select bank3
  1747  0D7F  1703               	bsf	3,6	;RP1=1, select bank3
  1748  0D80  00D8               	movwf	(??_main^(0+384)+1)
  1749  0D81  30AF               	movlw	175
  1750  0D82  00D7               	movwf	??_main^(0+384)
  1751  0D83                     u5827:	
  1752  0D83  0BD7               	decfsz	??_main^(0+384),f
  1753  0D84  2D83               	goto	u5827
  1754  0D85  0BD8               	decfsz	(??_main^(0+384)+1),f
  1755  0D86  2D83               	goto	u5827
  1756                           
  1757                           ;main.c: 476: pilotoAtivo = pilotoAtivo & 0b11111101;
  1758  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0D89  0864               	movf	_pilotoAtivo^(0+128),w
  1761  0D8A  39FD               	andlw	253
  1762  0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  1763  0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  1764  0D8D  00D7               	movwf	??_main^(0+384)
  1765  0D8E  0857               	movf	??_main^(0+384),w
  1766  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1767  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0D91  00E4               	movwf	_pilotoAtivo^(0+128)
  1769  0D92                     l3263:	
  1770                           
  1771                           ;main.c: 477: }
  1772                           ;main.c: 490: _delay((unsigned long)((200)*(18432000/4000.0)));
  1773  0D92  3005               	movlw	5
  1774  0D93  1683               	bsf	3,5	;RP0=1, select bank3
  1775  0D94  1703               	bsf	3,6	;RP1=1, select bank3
  1776  0D95  00D9               	movwf	(??_main^(0+384)+2)
  1777  0D96  30AD               	movlw	173
  1778  0D97  00D8               	movwf	(??_main^(0+384)+1)
  1779  0D98  30E0               	movlw	224
  1780  0D99  00D7               	movwf	??_main^(0+384)
  1781  0D9A                     u5837:	
  1782  0D9A  0BD7               	decfsz	??_main^(0+384),f
  1783  0D9B  2D9A               	goto	u5837
  1784  0D9C  0BD8               	decfsz	(??_main^(0+384)+1),f
  1785  0D9D  2D9A               	goto	u5837
  1786  0D9E  0BD9               	decfsz	(??_main^(0+384)+2),f
  1787  0D9F  2D9A               	goto	u5837
  1788  0DA0  2D3A               	goto	l3233
  1789  0DA1                     __end_of_main:	
  1790                           
  1791                           	psect	text1
  1792  1382                     __ptext1:	
  1793 ;; *************** function _set *****************
  1794 ;; Defined at:
  1795 ;;		line 99 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;		None               void
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          0       0       0       1       0
  1812 ;;      Totals:         0       0       0       1       0
  1813 ;;Total ram usage:        1 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    4
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _set
  1825  1382                     _set:	
  1826                           
  1827                           ;main.c: 100: if(kmph > 40){
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _set: [wreg+status,2+status,0]
  1831  1382  3000               	movlw	0
  1832  1383  1283               	bcf	3,5	;RP0=0, select bank0
  1833  1384  1303               	bcf	3,6	;RP1=0, select bank0
  1834  1385  026B               	subwf	_kmph+1,w
  1835  1386  3029               	movlw	41
  1836  1387  1903               	skipnz
  1837  1388  026A               	subwf	_kmph,w
  1838  1389  1C03               	skipc
  1839  138A  0008               	return
  1840                           
  1841                           ;main.c: 102: if(pilotoAtivo == 3 && setpoint > 1640){
  1842  138B  1683               	bsf	3,5	;RP0=1, select bank1
  1843  138C  1303               	bcf	3,6	;RP1=0, select bank1
  1844  138D  0864               	movf	_pilotoAtivo^(0+128),w
  1845  138E  3A03               	xorlw	3
  1846  138F  1D03               	skipz
  1847  1390  2BAC               	goto	l2425
  1848  1391  3006               	movlw	6
  1849  1392  0266               	subwf	(_setpoint+1)^(0+128),w
  1850  1393  3069               	movlw	105
  1851  1394  1903               	skipnz
  1852  1395  0265               	subwf	_setpoint^(0+128),w
  1853  1396  1C03               	skipc
  1854  1397  2BAC               	goto	l2425
  1855                           
  1856                           ;main.c: 104: setpoint = setpoint - 41;
  1857  1398  0865               	movf	_setpoint^(0+128),w
  1858  1399  3ED7               	addlw	215
  1859  139A  00E5               	movwf	_setpoint^(0+128)
  1860  139B  0866               	movf	(_setpoint+1)^(0+128),w
  1861  139C  1803               	skipnc
  1862  139D  3E01               	addlw	1
  1863  139E  3EFF               	addlw	255
  1864  139F  00E6               	movwf	(_setpoint+1)^(0+128)
  1865                           
  1866                           ;main.c: 105: velocidadeSetada = setpoint;
  1867  13A0  0866               	movf	(_setpoint+1)^(0+128),w
  1868  13A1  1283               	bcf	3,5	;RP0=0, select bank0
  1869  13A2  1303               	bcf	3,6	;RP1=0, select bank0
  1870  13A3  01EF               	clrf	_velocidadeSetada+1
  1871  13A4  07EF               	addwf	_velocidadeSetada+1,f
  1872  13A5  1683               	bsf	3,5	;RP0=1, select bank1
  1873  13A6  1303               	bcf	3,6	;RP1=0, select bank1
  1874  13A7  0865               	movf	_setpoint^(0+128),w
  1875  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  1876  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  1877  13AA  01EE               	clrf	_velocidadeSetada
  1878  13AB  07EE               	addwf	_velocidadeSetada,f
  1879  13AC                     l2425:	
  1880                           
  1881                           ;main.c: 106: }
  1882                           ;main.c: 107: if(pilotoAtivo == 1){
  1883  13AC  1683               	bsf	3,5	;RP0=1, select bank1
  1884  13AD  1303               	bcf	3,6	;RP1=0, select bank1
  1885  13AE  0864               	movf	_pilotoAtivo^(0+128),w
  1886  13AF  3A01               	xorlw	1
  1887  13B0  1D03               	skipz
  1888  13B1  0008               	return
  1889                           
  1890                           ;main.c: 109: pilotoAtivo = 3;
  1891  13B2  3003               	movlw	3
  1892  13B3  1683               	bsf	3,5	;RP0=1, select bank3
  1893  13B4  1703               	bsf	3,6	;RP1=1, select bank3
  1894  13B5  00C0               	movwf	??_set^(0+384)
  1895  13B6  0840               	movf	??_set^(0+384),w
  1896  13B7  1683               	bsf	3,5	;RP0=1, select bank1
  1897  13B8  1303               	bcf	3,6	;RP1=0, select bank1
  1898  13B9  00E4               	movwf	_pilotoAtivo^(0+128)
  1899                           
  1900                           ;main.c: 110: setpoint = velocidadeSetada;
  1901  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  1902  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  1903  13BC  086F               	movf	_velocidadeSetada+1,w
  1904  13BD  1683               	bsf	3,5	;RP0=1, select bank1
  1905  13BE  1303               	bcf	3,6	;RP1=0, select bank1
  1906  13BF  01E6               	clrf	(_setpoint+1)^(0+128)
  1907  13C0  07E6               	addwf	(_setpoint+1)^(0+128),f
  1908  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  1909  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  1910  13C3  086E               	movf	_velocidadeSetada,w
  1911  13C4  1683               	bsf	3,5	;RP0=1, select bank1
  1912  13C5  1303               	bcf	3,6	;RP1=0, select bank1
  1913  13C6  01E5               	clrf	_setpoint^(0+128)
  1914  13C7  07E5               	addwf	_setpoint^(0+128),f
  1915  13C8  0008               	return
  1916  13C9                     __end_of_set:	
  1917                           
  1918                           	psect	text2
  1919  1301                     __ptext2:	
  1920 ;; *************** function _res *****************
  1921 ;; Defined at:
  1922 ;;		line 86 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       0       0       1       0
  1939 ;;      Totals:         0       0       0       1       0
  1940 ;;Total ram usage:        1 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    4
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _res
  1952  1301                     _res:	
  1953                           
  1954                           ;main.c: 87: if(pilotoAtivo == 3 && setpoint < 9000){
  1955                           
  1956                           ;incstack = 0
  1957                           ; Regs used in _res: [wreg+status,2+status,0]
  1958  1301  1683               	bsf	3,5	;RP0=1, select bank1
  1959  1302  1303               	bcf	3,6	;RP1=0, select bank1
  1960  1303  0864               	movf	_pilotoAtivo^(0+128),w
  1961  1304  3A03               	xorlw	3
  1962  1305  1D03               	skipz
  1963  1306  2B22               	goto	l2411
  1964  1307  3023               	movlw	35
  1965  1308  0266               	subwf	(_setpoint+1)^(0+128),w
  1966  1309  3028               	movlw	40
  1967  130A  1903               	skipnz
  1968  130B  0265               	subwf	_setpoint^(0+128),w
  1969  130C  1803               	skipnc
  1970  130D  2B22               	goto	l2411
  1971                           
  1972                           ;main.c: 89: setpoint = setpoint + 41;
  1973  130E  0865               	movf	_setpoint^(0+128),w
  1974  130F  3E29               	addlw	41
  1975  1310  00E5               	movwf	_setpoint^(0+128)
  1976  1311  0866               	movf	(_setpoint+1)^(0+128),w
  1977  1312  1803               	skipnc
  1978  1313  3E01               	addlw	1
  1979  1314  3E00               	addlw	0
  1980  1315  00E6               	movwf	(_setpoint+1)^(0+128)
  1981                           
  1982                           ;main.c: 90: velocidadeSetada = setpoint;
  1983  1316  0866               	movf	(_setpoint+1)^(0+128),w
  1984  1317  1283               	bcf	3,5	;RP0=0, select bank0
  1985  1318  1303               	bcf	3,6	;RP1=0, select bank0
  1986  1319  01EF               	clrf	_velocidadeSetada+1
  1987  131A  07EF               	addwf	_velocidadeSetada+1,f
  1988  131B  1683               	bsf	3,5	;RP0=1, select bank1
  1989  131C  1303               	bcf	3,6	;RP1=0, select bank1
  1990  131D  0865               	movf	_setpoint^(0+128),w
  1991  131E  1283               	bcf	3,5	;RP0=0, select bank0
  1992  131F  1303               	bcf	3,6	;RP1=0, select bank0
  1993  1320  01EE               	clrf	_velocidadeSetada
  1994  1321  07EE               	addwf	_velocidadeSetada,f
  1995  1322                     l2411:	
  1996                           
  1997                           ;main.c: 91: }
  1998                           ;main.c: 92: if(pilotoAtivo == 1){
  1999  1322  1683               	bsf	3,5	;RP0=1, select bank1
  2000  1323  1303               	bcf	3,6	;RP1=0, select bank1
  2001  1324  0864               	movf	_pilotoAtivo^(0+128),w
  2002  1325  3A01               	xorlw	1
  2003  1326  1D03               	skipz
  2004  1327  0008               	return
  2005                           
  2006                           ;main.c: 94: pilotoAtivo = 3;
  2007  1328  3003               	movlw	3
  2008  1329  1683               	bsf	3,5	;RP0=1, select bank3
  2009  132A  1703               	bsf	3,6	;RP1=1, select bank3
  2010  132B  00C0               	movwf	??_res^(0+384)
  2011  132C  0840               	movf	??_res^(0+384),w
  2012  132D  1683               	bsf	3,5	;RP0=1, select bank1
  2013  132E  1303               	bcf	3,6	;RP1=0, select bank1
  2014  132F  00E4               	movwf	_pilotoAtivo^(0+128)
  2015                           
  2016                           ;main.c: 95: setpoint = velocidadeSetada;
  2017  1330  1283               	bcf	3,5	;RP0=0, select bank0
  2018  1331  1303               	bcf	3,6	;RP1=0, select bank0
  2019  1332  086F               	movf	_velocidadeSetada+1,w
  2020  1333  1683               	bsf	3,5	;RP0=1, select bank1
  2021  1334  1303               	bcf	3,6	;RP1=0, select bank1
  2022  1335  01E6               	clrf	(_setpoint+1)^(0+128)
  2023  1336  07E6               	addwf	(_setpoint+1)^(0+128),f
  2024  1337  1283               	bcf	3,5	;RP0=0, select bank0
  2025  1338  1303               	bcf	3,6	;RP1=0, select bank0
  2026  1339  086E               	movf	_velocidadeSetada,w
  2027  133A  1683               	bsf	3,5	;RP0=1, select bank1
  2028  133B  1303               	bcf	3,6	;RP1=0, select bank1
  2029  133C  01E5               	clrf	_setpoint^(0+128)
  2030  133D  07E5               	addwf	_setpoint^(0+128),f
  2031  133E  0008               	return
  2032  133F                     __end_of_res:	
  2033                           
  2034                           	psect	text3
  2035  10D2                     __ptext3:	
  2036 ;; *************** function _inicia *****************
  2037 ;; Defined at:
  2038 ;;		line 79 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		status,2
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       0       0       0       0
  2053 ;;      Locals:         0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0
  2055 ;;      Totals:         0       0       0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    4
  2059 ;; This function calls:
  2060 ;;		Nothing
  2061 ;; This function is called by:
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function _inicia
  2068  10D2                     _inicia:	
  2069                           
  2070                           ;main.c: 80: if(pilotoAtivo & 1){
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _inicia: [status,2]
  2074  10D2  1683               	bsf	3,5	;RP0=1, select bank1
  2075  10D3  1303               	bcf	3,6	;RP1=0, select bank1
  2076  10D4  1C64               	btfss	_pilotoAtivo^(0+128),0
  2077  10D5  28D8               	goto	l99
  2078                           
  2079                           ;main.c: 81: pilotoAtivo = 0;
  2080  10D6  01E4               	clrf	_pilotoAtivo^(0+128)
  2081                           
  2082                           ;main.c: 82: }else{
  2083  10D7  0008               	return
  2084  10D8                     l99:	
  2085                           
  2086                           ;main.c: 83: pilotoAtivo = 1;
  2087  10D8  01E4               	clrf	_pilotoAtivo^(0+128)
  2088  10D9  0AE4               	incf	_pilotoAtivo^(0+128),f
  2089  10DA  0008               	return
  2090  10DB                     __end_of_inicia:	
  2091                           
  2092                           	psect	text4
  2093  13C9                     __ptext4:	
  2094 ;; *************** function _USART_Init *****************
  2095 ;; Defined at:
  2096 ;;		line 6 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\usart.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  BaudRate        4   15[BANK3 ] long 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;		None               void
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       4       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       4       0
  2113 ;;      Totals:         0       0       0       8       0
  2114 ;;Total ram usage:        8 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    5
  2117 ;; This function calls:
  2118 ;;		___aldiv
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _USART_Init
  2126  13C9                     _USART_Init:	
  2127                           
  2128                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2132  13C9  1683               	bsf	3,5	;RP0=1, select bank3
  2133  13CA  1703               	bsf	3,6	;RP1=1, select bank3
  2134  13CB  084F               	movf	USART_Init@BaudRate^(0+384),w
  2135  13CC  00D3               	movwf	??_USART_Init^(0+384)
  2136  13CD  0850               	movf	(USART_Init@BaudRate+1)^(0+384),w
  2137  13CE  00D4               	movwf	(??_USART_Init^(0+384)+1)
  2138  13CF  0851               	movf	(USART_Init@BaudRate+2)^(0+384),w
  2139  13D0  00D5               	movwf	(??_USART_Init^(0+384)+2)
  2140  13D1  0852               	movf	(USART_Init@BaudRate+3)^(0+384),w
  2141  13D2  00D6               	movwf	(??_USART_Init^(0+384)+3)
  2142  13D3  3004               	movlw	4
  2143  13D4                     u3015:	
  2144  13D4  1003               	clrc
  2145  13D5  0DD3               	rlf	??_USART_Init^(0+384),f
  2146  13D6  0DD4               	rlf	(??_USART_Init^(0+384)+1),f
  2147  13D7  0DD5               	rlf	(??_USART_Init^(0+384)+2),f
  2148  13D8  0DD6               	rlf	(??_USART_Init^(0+384)+3),f
  2149  13D9  3EFF               	addlw	-1
  2150  13DA  1D03               	skipz
  2151  13DB  2BD4               	goto	u3015
  2152  13DC  0856               	movf	(??_USART_Init+3)^(0+384),w
  2153  13DD  00C3               	movwf	(___aldiv@divisor+3)^(0+384)
  2154  13DE  0855               	movf	(??_USART_Init+2)^(0+384),w
  2155  13DF  00C2               	movwf	(___aldiv@divisor+2)^(0+384)
  2156  13E0  0854               	movf	(??_USART_Init+1)^(0+384),w
  2157  13E1  00C1               	movwf	(___aldiv@divisor+1)^(0+384)
  2158  13E2  0853               	movf	??_USART_Init^(0+384),w
  2159  13E3  00C0               	movwf	___aldiv@divisor^(0+384)
  2160  13E4  3001               	movlw	1
  2161  13E5  00C7               	movwf	(___aldiv@dividend+3)^(0+384)
  2162  13E6  3019               	movlw	25
  2163  13E7  00C6               	movwf	(___aldiv@dividend+2)^(0+384)
  2164  13E8  3040               	movlw	64
  2165  13E9  00C5               	movwf	(___aldiv@dividend+1)^(0+384)
  2166  13EA  3000               	movlw	0
  2167  13EB  00C4               	movwf	___aldiv@dividend^(0+384)
  2168  13EC  160A  118A  2771   	fcall	___aldiv
  2169  13EF  1683               	bsf	3,5	;RP0=1, select bank3
  2170  13F0  1703               	bsf	3,6	;RP1=1, select bank3
  2171  13F1  0840               	movf	?___aldiv^(0+384),w
  2172  13F2  3EFF               	addlw	255
  2173  13F3  1683               	bsf	3,5	;RP0=1, select bank1
  2174  13F4  1303               	bcf	3,6	;RP1=0, select bank1
  2175  13F5  0099               	movwf	25	;volatile
  2176                           
  2177                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  2178  13F6  1398               	bcf	24,7	;volatile
  2179                           
  2180                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  2181  13F7  1318               	bcf	24,6	;volatile
  2182                           
  2183                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  2184  13F8  1698               	bsf	24,5	;volatile
  2185                           
  2186                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  2187  13F9  1218               	bcf	24,4	;volatile
  2188                           
  2189                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  2190  13FA  1518               	bsf	24,2	;volatile
  2191                           
  2192                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  2193  13FB  1498               	bsf	24,1	;volatile
  2194                           
  2195                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  2196  13FC  1018               	bcf	24,0	;volatile
  2197                           
  2198                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  2199  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  2200  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  2201  13FF  1798               	bsf	24,7	;volatile
  2202                           
  2203                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  2204  1400  1318               	bcf	24,6	;volatile
  2205                           
  2206                           ;usart.c: 28: RCSTAbits.SREN = 0;
  2207  1401  1298               	bcf	24,5	;volatile
  2208                           
  2209                           ;usart.c: 29: RCSTAbits.CREN = 1;
  2210  1402  1618               	bsf	24,4	;volatile
  2211                           
  2212                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  2213  1403  1198               	bcf	24,3	;volatile
  2214                           
  2215                           ;usart.c: 31: RCSTAbits.FERR = 0;
  2216  1404  1118               	bcf	24,2	;volatile
  2217                           
  2218                           ;usart.c: 32: RCSTAbits.OERR = 0;
  2219  1405  1098               	bcf	24,1	;volatile
  2220                           
  2221                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  2222  1406  1018               	bcf	24,0	;volatile
  2223                           
  2224                           ;usart.c: 36: PIE1bits.TXIE = 0;
  2225  1407  1683               	bsf	3,5	;RP0=1, select bank1
  2226  1408  1303               	bcf	3,6	;RP1=0, select bank1
  2227  1409  120C               	bcf	12,4	;volatile
  2228                           
  2229                           ;usart.c: 37: PIR1bits.TXIF = 0;
  2230  140A  1283               	bcf	3,5	;RP0=0, select bank0
  2231  140B  1303               	bcf	3,6	;RP1=0, select bank0
  2232  140C  120C               	bcf	12,4	;volatile
  2233                           
  2234                           ;usart.c: 38: PIE1bits.RCIE = 1;
  2235  140D  1683               	bsf	3,5	;RP0=1, select bank1
  2236  140E  1303               	bcf	3,6	;RP1=0, select bank1
  2237  140F  168C               	bsf	12,5	;volatile
  2238                           
  2239                           ;usart.c: 39: PIR1bits.RCIF = 0;
  2240  1410  1283               	bcf	3,5	;RP0=0, select bank0
  2241  1411  1303               	bcf	3,6	;RP1=0, select bank0
  2242  1412  128C               	bcf	12,5	;volatile
  2243  1413  0008               	return
  2244  1414                     __end_of_USART_Init:	
  2245                           
  2246                           	psect	text5
  2247  1771                     __ptext5:	
  2248 ;; *************** function ___aldiv *****************
  2249 ;; Defined at:
  2250 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  divisor         4    0[BANK3 ] long 
  2253 ;;  dividend        4    4[BANK3 ] long 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  quotient        4   11[BANK3 ] long 
  2256 ;;  sign            1   10[BANK3 ] unsigned char 
  2257 ;;  counter         1    9[BANK3 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  4    0[BANK3 ] long 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       8       0
  2268 ;;      Locals:         0       0       0       6       0
  2269 ;;      Temps:          0       0       0       1       0
  2270 ;;      Totals:         0       0       0      15       0
  2271 ;;Total ram usage:       15 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    4
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_USART_Init
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function ___aldiv
  2283  1771                     ___aldiv:	
  2284                           
  2285                           ;incstack = 0
  2286                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2287  1771  1683               	bsf	3,5	;RP0=1, select bank3
  2288  1772  1703               	bsf	3,6	;RP1=1, select bank3
  2289  1773  01CA               	clrf	___aldiv@sign^(0+384)
  2290  1774  1FC3               	btfss	(___aldiv@divisor+3)^(0+384),7
  2291  1775  2F83               	goto	l609
  2292  1776  09C0               	comf	___aldiv@divisor^(0+384),f
  2293  1777  09C1               	comf	(___aldiv@divisor+1)^(0+384),f
  2294  1778  09C2               	comf	(___aldiv@divisor+2)^(0+384),f
  2295  1779  09C3               	comf	(___aldiv@divisor+3)^(0+384),f
  2296  177A  0AC0               	incf	___aldiv@divisor^(0+384),f
  2297  177B  1903               	skipnz
  2298  177C  0AC1               	incf	(___aldiv@divisor+1)^(0+384),f
  2299  177D  1903               	skipnz
  2300  177E  0AC2               	incf	(___aldiv@divisor+2)^(0+384),f
  2301  177F  1903               	skipnz
  2302  1780  0AC3               	incf	(___aldiv@divisor+3)^(0+384),f
  2303  1781  01CA               	clrf	___aldiv@sign^(0+384)
  2304  1782  0ACA               	incf	___aldiv@sign^(0+384),f
  2305  1783                     l609:	
  2306  1783  1FC7               	btfss	(___aldiv@dividend+3)^(0+384),7
  2307  1784  2F94               	goto	l2187
  2308  1785  09C4               	comf	___aldiv@dividend^(0+384),f
  2309  1786  09C5               	comf	(___aldiv@dividend+1)^(0+384),f
  2310  1787  09C6               	comf	(___aldiv@dividend+2)^(0+384),f
  2311  1788  09C7               	comf	(___aldiv@dividend+3)^(0+384),f
  2312  1789  0AC4               	incf	___aldiv@dividend^(0+384),f
  2313  178A  1903               	skipnz
  2314  178B  0AC5               	incf	(___aldiv@dividend+1)^(0+384),f
  2315  178C  1903               	skipnz
  2316  178D  0AC6               	incf	(___aldiv@dividend+2)^(0+384),f
  2317  178E  1903               	skipnz
  2318  178F  0AC7               	incf	(___aldiv@dividend+3)^(0+384),f
  2319  1790  3001               	movlw	1
  2320  1791  00C8               	movwf	??___aldiv^(0+384)
  2321  1792  0848               	movf	??___aldiv^(0+384),w
  2322  1793  06CA               	xorwf	___aldiv@sign^(0+384),f
  2323  1794                     l2187:	
  2324  1794  3000               	movlw	0
  2325  1795  00CE               	movwf	(___aldiv@quotient+3)^(0+384)
  2326  1796  3000               	movlw	0
  2327  1797  00CD               	movwf	(___aldiv@quotient+2)^(0+384)
  2328  1798  3000               	movlw	0
  2329  1799  00CC               	movwf	(___aldiv@quotient+1)^(0+384)
  2330  179A  3000               	movlw	0
  2331  179B  00CB               	movwf	___aldiv@quotient^(0+384)
  2332  179C  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2333  179D  0442               	iorwf	(___aldiv@divisor+2)^(0+384),w
  2334  179E  0441               	iorwf	(___aldiv@divisor+1)^(0+384),w
  2335  179F  0440               	iorwf	___aldiv@divisor^(0+384),w
  2336  17A0  1903               	skipnz
  2337  17A1  2FE9               	goto	l2209
  2338  17A2  01C9               	clrf	___aldiv@counter^(0+384)
  2339  17A3  0AC9               	incf	___aldiv@counter^(0+384),f
  2340  17A4                     l2195:	
  2341  17A4  1BC3               	btfsc	(___aldiv@divisor+3)^(0+384),7
  2342  17A5  2FB4               	goto	l2197
  2343  17A6  3001               	movlw	1
  2344  17A7  00C8               	movwf	??___aldiv^(0+384)
  2345  17A8                     u2255:	
  2346  17A8  1003               	clrc
  2347  17A9  0DC0               	rlf	___aldiv@divisor^(0+384),f
  2348  17AA  0DC1               	rlf	(___aldiv@divisor+1)^(0+384),f
  2349  17AB  0DC2               	rlf	(___aldiv@divisor+2)^(0+384),f
  2350  17AC  0DC3               	rlf	(___aldiv@divisor+3)^(0+384),f
  2351  17AD  0BC8               	decfsz	??___aldiv^(0+384),f
  2352  17AE  2FA8               	goto	u2255
  2353  17AF  3001               	movlw	1
  2354  17B0  00C8               	movwf	??___aldiv^(0+384)
  2355  17B1  0848               	movf	??___aldiv^(0+384),w
  2356  17B2  07C9               	addwf	___aldiv@counter^(0+384),f
  2357  17B3  2FA4               	goto	l2195
  2358  17B4                     l2197:	
  2359  17B4  3001               	movlw	1
  2360  17B5  00C8               	movwf	??___aldiv^(0+384)
  2361  17B6                     u2275:	
  2362  17B6  1003               	clrc
  2363  17B7  0DCB               	rlf	___aldiv@quotient^(0+384),f
  2364  17B8  0DCC               	rlf	(___aldiv@quotient+1)^(0+384),f
  2365  17B9  0DCD               	rlf	(___aldiv@quotient+2)^(0+384),f
  2366  17BA  0DCE               	rlf	(___aldiv@quotient+3)^(0+384),f
  2367  17BB  0BC8               	decfsz	??___aldiv^(0+384),f
  2368  17BC  2FB6               	goto	u2275
  2369  17BD  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2370  17BE  0247               	subwf	(___aldiv@dividend+3)^(0+384),w
  2371  17BF  1D03               	skipz
  2372  17C0  2FCB               	goto	u2285
  2373  17C1  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  2374  17C2  0246               	subwf	(___aldiv@dividend+2)^(0+384),w
  2375  17C3  1D03               	skipz
  2376  17C4  2FCB               	goto	u2285
  2377  17C5  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  2378  17C6  0245               	subwf	(___aldiv@dividend+1)^(0+384),w
  2379  17C7  1D03               	skipz
  2380  17C8  2FCB               	goto	u2285
  2381  17C9  0840               	movf	___aldiv@divisor^(0+384),w
  2382  17CA  0244               	subwf	___aldiv@dividend^(0+384),w
  2383  17CB                     u2285:	
  2384  17CB  1C03               	skipc
  2385  17CC  2FDC               	goto	l2205
  2386  17CD  0840               	movf	___aldiv@divisor^(0+384),w
  2387  17CE  02C4               	subwf	___aldiv@dividend^(0+384),f
  2388  17CF  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  2389  17D0  1C03               	skipc
  2390  17D1  0F41               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2391  17D2  02C5               	subwf	(___aldiv@dividend+1)^(0+384),f
  2392  17D3  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  2393  17D4  1C03               	skipc
  2394  17D5  0F42               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2395  17D6  02C6               	subwf	(___aldiv@dividend+2)^(0+384),f
  2396  17D7  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2397  17D8  1C03               	skipc
  2398  17D9  0F43               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2399  17DA  02C7               	subwf	(___aldiv@dividend+3)^(0+384),f
  2400  17DB  144B               	bsf	___aldiv@quotient^(0+384),0
  2401  17DC                     l2205:	
  2402  17DC  3001               	movlw	1
  2403  17DD                     u2295:	
  2404  17DD  1003               	clrc
  2405  17DE  0CC3               	rrf	(___aldiv@divisor+3)^(0+384),f
  2406  17DF  0CC2               	rrf	(___aldiv@divisor+2)^(0+384),f
  2407  17E0  0CC1               	rrf	(___aldiv@divisor+1)^(0+384),f
  2408  17E1  0CC0               	rrf	___aldiv@divisor^(0+384),f
  2409  17E2  3EFF               	addlw	-1
  2410  17E3  1D03               	skipz
  2411  17E4  2FDD               	goto	u2295
  2412  17E5  3001               	movlw	1
  2413  17E6  02C9               	subwf	___aldiv@counter^(0+384),f
  2414  17E7  1D03               	btfss	3,2
  2415  17E8  2FB4               	goto	l2197
  2416  17E9                     l2209:	
  2417  17E9  084A               	movf	___aldiv@sign^(0+384),w
  2418  17EA  1903               	btfsc	3,2
  2419  17EB  2FF7               	goto	l2213
  2420  17EC  09CB               	comf	___aldiv@quotient^(0+384),f
  2421  17ED  09CC               	comf	(___aldiv@quotient+1)^(0+384),f
  2422  17EE  09CD               	comf	(___aldiv@quotient+2)^(0+384),f
  2423  17EF  09CE               	comf	(___aldiv@quotient+3)^(0+384),f
  2424  17F0  0ACB               	incf	___aldiv@quotient^(0+384),f
  2425  17F1  1903               	skipnz
  2426  17F2  0ACC               	incf	(___aldiv@quotient+1)^(0+384),f
  2427  17F3  1903               	skipnz
  2428  17F4  0ACD               	incf	(___aldiv@quotient+2)^(0+384),f
  2429  17F5  1903               	skipnz
  2430  17F6  0ACE               	incf	(___aldiv@quotient+3)^(0+384),f
  2431  17F7                     l2213:	
  2432  17F7  084E               	movf	(___aldiv@quotient+3)^(0+384),w
  2433  17F8  00C3               	movwf	(?___aldiv+3)^(0+384)
  2434  17F9  084D               	movf	(___aldiv@quotient+2)^(0+384),w
  2435  17FA  00C2               	movwf	(?___aldiv+2)^(0+384)
  2436  17FB  084C               	movf	(___aldiv@quotient+1)^(0+384),w
  2437  17FC  00C1               	movwf	(?___aldiv+1)^(0+384)
  2438  17FD  084B               	movf	___aldiv@quotient^(0+384),w
  2439  17FE  00C0               	movwf	?___aldiv^(0+384)
  2440  17FF  0008               	return
  2441  1800                     __end_of___aldiv:	
  2442                           
  2443                           	psect	text6
  2444  10B9                     __ptext6:	
  2445 ;; *************** function _TIMER0_Set *****************
  2446 ;; Defined at:
  2447 ;;		line 20 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\timers.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  contagens       1    wreg     unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  contagens       1    0[BANK3 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       0       0       0       0
  2462 ;;      Locals:         0       0       0       1       0
  2463 ;;      Temps:          0       0       0       0       0
  2464 ;;      Totals:         0       0       0       1       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    4
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _TIMER0_Set
  2477  10B9                     _TIMER0_Set:	
  2478                           
  2479                           ;incstack = 0
  2480                           ; Regs used in _TIMER0_Set: [wreg]
  2481                           ;TIMER0_Set@contagens stored from wreg
  2482  10B9  1683               	bsf	3,5	;RP0=1, select bank3
  2483  10BA  1703               	bsf	3,6	;RP1=1, select bank3
  2484  10BB  00C0               	movwf	TIMER0_Set@contagens^(0+384)
  2485                           
  2486                           ;timers.c: 22: TMR0 = contagens;
  2487  10BC  0840               	movf	TIMER0_Set@contagens^(0+384),w
  2488  10BD  1283               	bcf	3,5	;RP0=0, select bank0
  2489  10BE  1303               	bcf	3,6	;RP1=0, select bank0
  2490  10BF  0081               	movwf	1	;volatile
  2491  10C0  0008               	return
  2492  10C1                     __end_of_TIMER0_Set:	
  2493                           
  2494                           	psect	text7
  2495  10E5                     __ptext7:	
  2496 ;; *************** function _TIMER0_Init *****************
  2497 ;; Defined at:
  2498 ;;		line 6 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\timers.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		None
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    4
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _TIMER0_Init
  2528  10E5                     _TIMER0_Init:	
  2529                           
  2530                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _TIMER0_Init: []
  2534  10E5  1683               	bsf	3,5	;RP0=1, select bank1
  2535  10E6  1303               	bcf	3,6	;RP1=0, select bank1
  2536  10E7  1281               	bcf	1,5	;volatile
  2537                           
  2538                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2539  10E8  1201               	bcf	1,4	;volatile
  2540                           
  2541                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2542  10E9  1181               	bcf	1,3	;volatile
  2543                           
  2544                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2545  10EA  1501               	bsf	1,2	;volatile
  2546                           
  2547                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2548  10EB  1481               	bsf	1,1	;volatile
  2549                           
  2550                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2551  10EC  1401               	bsf	1,0	;volatile
  2552                           
  2553                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2554  10ED  110B               	bcf	11,2	;volatile
  2555                           
  2556                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2557  10EE  168B               	bsf	11,5	;volatile
  2558  10EF  0008               	return
  2559  10F0                     __end_of_TIMER0_Init:	
  2560                           
  2561                           	psect	text8
  2562  1240                     __ptext8:	
  2563 ;; *************** function _PWM_Init *****************
  2564 ;; Defined at:
  2565 ;;		line 5 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\pwm.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;		None               void
  2572 ;; Registers used:
  2573 ;;		wreg
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       0       0       0       0
  2580 ;;      Locals:         0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0
  2582 ;;      Totals:         0       0       0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    4
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _PWM_Init
  2595  1240                     _PWM_Init:	
  2596                           
  2597                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2598                           
  2599                           ;incstack = 0
  2600                           ; Regs used in _PWM_Init: [wreg]
  2601  1240  1283               	bcf	3,5	;RP0=0, select bank0
  2602  1241  1303               	bcf	3,6	;RP1=0, select bank0
  2603  1242  1492               	bsf	18,1	;volatile
  2604                           
  2605                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2606  1243  1012               	bcf	18,0	;volatile
  2607                           
  2608                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2609  1244  1312               	bcf	18,6	;volatile
  2610                           
  2611                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2612  1245  1292               	bcf	18,5	;volatile
  2613                           
  2614                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2615  1246  1212               	bcf	18,4	;volatile
  2616                           
  2617                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2618  1247  1192               	bcf	18,3	;volatile
  2619                           
  2620                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2621  1248  1512               	bsf	18,2	;volatile
  2622                           
  2623                           ;pwm.c: 27: PR2 = 255;
  2624  1249  30FF               	movlw	255
  2625  124A  1683               	bsf	3,5	;RP0=1, select bank1
  2626  124B  1303               	bcf	3,6	;RP1=0, select bank1
  2627  124C  0092               	movwf	18	;volatile
  2628                           
  2629                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2630  124D  1283               	bcf	3,5	;RP0=0, select bank0
  2631  124E  1303               	bcf	3,6	;RP1=0, select bank0
  2632  124F  1597               	bsf	23,3	;volatile
  2633                           
  2634                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2635  1250  1517               	bsf	23,2	;volatile
  2636                           
  2637                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2638  1251  1497               	bsf	23,1	;volatile
  2639                           
  2640                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2641  1252  1417               	bsf	23,0	;volatile
  2642                           
  2643                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2644  1253  1683               	bsf	3,5	;RP0=1, select bank1
  2645  1254  1303               	bcf	3,6	;RP1=0, select bank1
  2646  1255  150C               	bsf	12,2	;volatile
  2647                           
  2648                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2649  1256  1283               	bcf	3,5	;RP0=0, select bank0
  2650  1257  1303               	bcf	3,6	;RP1=0, select bank0
  2651  1258  110C               	bcf	12,2	;volatile
  2652                           
  2653                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2654  1259  159D               	bsf	29,3	;volatile
  2655                           
  2656                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2657  125A  151D               	bsf	29,2	;volatile
  2658                           
  2659                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2660  125B  149D               	bsf	29,1	;volatile
  2661                           
  2662                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2663  125C  141D               	bsf	29,0	;volatile
  2664                           
  2665                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2666  125D  1683               	bsf	3,5	;RP0=1, select bank1
  2667  125E  1303               	bcf	3,6	;RP1=0, select bank1
  2668  125F  140D               	bsf	13,0	;volatile
  2669                           
  2670                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2671  1260  1283               	bcf	3,5	;RP0=0, select bank0
  2672  1261  1303               	bcf	3,6	;RP1=0, select bank0
  2673  1262  100D               	bcf	13,0	;volatile
  2674  1263  0008               	return
  2675  1264                     __end_of_PWM_Init:	
  2676                           
  2677                           	psect	text9
  2678  121F                     __ptext9:	
  2679 ;; *************** function _PWM_DutyCycle2 *****************
  2680 ;; Defined at:
  2681 ;;		line 96 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\pwm.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  valor           2    0[BANK3 ] int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       0       0       2       0
  2696 ;;      Locals:         0       0       0       0       0
  2697 ;;      Temps:          0       0       0       2       0
  2698 ;;      Totals:         0       0       0       4       0
  2699 ;;Total ram usage:        4 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    4
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _PWM_DutyCycle2
  2711  121F                     _PWM_DutyCycle2:	
  2712                           
  2713                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2717  121F  1683               	bsf	3,5	;RP0=1, select bank3
  2718  1220  1703               	bsf	3,6	;RP1=1, select bank3
  2719  1221  0841               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2720  1222  00C3               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2721  1223  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2722  1224  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2723  1225  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2724  1226  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2725  1227  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2726  1228  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2727  1229  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2728  122A  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2729  122B  0842               	movf	??_PWM_DutyCycle2^(0+384),w
  2730  122C  1283               	bcf	3,5	;RP0=0, select bank0
  2731  122D  1303               	bcf	3,6	;RP1=0, select bank0
  2732  122E  009B               	movwf	27	;volatile
  2733                           
  2734                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2735  122F  1683               	bsf	3,5	;RP0=1, select bank3
  2736  1230  1703               	bsf	3,6	;RP1=1, select bank3
  2737  1231  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2738  1232  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2739  1233  3003               	movlw	3
  2740  1234                     u3005:	
  2741  1234  1003               	clrc
  2742  1235  0DC2               	rlf	??_PWM_DutyCycle2^(0+384),f
  2743  1236  3EFF               	addlw	-1
  2744  1237  1D03               	skipz
  2745  1238  2A34               	goto	u3005
  2746  1239  1003               	clrc
  2747  123A  0D42               	rlf	??_PWM_DutyCycle2^(0+384),w
  2748  123B  380C               	iorlw	12
  2749  123C  1283               	bcf	3,5	;RP0=0, select bank0
  2750  123D  1303               	bcf	3,6	;RP1=0, select bank0
  2751  123E  009D               	movwf	29	;volatile
  2752  123F  0008               	return
  2753  1240                     __end_of_PWM_DutyCycle2:	
  2754                           
  2755                           	psect	text10
  2756  11FE                     __ptext10:	
  2757 ;; *************** function _PWM_DutyCycle1 *****************
  2758 ;; Defined at:
  2759 ;;		line 64 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\pwm.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  valor           2    0[BANK3 ] int 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;		None               void
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       2       0
  2774 ;;      Locals:         0       0       0       0       0
  2775 ;;      Temps:          0       0       0       2       0
  2776 ;;      Totals:         0       0       0       4       0
  2777 ;;Total ram usage:        4 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    4
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _PWM_DutyCycle1
  2789  11FE                     _PWM_DutyCycle1:	
  2790                           
  2791                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2795  11FE  1683               	bsf	3,5	;RP0=1, select bank3
  2796  11FF  1703               	bsf	3,6	;RP1=1, select bank3
  2797  1200  0841               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2798  1201  00C3               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2799  1202  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2800  1203  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2801  1204  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2802  1205  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2803  1206  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2804  1207  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2805  1208  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2806  1209  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2807  120A  0842               	movf	??_PWM_DutyCycle1^(0+384),w
  2808  120B  1283               	bcf	3,5	;RP0=0, select bank0
  2809  120C  1303               	bcf	3,6	;RP1=0, select bank0
  2810  120D  0095               	movwf	21	;volatile
  2811                           
  2812                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2813  120E  1683               	bsf	3,5	;RP0=1, select bank3
  2814  120F  1703               	bsf	3,6	;RP1=1, select bank3
  2815  1210  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2816  1211  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2817  1212  3003               	movlw	3
  2818  1213                     u3025:	
  2819  1213  1003               	clrc
  2820  1214  0DC2               	rlf	??_PWM_DutyCycle1^(0+384),f
  2821  1215  3EFF               	addlw	-1
  2822  1216  1D03               	skipz
  2823  1217  2A13               	goto	u3025
  2824  1218  1003               	clrc
  2825  1219  0D42               	rlf	??_PWM_DutyCycle1^(0+384),w
  2826  121A  380C               	iorlw	12
  2827  121B  1283               	bcf	3,5	;RP0=0, select bank0
  2828  121C  1303               	bcf	3,6	;RP1=0, select bank0
  2829  121D  0097               	movwf	23	;volatile
  2830  121E  0008               	return
  2831  121F                     __end_of_PWM_DutyCycle1:	
  2832                           
  2833                           	psect	text11
  2834  14DD                     __ptext11:	
  2835 ;; *************** function _LCD_Init *****************
  2836 ;; Defined at:
  2837 ;;		line 87 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\lcd.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0
  2853 ;;      Temps:          0       0       0       2       0
  2854 ;;      Totals:         0       0       0       2       0
  2855 ;;Total ram usage:        2 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    5
  2858 ;; This function calls:
  2859 ;;		_LCD_WriteCmd
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _LCD_Init
  2867  14DD                     _LCD_Init:	
  2868                           
  2869                           ;lcd.c: 90: ADCON1bits.PCFG3 = 0;
  2870                           
  2871                           ;incstack = 0
  2872                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2873  14DD  1683               	bsf	3,5	;RP0=1, select bank1
  2874  14DE  1303               	bcf	3,6	;RP1=0, select bank1
  2875  14DF  119F               	bcf	31,3	;volatile
  2876                           
  2877                           ;lcd.c: 91: ADCON1bits.PCFG2 = 1;
  2878  14E0  151F               	bsf	31,2	;volatile
  2879                           
  2880                           ;lcd.c: 92: ADCON1bits.PCFG1 = 0;
  2881  14E1  109F               	bcf	31,1	;volatile
  2882                           
  2883                           ;lcd.c: 93: ADCON1bits.PCFG0 = 0;
  2884  14E2  101F               	bcf	31,0	;volatile
  2885                           
  2886                           ;lcd.c: 95: _delay((unsigned long)((15)*(18432000/4000.0)));
  2887  14E3  305A               	movlw	90
  2888  14E4  1683               	bsf	3,5	;RP0=1, select bank3
  2889  14E5  1703               	bsf	3,6	;RP1=1, select bank3
  2890  14E6  00C3               	movwf	(??_LCD_Init^(0+384)+1)
  2891  14E7  30C3               	movlw	195
  2892  14E8  00C2               	movwf	??_LCD_Init^(0+384)
  2893  14E9                     u5847:	
  2894  14E9  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2895  14EA  2CE9               	goto	u5847
  2896  14EB  0BC3               	decfsz	(??_LCD_Init^(0+384)+1),f
  2897  14EC  2CE9               	goto	u5847
  2898                           
  2899                           ;lcd.c: 97: LCD_WriteCmd(0x30);
  2900  14ED  3030               	movlw	48
  2901  14EE  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2902                           
  2903                           ;lcd.c: 98: _delay((unsigned long)((4)*(18432000/4000.0)));
  2904  14F3  3018               	movlw	24
  2905  14F4  1683               	bsf	3,5	;RP0=1, select bank3
  2906  14F5  1703               	bsf	3,6	;RP1=1, select bank3
  2907  14F6  00C3               	movwf	(??_LCD_Init^(0+384)+1)
  2908  14F7  30EF               	movlw	239
  2909  14F8  00C2               	movwf	??_LCD_Init^(0+384)
  2910  14F9                     u5857:	
  2911  14F9  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2912  14FA  2CF9               	goto	u5857
  2913  14FB  0BC3               	decfsz	(??_LCD_Init^(0+384)+1),f
  2914  14FC  2CF9               	goto	u5857
  2915                           
  2916                           ;lcd.c: 100: LCD_WriteCmd(0x30);
  2917  14FD  3030               	movlw	48
  2918  14FE  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2919                           
  2920                           ;lcd.c: 101: _delay((unsigned long)((100)*(18432000/4000000.0)));
  2921  1503  3099               	movlw	153
  2922  1504  1683               	bsf	3,5	;RP0=1, select bank3
  2923  1505  1703               	bsf	3,6	;RP1=1, select bank3
  2924  1506  00C2               	movwf	??_LCD_Init^(0+384)
  2925  1507                     u5867:	
  2926  1507  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2927  1508  2D07               	goto	u5867
  2928                           
  2929                           ;lcd.c: 103: LCD_WriteCmd(0x30);
  2930  1509  3030               	movlw	48
  2931  150A  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2932                           
  2933                           ;lcd.c: 104: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2934  150F  303D               	movlw	61
  2935  1510  1683               	bsf	3,5	;RP0=1, select bank3
  2936  1511  1703               	bsf	3,6	;RP1=1, select bank3
  2937  1512  00C2               	movwf	??_LCD_Init^(0+384)
  2938  1513                     u5877:	
  2939  1513  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2940  1514  2D13               	goto	u5877
  2941                           
  2942                           ;lcd.c: 106: LCD_WriteCmd(0x38);
  2943  1515  3038               	movlw	56
  2944  1516  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2945                           
  2946                           ;lcd.c: 107: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2947  151B  303D               	movlw	61
  2948  151C  1683               	bsf	3,5	;RP0=1, select bank3
  2949  151D  1703               	bsf	3,6	;RP1=1, select bank3
  2950  151E  00C2               	movwf	??_LCD_Init^(0+384)
  2951  151F                     u5887:	
  2952  151F  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2953  1520  2D1F               	goto	u5887
  2954                           
  2955                           ;lcd.c: 109: LCD_WriteCmd(0x01);
  2956  1521  3001               	movlw	1
  2957  1522  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2958                           
  2959                           ;lcd.c: 110: _delay((unsigned long)((2)*(18432000/4000.0)));
  2960  1527  300C               	movlw	12
  2961  1528  1683               	bsf	3,5	;RP0=1, select bank3
  2962  1529  1703               	bsf	3,6	;RP1=1, select bank3
  2963  152A  00C3               	movwf	(??_LCD_Init^(0+384)+1)
  2964  152B  30F7               	movlw	247
  2965  152C  00C2               	movwf	??_LCD_Init^(0+384)
  2966  152D                     u5897:	
  2967  152D  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2968  152E  2D2D               	goto	u5897
  2969  152F  0BC3               	decfsz	(??_LCD_Init^(0+384)+1),f
  2970  1530  2D2D               	goto	u5897
  2971                           
  2972                           ;lcd.c: 112: LCD_WriteCmd(0x0C);
  2973  1531  300C               	movlw	12
  2974  1532  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2975                           
  2976                           ;lcd.c: 113: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2977  1537  303D               	movlw	61
  2978  1538  1683               	bsf	3,5	;RP0=1, select bank3
  2979  1539  1703               	bsf	3,6	;RP1=1, select bank3
  2980  153A  00C2               	movwf	??_LCD_Init^(0+384)
  2981  153B                     u5907:	
  2982  153B  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2983  153C  2D3B               	goto	u5907
  2984                           
  2985                           ;lcd.c: 115: LCD_WriteCmd(0x06);
  2986  153D  3006               	movlw	6
  2987  153E  160A  118A  2123  160A  118A  	fcall	_LCD_WriteCmd
  2988                           
  2989                           ;lcd.c: 116: _delay((unsigned long)((40)*(18432000/4000000.0)));
  2990  1543  303D               	movlw	61
  2991  1544  1683               	bsf	3,5	;RP0=1, select bank3
  2992  1545  1703               	bsf	3,6	;RP1=1, select bank3
  2993  1546  00C2               	movwf	??_LCD_Init^(0+384)
  2994  1547                     u5917:	
  2995  1547  0BC2               	decfsz	??_LCD_Init^(0+384),f
  2996  1548  2D47               	goto	u5917
  2997  1549  0008               	return
  2998  154A                     __end_of_LCD_Init:	
  2999                           
  3000                           	psect	text12
  3001  1123                     __ptext12:	
  3002 ;; *************** function _LCD_WriteCmd *****************
  3003 ;; Defined at:
  3004 ;;		line 32 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\lcd.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  Byte            1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  Byte            1    1[BANK3 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;		None               void
  3011 ;; Registers used:
  3012 ;;		wreg
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       0       0       1       0
  3020 ;;      Temps:          0       0       0       1       0
  3021 ;;      Totals:         0       0       0       2       0
  3022 ;;Total ram usage:        2 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    4
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_LCD_Init
  3029 ;;		_LCD_Clear
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _LCD_WriteCmd
  3035  1123                     _LCD_WriteCmd:	
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _LCD_WriteCmd: [wreg]
  3039                           ;LCD_WriteCmd@Byte stored from wreg
  3040  1123  1683               	bsf	3,5	;RP0=1, select bank3
  3041  1124  1703               	bsf	3,6	;RP1=1, select bank3
  3042  1125  00C1               	movwf	LCD_WriteCmd@Byte^(0+384)
  3043                           
  3044                           ;lcd.c: 34: PORTEbits.RE0 = 0;
  3045  1126  1283               	bcf	3,5	;RP0=0, select bank0
  3046  1127  1303               	bcf	3,6	;RP1=0, select bank0
  3047  1128  1009               	bcf	9,0	;volatile
  3048                           
  3049                           ;lcd.c: 36: PORTD = Byte;
  3050  1129  1683               	bsf	3,5	;RP0=1, select bank3
  3051  112A  1703               	bsf	3,6	;RP1=1, select bank3
  3052  112B  0841               	movf	LCD_WriteCmd@Byte^(0+384),w
  3053  112C  1283               	bcf	3,5	;RP0=0, select bank0
  3054  112D  1303               	bcf	3,6	;RP1=0, select bank0
  3055  112E  0088               	movwf	8	;volatile
  3056                           
  3057                           ;lcd.c: 39: PORTEbits.RE1 = 1;
  3058  112F  1489               	bsf	9,1	;volatile
  3059                           
  3060                           ;lcd.c: 41: _delay((unsigned long)((40)*(18432000/4000000.0)));
  3061  1130  303D               	movlw	61
  3062  1131  1683               	bsf	3,5	;RP0=1, select bank3
  3063  1132  1703               	bsf	3,6	;RP1=1, select bank3
  3064  1133  00C0               	movwf	??_LCD_WriteCmd^(0+384)
  3065  1134                     u5927:	
  3066  1134  0BC0               	decfsz	??_LCD_WriteCmd^(0+384),f
  3067  1135  2934               	goto	u5927
  3068                           
  3069                           ;lcd.c: 43: PORTEbits.RE1 = 0;
  3070  1136  1283               	bcf	3,5	;RP0=0, select bank0
  3071  1137  1303               	bcf	3,6	;RP1=0, select bank0
  3072  1138  1089               	bcf	9,1	;volatile
  3073  1139  0008               	return
  3074  113A                     __end_of_LCD_WriteCmd:	
  3075                           
  3076                           	psect	text13
  3077  092A                     __ptext13:	
  3078 ;; *************** function _ISR *****************
  3079 ;; Defined at:
  3080 ;;		line 166 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  index           1   15[BANK1 ] unsigned char 
  3085 ;;  a               2   27[BANK1 ] int 
  3086 ;;  a               2   25[BANK1 ] int 
  3087 ;;  a               2   23[BANK1 ] int 
  3088 ;;  a               2   21[BANK1 ] int 
  3089 ;;  checksum        1   13[BANK1 ] unsigned char 
  3090 ;;  a               2   35[BANK1 ] int 
  3091 ;;  x               3   37[BANK1 ] float 
  3092 ;;  rule            3   32[BANK1 ] float 
  3093 ;;  total_area      3   29[BANK1 ] float 
  3094 ;;  soma            3   18[BANK1 ] float 
  3095 ;;  reajuste        3    8[BANK1 ] float 
  3096 ;;  delta           2   16[BANK1 ] int 
  3097 ;;  auxiliar        2   11[BANK1 ] int 
  3098 ;;  rpmAux          2    0[BANK1 ] int 
  3099 ;;  byte            1   14[BANK1 ] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;		None               void
  3102 ;; Registers used:
  3103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         0       0       0       0       0
  3110 ;;      Locals:         0       0      40       0       0
  3111 ;;      Temps:          0       6       0       0       0
  3112 ;;      Totals:         0       6      40       0       0
  3113 ;;Total ram usage:       46 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		_LCD_Cursor
  3118 ;;		_LCD_WriteData
  3119 ;;		_USART_ReceiveChar
  3120 ;;		___awtoft
  3121 ;;		___bmul
  3122 ;;		___ftadd
  3123 ;;		___ftdiv
  3124 ;;		___ftge
  3125 ;;		___ftmul
  3126 ;;		___ftneg
  3127 ;;		___fttol
  3128 ;;		___lwdiv
  3129 ;;		___lwtoft
  3130 ;;		___wmul
  3131 ;;		_abs
  3132 ;;		_maximo
  3133 ;;		_minimo
  3134 ;;		_send
  3135 ;;		_trapmf
  3136 ;;		i1_PWM_DutyCycle2
  3137 ;;		i1_TIMER0_Set
  3138 ;;		i1_inicia
  3139 ;;		i1_res
  3140 ;;		i1_set
  3141 ;; This function is called by:
  3142 ;;		Interrupt level 1
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           
  3147                           ;psect for function _ISR
  3148  092A                     _ISR:	
  3149                           
  3150                           ;main.c: 168: if (PIR1bits.RCIF) {
  3151  092A  120A  158A  1E8C   	btfss	12,5	;volatile
  3152  092D  283E               	goto	i1l3787
  3153                           
  3154                           ;main.c: 171: unsigned char byte = USART_ReceiveChar();
  3155  092E  160A  118A  213A  120A  158A  	fcall	_USART_ReceiveChar
  3156  0933  1283               	bcf	3,5	;RP0=0, select bank0
  3157  0934  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0935  00E2               	movwf	??_ISR
  3159  0936  0862               	movf	??_ISR,w
  3160  0937  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0938  1303               	bcf	3,6	;RP1=0, select bank1
  3162  0939  00AE               	movwf	ISR@byte^(0+128)
  3163                           
  3164                           ;main.c: 172: if (byte == '#')
  3165  093A  082E               	movf	ISR@byte^(0+128),w
  3166  093B  3A23               	xorlw	35
  3167  093C  1D03               	skipz
  3168  093D  2941               	goto	i1l3727
  3169                           
  3170                           ;main.c: 173: {
  3171                           ;main.c: 174: receiveIndex = 0;
  3172  093E  01E0               	clrf	_receiveIndex^(0+128)
  3173  093F  01E1               	clrf	(_receiveIndex+1)^(0+128)
  3174                           
  3175                           ;main.c: 175: } else {
  3176  0940  2947               	goto	i1l3729
  3177  0941                     i1l3727:	
  3178                           
  3179                           ;main.c: 176: receiveIndex++;
  3180  0941  3001               	movlw	1
  3181  0942  07E0               	addwf	_receiveIndex^(0+128),f
  3182  0943  1803               	skipnc
  3183  0944  0AE1               	incf	(_receiveIndex+1)^(0+128),f
  3184  0945  3000               	movlw	0
  3185  0946  07E1               	addwf	(_receiveIndex+1)^(0+128),f
  3186  0947                     i1l3729:	
  3187                           
  3188                           ;main.c: 177: }
  3189                           ;main.c: 178: receivedBuffer[receiveIndex] = byte;
  3190  0947  082E               	movf	ISR@byte^(0+128),w
  3191  0948  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0949  1303               	bcf	3,6	;RP1=0, select bank0
  3193  094A  00E2               	movwf	??_ISR
  3194  094B  1683               	bsf	3,5	;RP0=1, select bank1
  3195  094C  1303               	bcf	3,6	;RP1=0, select bank1
  3196  094D  0860               	movf	_receiveIndex^(0+128),w
  3197  094E  3ED1               	addlw	_receivedBuffer& (0+255)
  3198  094F  0084               	movwf	4
  3199  0950  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0951  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0952  0862               	movf	??_ISR,w
  3202  0953  1383               	bcf	3,7	;select IRP bank1
  3203  0954  0080               	movwf	0
  3204                           
  3205                           ;main.c: 180: if (receiveIndex == 6) {
  3206  0955  3006               	movlw	6
  3207  0956  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0957  1303               	bcf	3,6	;RP1=0, select bank1
  3209  0958  0660               	xorwf	_receiveIndex^(0+128),w
  3210  0959  0461               	iorwf	(_receiveIndex+1)^(0+128),w
  3211  095A  1D03               	skipz
  3212  095B  297F               	goto	L11
  3213                           
  3214                           ;main.c: 181: LCD_Cursor(1,1);
  3215  095C  01F0               	clrf	LCD_Cursor@Col
  3216  095D  0AF0               	incf	LCD_Cursor@Col,f
  3217  095E  3001               	movlw	1
  3218  095F  160A  118A  210D  120A  158A  	fcall	_LCD_Cursor
  3219                           
  3220                           ;main.c: 182: LCD_WriteData('P');
  3221  0964  3050               	movlw	80
  3222  0965  160A  118A  20FE  120A  158A  	fcall	_LCD_WriteData
  3223                           
  3224                           ;main.c: 183: receiveIndex = 0;
  3225  096A  1683               	bsf	3,5	;RP0=1, select bank1
  3226  096B  1303               	bcf	3,6	;RP1=0, select bank1
  3227  096C  01E0               	clrf	_receiveIndex^(0+128)
  3228  096D  01E1               	clrf	(_receiveIndex+1)^(0+128)
  3229                           
  3230                           ;main.c: 185: if (receivedBuffer[1] == 'A' && receivedBuffer[2] == 'A' && receivedBuffer
      +                          [3] == 'A') {
  3231  096E  0852               	movf	(_receivedBuffer^(0+128)+1),w
  3232  096F  3A41               	xorlw	65
  3233  0970  1D03               	skipz
  3234  0971  2982               	goto	i1l3745
  3235  0972  0853               	movf	(_receivedBuffer^(0+128)+2),w
  3236  0973  3A41               	xorlw	65
  3237  0974  1D03               	skipz
  3238  0975  2982               	goto	i1l3745
  3239  0976  0854               	movf	(_receivedBuffer^(0+128)+3),w
  3240  0977  3A41               	xorlw	65
  3241  0978  1D03               	skipz
  3242  0979  2982               	goto	i1l3745
  3243                           
  3244                           ;main.c: 186: send();
  3245  097A  160A  118A  25D0  120A  158A  	fcall	_send
  3246  097F                     L11:	
  3247                           
  3248                           ;main.c: 187: } else {
  3249  097F  120A  158A  283B   	goto	i1l3785
  3250  0982                     i1l3745:	
  3251                           
  3252                           ;main.c: 188: if (receivedBuffer[0] == '#' && receivedBuffer[1] == '$' && receivedBuffer
      +                          [2] == ':') {
  3253  0982  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0983  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0984  0851               	movf	_receivedBuffer^(0+128),w
  3256  0985  3A23               	xorlw	35
  3257  0986  1D03               	skipz
  3258  0987  297F               	goto	L11
  3259  0988  0852               	movf	(_receivedBuffer^(0+128)+1),w
  3260  0989  3A24               	xorlw	36
  3261  098A  1D03               	skipz
  3262  098B  297F               	goto	L11
  3263  098C  0853               	movf	(_receivedBuffer^(0+128)+2),w
  3264  098D  3A3A               	xorlw	58
  3265  098E  1D03               	skipz
  3266  098F  297F               	goto	L11
  3267                           
  3268                           ;main.c: 189: unsigned char checksum = 0x00;
  3269  0990  01AD               	clrf	ISR@checksum^(0+128)
  3270                           
  3271                           ;main.c: 190: for (unsigned char index = 0; index < 6; index++) {
  3272  0991  01AF               	clrf	ISR@index^(0+128)
  3273  0992  3006               	movlw	6
  3274  0993  022F               	subwf	ISR@index^(0+128),w
  3275  0994  1803               	btfsc	3,0
  3276  0995  29AE               	goto	i1l3763
  3277  0996                     i1l3757:	
  3278                           
  3279                           ;main.c: 191: checksum ^= receivedBuffer[index];
  3280  0996  082F               	movf	ISR@index^(0+128),w
  3281  0997  3ED1               	addlw	_receivedBuffer& (0+255)
  3282  0998  0084               	movwf	4
  3283  0999  1383               	bcf	3,7	;select IRP bank1
  3284  099A  0800               	movf	0,w
  3285  099B  1283               	bcf	3,5	;RP0=0, select bank0
  3286  099C  1303               	bcf	3,6	;RP1=0, select bank0
  3287  099D  00E2               	movwf	??_ISR
  3288  099E  0862               	movf	??_ISR,w
  3289  099F  1683               	bsf	3,5	;RP0=1, select bank1
  3290  09A0  1303               	bcf	3,6	;RP1=0, select bank1
  3291  09A1  06AD               	xorwf	ISR@checksum^(0+128),f
  3292  09A2  3001               	movlw	1
  3293  09A3  1283               	bcf	3,5	;RP0=0, select bank0
  3294  09A4  1303               	bcf	3,6	;RP1=0, select bank0
  3295  09A5  00E2               	movwf	??_ISR
  3296  09A6  0862               	movf	??_ISR,w
  3297  09A7  1683               	bsf	3,5	;RP0=1, select bank1
  3298  09A8  1303               	bcf	3,6	;RP1=0, select bank1
  3299  09A9  07AF               	addwf	ISR@index^(0+128),f
  3300  09AA  3006               	movlw	6
  3301  09AB  022F               	subwf	ISR@index^(0+128),w
  3302  09AC  1C03               	skipc
  3303  09AD  2996               	goto	i1l3757
  3304  09AE                     i1l3763:	
  3305                           
  3306                           ;main.c: 192: }
  3307                           ;main.c: 193: if (receivedBuffer[6] == checksum) {
  3308  09AE  0857               	movf	(_receivedBuffer^(0+128)+6),w
  3309  09AF  062D               	xorwf	ISR@checksum^(0+128),w
  3310  09B0  1D03               	skipz
  3311  09B1  297F               	goto	L11
  3312                           
  3313                           ;main.c: 194: if(receivedBuffer[3] == 'M'){
  3314  09B2  0854               	movf	(_receivedBuffer^(0+128)+3),w
  3315  09B3  3A4D               	xorlw	77
  3316  09B4  120A  158A  1D03   	skipz
  3317  09B7  280D               	goto	i1l3769
  3318                           
  3319                           ;main.c: 195: setpoint = ((receivedBuffer[4] << 8) + (receivedBuffer[5])) * 41;
  3320  09B8  0855               	movf	(_receivedBuffer^(0+128)+4),w
  3321  09B9  1283               	bcf	3,5	;RP0=0, select bank0
  3322  09BA  1303               	bcf	3,6	;RP1=0, select bank0
  3323  09BB  00E2               	movwf	??_ISR
  3324  09BC  01E3               	clrf	??_ISR+1
  3325  09BD  0862               	movf	??_ISR,w
  3326  09BE  00E3               	movwf	??_ISR+1
  3327  09BF  01E2               	clrf	??_ISR
  3328  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  3329  09C1  1303               	bcf	3,6	;RP1=0, select bank1
  3330  09C2  0856               	movf	(_receivedBuffer^(0+128)+5),w
  3331  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  3332  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  3333  09C5  0762               	addwf	??_ISR,w
  3334  09C6  00C0               	movwf	___wmul@multiplier
  3335  09C7  3000               	movlw	0
  3336  09C8  1803               	skipnc
  3337  09C9  3001               	movlw	1
  3338  09CA  0763               	addwf	??_ISR+1,w
  3339  09CB  00C1               	movwf	___wmul@multiplier+1
  3340  09CC  3029               	movlw	41
  3341  09CD  00C2               	movwf	___wmul@multiplicand
  3342  09CE  3000               	movlw	0
  3343  09CF  00C3               	movwf	___wmul@multiplicand+1
  3344  09D0  160A  118A  2264   	fcall	___wmul
  3345  09D3  1283               	bcf	3,5	;RP0=0, select bank0
  3346  09D4  120A  158A  2800   	ljmp	L10
  3347                           
  3348                           	psect	intentry
  3349  0004                     __pintentry:	
  3350                           ;incstack = 0
  3351                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3352                           
  3353  0004                     interrupt_function:	
  3354  007E                     saved_w	set	btemp
  3355  0004  00FE               	movwf	btemp
  3356  0005  0E03               	swapf	3,w
  3357  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0008  00E4               	movwf	??_ISR+2
  3360  0009  0804               	movf	4,w
  3361  000A  00E5               	movwf	??_ISR+3
  3362  000B  080A               	movf	10,w
  3363  000C  00E6               	movwf	??_ISR+4
  3364  000D  087F               	movf	btemp+1,w
  3365  000E  00E7               	movwf	??_ISR+5
  3366  000F  120A  158A  292A   	ljmp	_ISR
  3367                           
  3368                           	psect	text14
  3369  133F                     __ptext14:	
  3370 ;; *************** function i1_set *****************
  3371 ;; Defined at:
  3372 ;;		line 99 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          1       0       0       0       0
  3389 ;;      Totals:         1       0       0       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_ISR
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function i1_set
  3401  133F                     i1_set:	
  3402                           
  3403                           ;main.c: 100: if(kmph > 40){
  3404                           
  3405                           ;incstack = 0
  3406                           ; Regs used in i1_set: [wreg+status,2+status,0]
  3407  133F  3000               	movlw	0
  3408  1340  1283               	bcf	3,5	;RP0=0, select bank0
  3409  1341  1303               	bcf	3,6	;RP1=0, select bank0
  3410  1342  026B               	subwf	_kmph+1,w
  3411  1343  3029               	movlw	41
  3412  1344  1903               	skipnz
  3413  1345  026A               	subwf	_kmph,w
  3414  1346  1C03               	skipc
  3415  1347  0008               	return
  3416                           
  3417                           ;main.c: 102: if(pilotoAtivo == 3 && setpoint > 1640){
  3418  1348  1683               	bsf	3,5	;RP0=1, select bank1
  3419  1349  1303               	bcf	3,6	;RP1=0, select bank1
  3420  134A  0864               	movf	_pilotoAtivo^(0+128),w
  3421  134B  3A03               	xorlw	3
  3422  134C  1D03               	skipz
  3423  134D  2B69               	goto	i1l2809
  3424  134E  3006               	movlw	6
  3425  134F  0266               	subwf	(_setpoint+1)^(0+128),w
  3426  1350  3069               	movlw	105
  3427  1351  1903               	skipnz
  3428  1352  0265               	subwf	_setpoint^(0+128),w
  3429  1353  1C03               	skipc
  3430  1354  2B69               	goto	i1l2809
  3431                           
  3432                           ;main.c: 104: setpoint = setpoint - 41;
  3433  1355  0865               	movf	_setpoint^(0+128),w
  3434  1356  3ED7               	addlw	215
  3435  1357  00E5               	movwf	_setpoint^(0+128)
  3436  1358  0866               	movf	(_setpoint+1)^(0+128),w
  3437  1359  1803               	skipnc
  3438  135A  3E01               	addlw	1
  3439  135B  3EFF               	addlw	255
  3440  135C  00E6               	movwf	(_setpoint+1)^(0+128)
  3441                           
  3442                           ;main.c: 105: velocidadeSetada = setpoint;
  3443  135D  0866               	movf	(_setpoint+1)^(0+128),w
  3444  135E  1283               	bcf	3,5	;RP0=0, select bank0
  3445  135F  1303               	bcf	3,6	;RP1=0, select bank0
  3446  1360  01EF               	clrf	_velocidadeSetada+1
  3447  1361  07EF               	addwf	_velocidadeSetada+1,f
  3448  1362  1683               	bsf	3,5	;RP0=1, select bank1
  3449  1363  1303               	bcf	3,6	;RP1=0, select bank1
  3450  1364  0865               	movf	_setpoint^(0+128),w
  3451  1365  1283               	bcf	3,5	;RP0=0, select bank0
  3452  1366  1303               	bcf	3,6	;RP1=0, select bank0
  3453  1367  01EE               	clrf	_velocidadeSetada
  3454  1368  07EE               	addwf	_velocidadeSetada,f
  3455  1369                     i1l2809:	
  3456                           
  3457                           ;main.c: 106: }
  3458                           ;main.c: 107: if(pilotoAtivo == 1){
  3459  1369  1683               	bsf	3,5	;RP0=1, select bank1
  3460  136A  1303               	bcf	3,6	;RP1=0, select bank1
  3461  136B  0864               	movf	_pilotoAtivo^(0+128),w
  3462  136C  3A01               	xorlw	1
  3463  136D  1D03               	skipz
  3464  136E  0008               	return
  3465                           
  3466                           ;main.c: 109: pilotoAtivo = 3;
  3467  136F  3003               	movlw	3
  3468  1370  00F0               	movwf	??i1_set
  3469  1371  0870               	movf	??i1_set,w
  3470  1372  00E4               	movwf	_pilotoAtivo^(0+128)
  3471                           
  3472                           ;main.c: 110: setpoint = velocidadeSetada;
  3473  1373  1283               	bcf	3,5	;RP0=0, select bank0
  3474  1374  1303               	bcf	3,6	;RP1=0, select bank0
  3475  1375  086F               	movf	_velocidadeSetada+1,w
  3476  1376  1683               	bsf	3,5	;RP0=1, select bank1
  3477  1377  1303               	bcf	3,6	;RP1=0, select bank1
  3478  1378  01E6               	clrf	(_setpoint+1)^(0+128)
  3479  1379  07E6               	addwf	(_setpoint+1)^(0+128),f
  3480  137A  1283               	bcf	3,5	;RP0=0, select bank0
  3481  137B  1303               	bcf	3,6	;RP1=0, select bank0
  3482  137C  086E               	movf	_velocidadeSetada,w
  3483  137D  1683               	bsf	3,5	;RP0=1, select bank1
  3484  137E  1303               	bcf	3,6	;RP1=0, select bank1
  3485  137F  01E5               	clrf	_setpoint^(0+128)
  3486  1380  07E5               	addwf	_setpoint^(0+128),f
  3487  1381  0008               	return
  3488  1382                     __end_ofi1_set:	
  3489                           
  3490                           	psect	text15
  3491  1289                     __ptext15:	
  3492 ;; *************** function i1_res *****************
  3493 ;; Defined at:
  3494 ;;		line 86 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0
  3510 ;;      Temps:          1       0       0       0       0
  3511 ;;      Totals:         1       0       0       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_ISR
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           
  3522                           ;psect for function i1_res
  3523  1289                     i1_res:	
  3524                           
  3525                           ;main.c: 87: if(pilotoAtivo == 3 && setpoint < 9000){
  3526                           
  3527                           ;incstack = 0
  3528                           ; Regs used in i1_res: [wreg+status,2+status,0]
  3529  1289  1683               	bsf	3,5	;RP0=1, select bank1
  3530  128A  1303               	bcf	3,6	;RP1=0, select bank1
  3531  128B  0864               	movf	_pilotoAtivo^(0+128),w
  3532  128C  3A03               	xorlw	3
  3533  128D  1D03               	skipz
  3534  128E  2AAA               	goto	i1l2795
  3535  128F  3023               	movlw	35
  3536  1290  0266               	subwf	(_setpoint+1)^(0+128),w
  3537  1291  3028               	movlw	40
  3538  1292  1903               	skipnz
  3539  1293  0265               	subwf	_setpoint^(0+128),w
  3540  1294  1803               	skipnc
  3541  1295  2AAA               	goto	i1l2795
  3542                           
  3543                           ;main.c: 89: setpoint = setpoint + 41;
  3544  1296  0865               	movf	_setpoint^(0+128),w
  3545  1297  3E29               	addlw	41
  3546  1298  00E5               	movwf	_setpoint^(0+128)
  3547  1299  0866               	movf	(_setpoint+1)^(0+128),w
  3548  129A  1803               	skipnc
  3549  129B  3E01               	addlw	1
  3550  129C  3E00               	addlw	0
  3551  129D  00E6               	movwf	(_setpoint+1)^(0+128)
  3552                           
  3553                           ;main.c: 90: velocidadeSetada = setpoint;
  3554  129E  0866               	movf	(_setpoint+1)^(0+128),w
  3555  129F  1283               	bcf	3,5	;RP0=0, select bank0
  3556  12A0  1303               	bcf	3,6	;RP1=0, select bank0
  3557  12A1  01EF               	clrf	_velocidadeSetada+1
  3558  12A2  07EF               	addwf	_velocidadeSetada+1,f
  3559  12A3  1683               	bsf	3,5	;RP0=1, select bank1
  3560  12A4  1303               	bcf	3,6	;RP1=0, select bank1
  3561  12A5  0865               	movf	_setpoint^(0+128),w
  3562  12A6  1283               	bcf	3,5	;RP0=0, select bank0
  3563  12A7  1303               	bcf	3,6	;RP1=0, select bank0
  3564  12A8  01EE               	clrf	_velocidadeSetada
  3565  12A9  07EE               	addwf	_velocidadeSetada,f
  3566  12AA                     i1l2795:	
  3567                           
  3568                           ;main.c: 91: }
  3569                           ;main.c: 92: if(pilotoAtivo == 1){
  3570  12AA  1683               	bsf	3,5	;RP0=1, select bank1
  3571  12AB  1303               	bcf	3,6	;RP1=0, select bank1
  3572  12AC  0864               	movf	_pilotoAtivo^(0+128),w
  3573  12AD  3A01               	xorlw	1
  3574  12AE  1D03               	skipz
  3575  12AF  0008               	return
  3576                           
  3577                           ;main.c: 94: pilotoAtivo = 3;
  3578  12B0  3003               	movlw	3
  3579  12B1  00F0               	movwf	??i1_res
  3580  12B2  0870               	movf	??i1_res,w
  3581  12B3  00E4               	movwf	_pilotoAtivo^(0+128)
  3582                           
  3583                           ;main.c: 95: setpoint = velocidadeSetada;
  3584  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  3585  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  3586  12B6  086F               	movf	_velocidadeSetada+1,w
  3587  12B7  1683               	bsf	3,5	;RP0=1, select bank1
  3588  12B8  1303               	bcf	3,6	;RP1=0, select bank1
  3589  12B9  01E6               	clrf	(_setpoint+1)^(0+128)
  3590  12BA  07E6               	addwf	(_setpoint+1)^(0+128),f
  3591  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  3592  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  3593  12BD  086E               	movf	_velocidadeSetada,w
  3594  12BE  1683               	bsf	3,5	;RP0=1, select bank1
  3595  12BF  1303               	bcf	3,6	;RP1=0, select bank1
  3596  12C0  01E5               	clrf	_setpoint^(0+128)
  3597  12C1  07E5               	addwf	_setpoint^(0+128),f
  3598  12C2  0008               	return
  3599  12C3                     __end_ofi1_res:	
  3600                           
  3601                           	psect	text16
  3602  10C9                     __ptext16:	
  3603 ;; *************** function i1_inicia *****************
  3604 ;; Defined at:
  3605 ;;		line 79 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		status,2
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_ISR
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function i1_inicia
  3634  10C9                     i1_inicia:	
  3635                           
  3636                           ;main.c: 80: if(pilotoAtivo & 1){
  3637                           
  3638                           ;incstack = 0
  3639                           ; Regs used in i1_inicia: [status,2]
  3640  10C9  1683               	bsf	3,5	;RP0=1, select bank1
  3641  10CA  1303               	bcf	3,6	;RP1=0, select bank1
  3642  10CB  1C64               	btfss	_pilotoAtivo^(0+128),0
  3643  10CC  28CF               	goto	i1l99
  3644                           
  3645                           ;main.c: 81: pilotoAtivo = 0;
  3646  10CD  01E4               	clrf	_pilotoAtivo^(0+128)
  3647                           
  3648                           ;main.c: 82: }else{
  3649  10CE  0008               	return
  3650  10CF                     i1l99:	
  3651                           
  3652                           ;main.c: 83: pilotoAtivo = 1;
  3653  10CF  01E4               	clrf	_pilotoAtivo^(0+128)
  3654  10D0  0AE4               	incf	_pilotoAtivo^(0+128),f
  3655  10D1  0008               	return
  3656  10D2                     __end_ofi1_inicia:	
  3657                           
  3658                           	psect	text17
  3659  10AB                     __ptext17:	
  3660 ;; *************** function i1_TIMER0_Set *****************
  3661 ;; Defined at:
  3662 ;;		line 20 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\timers.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  contagens       1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  contagens       1    0[COMMON] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;		None               void
  3669 ;; Registers used:
  3670 ;;		wreg
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         1       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         1       0       0       0       0
  3680 ;;Total ram usage:        1 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_ISR
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function i1_TIMER0_Set
  3691  10AB                     i1_TIMER0_Set:	
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in i1_TIMER0_Set: [wreg]
  3695                           ;i1TIMER0_Set@contagens stored from wreg
  3696  10AB  00F0               	movwf	i1TIMER0_Set@contagens
  3697                           
  3698                           ;timers.c: 22: TMR0 = contagens;
  3699  10AC  0870               	movf	i1TIMER0_Set@contagens,w
  3700  10AD  1283               	bcf	3,5	;RP0=0, select bank0
  3701  10AE  1303               	bcf	3,6	;RP1=0, select bank0
  3702  10AF  0081               	movwf	1	;volatile
  3703  10B0  0008               	return
  3704  10B1                     __end_ofi1_TIMER0_Set:	
  3705                           
  3706                           	psect	text18
  3707  116A                     __ptext18:	
  3708 ;; *************** function i1_PWM_DutyCycle2 *****************
  3709 ;; Defined at:
  3710 ;;		line 96 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\pwm.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  valor           2    0[COMMON] int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;		None               void
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         2       0       0       0       0
  3725 ;;      Locals:         0       0       0       0       0
  3726 ;;      Temps:          2       0       0       0       0
  3727 ;;      Totals:         4       0       0       0       0
  3728 ;;Total ram usage:        4 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_ISR
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           
  3738                           ;psect for function i1_PWM_DutyCycle2
  3739  116A                     i1_PWM_DutyCycle2:	
  3740                           
  3741                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  3745  116A  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  3746  116B  00F3               	movwf	??i1_PWM_DutyCycle2+1
  3747  116C  0870               	movf	i1PWM_DutyCycle2@valor,w
  3748  116D  00F2               	movwf	??i1_PWM_DutyCycle2
  3749  116E  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  3750  116F  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  3751  1170  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  3752  1171  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  3753  1172  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  3754  1173  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  3755  1174  0872               	movf	??i1_PWM_DutyCycle2,w
  3756  1175  1283               	bcf	3,5	;RP0=0, select bank0
  3757  1176  1303               	bcf	3,6	;RP1=0, select bank0
  3758  1177  009B               	movwf	27	;volatile
  3759                           
  3760                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3761  1178  0870               	movf	i1PWM_DutyCycle2@valor,w
  3762  1179  00F2               	movwf	??i1_PWM_DutyCycle2
  3763  117A  3003               	movlw	3
  3764  117B                     u342_25:	
  3765  117B  1003               	clrc
  3766  117C  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  3767  117D  3EFF               	addlw	-1
  3768  117E  1D03               	skipz
  3769  117F  297B               	goto	u342_25
  3770  1180  1003               	clrc
  3771  1181  0D72               	rlf	??i1_PWM_DutyCycle2,w
  3772  1182  380C               	iorlw	12
  3773  1183  009D               	movwf	29	;volatile
  3774  1184  0008               	return
  3775  1185                     __end_ofi1_PWM_DutyCycle2:	
  3776                           
  3777                           	psect	text19
  3778  0EAA                     __ptext19:	
  3779 ;; *************** function _trapmf *****************
  3780 ;; Defined at:
  3781 ;;		line 116 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  x               3   32[BANK0 ] float 
  3784 ;;  a               3   35[BANK0 ] float 
  3785 ;;  b               3   38[BANK0 ] float 
  3786 ;;  c               3   41[BANK0 ] float 
  3787 ;;  d               3   44[BANK0 ] float 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  ua              3   47[BANK0 ] float 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  3   32[BANK0 ] float 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, pclath, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0      15       0       0       0
  3800 ;;      Locals:         0       3       0       0       0
  3801 ;;      Temps:          0       0       0       0       0
  3802 ;;      Totals:         0      18       0       0       0
  3803 ;;Total ram usage:       18 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    2
  3806 ;; This function calls:
  3807 ;;		___ftadd
  3808 ;;		___ftdiv
  3809 ;;		___ftge
  3810 ;;		___ftneg
  3811 ;; This function is called by:
  3812 ;;		_ISR
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _trapmf
  3818  0EAA                     _trapmf:	
  3819                           
  3820                           ;main.c: 117: float ua = 0;
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  3824  0EAA  3000               	movlw	0
  3825  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0EAD  00CF               	movwf	trapmf@ua
  3828  0EAE  3000               	movlw	0
  3829  0EAF  00D0               	movwf	trapmf@ua+1
  3830  0EB0  3000               	movlw	0
  3831  0EB1  00D1               	movwf	trapmf@ua+2
  3832                           
  3833                           ;main.c: 119: if (x <= a)
  3834  0EB2  0843               	movf	trapmf@a,w
  3835  0EB3  00F4               	movwf	___ftge@ff1
  3836  0EB4  0844               	movf	trapmf@a+1,w
  3837  0EB5  00F5               	movwf	___ftge@ff1+1
  3838  0EB6  0845               	movf	trapmf@a+2,w
  3839  0EB7  00F6               	movwf	___ftge@ff1+2
  3840  0EB8  0840               	movf	trapmf@x,w
  3841  0EB9  00F7               	movwf	___ftge@ff2
  3842  0EBA  0841               	movf	trapmf@x+1,w
  3843  0EBB  00F8               	movwf	___ftge@ff2+1
  3844  0EBC  0842               	movf	trapmf@x+2,w
  3845  0EBD  00F9               	movwf	___ftge@ff2+2
  3846  0EBE  160A  118A  2414  120A  158A  	fcall	___ftge
  3847  0EC3  1803               	btfsc	3,0
  3848  0EC4  2FEF               	goto	L5
  3849                           
  3850                           ;main.c: 121: else if ((a < x) && (x <= b))
  3851                           
  3852                           ;main.c: 120: ua = 0;
  3853  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0EC7  0843               	movf	trapmf@a,w
  3856  0EC8  00F4               	movwf	___ftge@ff1
  3857  0EC9  0844               	movf	trapmf@a+1,w
  3858  0ECA  00F5               	movwf	___ftge@ff1+1
  3859  0ECB  0845               	movf	trapmf@a+2,w
  3860  0ECC  00F6               	movwf	___ftge@ff1+2
  3861  0ECD  0840               	movf	trapmf@x,w
  3862  0ECE  00F7               	movwf	___ftge@ff2
  3863  0ECF  0841               	movf	trapmf@x+1,w
  3864  0ED0  00F8               	movwf	___ftge@ff2+1
  3865  0ED1  0842               	movf	trapmf@x+2,w
  3866  0ED2  00F9               	movwf	___ftge@ff2+2
  3867  0ED3  160A  118A  2414  120A  158A  	fcall	___ftge
  3868  0ED8  1803               	btfsc	3,0
  3869  0ED9  2F23               	goto	i1l3701
  3870  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  3871  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  3872  0EDC  0846               	movf	trapmf@b,w
  3873  0EDD  00F4               	movwf	___ftge@ff1
  3874  0EDE  0847               	movf	trapmf@b+1,w
  3875  0EDF  00F5               	movwf	___ftge@ff1+1
  3876  0EE0  0848               	movf	trapmf@b+2,w
  3877  0EE1  00F6               	movwf	___ftge@ff1+2
  3878  0EE2  0840               	movf	trapmf@x,w
  3879  0EE3  00F7               	movwf	___ftge@ff2
  3880  0EE4  0841               	movf	trapmf@x+1,w
  3881  0EE5  00F8               	movwf	___ftge@ff2+1
  3882  0EE6  0842               	movf	trapmf@x+2,w
  3883  0EE7  00F9               	movwf	___ftge@ff2+2
  3884  0EE8  160A  118A  2414  120A  158A  	fcall	___ftge
  3885  0EED  1C03               	btfss	3,0
  3886  0EEE  2F23               	goto	i1l3701
  3887                           
  3888                           ;main.c: 122: ua = ((x - a) / (b - a));
  3889  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0EF1  0846               	movf	trapmf@b,w
  3892  0EF2  00A3               	movwf	___ftadd@f1
  3893  0EF3  0847               	movf	trapmf@b+1,w
  3894  0EF4  00A4               	movwf	___ftadd@f1+1
  3895  0EF5  0848               	movf	trapmf@b+2,w
  3896  0EF6  00A5               	movwf	___ftadd@f1+2
  3897  0EF7  0843               	movf	trapmf@a,w
  3898  0EF8  00A0               	movwf	___ftneg@f1
  3899  0EF9  0844               	movf	trapmf@a+1,w
  3900  0EFA  00A1               	movwf	___ftneg@f1+1
  3901  0EFB  0845               	movf	trapmf@a+2,w
  3902  0EFC  00A2               	movwf	___ftneg@f1+2
  3903  0EFD  160A  118A  20DB  120A  158A  	fcall	___ftneg
  3904  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0F04  0820               	movf	?___ftneg,w
  3907  0F05  00A6               	movwf	___ftadd@f2
  3908  0F06  0821               	movf	?___ftneg+1,w
  3909  0F07  00A7               	movwf	___ftadd@f2+1
  3910  0F08  0822               	movf	?___ftneg+2,w
  3911  0F09  00A8               	movwf	___ftadd@f2+2
  3912  0F0A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  3913  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  3914  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  3915  0F11  0823               	movf	?___ftadd,w
  3916  0F12  00B0               	movwf	___ftdiv@f2
  3917  0F13  0824               	movf	?___ftadd+1,w
  3918  0F14  00B1               	movwf	___ftdiv@f2+1
  3919  0F15  0825               	movf	?___ftadd+2,w
  3920  0F16  00B2               	movwf	___ftdiv@f2+2
  3921  0F17  0840               	movf	trapmf@x,w
  3922  0F18  00A3               	movwf	___ftadd@f1
  3923  0F19  0841               	movf	trapmf@x+1,w
  3924  0F1A  00A4               	movwf	___ftadd@f1+1
  3925  0F1B  0842               	movf	trapmf@x+2,w
  3926  0F1C  00A5               	movwf	___ftadd@f1+2
  3927  0F1D  0843               	movf	trapmf@a,w
  3928  0F1E  00A0               	movwf	___ftneg@f1
  3929  0F1F  0844               	movf	trapmf@a+1,w
  3930  0F20  00A1               	movwf	___ftneg@f1+1
  3931  0F21  0845               	movf	trapmf@a+2,w
  3932  0F22  2FB2               	goto	L7
  3933  0F23                     i1l3701:	
  3934                           
  3935                           ;main.c: 123: else if ((b <= x) && (x <= c))
  3936  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0F25  0840               	movf	trapmf@x,w
  3939  0F26  00F4               	movwf	___ftge@ff1
  3940  0F27  0841               	movf	trapmf@x+1,w
  3941  0F28  00F5               	movwf	___ftge@ff1+1
  3942  0F29  0842               	movf	trapmf@x+2,w
  3943  0F2A  00F6               	movwf	___ftge@ff1+2
  3944  0F2B  0846               	movf	trapmf@b,w
  3945  0F2C  00F7               	movwf	___ftge@ff2
  3946  0F2D  0847               	movf	trapmf@b+1,w
  3947  0F2E  00F8               	movwf	___ftge@ff2+1
  3948  0F2F  0848               	movf	trapmf@b+2,w
  3949  0F30  00F9               	movwf	___ftge@ff2+2
  3950  0F31  160A  118A  2414  120A  158A  	fcall	___ftge
  3951  0F36  1C03               	btfss	3,0
  3952  0F37  2F55               	goto	i1l3707
  3953  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0F3A  0849               	movf	trapmf@c,w
  3956  0F3B  00F4               	movwf	___ftge@ff1
  3957  0F3C  084A               	movf	trapmf@c+1,w
  3958  0F3D  00F5               	movwf	___ftge@ff1+1
  3959  0F3E  084B               	movf	trapmf@c+2,w
  3960  0F3F  00F6               	movwf	___ftge@ff1+2
  3961  0F40  0840               	movf	trapmf@x,w
  3962  0F41  00F7               	movwf	___ftge@ff2
  3963  0F42  0841               	movf	trapmf@x+1,w
  3964  0F43  00F8               	movwf	___ftge@ff2+1
  3965  0F44  0842               	movf	trapmf@x+2,w
  3966  0F45  00F9               	movwf	___ftge@ff2+2
  3967  0F46  160A  118A  2414  120A  158A  	fcall	___ftge
  3968  0F4B  1C03               	btfss	3,0
  3969  0F4C  2F55               	goto	i1l3707
  3970                           
  3971                           ;main.c: 124: ua = 1;
  3972  0F4D  3000               	movlw	0
  3973  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0F50  00CF               	movwf	trapmf@ua
  3976  0F51  3080               	movlw	128
  3977  0F52  00D0               	movwf	trapmf@ua+1
  3978  0F53  303F               	movlw	63
  3979  0F54  2FF6               	goto	L4
  3980  0F55                     i1l3707:	
  3981                           
  3982                           ;main.c: 125: else if ((c < x) && (x <= d))
  3983  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0F57  0849               	movf	trapmf@c,w
  3986  0F58  00F4               	movwf	___ftge@ff1
  3987  0F59  084A               	movf	trapmf@c+1,w
  3988  0F5A  00F5               	movwf	___ftge@ff1+1
  3989  0F5B  084B               	movf	trapmf@c+2,w
  3990  0F5C  00F6               	movwf	___ftge@ff1+2
  3991  0F5D  0840               	movf	trapmf@x,w
  3992  0F5E  00F7               	movwf	___ftge@ff2
  3993  0F5F  0841               	movf	trapmf@x+1,w
  3994  0F60  00F8               	movwf	___ftge@ff2+1
  3995  0F61  0842               	movf	trapmf@x+2,w
  3996  0F62  00F9               	movwf	___ftge@ff2+2
  3997  0F63  160A  118A  2414  120A  158A  	fcall	___ftge
  3998  0F68  1803               	btfsc	3,0
  3999  0F69  2FDA               	goto	i1l3713
  4000  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0F6C  084C               	movf	trapmf@d,w
  4003  0F6D  00F4               	movwf	___ftge@ff1
  4004  0F6E  084D               	movf	trapmf@d+1,w
  4005  0F6F  00F5               	movwf	___ftge@ff1+1
  4006  0F70  084E               	movf	trapmf@d+2,w
  4007  0F71  00F6               	movwf	___ftge@ff1+2
  4008  0F72  0840               	movf	trapmf@x,w
  4009  0F73  00F7               	movwf	___ftge@ff2
  4010  0F74  0841               	movf	trapmf@x+1,w
  4011  0F75  00F8               	movwf	___ftge@ff2+1
  4012  0F76  0842               	movf	trapmf@x+2,w
  4013  0F77  00F9               	movwf	___ftge@ff2+2
  4014  0F78  160A  118A  2414  120A  158A  	fcall	___ftge
  4015  0F7D  1C03               	btfss	3,0
  4016  0F7E  2FDA               	goto	i1l3713
  4017                           
  4018                           ;main.c: 126: ua = ((d - x) / (d - c));
  4019  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0F81  084C               	movf	trapmf@d,w
  4022  0F82  00A3               	movwf	___ftadd@f1
  4023  0F83  084D               	movf	trapmf@d+1,w
  4024  0F84  00A4               	movwf	___ftadd@f1+1
  4025  0F85  084E               	movf	trapmf@d+2,w
  4026  0F86  00A5               	movwf	___ftadd@f1+2
  4027  0F87  0849               	movf	trapmf@c,w
  4028  0F88  00A0               	movwf	___ftneg@f1
  4029  0F89  084A               	movf	trapmf@c+1,w
  4030  0F8A  00A1               	movwf	___ftneg@f1+1
  4031  0F8B  084B               	movf	trapmf@c+2,w
  4032  0F8C  00A2               	movwf	___ftneg@f1+2
  4033  0F8D  160A  118A  20DB  120A  158A  	fcall	___ftneg
  4034  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0F94  0820               	movf	?___ftneg,w
  4037  0F95  00A6               	movwf	___ftadd@f2
  4038  0F96  0821               	movf	?___ftneg+1,w
  4039  0F97  00A7               	movwf	___ftadd@f2+1
  4040  0F98  0822               	movf	?___ftneg+2,w
  4041  0F99  00A8               	movwf	___ftadd@f2+2
  4042  0F9A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  4043  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0FA1  0823               	movf	?___ftadd,w
  4046  0FA2  00B0               	movwf	___ftdiv@f2
  4047  0FA3  0824               	movf	?___ftadd+1,w
  4048  0FA4  00B1               	movwf	___ftdiv@f2+1
  4049  0FA5  0825               	movf	?___ftadd+2,w
  4050  0FA6  00B2               	movwf	___ftdiv@f2+2
  4051  0FA7  084C               	movf	trapmf@d,w
  4052  0FA8  00A3               	movwf	___ftadd@f1
  4053  0FA9  084D               	movf	trapmf@d+1,w
  4054  0FAA  00A4               	movwf	___ftadd@f1+1
  4055  0FAB  084E               	movf	trapmf@d+2,w
  4056  0FAC  00A5               	movwf	___ftadd@f1+2
  4057  0FAD  0840               	movf	trapmf@x,w
  4058  0FAE  00A0               	movwf	___ftneg@f1
  4059  0FAF  0841               	movf	trapmf@x+1,w
  4060  0FB0  00A1               	movwf	___ftneg@f1+1
  4061  0FB1  0842               	movf	trapmf@x+2,w
  4062  0FB2                     L7:	
  4063  0FB2  00A2               	movwf	___ftneg@f1+2
  4064  0FB3  160A  118A  20DB  120A  158A  	fcall	___ftneg
  4065  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0FBA  0820               	movf	?___ftneg,w
  4068  0FBB  00A6               	movwf	___ftadd@f2
  4069  0FBC  0821               	movf	?___ftneg+1,w
  4070  0FBD  00A7               	movwf	___ftadd@f2+1
  4071  0FBE  0822               	movf	?___ftneg+2,w
  4072  0FBF  00A8               	movwf	___ftadd@f2+2
  4073  0FC0  120A  158A  25A1  120A  158A  	fcall	___ftadd
  4074  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  4075  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  4076  0FC7  0823               	movf	?___ftadd,w
  4077  0FC8  00B3               	movwf	___ftdiv@f1
  4078  0FC9  0824               	movf	?___ftadd+1,w
  4079  0FCA  00B4               	movwf	___ftdiv@f1+1
  4080  0FCB  0825               	movf	?___ftadd+2,w
  4081  0FCC  00B5               	movwf	___ftdiv@f1+2
  4082  0FCD  120A  158A  233D  120A  158A  	fcall	___ftdiv
  4083  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  4084  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  4085  0FD4  0830               	movf	?___ftdiv,w
  4086  0FD5  00CF               	movwf	trapmf@ua
  4087  0FD6  0831               	movf	?___ftdiv+1,w
  4088  0FD7  00D0               	movwf	trapmf@ua+1
  4089  0FD8  0832               	movf	?___ftdiv+2,w
  4090  0FD9  2FF6               	goto	L4
  4091  0FDA                     i1l3713:	
  4092                           
  4093                           ;main.c: 127: else if (x > d)
  4094  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0FDC  084C               	movf	trapmf@d,w
  4097  0FDD  00F4               	movwf	___ftge@ff1
  4098  0FDE  084D               	movf	trapmf@d+1,w
  4099  0FDF  00F5               	movwf	___ftge@ff1+1
  4100  0FE0  084E               	movf	trapmf@d+2,w
  4101  0FE1  00F6               	movwf	___ftge@ff1+2
  4102  0FE2  0840               	movf	trapmf@x,w
  4103  0FE3  00F7               	movwf	___ftge@ff2
  4104  0FE4  0841               	movf	trapmf@x+1,w
  4105  0FE5  00F8               	movwf	___ftge@ff2+1
  4106  0FE6  0842               	movf	trapmf@x+2,w
  4107  0FE7  00F9               	movwf	___ftge@ff2+2
  4108  0FE8  160A  118A  2414  120A  158A  	fcall	___ftge
  4109  0FED  1803               	btfsc	3,0
  4110  0FEE  2FF7               	goto	i1l116
  4111  0FEF                     L5:	
  4112                           
  4113                           ;main.c: 128: ua = 0;
  4114  0FEF  3000               	movlw	0
  4115  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0FF2  00CF               	movwf	trapmf@ua
  4118  0FF3  3000               	movlw	0
  4119  0FF4  00D0               	movwf	trapmf@ua+1
  4120  0FF5  3000               	movlw	0
  4121  0FF6                     L4:	
  4122  0FF6  00D1               	movwf	trapmf@ua+2
  4123  0FF7                     i1l116:	
  4124                           
  4125                           ;main.c: 130: return (ua);
  4126  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0FF9  084F               	movf	trapmf@ua,w
  4129  0FFA  00C0               	movwf	?_trapmf
  4130  0FFB  0850               	movf	trapmf@ua+1,w
  4131  0FFC  00C1               	movwf	?_trapmf+1
  4132  0FFD  0851               	movf	trapmf@ua+2,w
  4133  0FFE  00C2               	movwf	?_trapmf+2
  4134  0FFF  0008               	return
  4135  1000                     __end_of_trapmf:	
  4136                           
  4137                           	psect	text20
  4138  10DB                     __ptext20:	
  4139 ;; *************** function ___ftneg *****************
  4140 ;; Defined at:
  4141 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  f1              3    0[BANK0 ] float 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  3    0[BANK0 ] float 
  4148 ;; Registers used:
  4149 ;;		wreg
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       3       0       0       0
  4156 ;;      Locals:         0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0
  4158 ;;      Totals:         0       3       0       0       0
  4159 ;;Total ram usage:        3 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_trapmf
  4165 ;;		_ISR
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function ___ftneg
  4171  10DB                     ___ftneg:	
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in ___ftneg: [wreg]
  4175  10DB  1283               	bcf	3,5	;RP0=0, select bank0
  4176  10DC  1303               	bcf	3,6	;RP1=0, select bank0
  4177  10DD  0822               	movf	___ftneg@f1+2,w
  4178  10DE  0421               	iorwf	___ftneg@f1+1,w
  4179  10DF  0420               	iorwf	___ftneg@f1,w
  4180  10E0  1903               	skipnz
  4181  10E1  0008               	return
  4182  10E2  3080               	movlw	128
  4183  10E3  06A2               	xorwf	___ftneg@f1+2,f
  4184  10E4  0008               	return
  4185  10E5                     __end_of___ftneg:	
  4186                           
  4187                           	psect	text21
  4188  0B3D                     __ptext21:	
  4189 ;; *************** function ___ftdiv *****************
  4190 ;; Defined at:
  4191 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  f2              3   16[BANK0 ] float 
  4194 ;;  f1              3   19[BANK0 ] float 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  f3              3   27[BANK0 ] float 
  4197 ;;  sign            1   31[BANK0 ] unsigned char 
  4198 ;;  exp             1   30[BANK0 ] unsigned char 
  4199 ;;  cntr            1   26[BANK0 ] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  3   16[BANK0 ] float 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, pclath, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4209 ;;      Params:         0       6       0       0       0
  4210 ;;      Locals:         0       6       0       0       0
  4211 ;;      Temps:          0       4       0       0       0
  4212 ;;      Totals:         0      16       0       0       0
  4213 ;;Total ram usage:       16 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    1
  4216 ;; This function calls:
  4217 ;;		___ftpack
  4218 ;; This function is called by:
  4219 ;;		_trapmf
  4220 ;;		_ISR
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           
  4225                           ;psect for function ___ftdiv
  4226  0B3D                     ___ftdiv:	
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4230  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  4231  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  4232  0B3F  0833               	movf	___ftdiv@f1,w
  4233  0B40  00B6               	movwf	??___ftdiv
  4234  0B41  0834               	movf	___ftdiv@f1+1,w
  4235  0B42  00B7               	movwf	??___ftdiv+1
  4236  0B43  0835               	movf	___ftdiv@f1+2,w
  4237  0B44  00B8               	movwf	??___ftdiv+2
  4238  0B45  1003               	clrc
  4239  0B46  0D37               	rlf	??___ftdiv+1,w
  4240  0B47  0D38               	rlf	??___ftdiv+2,w
  4241  0B48  00B9               	movwf	??___ftdiv+3
  4242  0B49  0839               	movf	??___ftdiv+3,w
  4243  0B4A  00BE               	movwf	___ftdiv@exp
  4244  0B4B  08BE               	movf	___ftdiv@exp,f
  4245  0B4C  1D03               	skipz
  4246  0B4D  2B55               	goto	i1l2295
  4247  0B4E  3000               	movlw	0
  4248  0B4F  00B0               	movwf	?___ftdiv
  4249  0B50  3000               	movlw	0
  4250  0B51  00B1               	movwf	?___ftdiv+1
  4251  0B52  3000               	movlw	0
  4252  0B53  00B2               	movwf	?___ftdiv+2
  4253  0B54  0008               	return
  4254  0B55                     i1l2295:	
  4255  0B55  0830               	movf	___ftdiv@f2,w
  4256  0B56  00B6               	movwf	??___ftdiv
  4257  0B57  0831               	movf	___ftdiv@f2+1,w
  4258  0B58  00B7               	movwf	??___ftdiv+1
  4259  0B59  0832               	movf	___ftdiv@f2+2,w
  4260  0B5A  00B8               	movwf	??___ftdiv+2
  4261  0B5B  1003               	clrc
  4262  0B5C  0D37               	rlf	??___ftdiv+1,w
  4263  0B5D  0D38               	rlf	??___ftdiv+2,w
  4264  0B5E  00B9               	movwf	??___ftdiv+3
  4265  0B5F  0839               	movf	??___ftdiv+3,w
  4266  0B60  00BF               	movwf	___ftdiv@sign
  4267  0B61  08BF               	movf	___ftdiv@sign,f
  4268  0B62  1D03               	skipz
  4269  0B63  2B6B               	goto	i1l2301
  4270  0B64  3000               	movlw	0
  4271  0B65  00B0               	movwf	?___ftdiv
  4272  0B66  3000               	movlw	0
  4273  0B67  00B1               	movwf	?___ftdiv+1
  4274  0B68  3000               	movlw	0
  4275  0B69  00B2               	movwf	?___ftdiv+2
  4276  0B6A  0008               	return
  4277  0B6B                     i1l2301:	
  4278  0B6B  3000               	movlw	0
  4279  0B6C  00BB               	movwf	___ftdiv@f3
  4280  0B6D  3000               	movlw	0
  4281  0B6E  00BC               	movwf	___ftdiv@f3+1
  4282  0B6F  3000               	movlw	0
  4283  0B70  00BD               	movwf	___ftdiv@f3+2
  4284  0B71  3089               	movlw	137
  4285  0B72  073F               	addwf	___ftdiv@sign,w
  4286  0B73  00B6               	movwf	??___ftdiv
  4287  0B74  0836               	movf	??___ftdiv,w
  4288  0B75  02BE               	subwf	___ftdiv@exp,f
  4289  0B76  0833               	movf	___ftdiv@f1,w
  4290  0B77  00B6               	movwf	??___ftdiv
  4291  0B78  0834               	movf	___ftdiv@f1+1,w
  4292  0B79  00B7               	movwf	??___ftdiv+1
  4293  0B7A  0835               	movf	___ftdiv@f1+2,w
  4294  0B7B  00B8               	movwf	??___ftdiv+2
  4295  0B7C  3010               	movlw	16
  4296  0B7D                     u258_25:	
  4297  0B7D  1003               	clrc
  4298  0B7E  0CB8               	rrf	??___ftdiv+2,f
  4299  0B7F  0CB7               	rrf	??___ftdiv+1,f
  4300  0B80  0CB6               	rrf	??___ftdiv,f
  4301  0B81  3EFF               	addlw	-1
  4302  0B82  1D03               	skipz
  4303  0B83  2B7D               	goto	u258_25
  4304  0B84  0836               	movf	??___ftdiv,w
  4305  0B85  00B9               	movwf	??___ftdiv+3
  4306  0B86  0839               	movf	??___ftdiv+3,w
  4307  0B87  00BF               	movwf	___ftdiv@sign
  4308  0B88  0830               	movf	___ftdiv@f2,w
  4309  0B89  00B6               	movwf	??___ftdiv
  4310  0B8A  0831               	movf	___ftdiv@f2+1,w
  4311  0B8B  00B7               	movwf	??___ftdiv+1
  4312  0B8C  0832               	movf	___ftdiv@f2+2,w
  4313  0B8D  00B8               	movwf	??___ftdiv+2
  4314  0B8E  3010               	movlw	16
  4315  0B8F                     u259_25:	
  4316  0B8F  1003               	clrc
  4317  0B90  0CB8               	rrf	??___ftdiv+2,f
  4318  0B91  0CB7               	rrf	??___ftdiv+1,f
  4319  0B92  0CB6               	rrf	??___ftdiv,f
  4320  0B93  3EFF               	addlw	-1
  4321  0B94  1D03               	skipz
  4322  0B95  2B8F               	goto	u259_25
  4323  0B96  0836               	movf	??___ftdiv,w
  4324  0B97  00B9               	movwf	??___ftdiv+3
  4325  0B98  0839               	movf	??___ftdiv+3,w
  4326  0B99  06BF               	xorwf	___ftdiv@sign,f
  4327  0B9A  3080               	movlw	128
  4328  0B9B  00B6               	movwf	??___ftdiv
  4329  0B9C  0836               	movf	??___ftdiv,w
  4330  0B9D  05BF               	andwf	___ftdiv@sign,f
  4331  0B9E  17B4               	bsf	___ftdiv@f1+1,7
  4332  0B9F  30FF               	movlw	255
  4333  0BA0  05B3               	andwf	___ftdiv@f1,f
  4334  0BA1  30FF               	movlw	255
  4335  0BA2  05B4               	andwf	___ftdiv@f1+1,f
  4336  0BA3  3000               	movlw	0
  4337  0BA4  05B5               	andwf	___ftdiv@f1+2,f
  4338  0BA5  17B1               	bsf	___ftdiv@f2+1,7
  4339  0BA6  30FF               	movlw	255
  4340  0BA7  05B0               	andwf	___ftdiv@f2,f
  4341  0BA8  30FF               	movlw	255
  4342  0BA9  05B1               	andwf	___ftdiv@f2+1,f
  4343  0BAA  3000               	movlw	0
  4344  0BAB  05B2               	andwf	___ftdiv@f2+2,f
  4345  0BAC  3018               	movlw	24
  4346  0BAD  00B6               	movwf	??___ftdiv
  4347  0BAE  0836               	movf	??___ftdiv,w
  4348  0BAF  00BA               	movwf	___ftdiv@cntr
  4349  0BB0                     i1l2315:	
  4350  0BB0  3001               	movlw	1
  4351  0BB1                     u260_25:	
  4352  0BB1  1003               	clrc
  4353  0BB2  0DBB               	rlf	___ftdiv@f3,f
  4354  0BB3  0DBC               	rlf	___ftdiv@f3+1,f
  4355  0BB4  0DBD               	rlf	___ftdiv@f3+2,f
  4356  0BB5  3EFF               	addlw	-1
  4357  0BB6  1D03               	skipz
  4358  0BB7  2BB1               	goto	u260_25
  4359  0BB8  0832               	movf	___ftdiv@f2+2,w
  4360  0BB9  0235               	subwf	___ftdiv@f1+2,w
  4361  0BBA  1D03               	skipz
  4362  0BBB  2BC2               	goto	u261_25
  4363  0BBC  0831               	movf	___ftdiv@f2+1,w
  4364  0BBD  0234               	subwf	___ftdiv@f1+1,w
  4365  0BBE  1D03               	skipz
  4366  0BBF  2BC2               	goto	u261_25
  4367  0BC0  0830               	movf	___ftdiv@f2,w
  4368  0BC1  0233               	subwf	___ftdiv@f1,w
  4369  0BC2                     u261_25:	
  4370  0BC2  1C03               	skipc
  4371  0BC3  2BCF               	goto	i1l2323
  4372  0BC4  0830               	movf	___ftdiv@f2,w
  4373  0BC5  02B3               	subwf	___ftdiv@f1,f
  4374  0BC6  0831               	movf	___ftdiv@f2+1,w
  4375  0BC7  1C03               	skipc
  4376  0BC8  0F31               	incfsz	___ftdiv@f2+1,w
  4377  0BC9  02B4               	subwf	___ftdiv@f1+1,f
  4378  0BCA  0832               	movf	___ftdiv@f2+2,w
  4379  0BCB  1C03               	skipc
  4380  0BCC  0A32               	incf	___ftdiv@f2+2,w
  4381  0BCD  02B5               	subwf	___ftdiv@f1+2,f
  4382  0BCE  143B               	bsf	___ftdiv@f3,0
  4383  0BCF                     i1l2323:	
  4384  0BCF  3001               	movlw	1
  4385  0BD0                     u262_25:	
  4386  0BD0  1003               	clrc
  4387  0BD1  0DB3               	rlf	___ftdiv@f1,f
  4388  0BD2  0DB4               	rlf	___ftdiv@f1+1,f
  4389  0BD3  0DB5               	rlf	___ftdiv@f1+2,f
  4390  0BD4  3EFF               	addlw	-1
  4391  0BD5  1D03               	skipz
  4392  0BD6  2BD0               	goto	u262_25
  4393  0BD7  3001               	movlw	1
  4394  0BD8  02BA               	subwf	___ftdiv@cntr,f
  4395  0BD9  1D03               	btfss	3,2
  4396  0BDA  2BB0               	goto	i1l2315
  4397  0BDB  083B               	movf	___ftdiv@f3,w
  4398  0BDC  00F0               	movwf	___ftpack@arg
  4399  0BDD  083C               	movf	___ftdiv@f3+1,w
  4400  0BDE  00F1               	movwf	___ftpack@arg+1
  4401  0BDF  083D               	movf	___ftdiv@f3+2,w
  4402  0BE0  00F2               	movwf	___ftpack@arg+2
  4403  0BE1  083E               	movf	___ftdiv@exp,w
  4404  0BE2  00B6               	movwf	??___ftdiv
  4405  0BE3  0836               	movf	??___ftdiv,w
  4406  0BE4  00F3               	movwf	___ftpack@exp
  4407  0BE5  083F               	movf	___ftdiv@sign,w
  4408  0BE6  00B7               	movwf	??___ftdiv+1
  4409  0BE7  0837               	movf	??___ftdiv+1,w
  4410  0BE8  00F4               	movwf	___ftpack@sign
  4411  0BE9  160A  118A  2475   	fcall	___ftpack
  4412  0BEC  0870               	movf	?___ftpack,w
  4413  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4414  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4415  0BEF  00B0               	movwf	?___ftdiv
  4416  0BF0  0871               	movf	?___ftpack+1,w
  4417  0BF1  00B1               	movwf	?___ftdiv+1
  4418  0BF2  0872               	movf	?___ftpack+2,w
  4419  0BF3  00B2               	movwf	?___ftdiv+2
  4420  0BF4  0008               	return
  4421  0BF5                     __end_of___ftdiv:	
  4422                           
  4423                           	psect	text22
  4424  0DA1                     __ptext22:	
  4425 ;; *************** function ___ftadd *****************
  4426 ;; Defined at:
  4427 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  f1              3    3[BANK0 ] float 
  4430 ;;  f2              3    6[BANK0 ] float 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  exp1            1   15[BANK0 ] unsigned char 
  4433 ;;  exp2            1   14[BANK0 ] unsigned char 
  4434 ;;  sign            1   13[BANK0 ] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  3    3[BANK0 ] float 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, pclath, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         0       6       0       0       0
  4445 ;;      Locals:         0       3       0       0       0
  4446 ;;      Temps:          0       4       0       0       0
  4447 ;;      Totals:         0      13       0       0       0
  4448 ;;Total ram usage:       13 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    1
  4451 ;; This function calls:
  4452 ;;		___ftpack
  4453 ;; This function is called by:
  4454 ;;		_trapmf
  4455 ;;		_ISR
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function ___ftadd
  4461  0DA1                     ___ftadd:	
  4462                           
  4463                           ;incstack = 0
  4464                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4465  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0DA3  0823               	movf	___ftadd@f1,w
  4468  0DA4  00A9               	movwf	??___ftadd
  4469  0DA5  0824               	movf	___ftadd@f1+1,w
  4470  0DA6  00AA               	movwf	??___ftadd+1
  4471  0DA7  0825               	movf	___ftadd@f1+2,w
  4472  0DA8  00AB               	movwf	??___ftadd+2
  4473  0DA9  1003               	clrc
  4474  0DAA  0D2A               	rlf	??___ftadd+1,w
  4475  0DAB  0D2B               	rlf	??___ftadd+2,w
  4476  0DAC  00AC               	movwf	??___ftadd+3
  4477  0DAD  082C               	movf	??___ftadd+3,w
  4478  0DAE  00AF               	movwf	___ftadd@exp1
  4479  0DAF  0826               	movf	___ftadd@f2,w
  4480  0DB0  00A9               	movwf	??___ftadd
  4481  0DB1  0827               	movf	___ftadd@f2+1,w
  4482  0DB2  00AA               	movwf	??___ftadd+1
  4483  0DB3  0828               	movf	___ftadd@f2+2,w
  4484  0DB4  00AB               	movwf	??___ftadd+2
  4485  0DB5  1003               	clrc
  4486  0DB6  0D2A               	rlf	??___ftadd+1,w
  4487  0DB7  0D2B               	rlf	??___ftadd+2,w
  4488  0DB8  00AC               	movwf	??___ftadd+3
  4489  0DB9  082C               	movf	??___ftadd+3,w
  4490  0DBA  00AE               	movwf	___ftadd@exp2
  4491  0DBB  082F               	movf	___ftadd@exp1,w
  4492  0DBC  1903               	btfsc	3,2
  4493  0DBD  2DCA               	goto	i1l3625
  4494  0DBE  082E               	movf	___ftadd@exp2,w
  4495  0DBF  022F               	subwf	___ftadd@exp1,w
  4496  0DC0  1803               	skipnc
  4497  0DC1  2DD1               	goto	i1l3629
  4498  0DC2  032F               	decf	___ftadd@exp1,w
  4499  0DC3  3AFF               	xorlw	255
  4500  0DC4  072E               	addwf	___ftadd@exp2,w
  4501  0DC5  00A9               	movwf	??___ftadd
  4502  0DC6  3019               	movlw	25
  4503  0DC7  0229               	subwf	??___ftadd,w
  4504  0DC8  1C03               	skipc
  4505  0DC9  2DD1               	goto	i1l3629
  4506  0DCA                     i1l3625:	
  4507  0DCA  0826               	movf	___ftadd@f2,w
  4508  0DCB  00A3               	movwf	?___ftadd
  4509  0DCC  0827               	movf	___ftadd@f2+1,w
  4510  0DCD  00A4               	movwf	?___ftadd+1
  4511  0DCE  0828               	movf	___ftadd@f2+2,w
  4512  0DCF  00A5               	movwf	?___ftadd+2
  4513  0DD0  0008               	return
  4514  0DD1                     i1l3629:	
  4515  0DD1  082E               	movf	___ftadd@exp2,w
  4516  0DD2  1903               	btfsc	3,2
  4517  0DD3  0008               	return
  4518  0DD4  082F               	movf	___ftadd@exp1,w
  4519  0DD5  022E               	subwf	___ftadd@exp2,w
  4520  0DD6  1803               	skipnc
  4521  0DD7  2DE0               	goto	i1l3635
  4522  0DD8  032E               	decf	___ftadd@exp2,w
  4523  0DD9  3AFF               	xorlw	255
  4524  0DDA  072F               	addwf	___ftadd@exp1,w
  4525  0DDB  00A9               	movwf	??___ftadd
  4526  0DDC  3019               	movlw	25
  4527  0DDD  0229               	subwf	??___ftadd,w
  4528  0DDE  1803               	btfsc	3,0
  4529  0DDF  0008               	return
  4530  0DE0                     i1l3635:	
  4531  0DE0  3006               	movlw	6
  4532  0DE1  00A9               	movwf	??___ftadd
  4533  0DE2  0829               	movf	??___ftadd,w
  4534  0DE3  00AD               	movwf	___ftadd@sign
  4535  0DE4  1BA5               	btfsc	___ftadd@f1+2,7
  4536  0DE5  17AD               	bsf	___ftadd@sign,7
  4537  0DE6  1BA8               	btfsc	___ftadd@f2+2,7
  4538  0DE7  172D               	bsf	___ftadd@sign,6
  4539  0DE8  17A4               	bsf	___ftadd@f1+1,7
  4540  0DE9  30FF               	movlw	255
  4541  0DEA  05A3               	andwf	___ftadd@f1,f
  4542  0DEB  30FF               	movlw	255
  4543  0DEC  05A4               	andwf	___ftadd@f1+1,f
  4544  0DED  3000               	movlw	0
  4545  0DEE  05A5               	andwf	___ftadd@f1+2,f
  4546  0DEF  17A7               	bsf	___ftadd@f2+1,7
  4547  0DF0  30FF               	movlw	255
  4548  0DF1  05A6               	andwf	___ftadd@f2,f
  4549  0DF2  30FF               	movlw	255
  4550  0DF3  05A7               	andwf	___ftadd@f2+1,f
  4551  0DF4  3000               	movlw	0
  4552  0DF5  05A8               	andwf	___ftadd@f2+2,f
  4553  0DF6  082E               	movf	___ftadd@exp2,w
  4554  0DF7  022F               	subwf	___ftadd@exp1,w
  4555  0DF8  1803               	skipnc
  4556  0DF9  2E20               	goto	i1l3657
  4557  0DFA                     i1l3647:	
  4558  0DFA  3001               	movlw	1
  4559  0DFB                     u506_25:	
  4560  0DFB  1003               	clrc
  4561  0DFC  0DA6               	rlf	___ftadd@f2,f
  4562  0DFD  0DA7               	rlf	___ftadd@f2+1,f
  4563  0DFE  0DA8               	rlf	___ftadd@f2+2,f
  4564  0DFF  3EFF               	addlw	-1
  4565  0E00  1D03               	skipz
  4566  0E01  2DFB               	goto	u506_25
  4567  0E02  3001               	movlw	1
  4568  0E03  02AE               	subwf	___ftadd@exp2,f
  4569  0E04  082E               	movf	___ftadd@exp2,w
  4570  0E05  062F               	xorwf	___ftadd@exp1,w
  4571  0E06  1903               	skipnz
  4572  0E07  2E1B               	goto	i1l3655
  4573  0E08  3001               	movlw	1
  4574  0E09  02AD               	subwf	___ftadd@sign,f
  4575  0E0A  082D               	movf	___ftadd@sign,w
  4576  0E0B  3907               	andlw	7
  4577  0E0C  1903               	btfsc	3,2
  4578  0E0D  2E1B               	goto	i1l3655
  4579  0E0E  2DFA               	goto	i1l3647
  4580  0E0F                     i1l3653:	
  4581  0E0F  3001               	movlw	1
  4582  0E10                     u509_25:	
  4583  0E10  1003               	clrc
  4584  0E11  0CA5               	rrf	___ftadd@f1+2,f
  4585  0E12  0CA4               	rrf	___ftadd@f1+1,f
  4586  0E13  0CA3               	rrf	___ftadd@f1,f
  4587  0E14  3EFF               	addlw	-1
  4588  0E15  1D03               	skipz
  4589  0E16  2E10               	goto	u509_25
  4590  0E17  3001               	movlw	1
  4591  0E18  00A9               	movwf	??___ftadd
  4592  0E19  0829               	movf	??___ftadd,w
  4593  0E1A  07AF               	addwf	___ftadd@exp1,f
  4594  0E1B                     i1l3655:	
  4595  0E1B  082F               	movf	___ftadd@exp1,w
  4596  0E1C  062E               	xorwf	___ftadd@exp2,w
  4597  0E1D  1903               	btfsc	3,2
  4598  0E1E  2E49               	goto	i1l744
  4599  0E1F  2E0F               	goto	i1l3653
  4600  0E20                     i1l3657:	
  4601  0E20  082F               	movf	___ftadd@exp1,w
  4602  0E21  022E               	subwf	___ftadd@exp2,w
  4603  0E22  1803               	skipnc
  4604  0E23  2E49               	goto	i1l744
  4605  0E24                     i1l3659:	
  4606  0E24  3001               	movlw	1
  4607  0E25                     u512_25:	
  4608  0E25  1003               	clrc
  4609  0E26  0DA3               	rlf	___ftadd@f1,f
  4610  0E27  0DA4               	rlf	___ftadd@f1+1,f
  4611  0E28  0DA5               	rlf	___ftadd@f1+2,f
  4612  0E29  3EFF               	addlw	-1
  4613  0E2A  1D03               	skipz
  4614  0E2B  2E25               	goto	u512_25
  4615  0E2C  3001               	movlw	1
  4616  0E2D  02AF               	subwf	___ftadd@exp1,f
  4617  0E2E  082E               	movf	___ftadd@exp2,w
  4618  0E2F  062F               	xorwf	___ftadd@exp1,w
  4619  0E30  1903               	skipnz
  4620  0E31  2E45               	goto	i1l3667
  4621  0E32  3001               	movlw	1
  4622  0E33  02AD               	subwf	___ftadd@sign,f
  4623  0E34  082D               	movf	___ftadd@sign,w
  4624  0E35  3907               	andlw	7
  4625  0E36  1903               	btfsc	3,2
  4626  0E37  2E45               	goto	i1l3667
  4627  0E38  2E24               	goto	i1l3659
  4628  0E39                     i1l3665:	
  4629  0E39  3001               	movlw	1
  4630  0E3A                     u515_25:	
  4631  0E3A  1003               	clrc
  4632  0E3B  0CA8               	rrf	___ftadd@f2+2,f
  4633  0E3C  0CA7               	rrf	___ftadd@f2+1,f
  4634  0E3D  0CA6               	rrf	___ftadd@f2,f
  4635  0E3E  3EFF               	addlw	-1
  4636  0E3F  1D03               	skipz
  4637  0E40  2E3A               	goto	u515_25
  4638  0E41  3001               	movlw	1
  4639  0E42  00A9               	movwf	??___ftadd
  4640  0E43  0829               	movf	??___ftadd,w
  4641  0E44  07AE               	addwf	___ftadd@exp2,f
  4642  0E45                     i1l3667:	
  4643  0E45  082F               	movf	___ftadd@exp1,w
  4644  0E46  062E               	xorwf	___ftadd@exp2,w
  4645  0E47  1D03               	skipz
  4646  0E48  2E39               	goto	i1l3665
  4647  0E49                     i1l744:	
  4648  0E49  1FAD               	btfss	___ftadd@sign,7
  4649  0E4A  2E5B               	goto	i1l3671
  4650  0E4B  30FF               	movlw	255
  4651  0E4C  06A3               	xorwf	___ftadd@f1,f
  4652  0E4D  30FF               	movlw	255
  4653  0E4E  06A4               	xorwf	___ftadd@f1+1,f
  4654  0E4F  30FF               	movlw	255
  4655  0E50  06A5               	xorwf	___ftadd@f1+2,f
  4656  0E51  3001               	movlw	1
  4657  0E52  07A3               	addwf	___ftadd@f1,f
  4658  0E53  3000               	movlw	0
  4659  0E54  1803               	skipnc
  4660  0E55  3001               	movlw	1
  4661  0E56  07A4               	addwf	___ftadd@f1+1,f
  4662  0E57  3000               	movlw	0
  4663  0E58  1803               	skipnc
  4664  0E59  3001               	movlw	1
  4665  0E5A  07A5               	addwf	___ftadd@f1+2,f
  4666  0E5B                     i1l3671:	
  4667  0E5B  1F2D               	btfss	___ftadd@sign,6
  4668  0E5C  2E6D               	goto	i1l3675
  4669  0E5D  30FF               	movlw	255
  4670  0E5E  06A6               	xorwf	___ftadd@f2,f
  4671  0E5F  30FF               	movlw	255
  4672  0E60  06A7               	xorwf	___ftadd@f2+1,f
  4673  0E61  30FF               	movlw	255
  4674  0E62  06A8               	xorwf	___ftadd@f2+2,f
  4675  0E63  3001               	movlw	1
  4676  0E64  07A6               	addwf	___ftadd@f2,f
  4677  0E65  3000               	movlw	0
  4678  0E66  1803               	skipnc
  4679  0E67  3001               	movlw	1
  4680  0E68  07A7               	addwf	___ftadd@f2+1,f
  4681  0E69  3000               	movlw	0
  4682  0E6A  1803               	skipnc
  4683  0E6B  3001               	movlw	1
  4684  0E6C  07A8               	addwf	___ftadd@f2+2,f
  4685  0E6D                     i1l3675:	
  4686  0E6D  01AD               	clrf	___ftadd@sign
  4687  0E6E  0823               	movf	___ftadd@f1,w
  4688  0E6F  07A6               	addwf	___ftadd@f2,f
  4689  0E70  0824               	movf	___ftadd@f1+1,w
  4690  0E71  1103               	clrz
  4691  0E72  1803               	skipnc
  4692  0E73  0A24               	incf	___ftadd@f1+1,w
  4693  0E74  1D03               	btfss	3,2
  4694  0E75  07A7               	addwf	___ftadd@f2+1,f
  4695  0E76  0825               	movf	___ftadd@f1+2,w
  4696  0E77  1103               	clrz
  4697  0E78  1803               	skipnc
  4698  0E79  0A25               	incf	___ftadd@f1+2,w
  4699  0E7A  1D03               	btfss	3,2
  4700  0E7B  07A8               	addwf	___ftadd@f2+2,f
  4701  0E7C  1FA8               	btfss	___ftadd@f2+2,7
  4702  0E7D  2E90               	goto	i1l3685
  4703  0E7E  30FF               	movlw	255
  4704  0E7F  06A6               	xorwf	___ftadd@f2,f
  4705  0E80  30FF               	movlw	255
  4706  0E81  06A7               	xorwf	___ftadd@f2+1,f
  4707  0E82  30FF               	movlw	255
  4708  0E83  06A8               	xorwf	___ftadd@f2+2,f
  4709  0E84  3001               	movlw	1
  4710  0E85  07A6               	addwf	___ftadd@f2,f
  4711  0E86  3000               	movlw	0
  4712  0E87  1803               	skipnc
  4713  0E88  3001               	movlw	1
  4714  0E89  07A7               	addwf	___ftadd@f2+1,f
  4715  0E8A  3000               	movlw	0
  4716  0E8B  1803               	skipnc
  4717  0E8C  3001               	movlw	1
  4718  0E8D  07A8               	addwf	___ftadd@f2+2,f
  4719  0E8E  01AD               	clrf	___ftadd@sign
  4720  0E8F  0AAD               	incf	___ftadd@sign,f
  4721  0E90                     i1l3685:	
  4722  0E90  0826               	movf	___ftadd@f2,w
  4723  0E91  00F0               	movwf	___ftpack@arg
  4724  0E92  0827               	movf	___ftadd@f2+1,w
  4725  0E93  00F1               	movwf	___ftpack@arg+1
  4726  0E94  0828               	movf	___ftadd@f2+2,w
  4727  0E95  00F2               	movwf	___ftpack@arg+2
  4728  0E96  082F               	movf	___ftadd@exp1,w
  4729  0E97  00A9               	movwf	??___ftadd
  4730  0E98  0829               	movf	??___ftadd,w
  4731  0E99  00F3               	movwf	___ftpack@exp
  4732  0E9A  082D               	movf	___ftadd@sign,w
  4733  0E9B  00AA               	movwf	??___ftadd+1
  4734  0E9C  082A               	movf	??___ftadd+1,w
  4735  0E9D  00F4               	movwf	___ftpack@sign
  4736  0E9E  160A  118A  2475   	fcall	___ftpack
  4737  0EA1  0870               	movf	?___ftpack,w
  4738  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4739  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4740  0EA4  00A3               	movwf	?___ftadd
  4741  0EA5  0871               	movf	?___ftpack+1,w
  4742  0EA6  00A4               	movwf	?___ftadd+1
  4743  0EA7  0872               	movf	?___ftpack+2,w
  4744  0EA8  00A5               	movwf	?___ftadd+2
  4745  0EA9  0008               	return
  4746  0EAA                     __end_of___ftadd:	
  4747                           
  4748                           	psect	text23
  4749  15D0                     __ptext23:	
  4750 ;; *************** function _send *****************
  4751 ;; Defined at:
  4752 ;;		line 134 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  index           1   10[COMMON] unsigned char 
  4757 ;;  checksum        1    9[COMMON] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;		None               void
  4760 ;; Registers used:
  4761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4767 ;;      Params:         0       0       0       0       0
  4768 ;;      Locals:         2       0       0       0       0
  4769 ;;      Temps:          1       0       0       0       0
  4770 ;;      Totals:         3       0       0       0       0
  4771 ;;Total ram usage:        3 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    1
  4774 ;; This function calls:
  4775 ;;		_USART_WriteChar
  4776 ;;		___lwdiv
  4777 ;; This function is called by:
  4778 ;;		_ISR
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           
  4783                           ;psect for function _send
  4784  15D0                     _send:	
  4785                           
  4786                           ;main.c: 138: buffer[0] = '#';
  4787                           
  4788                           ;incstack = 0
  4789                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4790  15D0  3023               	movlw	35
  4791  15D1  00F8               	movwf	??_send
  4792  15D2  0878               	movf	??_send,w
  4793  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  4794  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  4795  15D5  00C8               	movwf	_buffer^(0+128)
  4796                           
  4797                           ;main.c: 139: buffer[1] = '$';
  4798  15D6  3024               	movlw	36
  4799  15D7  00F8               	movwf	??_send
  4800  15D8  0878               	movf	??_send,w
  4801  15D9  00C9               	movwf	(_buffer^(0+128)+1)
  4802                           
  4803                           ;main.c: 140: buffer[2] = ':';
  4804  15DA  303A               	movlw	58
  4805  15DB  00F8               	movwf	??_send
  4806  15DC  0878               	movf	??_send,w
  4807  15DD  00CA               	movwf	(_buffer^(0+128)+2)
  4808                           
  4809                           ;main.c: 142: kmph = rpm/41;
  4810  15DE  3029               	movlw	41
  4811  15DF  00F0               	movwf	___lwdiv@divisor
  4812  15E0  3000               	movlw	0
  4813  15E1  00F1               	movwf	___lwdiv@divisor+1
  4814  15E2  0863               	movf	(_rpm+1)^(0+128),w
  4815  15E3  01F3               	clrf	___lwdiv@dividend+1
  4816  15E4  07F3               	addwf	___lwdiv@dividend+1,f
  4817  15E5  0862               	movf	_rpm^(0+128),w
  4818  15E6  01F2               	clrf	___lwdiv@dividend
  4819  15E7  07F2               	addwf	___lwdiv@dividend,f
  4820  15E8  160A  118A  22C3  160A  118A  	fcall	___lwdiv
  4821  15ED  0871               	movf	?___lwdiv+1,w
  4822  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  4823  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  4824  15F0  01EB               	clrf	_kmph+1
  4825  15F1  07EB               	addwf	_kmph+1,f
  4826  15F2  0870               	movf	?___lwdiv,w
  4827  15F3  01EA               	clrf	_kmph
  4828  15F4  07EA               	addwf	_kmph,f
  4829                           
  4830                           ;main.c: 144: buffer[3] = (kmph >> 8);
  4831  15F5  086B               	movf	_kmph+1,w
  4832  15F6  00F8               	movwf	??_send
  4833  15F7  0878               	movf	??_send,w
  4834  15F8  1683               	bsf	3,5	;RP0=1, select bank1
  4835  15F9  1303               	bcf	3,6	;RP1=0, select bank1
  4836  15FA  00CB               	movwf	(_buffer^(0+128)+3)
  4837                           
  4838                           ;main.c: 145: buffer[4] = kmph;
  4839  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  4840  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  4841  15FD  086A               	movf	_kmph,w
  4842  15FE  00F8               	movwf	??_send
  4843  15FF  0878               	movf	??_send,w
  4844  1600  1683               	bsf	3,5	;RP0=1, select bank1
  4845  1601  1303               	bcf	3,6	;RP1=0, select bank1
  4846  1602  00CC               	movwf	(_buffer^(0+128)+4)
  4847                           
  4848                           ;main.c: 146: kmph = setpoint/41;
  4849  1603  3029               	movlw	41
  4850  1604  00F0               	movwf	___lwdiv@divisor
  4851  1605  3000               	movlw	0
  4852  1606  00F1               	movwf	___lwdiv@divisor+1
  4853  1607  0866               	movf	(_setpoint+1)^(0+128),w
  4854  1608  01F3               	clrf	___lwdiv@dividend+1
  4855  1609  07F3               	addwf	___lwdiv@dividend+1,f
  4856  160A  0865               	movf	_setpoint^(0+128),w
  4857  160B  01F2               	clrf	___lwdiv@dividend
  4858  160C  07F2               	addwf	___lwdiv@dividend,f
  4859  160D  160A  118A  22C3  160A  118A  	fcall	___lwdiv
  4860  1612  0871               	movf	?___lwdiv+1,w
  4861  1613  1283               	bcf	3,5	;RP0=0, select bank0
  4862  1614  1303               	bcf	3,6	;RP1=0, select bank0
  4863  1615  01EB               	clrf	_kmph+1
  4864  1616  07EB               	addwf	_kmph+1,f
  4865  1617  0870               	movf	?___lwdiv,w
  4866  1618  01EA               	clrf	_kmph
  4867  1619  07EA               	addwf	_kmph,f
  4868                           
  4869                           ;main.c: 147: buffer[5] = (kmph >> 8);
  4870  161A  086B               	movf	_kmph+1,w
  4871  161B  00F8               	movwf	??_send
  4872  161C  0878               	movf	??_send,w
  4873  161D  1683               	bsf	3,5	;RP0=1, select bank1
  4874  161E  1303               	bcf	3,6	;RP1=0, select bank1
  4875  161F  00CD               	movwf	(_buffer^(0+128)+5)
  4876                           
  4877                           ;main.c: 148: buffer[6] = kmph;
  4878  1620  1283               	bcf	3,5	;RP0=0, select bank0
  4879  1621  1303               	bcf	3,6	;RP1=0, select bank0
  4880  1622  086A               	movf	_kmph,w
  4881  1623  00F8               	movwf	??_send
  4882  1624  0878               	movf	??_send,w
  4883  1625  1683               	bsf	3,5	;RP0=1, select bank1
  4884  1626  1303               	bcf	3,6	;RP1=0, select bank1
  4885  1627  00CE               	movwf	(_buffer^(0+128)+6)
  4886                           
  4887                           ;main.c: 149: buffer[7] = pilotoAtivo;
  4888  1628  0864               	movf	_pilotoAtivo^(0+128),w
  4889  1629  00F8               	movwf	??_send
  4890  162A  0878               	movf	??_send,w
  4891  162B  00CF               	movwf	(_buffer^(0+128)+7)
  4892                           
  4893                           ;main.c: 152: unsigned char checksum = 0x00;
  4894  162C  01F9               	clrf	send@checksum
  4895                           
  4896                           ;main.c: 153: for (unsigned char index = 0; index < 8; index++)
  4897  162D  01FA               	clrf	send@index
  4898  162E  3008               	movlw	8
  4899  162F  027A               	subwf	send@index,w
  4900  1630  1803               	btfsc	3,0
  4901  1631  2E4C               	goto	i1l2491
  4902  1632                     i1l2483:	
  4903                           
  4904                           ;main.c: 154: {
  4905                           ;main.c: 155: USART_WriteChar(buffer[index]);
  4906  1632  087A               	movf	send@index,w
  4907  1633  3EC8               	addlw	_buffer& (0+255)
  4908  1634  0084               	movwf	4
  4909  1635  1383               	bcf	3,7	;select IRP bank1
  4910  1636  0800               	movf	0,w
  4911  1637  160A  118A  20B1  160A  118A  	fcall	_USART_WriteChar
  4912                           
  4913                           ;main.c: 156: checksum ^= buffer[index];
  4914  163C  087A               	movf	send@index,w
  4915  163D  3EC8               	addlw	_buffer& (0+255)
  4916  163E  0084               	movwf	4
  4917  163F  1383               	bcf	3,7	;select IRP bank1
  4918  1640  0800               	movf	0,w
  4919  1641  00F8               	movwf	??_send
  4920  1642  0878               	movf	??_send,w
  4921  1643  06F9               	xorwf	send@checksum,f
  4922  1644  3001               	movlw	1
  4923  1645  00F8               	movwf	??_send
  4924  1646  0878               	movf	??_send,w
  4925  1647  07FA               	addwf	send@index,f
  4926  1648  3008               	movlw	8
  4927  1649  027A               	subwf	send@index,w
  4928  164A  1C03               	skipc
  4929  164B  2E32               	goto	i1l2483
  4930  164C                     i1l2491:	
  4931                           
  4932                           ;main.c: 157: }
  4933                           ;main.c: 158: buffer[8] = checksum;
  4934  164C  0879               	movf	send@checksum,w
  4935  164D  00F8               	movwf	??_send
  4936  164E  0878               	movf	??_send,w
  4937  164F  1683               	bsf	3,5	;RP0=1, select bank1
  4938  1650  1303               	bcf	3,6	;RP1=0, select bank1
  4939  1651  00D0               	movwf	(_buffer^(0+128)+8)
  4940                           
  4941                           ;main.c: 159: USART_WriteChar(buffer[8]);
  4942  1652  0850               	movf	(_buffer^(0+128)+8),w
  4943  1653  160A  118A  20B1   	fcall	_USART_WriteChar
  4944  1656  0008               	return
  4945  1657                     __end_of_send:	
  4946                           
  4947                           	psect	text24
  4948  12C3                     __ptext24:	
  4949 ;; *************** function ___lwdiv *****************
  4950 ;; Defined at:
  4951 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  divisor         2    0[COMMON] unsigned int 
  4954 ;;  dividend        2    2[COMMON] unsigned int 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  quotient        2    5[COMMON] unsigned int 
  4957 ;;  counter         1    7[COMMON] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  2    0[COMMON] unsigned int 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         4       0       0       0       0
  4968 ;;      Locals:         3       0       0       0       0
  4969 ;;      Temps:          1       0       0       0       0
  4970 ;;      Totals:         8       0       0       0       0
  4971 ;;Total ram usage:        8 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_send
  4977 ;;		_ISR
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           
  4982                           ;psect for function ___lwdiv
  4983  12C3                     ___lwdiv:	
  4984                           
  4985                           ;incstack = 0
  4986                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4987  12C3  01F5               	clrf	___lwdiv@quotient
  4988  12C4  01F6               	clrf	___lwdiv@quotient+1
  4989  12C5  0871               	movf	___lwdiv@divisor+1,w
  4990  12C6  0470               	iorwf	___lwdiv@divisor,w
  4991  12C7  1903               	skipnz
  4992  12C8  2AFA               	goto	i1l2381
  4993  12C9  01F7               	clrf	___lwdiv@counter
  4994  12CA  0AF7               	incf	___lwdiv@counter,f
  4995  12CB                     i1l2369:	
  4996  12CB  1BF1               	btfsc	___lwdiv@divisor+1,7
  4997  12CC  2AD9               	goto	i1l2371
  4998  12CD  3001               	movlw	1
  4999  12CE                     u271_25:	
  5000  12CE  1003               	clrc
  5001  12CF  0DF0               	rlf	___lwdiv@divisor,f
  5002  12D0  0DF1               	rlf	___lwdiv@divisor+1,f
  5003  12D1  3EFF               	addlw	-1
  5004  12D2  1D03               	skipz
  5005  12D3  2ACE               	goto	u271_25
  5006  12D4  3001               	movlw	1
  5007  12D5  00F4               	movwf	??___lwdiv
  5008  12D6  0874               	movf	??___lwdiv,w
  5009  12D7  07F7               	addwf	___lwdiv@counter,f
  5010  12D8  2ACB               	goto	i1l2369
  5011  12D9                     i1l2371:	
  5012  12D9  3001               	movlw	1
  5013  12DA                     u273_25:	
  5014  12DA  1003               	clrc
  5015  12DB  0DF5               	rlf	___lwdiv@quotient,f
  5016  12DC  0DF6               	rlf	___lwdiv@quotient+1,f
  5017  12DD  3EFF               	addlw	-1
  5018  12DE  1D03               	skipz
  5019  12DF  2ADA               	goto	u273_25
  5020  12E0  0871               	movf	___lwdiv@divisor+1,w
  5021  12E1  0273               	subwf	___lwdiv@dividend+1,w
  5022  12E2  1D03               	skipz
  5023  12E3  2AE6               	goto	u274_25
  5024  12E4  0870               	movf	___lwdiv@divisor,w
  5025  12E5  0272               	subwf	___lwdiv@dividend,w
  5026  12E6                     u274_25:	
  5027  12E6  1C03               	skipc
  5028  12E7  2AEF               	goto	i1l2377
  5029  12E8  0870               	movf	___lwdiv@divisor,w
  5030  12E9  02F2               	subwf	___lwdiv@dividend,f
  5031  12EA  0871               	movf	___lwdiv@divisor+1,w
  5032  12EB  1C03               	skipc
  5033  12EC  03F3               	decf	___lwdiv@dividend+1,f
  5034  12ED  02F3               	subwf	___lwdiv@dividend+1,f
  5035  12EE  1475               	bsf	___lwdiv@quotient,0
  5036  12EF                     i1l2377:	
  5037  12EF  3001               	movlw	1
  5038  12F0                     u275_25:	
  5039  12F0  1003               	clrc
  5040  12F1  0CF1               	rrf	___lwdiv@divisor+1,f
  5041  12F2  0CF0               	rrf	___lwdiv@divisor,f
  5042  12F3  3EFF               	addlw	-1
  5043  12F4  1D03               	skipz
  5044  12F5  2AF0               	goto	u275_25
  5045  12F6  3001               	movlw	1
  5046  12F7  02F7               	subwf	___lwdiv@counter,f
  5047  12F8  1D03               	btfss	3,2
  5048  12F9  2AD9               	goto	i1l2371
  5049  12FA                     i1l2381:	
  5050  12FA  0876               	movf	___lwdiv@quotient+1,w
  5051  12FB  01F1               	clrf	?___lwdiv+1
  5052  12FC  07F1               	addwf	?___lwdiv+1,f
  5053  12FD  0875               	movf	___lwdiv@quotient,w
  5054  12FE  01F0               	clrf	?___lwdiv
  5055  12FF  07F0               	addwf	?___lwdiv,f
  5056  1300  0008               	return
  5057  1301                     __end_of___lwdiv:	
  5058                           
  5059                           	psect	text25
  5060  11BF                     __ptext25:	
  5061 ;; *************** function _minimo *****************
  5062 ;; Defined at:
  5063 ;;		line 25 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  a               3    6[BANK0 ] float 
  5066 ;;  b               3    9[BANK0 ] float 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  3    6[BANK0 ] float 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5078 ;;      Params:         0       6       0       0       0
  5079 ;;      Locals:         0       0       0       0       0
  5080 ;;      Temps:          0       0       0       0       0
  5081 ;;      Totals:         0       6       0       0       0
  5082 ;;Total ram usage:        6 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    1
  5085 ;; This function calls:
  5086 ;;		___ftge
  5087 ;; This function is called by:
  5088 ;;		_ISR
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _minimo
  5094  11BF                     _minimo:	
  5095                           
  5096                           ;main.c: 26: if (a < b) {
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  5100  11BF  1283               	bcf	3,5	;RP0=0, select bank0
  5101  11C0  1303               	bcf	3,6	;RP1=0, select bank0
  5102  11C1  0826               	movf	minimo@a,w
  5103  11C2  00F4               	movwf	___ftge@ff1
  5104  11C3  0827               	movf	minimo@a+1,w
  5105  11C4  00F5               	movwf	___ftge@ff1+1
  5106  11C5  0828               	movf	minimo@a+2,w
  5107  11C6  00F6               	movwf	___ftge@ff1+2
  5108  11C7  0829               	movf	minimo@b,w
  5109  11C8  00F7               	movwf	___ftge@ff2
  5110  11C9  082A               	movf	minimo@b+1,w
  5111  11CA  00F8               	movwf	___ftge@ff2+1
  5112  11CB  082B               	movf	minimo@b+2,w
  5113  11CC  00F9               	movwf	___ftge@ff2+2
  5114  11CD  160A  118A  2414  160A  118A  	fcall	___ftge
  5115  11D2  1C03               	btfss	3,0
  5116  11D3  0008               	return
  5117                           
  5118                           ;main.c: 28: }
  5119                           ;main.c: 29: return b;
  5120                           
  5121                           ;main.c: 27: return a;
  5122  11D4  1283               	bcf	3,5	;RP0=0, select bank0
  5123  11D5  1303               	bcf	3,6	;RP1=0, select bank0
  5124  11D6  0829               	movf	minimo@b,w
  5125  11D7  00A6               	movwf	?_minimo
  5126  11D8  082A               	movf	minimo@b+1,w
  5127  11D9  00A7               	movwf	?_minimo+1
  5128  11DA  082B               	movf	minimo@b+2,w
  5129  11DB  00A8               	movwf	?_minimo+2
  5130  11DC  0008               	return
  5131  11DD                     __end_of_minimo:	
  5132                           
  5133                           	psect	text26
  5134  11A1                     __ptext26:	
  5135 ;; *************** function _maximo *****************
  5136 ;; Defined at:
  5137 ;;		line 18 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\main.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  a               3   12[BANK0 ] float 
  5140 ;;  b               3   15[BANK0 ] float 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  3   12[BANK0 ] float 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, pclath, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5152 ;;      Params:         0       6       0       0       0
  5153 ;;      Locals:         0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0
  5155 ;;      Totals:         0       6       0       0       0
  5156 ;;Total ram usage:        6 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    1
  5159 ;; This function calls:
  5160 ;;		___ftge
  5161 ;; This function is called by:
  5162 ;;		_ISR
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function _maximo
  5168  11A1                     _maximo:	
  5169                           
  5170                           ;main.c: 19: if (a > b) {
  5171                           
  5172                           ;incstack = 0
  5173                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  5174  11A1  1283               	bcf	3,5	;RP0=0, select bank0
  5175  11A2  1303               	bcf	3,6	;RP1=0, select bank0
  5176  11A3  082F               	movf	maximo@b,w
  5177  11A4  00F4               	movwf	___ftge@ff1
  5178  11A5  0830               	movf	maximo@b+1,w
  5179  11A6  00F5               	movwf	___ftge@ff1+1
  5180  11A7  0831               	movf	maximo@b+2,w
  5181  11A8  00F6               	movwf	___ftge@ff1+2
  5182  11A9  082C               	movf	maximo@a,w
  5183  11AA  00F7               	movwf	___ftge@ff2
  5184  11AB  082D               	movf	maximo@a+1,w
  5185  11AC  00F8               	movwf	___ftge@ff2+1
  5186  11AD  082E               	movf	maximo@a+2,w
  5187  11AE  00F9               	movwf	___ftge@ff2+2
  5188  11AF  160A  118A  2414  160A  118A  	fcall	___ftge
  5189  11B4  1C03               	btfss	3,0
  5190  11B5  0008               	return
  5191                           
  5192                           ;main.c: 21: }
  5193                           ;main.c: 22: return b;
  5194                           
  5195                           ;main.c: 20: return a;
  5196  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  5197  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  5198  11B8  082F               	movf	maximo@b,w
  5199  11B9  00AC               	movwf	?_maximo
  5200  11BA  0830               	movf	maximo@b+1,w
  5201  11BB  00AD               	movwf	?_maximo+1
  5202  11BC  0831               	movf	maximo@b+2,w
  5203  11BD  00AE               	movwf	?_maximo+2
  5204  11BE  0008               	return
  5205  11BF                     __end_of_maximo:	
  5206                           
  5207                           	psect	text27
  5208  1414                     __ptext27:	
  5209 ;; *************** function ___ftge *****************
  5210 ;; Defined at:
  5211 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  ff1             3    4[COMMON] float 
  5214 ;;  ff2             3    7[COMMON] float 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;		None               void
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5226 ;;      Params:         6       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0
  5228 ;;      Temps:          0       6       0       0       0
  5229 ;;      Totals:         6       6       0       0       0
  5230 ;;Total ram usage:       12 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_maximo
  5236 ;;		_minimo
  5237 ;;		_trapmf
  5238 ;;		_ISR
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function ___ftge
  5244  1414                     ___ftge:	
  5245                           
  5246                           ;incstack = 0
  5247                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5248  1414  1FF6               	btfss	___ftge@ff1+2,7
  5249  1415  2C3D               	goto	i1l2335
  5250  1416  3000               	movlw	0
  5251  1417  1283               	bcf	3,5	;RP0=0, select bank0
  5252  1418  1303               	bcf	3,6	;RP1=0, select bank0
  5253  1419  00A0               	movwf	??___ftge
  5254  141A  3000               	movlw	0
  5255  141B  00A1               	movwf	??___ftge+1
  5256  141C  3080               	movlw	128
  5257  141D  00A2               	movwf	??___ftge+2
  5258  141E  0974               	comf	___ftge@ff1,w
  5259  141F  00A3               	movwf	??___ftge+3
  5260  1420  0975               	comf	___ftge@ff1+1,w
  5261  1421  00A4               	movwf	??___ftge+4
  5262  1422  0976               	comf	___ftge@ff1+2,w
  5263  1423  00A5               	movwf	??___ftge+5
  5264  1424  0AA3               	incf	??___ftge+3,f
  5265  1425  1903               	skipnz
  5266  1426  0AA4               	incf	??___ftge+4,f
  5267  1427  1903               	skipnz
  5268  1428  0AA5               	incf	??___ftge+5,f
  5269  1429  0823               	movf	??___ftge+3,w
  5270  142A  07A0               	addwf	??___ftge,f
  5271  142B  0824               	movf	??___ftge+4,w
  5272  142C  1803               	skipnc
  5273  142D  0F24               	incfsz	??___ftge+4,w
  5274  142E  2C30               	goto	u265_21
  5275  142F  2C31               	goto	u265_22
  5276  1430                     u265_21:	
  5277  1430  07A1               	addwf	??___ftge+1,f
  5278  1431                     u265_22:	
  5279  1431  0825               	movf	??___ftge+5,w
  5280  1432  1803               	skipnc
  5281  1433  0F25               	incfsz	??___ftge+5,w
  5282  1434  2C36               	goto	u265_23
  5283  1435  2C37               	goto	u265_24
  5284  1436                     u265_23:	
  5285  1436  07A2               	addwf	??___ftge+2,f
  5286  1437                     u265_24:	
  5287  1437  0820               	movf	??___ftge,w
  5288  1438  00F4               	movwf	___ftge@ff1
  5289  1439  0821               	movf	??___ftge+1,w
  5290  143A  00F5               	movwf	___ftge@ff1+1
  5291  143B  0822               	movf	??___ftge+2,w
  5292  143C  00F6               	movwf	___ftge@ff1+2
  5293  143D                     i1l2335:	
  5294  143D  1FF9               	btfss	___ftge@ff2+2,7
  5295  143E  2C66               	goto	i1l2339
  5296  143F  3000               	movlw	0
  5297  1440  1283               	bcf	3,5	;RP0=0, select bank0
  5298  1441  1303               	bcf	3,6	;RP1=0, select bank0
  5299  1442  00A0               	movwf	??___ftge
  5300  1443  3000               	movlw	0
  5301  1444  00A1               	movwf	??___ftge+1
  5302  1445  3080               	movlw	128
  5303  1446  00A2               	movwf	??___ftge+2
  5304  1447  0977               	comf	___ftge@ff2,w
  5305  1448  00A3               	movwf	??___ftge+3
  5306  1449  0978               	comf	___ftge@ff2+1,w
  5307  144A  00A4               	movwf	??___ftge+4
  5308  144B  0979               	comf	___ftge@ff2+2,w
  5309  144C  00A5               	movwf	??___ftge+5
  5310  144D  0AA3               	incf	??___ftge+3,f
  5311  144E  1903               	skipnz
  5312  144F  0AA4               	incf	??___ftge+4,f
  5313  1450  1903               	skipnz
  5314  1451  0AA5               	incf	??___ftge+5,f
  5315  1452  0823               	movf	??___ftge+3,w
  5316  1453  07A0               	addwf	??___ftge,f
  5317  1454  0824               	movf	??___ftge+4,w
  5318  1455  1803               	skipnc
  5319  1456  0F24               	incfsz	??___ftge+4,w
  5320  1457  2C59               	goto	u267_21
  5321  1458  2C5A               	goto	u267_22
  5322  1459                     u267_21:	
  5323  1459  07A1               	addwf	??___ftge+1,f
  5324  145A                     u267_22:	
  5325  145A  0825               	movf	??___ftge+5,w
  5326  145B  1803               	skipnc
  5327  145C  0F25               	incfsz	??___ftge+5,w
  5328  145D  2C5F               	goto	u267_23
  5329  145E  2C60               	goto	u267_24
  5330  145F                     u267_23:	
  5331  145F  07A2               	addwf	??___ftge+2,f
  5332  1460                     u267_24:	
  5333  1460  0820               	movf	??___ftge,w
  5334  1461  00F7               	movwf	___ftge@ff2
  5335  1462  0821               	movf	??___ftge+1,w
  5336  1463  00F8               	movwf	___ftge@ff2+1
  5337  1464  0822               	movf	??___ftge+2,w
  5338  1465  00F9               	movwf	___ftge@ff2+2
  5339  1466                     i1l2339:	
  5340  1466  3080               	movlw	128
  5341  1467  06F6               	xorwf	___ftge@ff1+2,f
  5342  1468  3080               	movlw	128
  5343  1469  06F9               	xorwf	___ftge@ff2+2,f
  5344  146A  0879               	movf	___ftge@ff2+2,w
  5345  146B  0276               	subwf	___ftge@ff1+2,w
  5346  146C  1D03               	skipz
  5347  146D  0008               	return
  5348  146E  0878               	movf	___ftge@ff2+1,w
  5349  146F  0275               	subwf	___ftge@ff1+1,w
  5350  1470  1D03               	skipz
  5351  1471  0008               	return
  5352  1472  0877               	movf	___ftge@ff2,w
  5353  1473  0274               	subwf	___ftge@ff1,w
  5354  1474  0008               	return
  5355  1475                     __end_of___ftge:	
  5356                           
  5357                           	psect	text28
  5358  10F0                     __ptext28:	
  5359 ;; *************** function _abs *****************
  5360 ;; Defined at:
  5361 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  a               2    0[COMMON] int 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2    0[COMMON] int 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         2       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0
  5377 ;;      Temps:          2       0       0       0       0
  5378 ;;      Totals:         4       0       0       0       0
  5379 ;;Total ram usage:        4 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_ISR
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           
  5389                           ;psect for function _abs
  5390  10F0                     _abs:	
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in _abs: [wreg+status,2+status,0]
  5394  10F0  1FF1               	btfss	abs@a+1,7
  5395  10F1  0008               	return
  5396  10F2  0970               	comf	abs@a,w
  5397  10F3  00F2               	movwf	??_abs
  5398  10F4  0971               	comf	abs@a+1,w
  5399  10F5  00F3               	movwf	??_abs+1
  5400  10F6  0AF2               	incf	??_abs,f
  5401  10F7  1903               	skipnz
  5402  10F8  0AF3               	incf	??_abs+1,f
  5403  10F9  0872               	movf	??_abs,w
  5404  10FA  00F0               	movwf	?_abs
  5405  10FB  0873               	movf	??_abs+1,w
  5406  10FC  00F1               	movwf	?_abs+1
  5407  10FD  0008               	return
  5408  10FE                     __end_of_abs:	
  5409                           
  5410                           	psect	text29
  5411  1264                     __ptext29:	
  5412 ;; *************** function ___wmul *****************
  5413 ;; Defined at:
  5414 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  multiplier      2   32[BANK0 ] unsigned int 
  5417 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  product         2   36[BANK0 ] unsigned int 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  2   32[BANK0 ] unsigned int 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5429 ;;      Params:         0       4       0       0       0
  5430 ;;      Locals:         0       2       0       0       0
  5431 ;;      Temps:          0       0       0       0       0
  5432 ;;      Totals:         0       6       0       0       0
  5433 ;;Total ram usage:        6 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; This function calls:
  5436 ;;		Nothing
  5437 ;; This function is called by:
  5438 ;;		_ISR
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function ___wmul
  5444  1264                     ___wmul:	
  5445                           
  5446                           ;incstack = 0
  5447                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5448  1264  1283               	bcf	3,5	;RP0=0, select bank0
  5449  1265  1303               	bcf	3,6	;RP1=0, select bank0
  5450  1266  01C4               	clrf	___wmul@product
  5451  1267  01C5               	clrf	___wmul@product+1
  5452  1268                     i1l2649:	
  5453  1268  1C40               	btfss	___wmul@multiplier,0
  5454  1269  2A70               	goto	i1l550
  5455  126A  0842               	movf	___wmul@multiplicand,w
  5456  126B  07C4               	addwf	___wmul@product,f
  5457  126C  1803               	skipnc
  5458  126D  0AC5               	incf	___wmul@product+1,f
  5459  126E  0843               	movf	___wmul@multiplicand+1,w
  5460  126F  07C5               	addwf	___wmul@product+1,f
  5461  1270                     i1l550:	
  5462  1270  3001               	movlw	1
  5463  1271                     u304_25:	
  5464  1271  1003               	clrc
  5465  1272  0DC2               	rlf	___wmul@multiplicand,f
  5466  1273  0DC3               	rlf	___wmul@multiplicand+1,f
  5467  1274  3EFF               	addlw	-1
  5468  1275  1D03               	skipz
  5469  1276  2A71               	goto	u304_25
  5470  1277  3001               	movlw	1
  5471  1278                     u305_25:	
  5472  1278  1003               	clrc
  5473  1279  0CC1               	rrf	___wmul@multiplier+1,f
  5474  127A  0CC0               	rrf	___wmul@multiplier,f
  5475  127B  3EFF               	addlw	-1
  5476  127C  1D03               	skipz
  5477  127D  2A78               	goto	u305_25
  5478  127E  0841               	movf	___wmul@multiplier+1,w
  5479  127F  0440               	iorwf	___wmul@multiplier,w
  5480  1280  1D03               	skipz
  5481  1281  2A68               	goto	i1l2649
  5482  1282  0845               	movf	___wmul@product+1,w
  5483  1283  01C1               	clrf	?___wmul+1
  5484  1284  07C1               	addwf	?___wmul+1,f
  5485  1285  0844               	movf	___wmul@product,w
  5486  1286  01C0               	clrf	?___wmul
  5487  1287  07C0               	addwf	?___wmul,f
  5488  1288  0008               	return
  5489  1289                     __end_of___wmul:	
  5490                           
  5491                           	psect	text30
  5492  1152                     __ptext30:	
  5493 ;; *************** function ___lwtoft *****************
  5494 ;; Defined at:
  5495 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  c               2   38[BANK0 ] unsigned int 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  3   38[BANK0 ] float 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, pclath, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         0       3       0       0       0
  5510 ;;      Locals:         0       0       0       0       0
  5511 ;;      Temps:          0       1       0       0       0
  5512 ;;      Totals:         0       4       0       0       0
  5513 ;;Total ram usage:        4 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		___ftpack
  5518 ;; This function is called by:
  5519 ;;		_ISR
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function ___lwtoft
  5525  1152                     ___lwtoft:	
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5529  1152  1283               	bcf	3,5	;RP0=0, select bank0
  5530  1153  1303               	bcf	3,6	;RP1=0, select bank0
  5531  1154  0846               	movf	___lwtoft@c,w
  5532  1155  00F0               	movwf	___ftpack@arg
  5533  1156  0847               	movf	___lwtoft@c+1,w
  5534  1157  00F1               	movwf	___ftpack@arg+1
  5535  1158  01F2               	clrf	___ftpack@arg+2
  5536  1159  308E               	movlw	142
  5537  115A  00C9               	movwf	??___lwtoft
  5538  115B  0849               	movf	??___lwtoft,w
  5539  115C  00F3               	movwf	___ftpack@exp
  5540  115D  01F4               	clrf	___ftpack@sign
  5541  115E  160A  118A  2475   	fcall	___ftpack
  5542  1161  0870               	movf	?___ftpack,w
  5543  1162  1283               	bcf	3,5	;RP0=0, select bank0
  5544  1163  1303               	bcf	3,6	;RP1=0, select bank0
  5545  1164  00C6               	movwf	?___lwtoft
  5546  1165  0871               	movf	?___ftpack+1,w
  5547  1166  00C7               	movwf	?___lwtoft+1
  5548  1167  0872               	movf	?___ftpack+2,w
  5549  1168  00C8               	movwf	?___lwtoft+2
  5550  1169  0008               	return
  5551  116A                     __end_of___lwtoft:	
  5552                           
  5553                           	psect	text31
  5554  16E3                     __ptext31:	
  5555 ;; *************** function ___fttol *****************
  5556 ;; Defined at:
  5557 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  f1              3   18[BANK0 ] float 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  lval            4   27[BANK0 ] unsigned long 
  5562 ;;  exp1            1   31[BANK0 ] unsigned char 
  5563 ;;  sign1           1   26[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4   18[BANK0 ] long 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       4       0       0       0
  5574 ;;      Locals:         0       6       0       0       0
  5575 ;;      Temps:          0       4       0       0       0
  5576 ;;      Totals:         0      14       0       0       0
  5577 ;;Total ram usage:       14 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_ISR
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function ___fttol
  5588  16E3                     ___fttol:	
  5589                           
  5590                           ;incstack = 0
  5591                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5592  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  5593  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  5594  16E5  0832               	movf	___fttol@f1,w
  5595  16E6  00B6               	movwf	??___fttol
  5596  16E7  0833               	movf	___fttol@f1+1,w
  5597  16E8  00B7               	movwf	??___fttol+1
  5598  16E9  0834               	movf	___fttol@f1+2,w
  5599  16EA  00B8               	movwf	??___fttol+2
  5600  16EB  1003               	clrc
  5601  16EC  0D37               	rlf	??___fttol+1,w
  5602  16ED  0D38               	rlf	??___fttol+2,w
  5603  16EE  00B9               	movwf	??___fttol+3
  5604  16EF  0839               	movf	??___fttol+3,w
  5605  16F0  00BF               	movwf	___fttol@exp1
  5606  16F1  08BF               	movf	___fttol@exp1,f
  5607  16F2  1D03               	skipz
  5608  16F3  2EFD               	goto	i1l2743
  5609  16F4  3000               	movlw	0
  5610  16F5  00B5               	movwf	?___fttol+3
  5611  16F6  3000               	movlw	0
  5612  16F7  00B4               	movwf	?___fttol+2
  5613  16F8  3000               	movlw	0
  5614  16F9  00B3               	movwf	?___fttol+1
  5615  16FA  3000               	movlw	0
  5616  16FB  00B2               	movwf	?___fttol
  5617  16FC  0008               	return
  5618  16FD                     i1l2743:	
  5619  16FD  0832               	movf	___fttol@f1,w
  5620  16FE  00B6               	movwf	??___fttol
  5621  16FF  0833               	movf	___fttol@f1+1,w
  5622  1700  00B7               	movwf	??___fttol+1
  5623  1701  0834               	movf	___fttol@f1+2,w
  5624  1702  00B8               	movwf	??___fttol+2
  5625  1703  3017               	movlw	23
  5626  1704                     u325_25:	
  5627  1704  1003               	clrc
  5628  1705  0CB8               	rrf	??___fttol+2,f
  5629  1706  0CB7               	rrf	??___fttol+1,f
  5630  1707  0CB6               	rrf	??___fttol,f
  5631  1708  3EFF               	addlw	-1
  5632  1709  1D03               	skipz
  5633  170A  2F04               	goto	u325_25
  5634  170B  0836               	movf	??___fttol,w
  5635  170C  00B9               	movwf	??___fttol+3
  5636  170D  0839               	movf	??___fttol+3,w
  5637  170E  00BA               	movwf	___fttol@sign1
  5638  170F  17B3               	bsf	___fttol@f1+1,7
  5639  1710  30FF               	movlw	255
  5640  1711  05B2               	andwf	___fttol@f1,f
  5641  1712  30FF               	movlw	255
  5642  1713  05B3               	andwf	___fttol@f1+1,f
  5643  1714  3000               	movlw	0
  5644  1715  05B4               	andwf	___fttol@f1+2,f
  5645  1716  0832               	movf	___fttol@f1,w
  5646  1717  00BB               	movwf	___fttol@lval
  5647  1718  0833               	movf	___fttol@f1+1,w
  5648  1719  00BC               	movwf	___fttol@lval+1
  5649  171A  0834               	movf	___fttol@f1+2,w
  5650  171B  00BD               	movwf	___fttol@lval+2
  5651  171C  01BE               	clrf	___fttol@lval+3
  5652  171D  308E               	movlw	142
  5653  171E  02BF               	subwf	___fttol@exp1,f
  5654  171F  1FBF               	btfss	___fttol@exp1,7
  5655  1720  2F3F               	goto	i1l2763
  5656  1721  083F               	movf	___fttol@exp1,w
  5657  1722  3A80               	xorlw	128
  5658  1723  3E8F               	addlw	143
  5659  1724  1803               	skipnc
  5660  1725  2F2F               	goto	i1l2761
  5661  1726  3000               	movlw	0
  5662  1727  00B5               	movwf	?___fttol+3
  5663  1728  3000               	movlw	0
  5664  1729  00B4               	movwf	?___fttol+2
  5665  172A  3000               	movlw	0
  5666  172B  00B3               	movwf	?___fttol+1
  5667  172C  3000               	movlw	0
  5668  172D  00B2               	movwf	?___fttol
  5669  172E  0008               	return
  5670  172F                     i1l2761:	
  5671  172F  3001               	movlw	1
  5672  1730                     u328_25:	
  5673  1730  1003               	clrc
  5674  1731  0CBE               	rrf	___fttol@lval+3,f
  5675  1732  0CBD               	rrf	___fttol@lval+2,f
  5676  1733  0CBC               	rrf	___fttol@lval+1,f
  5677  1734  0CBB               	rrf	___fttol@lval,f
  5678  1735  3EFF               	addlw	-1
  5679  1736  1D03               	skipz
  5680  1737  2F30               	goto	u328_25
  5681  1738  3001               	movlw	1
  5682  1739  00B6               	movwf	??___fttol
  5683  173A  0836               	movf	??___fttol,w
  5684  173B  07BF               	addwf	___fttol@exp1,f
  5685  173C  1903               	btfsc	3,2
  5686  173D  2F5A               	goto	i1l2773
  5687  173E  2F2F               	goto	i1l2761
  5688  173F                     i1l2763:	
  5689  173F  3018               	movlw	24
  5690  1740  023F               	subwf	___fttol@exp1,w
  5691  1741  1C03               	skipc
  5692  1742  2F57               	goto	i1l2771
  5693  1743  3000               	movlw	0
  5694  1744  00B5               	movwf	?___fttol+3
  5695  1745  3000               	movlw	0
  5696  1746  00B4               	movwf	?___fttol+2
  5697  1747  3000               	movlw	0
  5698  1748  00B3               	movwf	?___fttol+1
  5699  1749  3000               	movlw	0
  5700  174A  00B2               	movwf	?___fttol
  5701  174B  0008               	return
  5702  174C                     i1l2769:	
  5703  174C  3001               	movlw	1
  5704  174D  00B6               	movwf	??___fttol
  5705  174E                     u331_25:	
  5706  174E  1003               	clrc
  5707  174F  0DBB               	rlf	___fttol@lval,f
  5708  1750  0DBC               	rlf	___fttol@lval+1,f
  5709  1751  0DBD               	rlf	___fttol@lval+2,f
  5710  1752  0DBE               	rlf	___fttol@lval+3,f
  5711  1753  0BB6               	decfsz	??___fttol,f
  5712  1754  2F4E               	goto	u331_25
  5713  1755  3001               	movlw	1
  5714  1756  02BF               	subwf	___fttol@exp1,f
  5715  1757                     i1l2771:	
  5716  1757  08BF               	movf	___fttol@exp1,f
  5717  1758  1D03               	skipz
  5718  1759  2F4C               	goto	i1l2769
  5719  175A                     i1l2773:	
  5720  175A  083A               	movf	___fttol@sign1,w
  5721  175B  1903               	btfsc	3,2
  5722  175C  2F68               	goto	i1l2777
  5723  175D  09BB               	comf	___fttol@lval,f
  5724  175E  09BC               	comf	___fttol@lval+1,f
  5725  175F  09BD               	comf	___fttol@lval+2,f
  5726  1760  09BE               	comf	___fttol@lval+3,f
  5727  1761  0ABB               	incf	___fttol@lval,f
  5728  1762  1903               	skipnz
  5729  1763  0ABC               	incf	___fttol@lval+1,f
  5730  1764  1903               	skipnz
  5731  1765  0ABD               	incf	___fttol@lval+2,f
  5732  1766  1903               	skipnz
  5733  1767  0ABE               	incf	___fttol@lval+3,f
  5734  1768                     i1l2777:	
  5735  1768  083E               	movf	___fttol@lval+3,w
  5736  1769  00B5               	movwf	?___fttol+3
  5737  176A  083D               	movf	___fttol@lval+2,w
  5738  176B  00B4               	movwf	?___fttol+2
  5739  176C  083C               	movf	___fttol@lval+1,w
  5740  176D  00B3               	movwf	?___fttol+1
  5741  176E  083B               	movf	___fttol@lval,w
  5742  176F  00B2               	movwf	?___fttol
  5743  1770  0008               	return
  5744  1771                     __end_of___fttol:	
  5745                           
  5746                           	psect	text32
  5747  0BF5                     __ptext32:	
  5748 ;; *************** function ___ftmul *****************
  5749 ;; Defined at:
  5750 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  f1              3   50[BANK0 ] float 
  5753 ;;  f2              3   53[BANK0 ] float 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  5756 ;;  sign            1   65[BANK0 ] unsigned char 
  5757 ;;  cntr            1   64[BANK0 ] unsigned char 
  5758 ;;  exp             1   60[BANK0 ] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  3   50[BANK0 ] float 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0, pclath, cstack
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5768 ;;      Params:         0       6       0       0       0
  5769 ;;      Locals:         0       6       0       0       0
  5770 ;;      Temps:          0       4       0       0       0
  5771 ;;      Totals:         0      16       0       0       0
  5772 ;;Total ram usage:       16 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    1
  5775 ;; This function calls:
  5776 ;;		___ftpack
  5777 ;; This function is called by:
  5778 ;;		_ISR
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function ___ftmul
  5784  0BF5                     ___ftmul:	
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5788  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  5789  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  5790  0BF7  0852               	movf	___ftmul@f1,w
  5791  0BF8  00D8               	movwf	??___ftmul
  5792  0BF9  0853               	movf	___ftmul@f1+1,w
  5793  0BFA  00D9               	movwf	??___ftmul+1
  5794  0BFB  0854               	movf	___ftmul@f1+2,w
  5795  0BFC  00DA               	movwf	??___ftmul+2
  5796  0BFD  1003               	clrc
  5797  0BFE  0D59               	rlf	??___ftmul+1,w
  5798  0BFF  0D5A               	rlf	??___ftmul+2,w
  5799  0C00  00DB               	movwf	??___ftmul+3
  5800  0C01  085B               	movf	??___ftmul+3,w
  5801  0C02  00DC               	movwf	___ftmul@exp
  5802  0C03  08DC               	movf	___ftmul@exp,f
  5803  0C04  1D03               	skipz
  5804  0C05  2C0D               	goto	i1l2693
  5805  0C06  3000               	movlw	0
  5806  0C07  00D2               	movwf	?___ftmul
  5807  0C08  3000               	movlw	0
  5808  0C09  00D3               	movwf	?___ftmul+1
  5809  0C0A  3000               	movlw	0
  5810  0C0B  00D4               	movwf	?___ftmul+2
  5811  0C0C  0008               	return
  5812  0C0D                     i1l2693:	
  5813  0C0D  0855               	movf	___ftmul@f2,w
  5814  0C0E  00D8               	movwf	??___ftmul
  5815  0C0F  0856               	movf	___ftmul@f2+1,w
  5816  0C10  00D9               	movwf	??___ftmul+1
  5817  0C11  0857               	movf	___ftmul@f2+2,w
  5818  0C12  00DA               	movwf	??___ftmul+2
  5819  0C13  1003               	clrc
  5820  0C14  0D59               	rlf	??___ftmul+1,w
  5821  0C15  0D5A               	rlf	??___ftmul+2,w
  5822  0C16  00DB               	movwf	??___ftmul+3
  5823  0C17  085B               	movf	??___ftmul+3,w
  5824  0C18  00E1               	movwf	___ftmul@sign
  5825  0C19  08E1               	movf	___ftmul@sign,f
  5826  0C1A  1D03               	skipz
  5827  0C1B  2C23               	goto	i1l2699
  5828  0C1C  3000               	movlw	0
  5829  0C1D  00D2               	movwf	?___ftmul
  5830  0C1E  3000               	movlw	0
  5831  0C1F  00D3               	movwf	?___ftmul+1
  5832  0C20  3000               	movlw	0
  5833  0C21  00D4               	movwf	?___ftmul+2
  5834  0C22  0008               	return
  5835  0C23                     i1l2699:	
  5836  0C23  0861               	movf	___ftmul@sign,w
  5837  0C24  3E7B               	addlw	123
  5838  0C25  00D8               	movwf	??___ftmul
  5839  0C26  0858               	movf	??___ftmul,w
  5840  0C27  07DC               	addwf	___ftmul@exp,f
  5841  0C28  0852               	movf	___ftmul@f1,w
  5842  0C29  00D8               	movwf	??___ftmul
  5843  0C2A  0853               	movf	___ftmul@f1+1,w
  5844  0C2B  00D9               	movwf	??___ftmul+1
  5845  0C2C  0854               	movf	___ftmul@f1+2,w
  5846  0C2D  00DA               	movwf	??___ftmul+2
  5847  0C2E  3010               	movlw	16
  5848  0C2F                     u312_25:	
  5849  0C2F  1003               	clrc
  5850  0C30  0CDA               	rrf	??___ftmul+2,f
  5851  0C31  0CD9               	rrf	??___ftmul+1,f
  5852  0C32  0CD8               	rrf	??___ftmul,f
  5853  0C33  3EFF               	addlw	-1
  5854  0C34  1D03               	skipz
  5855  0C35  2C2F               	goto	u312_25
  5856  0C36  0858               	movf	??___ftmul,w
  5857  0C37  00DB               	movwf	??___ftmul+3
  5858  0C38  085B               	movf	??___ftmul+3,w
  5859  0C39  00E1               	movwf	___ftmul@sign
  5860  0C3A  0855               	movf	___ftmul@f2,w
  5861  0C3B  00D8               	movwf	??___ftmul
  5862  0C3C  0856               	movf	___ftmul@f2+1,w
  5863  0C3D  00D9               	movwf	??___ftmul+1
  5864  0C3E  0857               	movf	___ftmul@f2+2,w
  5865  0C3F  00DA               	movwf	??___ftmul+2
  5866  0C40  3010               	movlw	16
  5867  0C41                     u313_25:	
  5868  0C41  1003               	clrc
  5869  0C42  0CDA               	rrf	??___ftmul+2,f
  5870  0C43  0CD9               	rrf	??___ftmul+1,f
  5871  0C44  0CD8               	rrf	??___ftmul,f
  5872  0C45  3EFF               	addlw	-1
  5873  0C46  1D03               	skipz
  5874  0C47  2C41               	goto	u313_25
  5875  0C48  0858               	movf	??___ftmul,w
  5876  0C49  00DB               	movwf	??___ftmul+3
  5877  0C4A  085B               	movf	??___ftmul+3,w
  5878  0C4B  06E1               	xorwf	___ftmul@sign,f
  5879  0C4C  3080               	movlw	128
  5880  0C4D  00D8               	movwf	??___ftmul
  5881  0C4E  0858               	movf	??___ftmul,w
  5882  0C4F  05E1               	andwf	___ftmul@sign,f
  5883  0C50  17D3               	bsf	___ftmul@f1+1,7
  5884  0C51  17D6               	bsf	___ftmul@f2+1,7
  5885  0C52  30FF               	movlw	255
  5886  0C53  05D5               	andwf	___ftmul@f2,f
  5887  0C54  30FF               	movlw	255
  5888  0C55  05D6               	andwf	___ftmul@f2+1,f
  5889  0C56  3000               	movlw	0
  5890  0C57  05D7               	andwf	___ftmul@f2+2,f
  5891  0C58  3000               	movlw	0
  5892  0C59  00DD               	movwf	___ftmul@f3_as_product
  5893  0C5A  3000               	movlw	0
  5894  0C5B  00DE               	movwf	___ftmul@f3_as_product+1
  5895  0C5C  3000               	movlw	0
  5896  0C5D  00DF               	movwf	___ftmul@f3_as_product+2
  5897  0C5E  3007               	movlw	7
  5898  0C5F  00D8               	movwf	??___ftmul
  5899  0C60  0858               	movf	??___ftmul,w
  5900  0C61  00E0               	movwf	___ftmul@cntr
  5901  0C62                     i1l2711:	
  5902  0C62  1C52               	btfss	___ftmul@f1,0
  5903  0C63  2C72               	goto	i1l2715
  5904  0C64  0855               	movf	___ftmul@f2,w
  5905  0C65  07DD               	addwf	___ftmul@f3_as_product,f
  5906  0C66  0856               	movf	___ftmul@f2+1,w
  5907  0C67  1103               	clrz
  5908  0C68  1803               	skipnc
  5909  0C69  0A56               	incf	___ftmul@f2+1,w
  5910  0C6A  1D03               	btfss	3,2
  5911  0C6B  07DE               	addwf	___ftmul@f3_as_product+1,f
  5912  0C6C  0857               	movf	___ftmul@f2+2,w
  5913  0C6D  1103               	clrz
  5914  0C6E  1803               	skipnc
  5915  0C6F  0A57               	incf	___ftmul@f2+2,w
  5916  0C70  1D03               	btfss	3,2
  5917  0C71  07DF               	addwf	___ftmul@f3_as_product+2,f
  5918  0C72                     i1l2715:	
  5919  0C72  3001               	movlw	1
  5920  0C73                     u316_25:	
  5921  0C73  1003               	clrc
  5922  0C74  0CD4               	rrf	___ftmul@f1+2,f
  5923  0C75  0CD3               	rrf	___ftmul@f1+1,f
  5924  0C76  0CD2               	rrf	___ftmul@f1,f
  5925  0C77  3EFF               	addlw	-1
  5926  0C78  1D03               	skipz
  5927  0C79  2C73               	goto	u316_25
  5928  0C7A  3001               	movlw	1
  5929  0C7B                     u317_25:	
  5930  0C7B  1003               	clrc
  5931  0C7C  0DD5               	rlf	___ftmul@f2,f
  5932  0C7D  0DD6               	rlf	___ftmul@f2+1,f
  5933  0C7E  0DD7               	rlf	___ftmul@f2+2,f
  5934  0C7F  3EFF               	addlw	-1
  5935  0C80  1D03               	skipz
  5936  0C81  2C7B               	goto	u317_25
  5937  0C82  3001               	movlw	1
  5938  0C83  02E0               	subwf	___ftmul@cntr,f
  5939  0C84  1D03               	btfss	3,2
  5940  0C85  2C62               	goto	i1l2711
  5941  0C86  3009               	movlw	9
  5942  0C87  00D8               	movwf	??___ftmul
  5943  0C88  0858               	movf	??___ftmul,w
  5944  0C89  00E0               	movwf	___ftmul@cntr
  5945  0C8A                     i1l2723:	
  5946  0C8A  1C52               	btfss	___ftmul@f1,0
  5947  0C8B  2C9A               	goto	i1l2727
  5948  0C8C  0855               	movf	___ftmul@f2,w
  5949  0C8D  07DD               	addwf	___ftmul@f3_as_product,f
  5950  0C8E  0856               	movf	___ftmul@f2+1,w
  5951  0C8F  1103               	clrz
  5952  0C90  1803               	skipnc
  5953  0C91  0A56               	incf	___ftmul@f2+1,w
  5954  0C92  1D03               	btfss	3,2
  5955  0C93  07DE               	addwf	___ftmul@f3_as_product+1,f
  5956  0C94  0857               	movf	___ftmul@f2+2,w
  5957  0C95  1103               	clrz
  5958  0C96  1803               	skipnc
  5959  0C97  0A57               	incf	___ftmul@f2+2,w
  5960  0C98  1D03               	btfss	3,2
  5961  0C99  07DF               	addwf	___ftmul@f3_as_product+2,f
  5962  0C9A                     i1l2727:	
  5963  0C9A  3001               	movlw	1
  5964  0C9B                     u321_25:	
  5965  0C9B  1003               	clrc
  5966  0C9C  0CD4               	rrf	___ftmul@f1+2,f
  5967  0C9D  0CD3               	rrf	___ftmul@f1+1,f
  5968  0C9E  0CD2               	rrf	___ftmul@f1,f
  5969  0C9F  3EFF               	addlw	-1
  5970  0CA0  1D03               	skipz
  5971  0CA1  2C9B               	goto	u321_25
  5972  0CA2  3001               	movlw	1
  5973  0CA3                     u322_25:	
  5974  0CA3  1003               	clrc
  5975  0CA4  0CDF               	rrf	___ftmul@f3_as_product+2,f
  5976  0CA5  0CDE               	rrf	___ftmul@f3_as_product+1,f
  5977  0CA6  0CDD               	rrf	___ftmul@f3_as_product,f
  5978  0CA7  3EFF               	addlw	-1
  5979  0CA8  1D03               	skipz
  5980  0CA9  2CA3               	goto	u322_25
  5981  0CAA  3001               	movlw	1
  5982  0CAB  02E0               	subwf	___ftmul@cntr,f
  5983  0CAC  1D03               	btfss	3,2
  5984  0CAD  2C8A               	goto	i1l2723
  5985  0CAE  085D               	movf	___ftmul@f3_as_product,w
  5986  0CAF  00F0               	movwf	___ftpack@arg
  5987  0CB0  085E               	movf	___ftmul@f3_as_product+1,w
  5988  0CB1  00F1               	movwf	___ftpack@arg+1
  5989  0CB2  085F               	movf	___ftmul@f3_as_product+2,w
  5990  0CB3  00F2               	movwf	___ftpack@arg+2
  5991  0CB4  085C               	movf	___ftmul@exp,w
  5992  0CB5  00D8               	movwf	??___ftmul
  5993  0CB6  0858               	movf	??___ftmul,w
  5994  0CB7  00F3               	movwf	___ftpack@exp
  5995  0CB8  0861               	movf	___ftmul@sign,w
  5996  0CB9  00D9               	movwf	??___ftmul+1
  5997  0CBA  0859               	movf	??___ftmul+1,w
  5998  0CBB  00F4               	movwf	___ftpack@sign
  5999  0CBC  160A  118A  2475   	fcall	___ftpack
  6000  0CBF  0870               	movf	?___ftpack,w
  6001  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  6002  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  6003  0CC2  00D2               	movwf	?___ftmul
  6004  0CC3  0871               	movf	?___ftpack+1,w
  6005  0CC4  00D3               	movwf	?___ftmul+1
  6006  0CC5  0872               	movf	?___ftpack+2,w
  6007  0CC6  00D4               	movwf	?___ftmul+2
  6008  0CC7  0008               	return
  6009  0CC8                     __end_of___ftmul:	
  6010                           
  6011                           	psect	text33
  6012  07EC                     __ptext33:	
  6013 ;; *************** function ___bmul *****************
  6014 ;; Defined at:
  6015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  multiplier      1    wreg     unsigned char 
  6018 ;;  multiplicand    1    0[COMMON] unsigned char 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  multiplier      1    3[COMMON] unsigned char 
  6021 ;;  product         1    2[COMMON] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      unsigned char 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6031 ;;      Params:         1       0       0       0       0
  6032 ;;      Locals:         2       0       0       0       0
  6033 ;;      Temps:          1       0       0       0       0
  6034 ;;      Totals:         4       0       0       0       0
  6035 ;;Total ram usage:        4 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_ISR
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           
  6045                           ;psect for function ___bmul
  6046  07EC                     ___bmul:	
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6050                           ;___bmul@multiplier stored from wreg
  6051  07EC  00F3               	movwf	___bmul@multiplier
  6052  07ED  01F2               	clrf	___bmul@product
  6053  07EE                     i1l2661:	
  6054  07EE  1C73               	btfss	___bmul@multiplier,0
  6055  07EF  2FF4               	goto	i1l2665
  6056  07F0  0870               	movf	___bmul@multiplicand,w
  6057  07F1  00F1               	movwf	??___bmul
  6058  07F2  0871               	movf	??___bmul,w
  6059  07F3  07F2               	addwf	___bmul@product,f
  6060  07F4                     i1l2665:	
  6061  07F4  1003               	clrc
  6062  07F5  0DF0               	rlf	___bmul@multiplicand,f
  6063  07F6  1003               	clrc
  6064  07F7  0CF3               	rrf	___bmul@multiplier,f
  6065  07F8  08F3               	movf	___bmul@multiplier,f
  6066  07F9  1D03               	skipz
  6067  07FA  2FEE               	goto	i1l2661
  6068  07FB  0872               	movf	___bmul@product,w
  6069  07FC  0008               	return
  6070  07FD                     __end_of___bmul:	
  6071                           
  6072                           	psect	text34
  6073  11DD                     __ptext34:	
  6074 ;; *************** function ___awtoft *****************
  6075 ;; Defined at:
  6076 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  c               2    8[COMMON] int 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  sign            1   13[COMMON] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  3    8[COMMON] float 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0, pclath, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6090 ;;      Params:         3       0       0       0       0
  6091 ;;      Locals:         1       0       0       0       0
  6092 ;;      Temps:          2       0       0       0       0
  6093 ;;      Totals:         6       0       0       0       0
  6094 ;;Total ram usage:        6 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    1
  6097 ;; This function calls:
  6098 ;;		___ftpack
  6099 ;; This function is called by:
  6100 ;;		_ISR
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           
  6105                           ;psect for function ___awtoft
  6106  11DD                     ___awtoft:	
  6107                           
  6108                           ;incstack = 0
  6109                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6110  11DD  01FD               	clrf	___awtoft@sign
  6111  11DE  1FF9               	btfss	___awtoft@c+1,7
  6112  11DF  29E7               	goto	i1l2683
  6113  11E0  09F8               	comf	___awtoft@c,f
  6114  11E1  09F9               	comf	___awtoft@c+1,f
  6115  11E2  0AF8               	incf	___awtoft@c,f
  6116  11E3  1903               	skipnz
  6117  11E4  0AF9               	incf	___awtoft@c+1,f
  6118  11E5  01FD               	clrf	___awtoft@sign
  6119  11E6  0AFD               	incf	___awtoft@sign,f
  6120  11E7                     i1l2683:	
  6121  11E7  0878               	movf	___awtoft@c,w
  6122  11E8  00F0               	movwf	___ftpack@arg
  6123  11E9  0879               	movf	___awtoft@c+1,w
  6124  11EA  00F1               	movwf	___ftpack@arg+1
  6125  11EB  01F2               	clrf	___ftpack@arg+2
  6126  11EC  308E               	movlw	142
  6127  11ED  00FB               	movwf	??___awtoft
  6128  11EE  087B               	movf	??___awtoft,w
  6129  11EF  00F3               	movwf	___ftpack@exp
  6130  11F0  087D               	movf	___awtoft@sign,w
  6131  11F1  00FC               	movwf	??___awtoft+1
  6132  11F2  087C               	movf	??___awtoft+1,w
  6133  11F3  00F4               	movwf	___ftpack@sign
  6134  11F4  160A  118A  2475   	fcall	___ftpack
  6135  11F7  0870               	movf	?___ftpack,w
  6136  11F8  00F8               	movwf	?___awtoft
  6137  11F9  0871               	movf	?___ftpack+1,w
  6138  11FA  00F9               	movwf	?___awtoft+1
  6139  11FB  0872               	movf	?___ftpack+2,w
  6140  11FC  00FA               	movwf	?___awtoft+2
  6141  11FD  0008               	return
  6142  11FE                     __end_of___awtoft:	
  6143                           
  6144                           	psect	text35
  6145  1475                     __ptext35:	
  6146 ;; *************** function ___ftpack *****************
  6147 ;; Defined at:
  6148 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  arg             3    0[COMMON] unsigned um
  6151 ;;  exp             1    3[COMMON] unsigned char 
  6152 ;;  sign            1    4[COMMON] unsigned char 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  3    0[COMMON] float 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6164 ;;      Params:         5       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0
  6166 ;;      Temps:          3       0       0       0       0
  6167 ;;      Totals:         8       0       0       0       0
  6168 ;;Total ram usage:        8 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; This function calls:
  6171 ;;		Nothing
  6172 ;; This function is called by:
  6173 ;;		___awtoft
  6174 ;;		___ftadd
  6175 ;;		___ftdiv
  6176 ;;		___ftmul
  6177 ;;		___lwtoft
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           
  6182                           ;psect for function ___ftpack
  6183  1475                     ___ftpack:	
  6184                           
  6185                           ;incstack = 0
  6186                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6187  1475  0873               	movf	___ftpack@exp,w
  6188  1476  1903               	btfsc	3,2
  6189  1477  2C7D               	goto	i1l2135
  6190  1478  0872               	movf	___ftpack@arg+2,w
  6191  1479  0471               	iorwf	___ftpack@arg+1,w
  6192  147A  0470               	iorwf	___ftpack@arg,w
  6193  147B  1D03               	skipz
  6194  147C  2C90               	goto	i1l2141
  6195  147D                     i1l2135:	
  6196  147D  3000               	movlw	0
  6197  147E  00F0               	movwf	?___ftpack
  6198  147F  3000               	movlw	0
  6199  1480  00F1               	movwf	?___ftpack+1
  6200  1481  3000               	movlw	0
  6201  1482  00F2               	movwf	?___ftpack+2
  6202  1483  0008               	return
  6203  1484                     i1l2139:	
  6204  1484  3001               	movlw	1
  6205  1485  00F5               	movwf	??___ftpack
  6206  1486  0875               	movf	??___ftpack,w
  6207  1487  07F3               	addwf	___ftpack@exp,f
  6208  1488  3001               	movlw	1
  6209  1489                     u212_25:	
  6210  1489  1003               	clrc
  6211  148A  0CF2               	rrf	___ftpack@arg+2,f
  6212  148B  0CF1               	rrf	___ftpack@arg+1,f
  6213  148C  0CF0               	rrf	___ftpack@arg,f
  6214  148D  3EFF               	addlw	-1
  6215  148E  1D03               	skipz
  6216  148F  2C89               	goto	u212_25
  6217  1490                     i1l2141:	
  6218  1490  30FE               	movlw	254
  6219  1491  0572               	andwf	___ftpack@arg+2,w
  6220  1492  1903               	btfsc	3,2
  6221  1493  2CAB               	goto	i1l715
  6222  1494  2C84               	goto	i1l2139
  6223  1495                     i1l2143:	
  6224  1495  3001               	movlw	1
  6225  1496  00F5               	movwf	??___ftpack
  6226  1497  0875               	movf	??___ftpack,w
  6227  1498  07F3               	addwf	___ftpack@exp,f
  6228  1499  3001               	movlw	1
  6229  149A  07F0               	addwf	___ftpack@arg,f
  6230  149B  3000               	movlw	0
  6231  149C  1803               	skipnc
  6232  149D  3001               	movlw	1
  6233  149E  07F1               	addwf	___ftpack@arg+1,f
  6234  149F  3000               	movlw	0
  6235  14A0  1803               	skipnc
  6236  14A1  3001               	movlw	1
  6237  14A2  07F2               	addwf	___ftpack@arg+2,f
  6238  14A3  3001               	movlw	1
  6239  14A4                     u214_25:	
  6240  14A4  1003               	clrc
  6241  14A5  0CF2               	rrf	___ftpack@arg+2,f
  6242  14A6  0CF1               	rrf	___ftpack@arg+1,f
  6243  14A7  0CF0               	rrf	___ftpack@arg,f
  6244  14A8  3EFF               	addlw	-1
  6245  14A9  1D03               	skipz
  6246  14AA  2CA4               	goto	u214_25
  6247  14AB                     i1l715:	
  6248  14AB  30FF               	movlw	255
  6249  14AC  0572               	andwf	___ftpack@arg+2,w
  6250  14AD  1903               	btfsc	3,2
  6251  14AE  2CBA               	goto	i1l2151
  6252  14AF  2C95               	goto	i1l2143
  6253  14B0                     i1l2149:	
  6254  14B0  3001               	movlw	1
  6255  14B1  02F3               	subwf	___ftpack@exp,f
  6256  14B2  3001               	movlw	1
  6257  14B3                     u216_25:	
  6258  14B3  1003               	clrc
  6259  14B4  0DF0               	rlf	___ftpack@arg,f
  6260  14B5  0DF1               	rlf	___ftpack@arg+1,f
  6261  14B6  0DF2               	rlf	___ftpack@arg+2,f
  6262  14B7  3EFF               	addlw	-1
  6263  14B8  1D03               	skipz
  6264  14B9  2CB3               	goto	u216_25
  6265  14BA                     i1l2151:	
  6266  14BA  1FF1               	btfss	___ftpack@arg+1,7
  6267  14BB  2CB0               	goto	i1l2149
  6268  14BC  1873               	btfsc	___ftpack@exp,0
  6269  14BD  2CC4               	goto	i1l721
  6270  14BE  30FF               	movlw	255
  6271  14BF  05F0               	andwf	___ftpack@arg,f
  6272  14C0  307F               	movlw	127
  6273  14C1  05F1               	andwf	___ftpack@arg+1,f
  6274  14C2  30FF               	movlw	255
  6275  14C3  05F2               	andwf	___ftpack@arg+2,f
  6276  14C4                     i1l721:	
  6277  14C4  1003               	clrc
  6278  14C5  0CF3               	rrf	___ftpack@exp,f
  6279  14C6  0873               	movf	___ftpack@exp,w
  6280  14C7  00F5               	movwf	??___ftpack
  6281  14C8  01F6               	clrf	??___ftpack+1
  6282  14C9  01F7               	clrf	??___ftpack+2
  6283  14CA  3010               	movlw	16
  6284  14CB                     u219_25:	
  6285  14CB  1003               	clrc
  6286  14CC  0DF5               	rlf	??___ftpack,f
  6287  14CD  0DF6               	rlf	??___ftpack+1,f
  6288  14CE  0DF7               	rlf	??___ftpack+2,f
  6289  14CF  3EFF               	addlw	-1
  6290  14D0  1D03               	skipz
  6291  14D1  2CCB               	goto	u219_25
  6292  14D2  0875               	movf	??___ftpack,w
  6293  14D3  04F0               	iorwf	___ftpack@arg,f
  6294  14D4  0876               	movf	??___ftpack+1,w
  6295  14D5  04F1               	iorwf	___ftpack@arg+1,f
  6296  14D6  0877               	movf	??___ftpack+2,w
  6297  14D7  04F2               	iorwf	___ftpack@arg+2,f
  6298  14D8  0874               	movf	___ftpack@sign,w
  6299  14D9  1903               	btfsc	3,2
  6300  14DA  0008               	return
  6301  14DB  17F2               	bsf	___ftpack@arg+2,7
  6302  14DC  0008               	return
  6303  14DD                     __end_of___ftpack:	
  6304                           
  6305                           	psect	text36
  6306  113A                     __ptext36:	
  6307 ;; *************** function _USART_ReceiveChar *****************
  6308 ;; Defined at:
  6309 ;;		line 63 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\usart.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  byte            1    4[COMMON] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      unsigned char 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6323 ;;      Params:         0       0       0       0       0
  6324 ;;      Locals:         1       0       0       0       0
  6325 ;;      Temps:          1       0       0       0       0
  6326 ;;      Totals:         2       0       0       0       0
  6327 ;;Total ram usage:        2 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    2
  6330 ;; This function calls:
  6331 ;;		_USART_WriteString
  6332 ;; This function is called by:
  6333 ;;		_ISR
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           
  6338                           ;psect for function _USART_ReceiveChar
  6339  113A                     _USART_ReceiveChar:	
  6340                           
  6341                           ;usart.c: 65: unsigned char byte;
  6342                           ;usart.c: 67: if (!OERR)
  6343                           
  6344                           ;incstack = 0
  6345                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6346  113A  1283               	bcf	3,5	;RP0=0, select bank0
  6347  113B  1303               	bcf	3,6	;RP1=0, select bank0
  6348  113C  1898               	btfsc	24,1	;volatile
  6349  113D  2943               	goto	i1l2501
  6350                           
  6351                           ;usart.c: 68: {
  6352                           ;usart.c: 69: byte = RCREG;
  6353  113E  081A               	movf	26,w	;volatile
  6354  113F  00F3               	movwf	??_USART_ReceiveChar
  6355  1140  0873               	movf	??_USART_ReceiveChar,w
  6356  1141  00F4               	movwf	USART_ReceiveChar@byte
  6357  1142  294F               	goto	i1l2509
  6358  1143                     i1l2501:	
  6359                           ;usart.c: 71: }
  6360                           
  6361                           ;usart.c: 70: PIR1bits.RCIF = 0;
  6362                           
  6363                           
  6364                           ;usart.c: 72: else
  6365                           ;usart.c: 73: {
  6366                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  6367  1143  3001               	movlw	(STR_1-__stringbase)& (0+255)
  6368  1144  160A  118A  2185   	fcall	_USART_WriteString
  6369                           
  6370                           ;usart.c: 76: RCSTAbits.CREN = 0;
  6371  1147  1283               	bcf	3,5	;RP0=0, select bank0
  6372  1148  1303               	bcf	3,6	;RP1=0, select bank0
  6373  1149  1218               	bcf	24,4	;volatile
  6374                           
  6375                           ;usart.c: 77: byte = RCREG;
  6376  114A  081A               	movf	26,w	;volatile
  6377  114B  00F3               	movwf	??_USART_ReceiveChar
  6378  114C  0873               	movf	??_USART_ReceiveChar,w
  6379  114D  00F4               	movwf	USART_ReceiveChar@byte
  6380                           
  6381                           ;usart.c: 78: RCSTAbits.CREN = 1;
  6382  114E  1618               	bsf	24,4	;volatile
  6383  114F                     i1l2509:	
  6384                           
  6385                           ;usart.c: 79: PIR1bits.RCIF = 0;
  6386  114F  128C               	bcf	12,5	;volatile
  6387                           
  6388                           ;usart.c: 80: }
  6389                           ;usart.c: 82: return(byte);
  6390  1150  0874               	movf	USART_ReceiveChar@byte,w
  6391  1151  0008               	return
  6392  1152                     __end_of_USART_ReceiveChar:	
  6393                           
  6394                           	psect	text37
  6395  1185                     __ptext37:	
  6396 ;; *************** function _USART_WriteString *****************
  6397 ;; Defined at:
  6398 ;;		line 52 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\usart.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  str             1    wreg     PTR const unsigned char 
  6401 ;;		 -> STR_1(40), 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  str             1    2[COMMON] PTR const unsigned char 
  6404 ;;		 -> STR_1(40), 
  6405 ;; Return value:  Size  Location     Type
  6406 ;;		None               void
  6407 ;; Registers used:
  6408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6414 ;;      Params:         0       0       0       0       0
  6415 ;;      Locals:         1       0       0       0       0
  6416 ;;      Temps:          1       0       0       0       0
  6417 ;;      Totals:         2       0       0       0       0
  6418 ;;Total ram usage:        2 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    1
  6421 ;; This function calls:
  6422 ;;		_USART_WriteChar
  6423 ;; This function is called by:
  6424 ;;		_USART_ReceiveChar
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function _USART_WriteString
  6430  1185                     _USART_WriteString:	
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6434                           ;USART_WriteString@str stored from wreg
  6435  1185  00F2               	movwf	USART_WriteString@str
  6436  1186                     i1l2167:	
  6437                           ;usart.c: 54: while(*str != '\0')
  6438                           
  6439  1186  0872               	movf	USART_WriteString@str,w
  6440  1187  0084               	movwf	4
  6441  1188  160A  118A  2000  160A  118A  	fcall	stringdir
  6442  118D  3800               	iorlw	0
  6443  118E  1903               	btfsc	3,2
  6444  118F  0008               	return
  6445                           
  6446                           ;usart.c: 55: {
  6447                           ;usart.c: 56: USART_WriteChar(*str);
  6448  1190  0872               	movf	USART_WriteString@str,w
  6449  1191  0084               	movwf	4
  6450  1192  160A  118A  2000  160A  118A  	fcall	stringdir
  6451  1197  160A  118A  20B1  160A  118A  	fcall	_USART_WriteChar
  6452                           
  6453                           ;usart.c: 57: str++;
  6454  119C  3001               	movlw	1
  6455  119D  00F1               	movwf	??_USART_WriteString
  6456  119E  0871               	movf	??_USART_WriteString,w
  6457  119F  07F2               	addwf	USART_WriteString@str,f
  6458  11A0  2986               	goto	i1l2167
  6459  11A1                     __end_of_USART_WriteString:	
  6460                           
  6461                           	psect	text38
  6462  10B1                     __ptext38:	
  6463 ;; *************** function _USART_WriteChar *****************
  6464 ;; Defined at:
  6465 ;;		line 44 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\usart.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  byte            1    wreg     unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  byte            1    0[COMMON] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;		None               void
  6472 ;; Registers used:
  6473 ;;		wreg
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6479 ;;      Params:         0       0       0       0       0
  6480 ;;      Locals:         1       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0
  6482 ;;      Totals:         1       0       0       0       0
  6483 ;;Total ram usage:        1 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_send
  6489 ;;		_USART_WriteString
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _USART_WriteChar
  6495  10B1                     _USART_WriteChar:	
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in _USART_WriteChar: [wreg]
  6499                           ;USART_WriteChar@byte stored from wreg
  6500  10B1  00F0               	movwf	USART_WriteChar@byte
  6501  10B2                     i1l230:	
  6502                           ;usart.c: 46: while(!PIR1bits.TXIF);
  6503                           
  6504  10B2  1283               	bcf	3,5	;RP0=0, select bank0
  6505  10B3  1303               	bcf	3,6	;RP1=0, select bank0
  6506  10B4  1E0C               	btfss	12,4	;volatile
  6507  10B5  28B2               	goto	i1l230
  6508                           
  6509                           ;usart.c: 47: TXREG = byte;
  6510  10B6  0870               	movf	USART_WriteChar@byte,w
  6511  10B7  0099               	movwf	25	;volatile
  6512  10B8  0008               	return
  6513  10B9                     __end_of_USART_WriteChar:	
  6514                           
  6515                           	psect	text39
  6516  10FE                     __ptext39:	
  6517 ;; *************** function _LCD_WriteData *****************
  6518 ;; Defined at:
  6519 ;;		line 47 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\lcd.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  Byte            1    wreg     unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  Byte            1    1[COMMON] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0
  6535 ;;      Temps:          1       0       0       0       0
  6536 ;;      Totals:         2       0       0       0       0
  6537 ;;Total ram usage:        2 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_ISR
  6543 ;;		_LCD_WriteString
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function _LCD_WriteData
  6549  10FE                     _LCD_WriteData:	
  6550                           
  6551                           ;incstack = 0
  6552                           ; Regs used in _LCD_WriteData: [wreg]
  6553                           ;LCD_WriteData@Byte stored from wreg
  6554  10FE  00F1               	movwf	LCD_WriteData@Byte
  6555                           
  6556                           ;lcd.c: 49: PORTEbits.RE0 = 1;
  6557  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  6558  1100  1303               	bcf	3,6	;RP1=0, select bank0
  6559  1101  1409               	bsf	9,0	;volatile
  6560                           
  6561                           ;lcd.c: 51: PORTD = Byte;
  6562  1102  0871               	movf	LCD_WriteData@Byte,w
  6563  1103  0088               	movwf	8	;volatile
  6564                           
  6565                           ;lcd.c: 53: PORTEbits.RE1 = 1;
  6566  1104  1489               	bsf	9,1	;volatile
  6567                           
  6568                           ;lcd.c: 55: _delay((unsigned long)((40)*(18432000/4000000.0)));
  6569  1105  303D               	movlw	61
  6570  1106  00F0               	movwf	??_LCD_WriteData
  6571  1107                     u593_27:	
  6572  1107  0BF0               	decfsz	??_LCD_WriteData,f
  6573  1108  2907               	goto	u593_27
  6574                           
  6575                           ;lcd.c: 57: PORTEbits.RE1 = 0;
  6576  1109  1283               	bcf	3,5	;RP0=0, select bank0
  6577  110A  1303               	bcf	3,6	;RP1=0, select bank0
  6578  110B  1089               	bcf	9,1	;volatile
  6579  110C  0008               	return
  6580  110D                     __end_of_LCD_WriteData:	
  6581                           
  6582                           	psect	text40
  6583  110D                     __ptext40:	
  6584 ;; *************** function _LCD_Cursor *****************
  6585 ;; Defined at:
  6586 ;;		line 10 in file "C:\Users\332414\Desktop\FuzzySI\firmware - Copia\lcd.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  Row             1    wreg     unsigned char 
  6589 ;;  Col             1    0[COMMON] unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  Row             1    2[COMMON] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;		None               void
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6601 ;;      Params:         1       0       0       0       0
  6602 ;;      Locals:         1       0       0       0       0
  6603 ;;      Temps:          1       0       0       0       0
  6604 ;;      Totals:         3       0       0       0       0
  6605 ;;Total ram usage:        3 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_ISR
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           
  6615                           ;psect for function _LCD_Cursor
  6616  110D                     _LCD_Cursor:	
  6617                           
  6618                           ;incstack = 0
  6619                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0]
  6620                           ;LCD_Cursor@Row stored from wreg
  6621  110D  00F2               	movwf	LCD_Cursor@Row
  6622                           
  6623                           ;lcd.c: 12: PORTEbits.RE0 = 0;
  6624  110E  1283               	bcf	3,5	;RP0=0, select bank0
  6625  110F  1303               	bcf	3,6	;RP1=0, select bank0
  6626  1110  1009               	bcf	9,0	;volatile
  6627                           
  6628                           ;lcd.c: 14: if (Row == 0)
  6629  1111  08F2               	movf	LCD_Cursor@Row,f
  6630  1112  1D03               	skipz
  6631  1113  2917               	goto	i1l2521
  6632                           
  6633                           ;lcd.c: 15: {
  6634                           ;lcd.c: 16: PORTD = 0x80 + Col;
  6635  1114  0870               	movf	LCD_Cursor@Col,w
  6636  1115  3E80               	addlw	128
  6637  1116  2919               	goto	L9
  6638  1117                     i1l2521:	
  6639                           ;lcd.c: 17: }
  6640                           
  6641                           
  6642                           ;lcd.c: 18: else
  6643                           ;lcd.c: 19: {
  6644                           ;lcd.c: 20: PORTD = 0xC0 + Col;
  6645  1117  0870               	movf	LCD_Cursor@Col,w
  6646  1118  3EC0               	addlw	192
  6647  1119                     L9:	
  6648  1119  0088               	movwf	8	;volatile
  6649                           
  6650                           ;lcd.c: 21: }
  6651                           ;lcd.c: 24: PORTEbits.RE1 = 1;
  6652  111A  1489               	bsf	9,1	;volatile
  6653                           
  6654                           ;lcd.c: 26: _delay((unsigned long)((40)*(18432000/4000000.0)));
  6655  111B  303D               	movlw	61
  6656  111C  00F1               	movwf	??_LCD_Cursor
  6657  111D                     u594_27:	
  6658  111D  0BF1               	decfsz	??_LCD_Cursor,f
  6659  111E  291D               	goto	u594_27
  6660                           
  6661                           ;lcd.c: 28: PORTEbits.RE1 = 0;
  6662  111F  1283               	bcf	3,5	;RP0=0, select bank0
  6663  1120  1303               	bcf	3,6	;RP1=0, select bank0
  6664  1121  1089               	bcf	9,1	;volatile
  6665  1122  0008               	return
  6666  1123                     __end_of_LCD_Cursor:	
  6667  007E                     btemp	set	126	;btemp
  6668  007E                     wtemp	set	126
  6669  007E                     wtemp0	set	126
  6670  0080                     wtemp1	set	128
  6671  0082                     wtemp2	set	130
  6672  0084                     wtemp3	set	132
  6673  0086                     wtemp4	set	134
  6674  0088                     wtemp5	set	136
  6675  007F                     wtemp6	set	127
  6676  007E                     ttemp	set	126
  6677  007E                     ttemp0	set	126
  6678  0081                     ttemp1	set	129
  6679  0084                     ttemp2	set	132
  6680  0087                     ttemp3	set	135
  6681  007F                     ttemp4	set	127
  6682  007E                     ltemp	set	126
  6683  007E                     ltemp0	set	126
  6684  0082                     ltemp1	set	130
  6685  0086                     ltemp2	set	134
  6686  0080                     ltemp3	set	128
  6687                           
  6688                           	psect	text13_split_1
  6689  0800                     L10:	
  6690  0800  1303               	bcf	3,6	;RP1=0, select bank0
  6691  0801  0841               	movf	?___wmul+1,w
  6692  0802  1683               	bsf	3,5	;RP0=1, select bank1
  6693  0803  1303               	bcf	3,6	;RP1=0, select bank1
  6694  0804  01E6               	clrf	(_setpoint+1)^(0+128)
  6695  0805  07E6               	addwf	(_setpoint+1)^(0+128),f
  6696  0806  1283               	bcf	3,5	;RP0=0, select bank0
  6697  0807  1303               	bcf	3,6	;RP1=0, select bank0
  6698  0808  0840               	movf	?___wmul,w
  6699  0809  1683               	bsf	3,5	;RP0=1, select bank1
  6700  080A  1303               	bcf	3,6	;RP1=0, select bank1
  6701  080B  01E5               	clrf	_setpoint^(0+128)
  6702  080C  07E5               	addwf	_setpoint^(0+128),f
  6703  080D                     i1l3769:	
  6704                           
  6705                           ;main.c: 196: }
  6706                           ;main.c: 197: if(receivedBuffer[3] == 'I'){
  6707  080D  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6708  080E  3A49               	xorlw	73
  6709  080F  1D03               	skipz
  6710  0810  2816               	goto	i1l3773
  6711                           
  6712                           ;main.c: 198: inicia();
  6713  0811  160A  118A  20C9  120A  158A  	fcall	i1_inicia
  6714  0816                     i1l3773:	
  6715                           
  6716                           ;main.c: 199: }
  6717                           ;main.c: 200: if(receivedBuffer[3] == 'S'){
  6718  0816  1683               	bsf	3,5	;RP0=1, select bank1
  6719  0817  1303               	bcf	3,6	;RP1=0, select bank1
  6720  0818  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6721  0819  3A53               	xorlw	83
  6722  081A  1D03               	skipz
  6723  081B  2821               	goto	i1l3777
  6724                           
  6725                           ;main.c: 201: set();
  6726  081C  160A  118A  233F  120A  158A  	fcall	i1_set
  6727  0821                     i1l3777:	
  6728                           
  6729                           ;main.c: 202: }
  6730                           ;main.c: 203: if(receivedBuffer[3] == 'R'){
  6731  0821  1683               	bsf	3,5	;RP0=1, select bank1
  6732  0822  1303               	bcf	3,6	;RP1=0, select bank1
  6733  0823  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6734  0824  3A52               	xorlw	82
  6735  0825  1D03               	skipz
  6736  0826  282C               	goto	i1l3781
  6737                           
  6738                           ;main.c: 204: res();
  6739  0827  160A  118A  2289  120A  158A  	fcall	i1_res
  6740  082C                     i1l3781:	
  6741                           
  6742                           ;main.c: 205: }
  6743                           ;main.c: 206: if(receivedBuffer[3] == 'F'){
  6744  082C  1683               	bsf	3,5	;RP0=1, select bank1
  6745  082D  1303               	bcf	3,6	;RP1=0, select bank1
  6746  082E  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6747  082F  3A46               	xorlw	70
  6748  0830  1D03               	skipz
  6749  0831  283B               	goto	i1l3785
  6750                           
  6751                           ;main.c: 207: pilotoAtivo = pilotoAtivo & 0b11111101;
  6752  0832  0864               	movf	_pilotoAtivo^(0+128),w
  6753  0833  39FD               	andlw	253
  6754  0834  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0835  1303               	bcf	3,6	;RP1=0, select bank0
  6756  0836  00E2               	movwf	??_ISR
  6757  0837  0862               	movf	??_ISR,w
  6758  0838  1683               	bsf	3,5	;RP0=1, select bank1
  6759  0839  1303               	bcf	3,6	;RP1=0, select bank1
  6760  083A  00E4               	movwf	_pilotoAtivo^(0+128)
  6761  083B                     i1l3785:	
  6762                           
  6763                           ;main.c: 208: }
  6764                           ;main.c: 210: }
  6765                           ;main.c: 211: }
  6766                           ;main.c: 212: }
  6767                           ;main.c: 213: }
  6768                           ;main.c: 214: PIR1bits.RCIF = 0;
  6769  083B  1283               	bcf	3,5	;RP0=0, select bank0
  6770  083C  1303               	bcf	3,6	;RP1=0, select bank0
  6771  083D  128C               	bcf	12,5	;volatile
  6772  083E                     i1l3787:	
  6773                           
  6774                           ;main.c: 215: }
  6775                           ;main.c: 229: if (INTCONbits.T0IF) {
  6776  083E  120A  118A  1D0B   	btfss	11,2	;volatile
  6777  0841  2FDC               	goto	i1l3965
  6778                           
  6779                           ;main.c: 231: TIMER0_Set(238);
  6780  0842  30EE               	movlw	238
  6781  0843  160A  118A  20AB  120A  158A  	fcall	i1_TIMER0_Set
  6782                           
  6783                           ;main.c: 234: if (contagens_tm0 < 499) {
  6784  0848  3001               	movlw	1
  6785  0849  1683               	bsf	3,5	;RP0=1, select bank1
  6786  084A  1303               	bcf	3,6	;RP1=0, select bank1
  6787  084B  0257               	subwf	(_contagens_tm0+1)^(0+128),w
  6788  084C  30F3               	movlw	243
  6789  084D  1903               	skipnz
  6790  084E  0256               	subwf	_contagens_tm0^(0+128),w
  6791  084F  1803               	skipnc
  6792  0850  285D               	goto	i1l3797
  6793                           
  6794                           ;main.c: 236: contagens_tm0++;
  6795  0851  3001               	movlw	1
  6796  0852  07D6               	addwf	_contagens_tm0^(0+128),f
  6797  0853  1803               	skipnc
  6798  0854  0AD7               	incf	(_contagens_tm0+1)^(0+128),f
  6799  0855  3000               	movlw	0
  6800  0856  07D7               	addwf	(_contagens_tm0+1)^(0+128),f
  6801                           
  6802                           ;main.c: 239: PORTBbits.RB6 = 1;
  6803  0857  1283               	bcf	3,5	;RP0=0, select bank0
  6804  0858  1303               	bcf	3,6	;RP1=0, select bank0
  6805  0859  1706               	bsf	6,6	;volatile
  6806                           
  6807                           ;main.c: 240: } else {
  6808  085A  120A  118A  2FDB   	goto	i1l3963
  6809  085D                     i1l3797:	
  6810                           
  6811                           ;main.c: 242: contagens_tm0 = 0;
  6812  085D  1683               	bsf	3,5	;RP0=1, select bank1
  6813  085E  1303               	bcf	3,6	;RP1=0, select bank1
  6814  085F  01D6               	clrf	_contagens_tm0^(0+128)
  6815  0860  01D7               	clrf	(_contagens_tm0+1)^(0+128)
  6816                           
  6817                           ;main.c: 245: pulsos = (TMR1H << 8) + TMR1L;
  6818  0861  1283               	bcf	3,5	;RP0=0, select bank0
  6819  0862  1303               	bcf	3,6	;RP1=0, select bank0
  6820  0863  080F               	movf	15,w	;volatile
  6821  0864  1683               	bsf	3,5	;RP0=1, select bank1
  6822  0865  1303               	bcf	3,6	;RP1=0, select bank1
  6823  0866  01DD               	clrf	(_pulsos+1)^(0+128)
  6824  0867  07DD               	addwf	(_pulsos+1)^(0+128),f
  6825  0868  1283               	bcf	3,5	;RP0=0, select bank0
  6826  0869  1303               	bcf	3,6	;RP1=0, select bank0
  6827  086A  080E               	movf	14,w	;volatile
  6828  086B  1683               	bsf	3,5	;RP0=1, select bank1
  6829  086C  1303               	bcf	3,6	;RP1=0, select bank1
  6830  086D  01DC               	clrf	_pulsos^(0+128)
  6831  086E  07DC               	addwf	_pulsos^(0+128),f
  6832                           
  6833                           ;main.c: 246: rpm = ((pulsos / 7) * 120);
  6834  086F  3007               	movlw	7
  6835  0870  00F0               	movwf	___lwdiv@divisor
  6836  0871  3000               	movlw	0
  6837  0872  00F1               	movwf	___lwdiv@divisor+1
  6838  0873  085D               	movf	(_pulsos+1)^(0+128),w
  6839  0874  01F3               	clrf	___lwdiv@dividend+1
  6840  0875  07F3               	addwf	___lwdiv@dividend+1,f
  6841  0876  085C               	movf	_pulsos^(0+128),w
  6842  0877  01F2               	clrf	___lwdiv@dividend
  6843  0878  07F2               	addwf	___lwdiv@dividend,f
  6844  0879  160A  118A  22C3  120A  158A  	fcall	___lwdiv
  6845  087E  0871               	movf	?___lwdiv+1,w
  6846  087F  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0880  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0881  01C1               	clrf	___wmul@multiplier+1
  6849  0882  07C1               	addwf	___wmul@multiplier+1,f
  6850  0883  0870               	movf	?___lwdiv,w
  6851  0884  01C0               	clrf	___wmul@multiplier
  6852  0885  07C0               	addwf	___wmul@multiplier,f
  6853  0886  3078               	movlw	120
  6854  0887  00C2               	movwf	___wmul@multiplicand
  6855  0888  3000               	movlw	0
  6856  0889  00C3               	movwf	___wmul@multiplicand+1
  6857  088A  160A  118A  2264   	fcall	___wmul
  6858  088D  1283               	bcf	3,5	;RP0=0, select bank0
  6859  088E  120A  158A  29D7   	ljmp	L12
  6860                           
  6861                           	psect	text13_split_2
  6862  09D7                     L12:	
  6863  09D7  1303               	bcf	3,6	;RP1=0, select bank0
  6864  09D8  0841               	movf	?___wmul+1,w
  6865  09D9  1683               	bsf	3,5	;RP0=1, select bank1
  6866  09DA  1303               	bcf	3,6	;RP1=0, select bank1
  6867  09DB  01E3               	clrf	(_rpm+1)^(0+128)
  6868  09DC  07E3               	addwf	(_rpm+1)^(0+128),f
  6869  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  6870  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  6871  09DF  0840               	movf	?___wmul,w
  6872  09E0  1683               	bsf	3,5	;RP0=1, select bank1
  6873  09E1  1303               	bcf	3,6	;RP1=0, select bank1
  6874  09E2  01E2               	clrf	_rpm^(0+128)
  6875  09E3  07E2               	addwf	_rpm^(0+128),f
  6876                           
  6877                           ;main.c: 248: TMR1L = 0x00;
  6878  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  6879  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  6880  09E6  018E               	clrf	14	;volatile
  6881                           
  6882                           ;main.c: 249: TMR1H = 0x00;
  6883  09E7  018F               	clrf	15	;volatile
  6884                           
  6885                           ;main.c: 251: int rpmAux = rpm;
  6886  09E8  1683               	bsf	3,5	;RP0=1, select bank1
  6887  09E9  1303               	bcf	3,6	;RP1=0, select bank1
  6888  09EA  0863               	movf	(_rpm+1)^(0+128),w
  6889  09EB  01A1               	clrf	(ISR@rpmAux+1)^(0+128)
  6890  09EC  07A1               	addwf	(ISR@rpmAux+1)^(0+128),f
  6891  09ED  0862               	movf	_rpm^(0+128),w
  6892  09EE  01A0               	clrf	ISR@rpmAux^(0+128)
  6893  09EF  07A0               	addwf	ISR@rpmAux^(0+128),f
  6894                           
  6895                           ;main.c: 255: erro_anterior = erro_atual;
  6896  09F0  085B               	movf	(_erro_atual+1)^(0+128),w
  6897  09F1  01D9               	clrf	(_erro_anterior+1)^(0+128)
  6898  09F2  07D9               	addwf	(_erro_anterior+1)^(0+128),f
  6899  09F3  085A               	movf	_erro_atual^(0+128),w
  6900  09F4  01D8               	clrf	_erro_anterior^(0+128)
  6901  09F5  07D8               	addwf	_erro_anterior^(0+128),f
  6902                           
  6903                           ;main.c: 256: erro_atual = minimo(abs(setpoint - rpm), 2000);
  6904  09F6  3000               	movlw	0
  6905  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  6906  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  6907  09F9  00A9               	movwf	minimo@b
  6908  09FA  30FA               	movlw	250
  6909  09FB  00AA               	movwf	minimo@b+1
  6910  09FC  3044               	movlw	68
  6911  09FD  00AB               	movwf	minimo@b+2
  6912  09FE  1683               	bsf	3,5	;RP0=1, select bank1
  6913  09FF  1303               	bcf	3,6	;RP1=0, select bank1
  6914  0A00  0962               	comf	_rpm^(0+128),w
  6915  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0A03  00E2               	movwf	??_ISR
  6918  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  6919  0A05  1303               	bcf	3,6	;RP1=0, select bank1
  6920  0A06  0963               	comf	(_rpm+1)^(0+128),w
  6921  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  6922  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  6923  0A09  00E3               	movwf	??_ISR+1
  6924  0A0A  0AE2               	incf	??_ISR,f
  6925  0A0B  1903               	skipnz
  6926  0A0C  0AE3               	incf	??_ISR+1,f
  6927  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  6928  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  6929  0A0F  0865               	movf	_setpoint^(0+128),w
  6930  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  6932  0A12  0762               	addwf	??_ISR,w
  6933  0A13  00F0               	movwf	abs@a
  6934  0A14  1683               	bsf	3,5	;RP0=1, select bank1
  6935  0A15  1303               	bcf	3,6	;RP1=0, select bank1
  6936  0A16  0866               	movf	(_setpoint+1)^(0+128),w
  6937  0A17  1803               	skipnc
  6938  0A18  0A66               	incf	(_setpoint+1)^(0+128),w
  6939  0A19  1283               	bcf	3,5	;RP0=0, select bank0
  6940  0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  6941  0A1B  0763               	addwf	??_ISR+1,w
  6942  0A1C  00F1               	movwf	abs@a+1
  6943  0A1D  160A  118A  20F0  120A  158A  	fcall	_abs
  6944  0A22  0871               	movf	?_abs+1,w
  6945  0A23  01F9               	clrf	___awtoft@c+1
  6946  0A24  07F9               	addwf	___awtoft@c+1,f
  6947  0A25  0870               	movf	?_abs,w
  6948  0A26  01F8               	clrf	___awtoft@c
  6949  0A27  07F8               	addwf	___awtoft@c,f
  6950  0A28  160A  118A  21DD  120A  158A  	fcall	___awtoft
  6951  0A2D  0878               	movf	?___awtoft,w
  6952  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  6953  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  6954  0A30  00A6               	movwf	minimo@a
  6955  0A31  0879               	movf	?___awtoft+1,w
  6956  0A32  00A7               	movwf	minimo@a+1
  6957  0A33  087A               	movf	?___awtoft+2,w
  6958  0A34  00A8               	movwf	minimo@a+2
  6959  0A35  160A  118A  21BF  120A  158A  	fcall	_minimo
  6960  0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  6961  0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  6962  0A3C  0826               	movf	?_minimo,w
  6963  0A3D  00B2               	movwf	___fttol@f1
  6964  0A3E  0827               	movf	?_minimo+1,w
  6965  0A3F  00B3               	movwf	___fttol@f1+1
  6966  0A40  0828               	movf	?_minimo+2,w
  6967  0A41  00B4               	movwf	___fttol@f1+2
  6968  0A42  160A  118A  26E3  120A  158A  	fcall	___fttol
  6969  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  6970  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  6971  0A49  0833               	movf	?___fttol+1,w
  6972  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  6973  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  6974  0A4C  01DB               	clrf	(_erro_atual+1)^(0+128)
  6975  0A4D  07DB               	addwf	(_erro_atual+1)^(0+128),f
  6976  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  6977  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  6978  0A50  0832               	movf	?___fttol,w
  6979  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  6980  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  6981  0A53  01DA               	clrf	_erro_atual^(0+128)
  6982  0A54  07DA               	addwf	_erro_atual^(0+128),f
  6983                           
  6984                           ;main.c: 257: int delta = maximo(minimo(abs(erro_atual - erro_anterior), 1000), 1);
  6985  0A55  3000               	movlw	0
  6986  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  6987  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  6988  0A58  00AF               	movwf	maximo@b
  6989  0A59  3080               	movlw	128
  6990  0A5A  00B0               	movwf	maximo@b+1
  6991  0A5B  303F               	movlw	63
  6992  0A5C  00B1               	movwf	maximo@b+2
  6993  0A5D  3000               	movlw	0
  6994  0A5E  00A9               	movwf	minimo@b
  6995  0A5F  307A               	movlw	122
  6996  0A60  00AA               	movwf	minimo@b+1
  6997  0A61  3044               	movlw	68
  6998  0A62  00AB               	movwf	minimo@b+2
  6999  0A63  1683               	bsf	3,5	;RP0=1, select bank1
  7000  0A64  1303               	bcf	3,6	;RP1=0, select bank1
  7001  0A65  0958               	comf	_erro_anterior^(0+128),w
  7002  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  7003  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  7004  0A68  00E2               	movwf	??_ISR
  7005  0A69  1683               	bsf	3,5	;RP0=1, select bank1
  7006  0A6A  1303               	bcf	3,6	;RP1=0, select bank1
  7007  0A6B  0959               	comf	(_erro_anterior+1)^(0+128),w
  7008  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  7009  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  7010  0A6E  00E3               	movwf	??_ISR+1
  7011  0A6F  0AE2               	incf	??_ISR,f
  7012  0A70  1903               	skipnz
  7013  0A71  0AE3               	incf	??_ISR+1,f
  7014  0A72  1683               	bsf	3,5	;RP0=1, select bank1
  7015  0A73  1303               	bcf	3,6	;RP1=0, select bank1
  7016  0A74  085A               	movf	_erro_atual^(0+128),w
  7017  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  7018  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  7019  0A77  0762               	addwf	??_ISR,w
  7020  0A78  00F0               	movwf	abs@a
  7021  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  7022  0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  7023  0A7B  085B               	movf	(_erro_atual+1)^(0+128),w
  7024  0A7C  1803               	skipnc
  7025  0A7D  0A5B               	incf	(_erro_atual+1)^(0+128),w
  7026  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  7027  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  7028  0A80  0763               	addwf	??_ISR+1,w
  7029  0A81  00F1               	movwf	abs@a+1
  7030  0A82  160A  118A  20F0   	fcall	_abs
  7031  0A85  0871               	movf	?_abs+1,w
  7032  0A86  160A  118A  2E57   	ljmp	L13
  7033                           
  7034                           	psect	text13_split_3
  7035  1657                     L13:	
  7036  1657  01F9               	clrf	___awtoft@c+1
  7037  1658  07F9               	addwf	___awtoft@c+1,f
  7038  1659  0870               	movf	?_abs,w
  7039  165A  01F8               	clrf	___awtoft@c
  7040  165B  07F8               	addwf	___awtoft@c,f
  7041  165C  160A  118A  21DD  160A  118A  	fcall	___awtoft
  7042  1661  0878               	movf	?___awtoft,w
  7043  1662  1283               	bcf	3,5	;RP0=0, select bank0
  7044  1663  1303               	bcf	3,6	;RP1=0, select bank0
  7045  1664  00A6               	movwf	minimo@a
  7046  1665  0879               	movf	?___awtoft+1,w
  7047  1666  00A7               	movwf	minimo@a+1
  7048  1667  087A               	movf	?___awtoft+2,w
  7049  1668  00A8               	movwf	minimo@a+2
  7050  1669  160A  118A  21BF  160A  118A  	fcall	_minimo
  7051  166E  1283               	bcf	3,5	;RP0=0, select bank0
  7052  166F  1303               	bcf	3,6	;RP1=0, select bank0
  7053  1670  0826               	movf	?_minimo,w
  7054  1671  00AC               	movwf	maximo@a
  7055  1672  0827               	movf	?_minimo+1,w
  7056  1673  00AD               	movwf	maximo@a+1
  7057  1674  0828               	movf	?_minimo+2,w
  7058  1675  00AE               	movwf	maximo@a+2
  7059  1676  160A  118A  21A1  160A  118A  	fcall	_maximo
  7060  167B  1283               	bcf	3,5	;RP0=0, select bank0
  7061  167C  1303               	bcf	3,6	;RP1=0, select bank0
  7062  167D  082C               	movf	?_maximo,w
  7063  167E  00B2               	movwf	___fttol@f1
  7064  167F  082D               	movf	?_maximo+1,w
  7065  1680  00B3               	movwf	___fttol@f1+1
  7066  1681  082E               	movf	?_maximo+2,w
  7067  1682  00B4               	movwf	___fttol@f1+2
  7068  1683  160A  118A  26E3  160A  118A  	fcall	___fttol
  7069  1688  1283               	bcf	3,5	;RP0=0, select bank0
  7070  1689  1303               	bcf	3,6	;RP1=0, select bank0
  7071  168A  0833               	movf	?___fttol+1,w
  7072  168B  1683               	bsf	3,5	;RP0=1, select bank1
  7073  168C  1303               	bcf	3,6	;RP1=0, select bank1
  7074  168D  01B1               	clrf	(ISR@delta+1)^(0+128)
  7075  168E  07B1               	addwf	(ISR@delta+1)^(0+128),f
  7076  168F  1283               	bcf	3,5	;RP0=0, select bank0
  7077  1690  1303               	bcf	3,6	;RP1=0, select bank0
  7078  1691  0832               	movf	?___fttol,w
  7079  1692  1683               	bsf	3,5	;RP0=1, select bank1
  7080  1693  1303               	bcf	3,6	;RP1=0, select bank1
  7081  1694  01B0               	clrf	ISR@delta^(0+128)
  7082  1695  07B0               	addwf	ISR@delta^(0+128),f
  7083                           
  7084                           ;main.c: 258: float x = 0;
  7085  1696  3000               	movlw	0
  7086  1697  00C5               	movwf	ISR@x^(0+128)
  7087  1698  3000               	movlw	0
  7088  1699  00C6               	movwf	(ISR@x+1)^(0+128)
  7089  169A  3000               	movlw	0
  7090  169B  00C7               	movwf	(ISR@x+2)^(0+128)
  7091                           
  7092                           ;main.c: 259: float rule = 0;
  7093  169C  3000               	movlw	0
  7094  169D  00C0               	movwf	ISR@rule^(0+128)
  7095  169E  3000               	movlw	0
  7096  169F  00C1               	movwf	(ISR@rule+1)^(0+128)
  7097  16A0  3000               	movlw	0
  7098  16A1  00C2               	movwf	(ISR@rule+2)^(0+128)
  7099                           
  7100                           ;main.c: 262: if (erro_atual <= 100)
  7101  16A2  085B               	movf	(_erro_atual+1)^(0+128),w
  7102  16A3  3A80               	xorlw	128
  7103  16A4  00FF               	movwf	127
  7104  16A5  3080               	movlw	128
  7105  16A6  027F               	subwf	127,w
  7106  16A7  1D03               	skipz
  7107  16A8  2EAB               	goto	u548_25
  7108  16A9  3065               	movlw	101
  7109  16AA  025A               	subwf	_erro_atual^(0+128),w
  7110  16AB                     u548_25:	
  7111  16AB  120A  158A  1803   	skipnc
  7112  16AE  2AE7               	goto	i1l3841
  7113                           
  7114                           ;main.c: 263: {
  7115                           ;main.c: 266: rule = trapmf(erro_atual, -1, 0, 1, 100);
  7116  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  7117  16B0  1303               	bcf	3,6	;RP1=0, select bank1
  7118  16B1  085B               	movf	(_erro_atual+1)^(0+128),w
  7119  16B2  01F9               	clrf	___awtoft@c+1
  7120  16B3  07F9               	addwf	___awtoft@c+1,f
  7121  16B4  085A               	movf	_erro_atual^(0+128),w
  7122  16B5  01F8               	clrf	___awtoft@c
  7123  16B6  07F8               	addwf	___awtoft@c,f
  7124  16B7  160A  118A  21DD  160A  118A  	fcall	___awtoft
  7125  16BC  0878               	movf	?___awtoft,w
  7126  16BD  1283               	bcf	3,5	;RP0=0, select bank0
  7127  16BE  1303               	bcf	3,6	;RP1=0, select bank0
  7128  16BF  00C0               	movwf	trapmf@x
  7129  16C0  0879               	movf	?___awtoft+1,w
  7130  16C1  00C1               	movwf	trapmf@x+1
  7131  16C2  087A               	movf	?___awtoft+2,w
  7132  16C3  00C2               	movwf	trapmf@x+2
  7133  16C4  3000               	movlw	0
  7134  16C5  00C3               	movwf	trapmf@a
  7135  16C6  3080               	movlw	128
  7136  16C7  00C4               	movwf	trapmf@a+1
  7137  16C8  30BF               	movlw	191
  7138  16C9  00C5               	movwf	trapmf@a+2
  7139  16CA  3000               	movlw	0
  7140  16CB  00C6               	movwf	trapmf@b
  7141  16CC  3000               	movlw	0
  7142  16CD  00C7               	movwf	trapmf@b+1
  7143  16CE  3000               	movlw	0
  7144  16CF  00C8               	movwf	trapmf@b+2
  7145  16D0  3000               	movlw	0
  7146  16D1  00C9               	movwf	trapmf@c
  7147  16D2  3080               	movlw	128
  7148  16D3  00CA               	movwf	trapmf@c+1
  7149  16D4  303F               	movlw	63
  7150  16D5  00CB               	movwf	trapmf@c+2
  7151  16D6  3000               	movlw	0
  7152  16D7  00CC               	movwf	trapmf@d
  7153  16D8  30C8               	movlw	200
  7154  16D9  00CD               	movwf	trapmf@d+1
  7155  16DA  3042               	movlw	66
  7156  16DB  00CE               	movwf	trapmf@d+2
  7157  16DC  120A  158A  26AA   	fcall	_trapmf
  7158  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  7159  16E0  120A  158A  2891   	ljmp	L14
  7160                           
  7161                           	psect	text13_split_4
  7162  0891                     L14:	
  7163  0891  1303               	bcf	3,6	;RP1=0, select bank0
  7164  0892  0840               	movf	?_trapmf,w
  7165  0893  1683               	bsf	3,5	;RP0=1, select bank1
  7166  0894  1303               	bcf	3,6	;RP1=0, select bank1
  7167  0895  00C0               	movwf	ISR@rule^(0+128)
  7168  0896  1283               	bcf	3,5	;RP0=0, select bank0
  7169  0897  1303               	bcf	3,6	;RP1=0, select bank0
  7170  0898  0841               	movf	?_trapmf+1,w
  7171  0899  1683               	bsf	3,5	;RP0=1, select bank1
  7172  089A  1303               	bcf	3,6	;RP1=0, select bank1
  7173  089B  00C1               	movwf	(ISR@rule+1)^(0+128)
  7174  089C  1283               	bcf	3,5	;RP0=0, select bank0
  7175  089D  1303               	bcf	3,6	;RP1=0, select bank0
  7176  089E  0842               	movf	?_trapmf+2,w
  7177  089F  1683               	bsf	3,5	;RP0=1, select bank1
  7178  08A0  1303               	bcf	3,6	;RP1=0, select bank1
  7179  08A1  00C2               	movwf	(ISR@rule+2)^(0+128)
  7180                           
  7181                           ;main.c: 268: x = 0;
  7182  08A2  3000               	movlw	0
  7183  08A3  00C5               	movwf	ISR@x^(0+128)
  7184  08A4  3000               	movlw	0
  7185  08A5  00C6               	movwf	(ISR@x+1)^(0+128)
  7186  08A6  3000               	movlw	0
  7187  08A7  00C7               	movwf	(ISR@x+2)^(0+128)
  7188                           
  7189                           ;main.c: 269: for (int a = 0; a <= 15; a++)
  7190  08A8  01B5               	clrf	ISR@a^(0+128)
  7191  08A9  01B6               	clrf	(ISR@a+1)^(0+128)
  7192  08AA  0836               	movf	(ISR@a+1)^(0+128),w
  7193  08AB  3A80               	xorlw	128
  7194  08AC  00FF               	movwf	127
  7195  08AD  3080               	movlw	128
  7196  08AE  027F               	subwf	127,w
  7197  08AF  1D03               	skipz
  7198  08B0  28B3               	goto	u549_25
  7199  08B1  3010               	movlw	16
  7200  08B2  0235               	subwf	ISR@a^(0+128),w
  7201  08B3                     u549_25:	
  7202  08B3  120A  158A  1803   	btfsc	3,0
  7203  08B6  2AE7               	goto	i1l3841
  7204  08B7                     i1l3831:	
  7205                           
  7206                           ;main.c: 270: {
  7207                           ;main.c: 271: rBaixo[a] = trapmf(x, -1, 0, 0, 5);
  7208  08B7  3003               	movlw	3
  7209  08B8  1283               	bcf	3,5	;RP0=0, select bank0
  7210  08B9  1303               	bcf	3,6	;RP1=0, select bank0
  7211  08BA  00E2               	movwf	??_ISR
  7212  08BB  0862               	movf	??_ISR,w
  7213  08BC  00F0               	movwf	___bmul@multiplicand
  7214  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  7215  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  7216  08BF  0835               	movf	ISR@a^(0+128),w
  7217  08C0  120A  118A  27EC  120A  158A  	fcall	___bmul
  7218  08C5  3E90               	addlw	_rBaixo& (0+255)
  7219  08C6  0084               	movwf	4
  7220  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  7221  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  7222  08C9  0845               	movf	ISR@x^(0+128),w
  7223  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  7224  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  7225  08CC  00C0               	movwf	trapmf@x
  7226  08CD  1683               	bsf	3,5	;RP0=1, select bank1
  7227  08CE  1303               	bcf	3,6	;RP1=0, select bank1
  7228  08CF  0846               	movf	(ISR@x+1)^(0+128),w
  7229  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  7230  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  7231  08D2  00C1               	movwf	trapmf@x+1
  7232  08D3  1683               	bsf	3,5	;RP0=1, select bank1
  7233  08D4  1303               	bcf	3,6	;RP1=0, select bank1
  7234  08D5  0847               	movf	(ISR@x+2)^(0+128),w
  7235  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  7236  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  7237  08D8  00C2               	movwf	trapmf@x+2
  7238  08D9  3000               	movlw	0
  7239  08DA  00C3               	movwf	trapmf@a
  7240  08DB  3080               	movlw	128
  7241  08DC  00C4               	movwf	trapmf@a+1
  7242  08DD  30BF               	movlw	191
  7243  08DE  00C5               	movwf	trapmf@a+2
  7244  08DF  3000               	movlw	0
  7245  08E0  00C6               	movwf	trapmf@b
  7246  08E1  3000               	movlw	0
  7247  08E2  00C7               	movwf	trapmf@b+1
  7248  08E3  3000               	movlw	0
  7249  08E4  00C8               	movwf	trapmf@b+2
  7250  08E5  3000               	movlw	0
  7251  08E6  00C9               	movwf	trapmf@c
  7252  08E7  3000               	movlw	0
  7253  08E8  00CA               	movwf	trapmf@c+1
  7254  08E9  3000               	movlw	0
  7255  08EA  00CB               	movwf	trapmf@c+2
  7256  08EB  3000               	movlw	0
  7257  08EC  00CC               	movwf	trapmf@d
  7258  08ED  30A0               	movlw	160
  7259  08EE  00CD               	movwf	trapmf@d+1
  7260  08EF  3040               	movlw	64
  7261  08F0  00CE               	movwf	trapmf@d+2
  7262  08F1  120A  158A  26AA  120A  158A  	fcall	_trapmf
  7263  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  7264  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  7265  08F8  0840               	movf	?_trapmf,w
  7266  08F9  1783               	bsf	3,7	;select IRP bank3
  7267  08FA  0080               	movwf	0
  7268  08FB  0A84               	incf	4,f
  7269  08FC  0841               	movf	?_trapmf+1,w
  7270  08FD  0080               	movwf	0
  7271  08FE  0A84               	incf	4,f
  7272  08FF  0842               	movf	?_trapmf+2,w
  7273  0900  0080               	movwf	0
  7274                           
  7275                           ;main.c: 272: if (rBaixo[a] >= rule)
  7276  0901  3003               	movlw	3
  7277  0902  00E2               	movwf	??_ISR
  7278  0903  0862               	movf	??_ISR,w
  7279  0904  00F0               	movwf	___bmul@multiplicand
  7280  0905  1683               	bsf	3,5	;RP0=1, select bank1
  7281  0906  1303               	bcf	3,6	;RP1=0, select bank1
  7282  0907  0835               	movf	ISR@a^(0+128),w
  7283  0908  120A  118A  27EC  120A  158A  	fcall	___bmul
  7284  090D  3E90               	addlw	_rBaixo& (0+255)
  7285  090E  0084               	movwf	4
  7286  090F  1783               	bsf	3,7	;select IRP bank3
  7287  0910  0800               	movf	0,w
  7288  0911  00F4               	movwf	___ftge@ff1
  7289  0912  0A84               	incf	4,f
  7290  0913  0800               	movf	0,w
  7291  0914  00F5               	movwf	___ftge@ff1+1
  7292  0915  0A84               	incf	4,f
  7293  0916  0800               	movf	0,w
  7294  0917  00F6               	movwf	___ftge@ff1+2
  7295  0918  1683               	bsf	3,5	;RP0=1, select bank1
  7296  0919  1303               	bcf	3,6	;RP1=0, select bank1
  7297  091A  0840               	movf	ISR@rule^(0+128),w
  7298  091B  00F7               	movwf	___ftge@ff2
  7299  091C  0841               	movf	(ISR@rule+1)^(0+128),w
  7300  091D  00F8               	movwf	___ftge@ff2+1
  7301  091E  0842               	movf	(ISR@rule+2)^(0+128),w
  7302  091F  00F9               	movwf	___ftge@ff2+2
  7303  0920  160A  118A  2414  120A  158A  	fcall	___ftge
  7304  0925  1C03               	btfss	3,0
  7305  0926  2927               	ljmp	L17
  7306  0927                     L17:	
  7307  0927  120A  158A  2A89   	ljmp	L15
  7308                           
  7309                           	psect	text13_split_5
  7310  0A89                     L15:	
  7311  0A89  2AA5               	goto	i1l3835
  7312                           
  7313                           ;main.c: 273: {
  7314                           ;main.c: 274: rBaixo[a] = rule;
  7315  0A8A  3003               	movlw	3
  7316  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  7317  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  7318  0A8D  00E2               	movwf	??_ISR
  7319  0A8E  0862               	movf	??_ISR,w
  7320  0A8F  00F0               	movwf	___bmul@multiplicand
  7321  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  7322  0A91  1303               	bcf	3,6	;RP1=0, select bank1
  7323  0A92  0835               	movf	ISR@a^(0+128),w
  7324  0A93  120A  118A  27EC  120A  158A  	fcall	___bmul
  7325  0A98  3E90               	addlw	_rBaixo& (0+255)
  7326  0A99  0084               	movwf	4
  7327  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  7328  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  7329  0A9C  0840               	movf	ISR@rule^(0+128),w
  7330  0A9D  1783               	bsf	3,7	;select IRP bank3
  7331  0A9E  0080               	movwf	0
  7332  0A9F  0A84               	incf	4,f
  7333  0AA0  0841               	movf	(ISR@rule+1)^(0+128),w
  7334  0AA1  0080               	movwf	0
  7335  0AA2  0A84               	incf	4,f
  7336  0AA3  0842               	movf	(ISR@rule+2)^(0+128),w
  7337  0AA4  0080               	movwf	0
  7338  0AA5                     i1l3835:	
  7339                           
  7340                           ;main.c: 275: }
  7341                           ;main.c: 277: x += 1;
  7342  0AA5  3000               	movlw	0
  7343  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  7344  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  7345  0AA8  00A3               	movwf	___ftadd@f1
  7346  0AA9  3080               	movlw	128
  7347  0AAA  00A4               	movwf	___ftadd@f1+1
  7348  0AAB  303F               	movlw	63
  7349  0AAC  00A5               	movwf	___ftadd@f1+2
  7350  0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  7351  0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  7352  0AAF  0845               	movf	ISR@x^(0+128),w
  7353  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  7354  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  7355  0AB2  00A6               	movwf	___ftadd@f2
  7356  0AB3  1683               	bsf	3,5	;RP0=1, select bank1
  7357  0AB4  1303               	bcf	3,6	;RP1=0, select bank1
  7358  0AB5  0846               	movf	(ISR@x+1)^(0+128),w
  7359  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  7360  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  7361  0AB8  00A7               	movwf	___ftadd@f2+1
  7362  0AB9  1683               	bsf	3,5	;RP0=1, select bank1
  7363  0ABA  1303               	bcf	3,6	;RP1=0, select bank1
  7364  0ABB  0847               	movf	(ISR@x+2)^(0+128),w
  7365  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  7366  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  7367  0ABE  00A8               	movwf	___ftadd@f2+2
  7368  0ABF  120A  158A  25A1  120A  158A  	fcall	___ftadd
  7369  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  7370  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  7371  0AC6  0823               	movf	?___ftadd,w
  7372  0AC7  1683               	bsf	3,5	;RP0=1, select bank1
  7373  0AC8  1303               	bcf	3,6	;RP1=0, select bank1
  7374  0AC9  00C5               	movwf	ISR@x^(0+128)
  7375  0ACA  1283               	bcf	3,5	;RP0=0, select bank0
  7376  0ACB  1303               	bcf	3,6	;RP1=0, select bank0
  7377  0ACC  0824               	movf	?___ftadd+1,w
  7378  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  7379  0ACE  1303               	bcf	3,6	;RP1=0, select bank1
  7380  0ACF  00C6               	movwf	(ISR@x+1)^(0+128)
  7381  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  7382  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  7383  0AD2  0825               	movf	?___ftadd+2,w
  7384  0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  7385  0AD4  1303               	bcf	3,6	;RP1=0, select bank1
  7386  0AD5  00C7               	movwf	(ISR@x+2)^(0+128)
  7387  0AD6  3001               	movlw	1
  7388  0AD7  07B5               	addwf	ISR@a^(0+128),f
  7389  0AD8  1803               	skipnc
  7390  0AD9  0AB6               	incf	(ISR@a+1)^(0+128),f
  7391  0ADA  3000               	movlw	0
  7392  0ADB  07B6               	addwf	(ISR@a+1)^(0+128),f
  7393  0ADC  0836               	movf	(ISR@a+1)^(0+128),w
  7394  0ADD  3A80               	xorlw	128
  7395  0ADE  00FF               	movwf	127
  7396  0ADF  3080               	movlw	128
  7397  0AE0  027F               	subwf	127,w
  7398  0AE1  1D03               	skipz
  7399  0AE2  2AE5               	goto	u551_25
  7400  0AE3  3010               	movlw	16
  7401  0AE4  0235               	subwf	ISR@a^(0+128),w
  7402  0AE5                     u551_25:	
  7403  0AE5  1C03               	skipc
  7404  0AE6  2B37               	goto	L21
  7405  0AE7                     i1l3841:	
  7406                           
  7407                           ;main.c: 278: }
  7408                           ;main.c: 279: }
  7409                           ;main.c: 282: if (erro_atual >= 100 && erro_atual <= 1001 && delta <= 200)
  7410  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  7411  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  7412  0AE9  085B               	movf	(_erro_atual+1)^(0+128),w
  7413  0AEA  3A80               	xorlw	128
  7414  0AEB  00FF               	movwf	127
  7415  0AEC  3080               	movlw	128
  7416  0AED  027F               	subwf	127,w
  7417  0AEE  1D03               	skipz
  7418  0AEF  2AF2               	goto	u552_25
  7419  0AF0  3064               	movlw	100
  7420  0AF1  025A               	subwf	_erro_atual^(0+128),w
  7421  0AF2                     u552_25:	
  7422  0AF2  1C03               	skipc
  7423  0AF3  2B3A               	goto	L23
  7424  0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  7425  0AF5  1303               	bcf	3,6	;RP1=0, select bank1
  7426  0AF6  085B               	movf	(_erro_atual+1)^(0+128),w
  7427  0AF7  3A80               	xorlw	128
  7428  0AF8  00FF               	movwf	127
  7429  0AF9  3083               	movlw	131
  7430  0AFA  027F               	subwf	127,w
  7431  0AFB  1D03               	skipz
  7432  0AFC  2AFF               	goto	u553_25
  7433  0AFD  30EA               	movlw	234
  7434  0AFE  025A               	subwf	_erro_atual^(0+128),w
  7435  0AFF                     u553_25:	
  7436  0AFF  1803               	skipnc
  7437  0B00  2B3A               	goto	L23
  7438  0B01  1683               	bsf	3,5	;RP0=1, select bank1
  7439  0B02  1303               	bcf	3,6	;RP1=0, select bank1
  7440  0B03  0831               	movf	(ISR@delta+1)^(0+128),w
  7441  0B04  3A80               	xorlw	128
  7442  0B05  00FF               	movwf	127
  7443  0B06  3080               	movlw	128
  7444  0B07  027F               	subwf	127,w
  7445  0B08  1D03               	skipz
  7446  0B09  2B0C               	goto	u554_25
  7447  0B0A  30C9               	movlw	201
  7448  0B0B  0230               	subwf	ISR@delta^(0+128),w
  7449  0B0C                     u554_25:	
  7450  0B0C  1803               	skipnc
  7451  0B0D  2B3A               	goto	L23
  7452                           
  7453                           ;main.c: 283: {
  7454                           ;main.c: 285: rule = trapmf(erro_atual, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 
      +                          1, 200));
  7455  0B0E  3000               	movlw	0
  7456  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  7457  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  7458  0B11  00CC               	movwf	trapmf@d
  7459  0B12  3048               	movlw	72
  7460  0B13  00CD               	movwf	trapmf@d+1
  7461  0B14  3043               	movlw	67
  7462  0B15  00CE               	movwf	trapmf@d+2
  7463  0B16  3000               	movlw	0
  7464  0B17  00C9               	movwf	trapmf@c
  7465  0B18  3080               	movlw	128
  7466  0B19  00CA               	movwf	trapmf@c+1
  7467  0B1A  303F               	movlw	63
  7468  0B1B  00CB               	movwf	trapmf@c+2
  7469  0B1C  3000               	movlw	0
  7470  0B1D  00C6               	movwf	trapmf@b
  7471  0B1E  3000               	movlw	0
  7472  0B1F  00C7               	movwf	trapmf@b+1
  7473  0B20  3000               	movlw	0
  7474  0B21  00C8               	movwf	trapmf@b+2
  7475  0B22  3000               	movlw	0
  7476  0B23  00C3               	movwf	trapmf@a
  7477  0B24  3080               	movlw	128
  7478  0B25  00C4               	movwf	trapmf@a+1
  7479  0B26  30BF               	movlw	191
  7480  0B27  00C5               	movwf	trapmf@a+2
  7481  0B28  1683               	bsf	3,5	;RP0=1, select bank1
  7482  0B29  1303               	bcf	3,6	;RP1=0, select bank1
  7483  0B2A  0831               	movf	(ISR@delta+1)^(0+128),w
  7484  0B2B  01F9               	clrf	___awtoft@c+1
  7485  0B2C  07F9               	addwf	___awtoft@c+1,f
  7486  0B2D  0830               	movf	ISR@delta^(0+128),w
  7487  0B2E  01F8               	clrf	___awtoft@c
  7488  0B2F  07F8               	addwf	___awtoft@c,f
  7489  0B30  160A  118A  21DD   	fcall	___awtoft
  7490  0B33  0878               	movf	?___awtoft,w
  7491  0B34  160A  118A  2D4A   	ljmp	L19
  7492  0B37                     L21:	
  7493  0B37  120A  118A  2FE9   	ljmp	L18
  7494  0B3A                     L23:	
  7495  0B3A  120A  118A  2951   	ljmp	i1l3867
  7496                           
  7497                           	psect	text13_split_6
  7498  154A                     L19:	
  7499  154A  1283               	bcf	3,5	;RP0=0, select bank0
  7500  154B  1303               	bcf	3,6	;RP1=0, select bank0
  7501  154C  00C0               	movwf	trapmf@x
  7502  154D  0879               	movf	?___awtoft+1,w
  7503  154E  00C1               	movwf	trapmf@x+1
  7504  154F  087A               	movf	?___awtoft+2,w
  7505  1550  00C2               	movwf	trapmf@x+2
  7506  1551  120A  158A  26AA  160A  118A  	fcall	_trapmf
  7507  1556  1283               	bcf	3,5	;RP0=0, select bank0
  7508  1557  1303               	bcf	3,6	;RP1=0, select bank0
  7509  1558  0840               	movf	?_trapmf,w
  7510  1559  1683               	bsf	3,5	;RP0=1, select bank1
  7511  155A  1303               	bcf	3,6	;RP1=0, select bank1
  7512  155B  00A2               	movwf	_ISR$1667^(0+128)
  7513  155C  1283               	bcf	3,5	;RP0=0, select bank0
  7514  155D  1303               	bcf	3,6	;RP1=0, select bank0
  7515  155E  0841               	movf	?_trapmf+1,w
  7516  155F  1683               	bsf	3,5	;RP0=1, select bank1
  7517  1560  1303               	bcf	3,6	;RP1=0, select bank1
  7518  1561  00A3               	movwf	(_ISR$1667+1)^(0+128)
  7519  1562  1283               	bcf	3,5	;RP0=0, select bank0
  7520  1563  1303               	bcf	3,6	;RP1=0, select bank0
  7521  1564  0842               	movf	?_trapmf+2,w
  7522  1565  1683               	bsf	3,5	;RP0=1, select bank1
  7523  1566  1303               	bcf	3,6	;RP1=0, select bank1
  7524  1567  00A4               	movwf	(_ISR$1667+2)^(0+128)
  7525                           
  7526                           ;main.c: 283: {
  7527                           ;main.c: 285: rule = trapmf(erro_atual, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 
      +                          1, 200));
  7528  1568  30C0               	movlw	192
  7529  1569  1283               	bcf	3,5	;RP0=0, select bank0
  7530  156A  1303               	bcf	3,6	;RP1=0, select bank0
  7531  156B  00CC               	movwf	trapmf@d
  7532  156C  30C1               	movlw	193
  7533  156D  00CD               	movwf	trapmf@d+1
  7534  156E  3044               	movlw	68
  7535  156F  00CE               	movwf	trapmf@d+2
  7536  1570  3000               	movlw	0
  7537  1571  00C9               	movwf	trapmf@c
  7538  1572  3048               	movlw	72
  7539  1573  00CA               	movwf	trapmf@c+1
  7540  1574  3044               	movlw	68
  7541  1575  00CB               	movwf	trapmf@c+2
  7542  1576  3000               	movlw	0
  7543  1577  00C6               	movwf	trapmf@b
  7544  1578  3048               	movlw	72
  7545  1579  00C7               	movwf	trapmf@b+1
  7546  157A  3044               	movlw	68
  7547  157B  00C8               	movwf	trapmf@b+2
  7548  157C  3000               	movlw	0
  7549  157D  00C3               	movwf	trapmf@a
  7550  157E  3048               	movlw	72
  7551  157F  00C4               	movwf	trapmf@a+1
  7552  1580  3042               	movlw	66
  7553  1581  00C5               	movwf	trapmf@a+2
  7554  1582  1683               	bsf	3,5	;RP0=1, select bank1
  7555  1583  1303               	bcf	3,6	;RP1=0, select bank1
  7556  1584  085B               	movf	(_erro_atual+1)^(0+128),w
  7557  1585  01F9               	clrf	___awtoft@c+1
  7558  1586  07F9               	addwf	___awtoft@c+1,f
  7559  1587  085A               	movf	_erro_atual^(0+128),w
  7560  1588  01F8               	clrf	___awtoft@c
  7561  1589  07F8               	addwf	___awtoft@c,f
  7562  158A  160A  118A  21DD  160A  118A  	fcall	___awtoft
  7563  158F  0878               	movf	?___awtoft,w
  7564  1590  1283               	bcf	3,5	;RP0=0, select bank0
  7565  1591  1303               	bcf	3,6	;RP1=0, select bank0
  7566  1592  00C0               	movwf	trapmf@x
  7567  1593  0879               	movf	?___awtoft+1,w
  7568  1594  00C1               	movwf	trapmf@x+1
  7569  1595  087A               	movf	?___awtoft+2,w
  7570  1596  00C2               	movwf	trapmf@x+2
  7571  1597  120A  158A  26AA  160A  118A  	fcall	_trapmf
  7572  159C  1283               	bcf	3,5	;RP0=0, select bank0
  7573  159D  1303               	bcf	3,6	;RP1=0, select bank0
  7574  159E  0840               	movf	?_trapmf,w
  7575  159F  00D2               	movwf	___ftmul@f1
  7576  15A0  0841               	movf	?_trapmf+1,w
  7577  15A1  00D3               	movwf	___ftmul@f1+1
  7578  15A2  0842               	movf	?_trapmf+2,w
  7579  15A3  00D4               	movwf	___ftmul@f1+2
  7580  15A4  3000               	movlw	0
  7581  15A5  00A3               	movwf	___ftadd@f1
  7582  15A6  3080               	movlw	128
  7583  15A7  00A4               	movwf	___ftadd@f1+1
  7584  15A8  303F               	movlw	63
  7585  15A9  00A5               	movwf	___ftadd@f1+2
  7586  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  7587  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  7588  15AC  0822               	movf	_ISR$1667^(0+128),w
  7589  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  7590  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  7591  15AF  00A0               	movwf	___ftneg@f1
  7592  15B0  1683               	bsf	3,5	;RP0=1, select bank1
  7593  15B1  1303               	bcf	3,6	;RP1=0, select bank1
  7594  15B2  0823               	movf	(_ISR$1667+1)^(0+128),w
  7595  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  7596  15B4  1303               	bcf	3,6	;RP1=0, select bank0
  7597  15B5  00A1               	movwf	___ftneg@f1+1
  7598  15B6  1683               	bsf	3,5	;RP0=1, select bank1
  7599  15B7  1303               	bcf	3,6	;RP1=0, select bank1
  7600  15B8  0824               	movf	(_ISR$1667+2)^(0+128),w
  7601  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  7602  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  7603  15BB  00A2               	movwf	___ftneg@f1+2
  7604  15BC  160A  118A  20DB  160A  118A  	fcall	___ftneg
  7605  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  7606  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  7607  15C3  0820               	movf	?___ftneg,w
  7608  15C4  00A6               	movwf	___ftadd@f2
  7609  15C5  0821               	movf	?___ftneg+1,w
  7610  15C6  00A7               	movwf	___ftadd@f2+1
  7611  15C7  0822               	movf	?___ftneg+2,w
  7612  15C8  00A8               	movwf	___ftadd@f2+2
  7613  15C9  120A  158A  25A1   	fcall	___ftadd
  7614  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  7615  15CD  120A  118A  2853   	ljmp	L24
  7616                           
  7617                           	psect	text13_split_7
  7618  0053                     L24:	
  7619  0053  1303               	bcf	3,6	;RP1=0, select bank0
  7620  0054  0823               	movf	?___ftadd,w
  7621  0055  00D5               	movwf	___ftmul@f2
  7622  0056  0824               	movf	?___ftadd+1,w
  7623  0057  00D6               	movwf	___ftmul@f2+1
  7624  0058  0825               	movf	?___ftadd+2,w
  7625  0059  00D7               	movwf	___ftmul@f2+2
  7626  005A  120A  158A  23F5  120A  118A  	fcall	___ftmul
  7627  005F  1283               	bcf	3,5	;RP0=0, select bank0
  7628  0060  1303               	bcf	3,6	;RP1=0, select bank0
  7629  0061  0852               	movf	?___ftmul,w
  7630  0062  1683               	bsf	3,5	;RP0=1, select bank1
  7631  0063  1303               	bcf	3,6	;RP1=0, select bank1
  7632  0064  00C0               	movwf	ISR@rule^(0+128)
  7633  0065  1283               	bcf	3,5	;RP0=0, select bank0
  7634  0066  1303               	bcf	3,6	;RP1=0, select bank0
  7635  0067  0853               	movf	?___ftmul+1,w
  7636  0068  1683               	bsf	3,5	;RP0=1, select bank1
  7637  0069  1303               	bcf	3,6	;RP1=0, select bank1
  7638  006A  00C1               	movwf	(ISR@rule+1)^(0+128)
  7639  006B  1283               	bcf	3,5	;RP0=0, select bank0
  7640  006C  1303               	bcf	3,6	;RP1=0, select bank0
  7641  006D  0854               	movf	?___ftmul+2,w
  7642  006E  1683               	bsf	3,5	;RP0=1, select bank1
  7643  006F  1303               	bcf	3,6	;RP1=0, select bank1
  7644  0070  00C2               	movwf	(ISR@rule+2)^(0+128)
  7645                           
  7646                           ;main.c: 287: x = 0;
  7647  0071  3000               	movlw	0
  7648  0072  00C5               	movwf	ISR@x^(0+128)
  7649  0073  3000               	movlw	0
  7650  0074  00C6               	movwf	(ISR@x+1)^(0+128)
  7651  0075  3000               	movlw	0
  7652  0076  00C7               	movwf	(ISR@x+2)^(0+128)
  7653                           
  7654                           ;main.c: 288: for (int a = 0; a <= 15; a++)
  7655  0077  01B7               	clrf	ISR@a_243^(0+128)
  7656  0078  01B8               	clrf	(ISR@a_243+1)^(0+128)
  7657  0079  0838               	movf	(ISR@a_243+1)^(0+128),w
  7658  007A  3A80               	xorlw	128
  7659  007B  00FF               	movwf	127
  7660  007C  3080               	movlw	128
  7661  007D  027F               	subwf	127,w
  7662  007E  1D03               	skipz
  7663  007F  2882               	goto	u555_25
  7664  0080  3010               	movlw	16
  7665  0081  0237               	subwf	ISR@a_243^(0+128),w
  7666  0082                     u555_25:	
  7667  0082  1803               	btfsc	3,0
  7668  0083  2951               	goto	i1l3867
  7669  0084                     i1l3857:	
  7670                           
  7671                           ;main.c: 289: {
  7672                           ;main.c: 291: rBaixo[a] = trapmf(x, 2, 5, 5, 10);
  7673  0084  3003               	movlw	3
  7674  0085  1283               	bcf	3,5	;RP0=0, select bank0
  7675  0086  1303               	bcf	3,6	;RP1=0, select bank0
  7676  0087  00E2               	movwf	??_ISR
  7677  0088  0862               	movf	??_ISR,w
  7678  0089  00F0               	movwf	___bmul@multiplicand
  7679  008A  1683               	bsf	3,5	;RP0=1, select bank1
  7680  008B  1303               	bcf	3,6	;RP1=0, select bank1
  7681  008C  0837               	movf	ISR@a_243^(0+128),w
  7682  008D  120A  118A  27EC  120A  118A  	fcall	___bmul
  7683  0092  3E90               	addlw	_rBaixo& (0+255)
  7684  0093  0084               	movwf	4
  7685  0094  1683               	bsf	3,5	;RP0=1, select bank1
  7686  0095  1303               	bcf	3,6	;RP1=0, select bank1
  7687  0096  0845               	movf	ISR@x^(0+128),w
  7688  0097  1283               	bcf	3,5	;RP0=0, select bank0
  7689  0098  1303               	bcf	3,6	;RP1=0, select bank0
  7690  0099  00C0               	movwf	trapmf@x
  7691  009A  1683               	bsf	3,5	;RP0=1, select bank1
  7692  009B  1303               	bcf	3,6	;RP1=0, select bank1
  7693  009C  0846               	movf	(ISR@x+1)^(0+128),w
  7694  009D  1283               	bcf	3,5	;RP0=0, select bank0
  7695  009E  1303               	bcf	3,6	;RP1=0, select bank0
  7696  009F  00C1               	movwf	trapmf@x+1
  7697  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  7698  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  7699  00A2  0847               	movf	(ISR@x+2)^(0+128),w
  7700  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  7701  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  7702  00A5  00C2               	movwf	trapmf@x+2
  7703  00A6  3000               	movlw	0
  7704  00A7  00C3               	movwf	trapmf@a
  7705  00A8  3000               	movlw	0
  7706  00A9  00C4               	movwf	trapmf@a+1
  7707  00AA  3040               	movlw	64
  7708  00AB  00C5               	movwf	trapmf@a+2
  7709  00AC  3000               	movlw	0
  7710  00AD  00C6               	movwf	trapmf@b
  7711  00AE  30A0               	movlw	160
  7712  00AF  00C7               	movwf	trapmf@b+1
  7713  00B0  3040               	movlw	64
  7714  00B1  00C8               	movwf	trapmf@b+2
  7715  00B2  3000               	movlw	0
  7716  00B3  00C9               	movwf	trapmf@c
  7717  00B4  30A0               	movlw	160
  7718  00B5  00CA               	movwf	trapmf@c+1
  7719  00B6  3040               	movlw	64
  7720  00B7  00CB               	movwf	trapmf@c+2
  7721  00B8  3000               	movlw	0
  7722  00B9  00CC               	movwf	trapmf@d
  7723  00BA  3020               	movlw	32
  7724  00BB  00CD               	movwf	trapmf@d+1
  7725  00BC  3041               	movlw	65
  7726  00BD  00CE               	movwf	trapmf@d+2
  7727  00BE  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7728  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  7729  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  7730  00C5  0840               	movf	?_trapmf,w
  7731  00C6  1783               	bsf	3,7	;select IRP bank3
  7732  00C7  0080               	movwf	0
  7733  00C8  0A84               	incf	4,f
  7734  00C9  0841               	movf	?_trapmf+1,w
  7735  00CA  0080               	movwf	0
  7736  00CB  0A84               	incf	4,f
  7737  00CC  0842               	movf	?_trapmf+2,w
  7738  00CD  0080               	movwf	0
  7739                           
  7740                           ;main.c: 292: if (rBaixo[a] >= rule)
  7741  00CE  3003               	movlw	3
  7742  00CF  00E2               	movwf	??_ISR
  7743  00D0  0862               	movf	??_ISR,w
  7744  00D1  00F0               	movwf	___bmul@multiplicand
  7745  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  7746  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  7747  00D4  0837               	movf	ISR@a_243^(0+128),w
  7748  00D5  120A  118A  27EC  120A  118A  	fcall	___bmul
  7749  00DA  3E90               	addlw	_rBaixo& (0+255)
  7750  00DB  0084               	movwf	4
  7751  00DC  1783               	bsf	3,7	;select IRP bank3
  7752  00DD  0800               	movf	0,w
  7753  00DE  00F4               	movwf	___ftge@ff1
  7754  00DF  0A84               	incf	4,f
  7755  00E0  0800               	movf	0,w
  7756  00E1  00F5               	movwf	___ftge@ff1+1
  7757  00E2  0A84               	incf	4,f
  7758  00E3  0800               	movf	0,w
  7759  00E4  00F6               	movwf	___ftge@ff1+2
  7760  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  7761  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  7762  00E7  0840               	movf	ISR@rule^(0+128),w
  7763  00E8  00F7               	movwf	___ftge@ff2
  7764  00E9  0841               	movf	(ISR@rule+1)^(0+128),w
  7765  00EA  00F8               	movwf	___ftge@ff2+1
  7766  00EB  0842               	movf	(ISR@rule+2)^(0+128),w
  7767  00EC  00F9               	movwf	___ftge@ff2+2
  7768  00ED  160A  118A  2414  120A  118A  	fcall	___ftge
  7769  00F2  1C03               	btfss	3,0
  7770  00F3  290F               	goto	i1l3861
  7771                           
  7772                           ;main.c: 293: {
  7773                           ;main.c: 294: rBaixo[a] = rule;
  7774  00F4  3003               	movlw	3
  7775  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  7776  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  7777  00F7  00E2               	movwf	??_ISR
  7778  00F8  0862               	movf	??_ISR,w
  7779  00F9  00F0               	movwf	___bmul@multiplicand
  7780  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  7781  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  7782  00FC  0837               	movf	ISR@a_243^(0+128),w
  7783  00FD  120A  118A  27EC  120A  118A  	fcall	___bmul
  7784  0102  3E90               	addlw	_rBaixo& (0+255)
  7785  0103  0084               	movwf	4
  7786  0104  1683               	bsf	3,5	;RP0=1, select bank1
  7787  0105  1303               	bcf	3,6	;RP1=0, select bank1
  7788  0106  0840               	movf	ISR@rule^(0+128),w
  7789  0107  1783               	bsf	3,7	;select IRP bank3
  7790  0108  0080               	movwf	0
  7791  0109  0A84               	incf	4,f
  7792  010A  0841               	movf	(ISR@rule+1)^(0+128),w
  7793  010B  0080               	movwf	0
  7794  010C  0A84               	incf	4,f
  7795  010D  0842               	movf	(ISR@rule+2)^(0+128),w
  7796  010E  0080               	movwf	0
  7797  010F                     i1l3861:	
  7798                           
  7799                           ;main.c: 295: }
  7800                           ;main.c: 297: x += 1;
  7801  010F  3000               	movlw	0
  7802  0110  1283               	bcf	3,5	;RP0=0, select bank0
  7803  0111  1303               	bcf	3,6	;RP1=0, select bank0
  7804  0112  00A3               	movwf	___ftadd@f1
  7805  0113  3080               	movlw	128
  7806  0114  00A4               	movwf	___ftadd@f1+1
  7807  0115  303F               	movlw	63
  7808  0116  00A5               	movwf	___ftadd@f1+2
  7809  0117  1683               	bsf	3,5	;RP0=1, select bank1
  7810  0118  1303               	bcf	3,6	;RP1=0, select bank1
  7811  0119  0845               	movf	ISR@x^(0+128),w
  7812  011A  1283               	bcf	3,5	;RP0=0, select bank0
  7813  011B  1303               	bcf	3,6	;RP1=0, select bank0
  7814  011C  00A6               	movwf	___ftadd@f2
  7815  011D  1683               	bsf	3,5	;RP0=1, select bank1
  7816  011E  1303               	bcf	3,6	;RP1=0, select bank1
  7817  011F  0846               	movf	(ISR@x+1)^(0+128),w
  7818  0120  1283               	bcf	3,5	;RP0=0, select bank0
  7819  0121  1303               	bcf	3,6	;RP1=0, select bank0
  7820  0122  00A7               	movwf	___ftadd@f2+1
  7821  0123  1683               	bsf	3,5	;RP0=1, select bank1
  7822  0124  1303               	bcf	3,6	;RP1=0, select bank1
  7823  0125  0847               	movf	(ISR@x+2)^(0+128),w
  7824  0126  1283               	bcf	3,5	;RP0=0, select bank0
  7825  0127  1303               	bcf	3,6	;RP1=0, select bank0
  7826  0128  00A8               	movwf	___ftadd@f2+2
  7827  0129  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7828  012E  1283               	bcf	3,5	;RP0=0, select bank0
  7829  012F  1303               	bcf	3,6	;RP1=0, select bank0
  7830  0130  0823               	movf	?___ftadd,w
  7831  0131  1683               	bsf	3,5	;RP0=1, select bank1
  7832  0132  1303               	bcf	3,6	;RP1=0, select bank1
  7833  0133  00C5               	movwf	ISR@x^(0+128)
  7834  0134  1283               	bcf	3,5	;RP0=0, select bank0
  7835  0135  1303               	bcf	3,6	;RP1=0, select bank0
  7836  0136  0824               	movf	?___ftadd+1,w
  7837  0137  1683               	bsf	3,5	;RP0=1, select bank1
  7838  0138  1303               	bcf	3,6	;RP1=0, select bank1
  7839  0139  00C6               	movwf	(ISR@x+1)^(0+128)
  7840  013A  1283               	bcf	3,5	;RP0=0, select bank0
  7841  013B  1303               	bcf	3,6	;RP1=0, select bank0
  7842  013C  0825               	movf	?___ftadd+2,w
  7843  013D  1683               	bsf	3,5	;RP0=1, select bank1
  7844  013E  1303               	bcf	3,6	;RP1=0, select bank1
  7845  013F  00C7               	movwf	(ISR@x+2)^(0+128)
  7846  0140  3001               	movlw	1
  7847  0141  07B7               	addwf	ISR@a_243^(0+128),f
  7848  0142  1803               	skipnc
  7849  0143  0AB8               	incf	(ISR@a_243+1)^(0+128),f
  7850  0144  3000               	movlw	0
  7851  0145  07B8               	addwf	(ISR@a_243+1)^(0+128),f
  7852  0146  0838               	movf	(ISR@a_243+1)^(0+128),w
  7853  0147  3A80               	xorlw	128
  7854  0148  00FF               	movwf	127
  7855  0149  3080               	movlw	128
  7856  014A  027F               	subwf	127,w
  7857  014B  1D03               	skipz
  7858  014C  294F               	goto	u557_25
  7859  014D  3010               	movlw	16
  7860  014E  0237               	subwf	ISR@a_243^(0+128),w
  7861  014F                     u557_25:	
  7862  014F  1C03               	skipc
  7863  0150  2884               	goto	i1l3857
  7864  0151                     i1l3867:	
  7865                           
  7866                           ;main.c: 298: }
  7867                           ;main.c: 299: }
  7868                           ;main.c: 302: if (erro_atual >= 100 && erro_atual <= 1001 && delta >= 201)
  7869  0151  1683               	bsf	3,5	;RP0=1, select bank1
  7870  0152  1303               	bcf	3,6	;RP1=0, select bank1
  7871  0153  085B               	movf	(_erro_atual+1)^(0+128),w
  7872  0154  3A80               	xorlw	128
  7873  0155  00FF               	movwf	127
  7874  0156  3080               	movlw	128
  7875  0157  027F               	subwf	127,w
  7876  0158  1D03               	skipz
  7877  0159  295C               	goto	u558_25
  7878  015A  3064               	movlw	100
  7879  015B  025A               	subwf	_erro_atual^(0+128),w
  7880  015C                     u558_25:	
  7881  015C  1C03               	skipc
  7882  015D  2AE5               	goto	i1l3893
  7883  015E  1683               	bsf	3,5	;RP0=1, select bank1
  7884  015F  1303               	bcf	3,6	;RP1=0, select bank1
  7885  0160  085B               	movf	(_erro_atual+1)^(0+128),w
  7886  0161  3A80               	xorlw	128
  7887  0162  00FF               	movwf	127
  7888  0163  3083               	movlw	131
  7889  0164  027F               	subwf	127,w
  7890  0165  1D03               	skipz
  7891  0166  2969               	goto	u559_25
  7892  0167  30EA               	movlw	234
  7893  0168  025A               	subwf	_erro_atual^(0+128),w
  7894  0169                     u559_25:	
  7895  0169  1803               	skipnc
  7896  016A  2AE5               	goto	i1l3893
  7897  016B  1683               	bsf	3,5	;RP0=1, select bank1
  7898  016C  1303               	bcf	3,6	;RP1=0, select bank1
  7899  016D  0831               	movf	(ISR@delta+1)^(0+128),w
  7900  016E  3A80               	xorlw	128
  7901  016F  00FF               	movwf	127
  7902  0170  3080               	movlw	128
  7903  0171  027F               	subwf	127,w
  7904  0172  1D03               	skipz
  7905  0173  2976               	goto	u560_25
  7906  0174  30C9               	movlw	201
  7907  0175  0230               	subwf	ISR@delta^(0+128),w
  7908  0176                     u560_25:	
  7909  0176  1C03               	skipc
  7910  0177  2AE5               	goto	i1l3893
  7911                           
  7912                           ;main.c: 303: {
  7913                           ;main.c: 305: rule = trapmf(erro_atual, 50, 800, 800, 1550) * trapmf(delta, 200, 500, 20
      +                          00, 2001);
  7914  0178  3020               	movlw	32
  7915  0179  1283               	bcf	3,5	;RP0=0, select bank0
  7916  017A  1303               	bcf	3,6	;RP1=0, select bank0
  7917  017B  00CC               	movwf	trapmf@d
  7918  017C  30FA               	movlw	250
  7919  017D  00CD               	movwf	trapmf@d+1
  7920  017E  3044               	movlw	68
  7921  017F  00CE               	movwf	trapmf@d+2
  7922  0180  3000               	movlw	0
  7923  0181  00C9               	movwf	trapmf@c
  7924  0182  30FA               	movlw	250
  7925  0183  00CA               	movwf	trapmf@c+1
  7926  0184  3044               	movlw	68
  7927  0185  00CB               	movwf	trapmf@c+2
  7928  0186  3000               	movlw	0
  7929  0187  00C6               	movwf	trapmf@b
  7930  0188  30FA               	movlw	250
  7931  0189  00C7               	movwf	trapmf@b+1
  7932  018A  3043               	movlw	67
  7933  018B  00C8               	movwf	trapmf@b+2
  7934  018C  3000               	movlw	0
  7935  018D  00C3               	movwf	trapmf@a
  7936  018E  3048               	movlw	72
  7937  018F  00C4               	movwf	trapmf@a+1
  7938  0190  3043               	movlw	67
  7939  0191  00C5               	movwf	trapmf@a+2
  7940  0192  1683               	bsf	3,5	;RP0=1, select bank1
  7941  0193  1303               	bcf	3,6	;RP1=0, select bank1
  7942  0194  0831               	movf	(ISR@delta+1)^(0+128),w
  7943  0195  01F9               	clrf	___awtoft@c+1
  7944  0196  07F9               	addwf	___awtoft@c+1,f
  7945  0197  0830               	movf	ISR@delta^(0+128),w
  7946  0198  01F8               	clrf	___awtoft@c
  7947  0199  07F8               	addwf	___awtoft@c,f
  7948  019A  160A  118A  21DD  120A  118A  	fcall	___awtoft
  7949  019F  0878               	movf	?___awtoft,w
  7950  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  7951  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  7952  01A2  00C0               	movwf	trapmf@x
  7953  01A3  0879               	movf	?___awtoft+1,w
  7954  01A4  00C1               	movwf	trapmf@x+1
  7955  01A5  087A               	movf	?___awtoft+2,w
  7956  01A6  00C2               	movwf	trapmf@x+2
  7957  01A7  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7958  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  7959  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  7960  01AE  0840               	movf	?_trapmf,w
  7961  01AF  00D2               	movwf	___ftmul@f1
  7962  01B0  0841               	movf	?_trapmf+1,w
  7963  01B1  00D3               	movwf	___ftmul@f1+1
  7964  01B2  0842               	movf	?_trapmf+2,w
  7965  01B3  00D4               	movwf	___ftmul@f1+2
  7966  01B4  30C0               	movlw	192
  7967  01B5  00CC               	movwf	trapmf@d
  7968  01B6  30C1               	movlw	193
  7969  01B7  00CD               	movwf	trapmf@d+1
  7970  01B8  3044               	movlw	68
  7971  01B9  00CE               	movwf	trapmf@d+2
  7972  01BA  3000               	movlw	0
  7973  01BB  00C9               	movwf	trapmf@c
  7974  01BC  3048               	movlw	72
  7975  01BD  00CA               	movwf	trapmf@c+1
  7976  01BE  3044               	movlw	68
  7977  01BF  00CB               	movwf	trapmf@c+2
  7978  01C0  3000               	movlw	0
  7979  01C1  00C6               	movwf	trapmf@b
  7980  01C2  3048               	movlw	72
  7981  01C3  00C7               	movwf	trapmf@b+1
  7982  01C4  3044               	movlw	68
  7983  01C5  00C8               	movwf	trapmf@b+2
  7984  01C6  3000               	movlw	0
  7985  01C7  00C3               	movwf	trapmf@a
  7986  01C8  3048               	movlw	72
  7987  01C9  00C4               	movwf	trapmf@a+1
  7988  01CA  3042               	movlw	66
  7989  01CB  00C5               	movwf	trapmf@a+2
  7990  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  7991  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  7992  01CE  085B               	movf	(_erro_atual+1)^(0+128),w
  7993  01CF  01F9               	clrf	___awtoft@c+1
  7994  01D0  07F9               	addwf	___awtoft@c+1,f
  7995  01D1  085A               	movf	_erro_atual^(0+128),w
  7996  01D2  01F8               	clrf	___awtoft@c
  7997  01D3  07F8               	addwf	___awtoft@c,f
  7998  01D4  160A  118A  21DD  120A  118A  	fcall	___awtoft
  7999  01D9  0878               	movf	?___awtoft,w
  8000  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  8001  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  8002  01DC  00C0               	movwf	trapmf@x
  8003  01DD  0879               	movf	?___awtoft+1,w
  8004  01DE  00C1               	movwf	trapmf@x+1
  8005  01DF  087A               	movf	?___awtoft+2,w
  8006  01E0  00C2               	movwf	trapmf@x+2
  8007  01E1  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8008  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  8009  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  8010  01E8  0840               	movf	?_trapmf,w
  8011  01E9  00D5               	movwf	___ftmul@f2
  8012  01EA  0841               	movf	?_trapmf+1,w
  8013  01EB  00D6               	movwf	___ftmul@f2+1
  8014  01EC  0842               	movf	?_trapmf+2,w
  8015  01ED  00D7               	movwf	___ftmul@f2+2
  8016  01EE  120A  158A  23F5  120A  118A  	fcall	___ftmul
  8017  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  8018  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  8019  01F5  0852               	movf	?___ftmul,w
  8020  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  8021  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  8022  01F8  00C0               	movwf	ISR@rule^(0+128)
  8023  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  8024  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  8025  01FB  0853               	movf	?___ftmul+1,w
  8026  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  8027  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  8028  01FE  00C1               	movwf	(ISR@rule+1)^(0+128)
  8029  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  8030  0200  1303               	bcf	3,6	;RP1=0, select bank0
  8031  0201  0854               	movf	?___ftmul+2,w
  8032  0202  1683               	bsf	3,5	;RP0=1, select bank1
  8033  0203  1303               	bcf	3,6	;RP1=0, select bank1
  8034  0204  00C2               	movwf	(ISR@rule+2)^(0+128)
  8035                           
  8036                           ;main.c: 307: x = 0;
  8037  0205  3000               	movlw	0
  8038  0206  00C5               	movwf	ISR@x^(0+128)
  8039  0207  3000               	movlw	0
  8040  0208  00C6               	movwf	(ISR@x+1)^(0+128)
  8041  0209  3000               	movlw	0
  8042  020A  00C7               	movwf	(ISR@x+2)^(0+128)
  8043                           
  8044                           ;main.c: 308: for (int a = 0; a <= 15; a++)
  8045  020B  01B9               	clrf	ISR@a_244^(0+128)
  8046  020C  01BA               	clrf	(ISR@a_244+1)^(0+128)
  8047  020D  083A               	movf	(ISR@a_244+1)^(0+128),w
  8048  020E  3A80               	xorlw	128
  8049  020F  00FF               	movwf	127
  8050  0210  3080               	movlw	128
  8051  0211  027F               	subwf	127,w
  8052  0212  1D03               	skipz
  8053  0213  2A16               	goto	u561_25
  8054  0214  3010               	movlw	16
  8055  0215  0239               	subwf	ISR@a_244^(0+128),w
  8056  0216                     u561_25:	
  8057  0216  1803               	btfsc	3,0
  8058  0217  2AE5               	goto	i1l3893
  8059  0218                     i1l3883:	
  8060                           
  8061                           ;main.c: 309: {
  8062                           ;main.c: 310: rMedio[a] = trapmf(x, 2, 5, 5, 10);
  8063  0218  3003               	movlw	3
  8064  0219  1283               	bcf	3,5	;RP0=0, select bank0
  8065  021A  1303               	bcf	3,6	;RP1=0, select bank0
  8066  021B  00E2               	movwf	??_ISR
  8067  021C  0862               	movf	??_ISR,w
  8068  021D  00F0               	movwf	___bmul@multiplicand
  8069  021E  1683               	bsf	3,5	;RP0=1, select bank1
  8070  021F  1303               	bcf	3,6	;RP1=0, select bank1
  8071  0220  0839               	movf	ISR@a_244^(0+128),w
  8072  0221  120A  118A  27EC  120A  118A  	fcall	___bmul
  8073  0226  3E40               	addlw	_rMedio& (0+255)
  8074  0227  0084               	movwf	4
  8075  0228  1683               	bsf	3,5	;RP0=1, select bank1
  8076  0229  1303               	bcf	3,6	;RP1=0, select bank1
  8077  022A  0845               	movf	ISR@x^(0+128),w
  8078  022B  1283               	bcf	3,5	;RP0=0, select bank0
  8079  022C  1303               	bcf	3,6	;RP1=0, select bank0
  8080  022D  00C0               	movwf	trapmf@x
  8081  022E  1683               	bsf	3,5	;RP0=1, select bank1
  8082  022F  1303               	bcf	3,6	;RP1=0, select bank1
  8083  0230  0846               	movf	(ISR@x+1)^(0+128),w
  8084  0231  1283               	bcf	3,5	;RP0=0, select bank0
  8085  0232  1303               	bcf	3,6	;RP1=0, select bank0
  8086  0233  00C1               	movwf	trapmf@x+1
  8087  0234  1683               	bsf	3,5	;RP0=1, select bank1
  8088  0235  1303               	bcf	3,6	;RP1=0, select bank1
  8089  0236  0847               	movf	(ISR@x+2)^(0+128),w
  8090  0237  1283               	bcf	3,5	;RP0=0, select bank0
  8091  0238  1303               	bcf	3,6	;RP1=0, select bank0
  8092  0239  00C2               	movwf	trapmf@x+2
  8093  023A  3000               	movlw	0
  8094  023B  00C3               	movwf	trapmf@a
  8095  023C  3000               	movlw	0
  8096  023D  00C4               	movwf	trapmf@a+1
  8097  023E  3040               	movlw	64
  8098  023F  00C5               	movwf	trapmf@a+2
  8099  0240  3000               	movlw	0
  8100  0241  00C6               	movwf	trapmf@b
  8101  0242  30A0               	movlw	160
  8102  0243  00C7               	movwf	trapmf@b+1
  8103  0244  3040               	movlw	64
  8104  0245  00C8               	movwf	trapmf@b+2
  8105  0246  3000               	movlw	0
  8106  0247  00C9               	movwf	trapmf@c
  8107  0248  30A0               	movlw	160
  8108  0249  00CA               	movwf	trapmf@c+1
  8109  024A  3040               	movlw	64
  8110  024B  00CB               	movwf	trapmf@c+2
  8111  024C  3000               	movlw	0
  8112  024D  00CC               	movwf	trapmf@d
  8113  024E  3020               	movlw	32
  8114  024F  00CD               	movwf	trapmf@d+1
  8115  0250  3041               	movlw	65
  8116  0251  00CE               	movwf	trapmf@d+2
  8117  0252  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8118  0257  1283               	bcf	3,5	;RP0=0, select bank0
  8119  0258  1303               	bcf	3,6	;RP1=0, select bank0
  8120  0259  0840               	movf	?_trapmf,w
  8121  025A  1783               	bsf	3,7	;select IRP bank2
  8122  025B  0080               	movwf	0
  8123  025C  0A84               	incf	4,f
  8124  025D  0841               	movf	?_trapmf+1,w
  8125  025E  0080               	movwf	0
  8126  025F  0A84               	incf	4,f
  8127  0260  0842               	movf	?_trapmf+2,w
  8128  0261  0080               	movwf	0
  8129                           
  8130                           ;main.c: 312: if (rMedio[a] >= rule)
  8131  0262  3003               	movlw	3
  8132  0263  00E2               	movwf	??_ISR
  8133  0264  0862               	movf	??_ISR,w
  8134  0265  00F0               	movwf	___bmul@multiplicand
  8135  0266  1683               	bsf	3,5	;RP0=1, select bank1
  8136  0267  1303               	bcf	3,6	;RP1=0, select bank1
  8137  0268  0839               	movf	ISR@a_244^(0+128),w
  8138  0269  120A  118A  27EC  120A  118A  	fcall	___bmul
  8139  026E  3E40               	addlw	_rMedio& (0+255)
  8140  026F  0084               	movwf	4
  8141  0270  1783               	bsf	3,7	;select IRP bank2
  8142  0271  0800               	movf	0,w
  8143  0272  00F4               	movwf	___ftge@ff1
  8144  0273  0A84               	incf	4,f
  8145  0274  0800               	movf	0,w
  8146  0275  00F5               	movwf	___ftge@ff1+1
  8147  0276  0A84               	incf	4,f
  8148  0277  0800               	movf	0,w
  8149  0278  00F6               	movwf	___ftge@ff1+2
  8150  0279  1683               	bsf	3,5	;RP0=1, select bank1
  8151  027A  1303               	bcf	3,6	;RP1=0, select bank1
  8152  027B  0840               	movf	ISR@rule^(0+128),w
  8153  027C  00F7               	movwf	___ftge@ff2
  8154  027D  0841               	movf	(ISR@rule+1)^(0+128),w
  8155  027E  00F8               	movwf	___ftge@ff2+1
  8156  027F  0842               	movf	(ISR@rule+2)^(0+128),w
  8157  0280  00F9               	movwf	___ftge@ff2+2
  8158  0281  160A  118A  2414  120A  118A  	fcall	___ftge
  8159  0286  1C03               	btfss	3,0
  8160  0287  2AA3               	goto	i1l3887
  8161                           
  8162                           ;main.c: 313: {
  8163                           ;main.c: 314: rMedio[a] = rule;
  8164  0288  3003               	movlw	3
  8165  0289  1283               	bcf	3,5	;RP0=0, select bank0
  8166  028A  1303               	bcf	3,6	;RP1=0, select bank0
  8167  028B  00E2               	movwf	??_ISR
  8168  028C  0862               	movf	??_ISR,w
  8169  028D  00F0               	movwf	___bmul@multiplicand
  8170  028E  1683               	bsf	3,5	;RP0=1, select bank1
  8171  028F  1303               	bcf	3,6	;RP1=0, select bank1
  8172  0290  0839               	movf	ISR@a_244^(0+128),w
  8173  0291  120A  118A  27EC  120A  118A  	fcall	___bmul
  8174  0296  3E40               	addlw	_rMedio& (0+255)
  8175  0297  0084               	movwf	4
  8176  0298  1683               	bsf	3,5	;RP0=1, select bank1
  8177  0299  1303               	bcf	3,6	;RP1=0, select bank1
  8178  029A  0840               	movf	ISR@rule^(0+128),w
  8179  029B  1783               	bsf	3,7	;select IRP bank2
  8180  029C  0080               	movwf	0
  8181  029D  0A84               	incf	4,f
  8182  029E  0841               	movf	(ISR@rule+1)^(0+128),w
  8183  029F  0080               	movwf	0
  8184  02A0  0A84               	incf	4,f
  8185  02A1  0842               	movf	(ISR@rule+2)^(0+128),w
  8186  02A2  0080               	movwf	0
  8187  02A3                     i1l3887:	
  8188                           
  8189                           ;main.c: 315: }
  8190                           ;main.c: 317: x += 1;
  8191  02A3  3000               	movlw	0
  8192  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  8193  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  8194  02A6  00A3               	movwf	___ftadd@f1
  8195  02A7  3080               	movlw	128
  8196  02A8  00A4               	movwf	___ftadd@f1+1
  8197  02A9  303F               	movlw	63
  8198  02AA  00A5               	movwf	___ftadd@f1+2
  8199  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  8200  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  8201  02AD  0845               	movf	ISR@x^(0+128),w
  8202  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  8203  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  8204  02B0  00A6               	movwf	___ftadd@f2
  8205  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  8206  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  8207  02B3  0846               	movf	(ISR@x+1)^(0+128),w
  8208  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  8209  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  8210  02B6  00A7               	movwf	___ftadd@f2+1
  8211  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  8212  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  8213  02B9  0847               	movf	(ISR@x+2)^(0+128),w
  8214  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  8215  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  8216  02BC  00A8               	movwf	___ftadd@f2+2
  8217  02BD  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8218  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  8219  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  8220  02C4  0823               	movf	?___ftadd,w
  8221  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  8222  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  8223  02C7  00C5               	movwf	ISR@x^(0+128)
  8224  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  8225  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  8226  02CA  0824               	movf	?___ftadd+1,w
  8227  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  8228  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  8229  02CD  00C6               	movwf	(ISR@x+1)^(0+128)
  8230  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  8231  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  8232  02D0  0825               	movf	?___ftadd+2,w
  8233  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  8234  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  8235  02D3  00C7               	movwf	(ISR@x+2)^(0+128)
  8236  02D4  3001               	movlw	1
  8237  02D5  07B9               	addwf	ISR@a_244^(0+128),f
  8238  02D6  1803               	skipnc
  8239  02D7  0ABA               	incf	(ISR@a_244+1)^(0+128),f
  8240  02D8  3000               	movlw	0
  8241  02D9  07BA               	addwf	(ISR@a_244+1)^(0+128),f
  8242  02DA  083A               	movf	(ISR@a_244+1)^(0+128),w
  8243  02DB  3A80               	xorlw	128
  8244  02DC  00FF               	movwf	127
  8245  02DD  3080               	movlw	128
  8246  02DE  027F               	subwf	127,w
  8247  02DF  1D03               	skipz
  8248  02E0  2AE3               	goto	u563_25
  8249  02E1  3010               	movlw	16
  8250  02E2  0239               	subwf	ISR@a_244^(0+128),w
  8251  02E3                     u563_25:	
  8252  02E3  1C03               	skipc
  8253  02E4  2A18               	goto	i1l3883
  8254  02E5                     i1l3893:	
  8255                           
  8256                           ;main.c: 318: }
  8257                           ;main.c: 319: }
  8258                           ;main.c: 322: if (erro_atual >= 1001)
  8259  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  8260  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  8261  02E7  085B               	movf	(_erro_atual+1)^(0+128),w
  8262  02E8  3A80               	xorlw	128
  8263  02E9  00FF               	movwf	127
  8264  02EA  3083               	movlw	131
  8265  02EB  027F               	subwf	127,w
  8266  02EC  1D03               	skipz
  8267  02ED  2AF0               	goto	u564_25
  8268  02EE  30E9               	movlw	233
  8269  02EF  025A               	subwf	_erro_atual^(0+128),w
  8270  02F0                     u564_25:	
  8271  02F0  1C03               	skipc
  8272  02F1  2C16               	goto	i1l3915
  8273                           
  8274                           ;main.c: 323: {
  8275                           ;main.c: 325: rule = trapmf(erro_atual, 1001, 1500, 2000, 2001);
  8276  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  8277  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  8278  02F4  085B               	movf	(_erro_atual+1)^(0+128),w
  8279  02F5  01F9               	clrf	___awtoft@c+1
  8280  02F6  07F9               	addwf	___awtoft@c+1,f
  8281  02F7  085A               	movf	_erro_atual^(0+128),w
  8282  02F8  01F8               	clrf	___awtoft@c
  8283  02F9  07F8               	addwf	___awtoft@c,f
  8284  02FA  160A  118A  21DD  120A  118A  	fcall	___awtoft
  8285  02FF  0878               	movf	?___awtoft,w
  8286  0300  1283               	bcf	3,5	;RP0=0, select bank0
  8287  0301  1303               	bcf	3,6	;RP1=0, select bank0
  8288  0302  00C0               	movwf	trapmf@x
  8289  0303  0879               	movf	?___awtoft+1,w
  8290  0304  00C1               	movwf	trapmf@x+1
  8291  0305  087A               	movf	?___awtoft+2,w
  8292  0306  00C2               	movwf	trapmf@x+2
  8293  0307  3040               	movlw	64
  8294  0308  00C3               	movwf	trapmf@a
  8295  0309  307A               	movlw	122
  8296  030A  00C4               	movwf	trapmf@a+1
  8297  030B  3044               	movlw	68
  8298  030C  00C5               	movwf	trapmf@a+2
  8299  030D  3080               	movlw	128
  8300  030E  00C6               	movwf	trapmf@b
  8301  030F  30BB               	movlw	187
  8302  0310  00C7               	movwf	trapmf@b+1
  8303  0311  3044               	movlw	68
  8304  0312  00C8               	movwf	trapmf@b+2
  8305  0313  3000               	movlw	0
  8306  0314  00C9               	movwf	trapmf@c
  8307  0315  30FA               	movlw	250
  8308  0316  00CA               	movwf	trapmf@c+1
  8309  0317  3044               	movlw	68
  8310  0318  00CB               	movwf	trapmf@c+2
  8311  0319  3020               	movlw	32
  8312  031A  00CC               	movwf	trapmf@d
  8313  031B  30FA               	movlw	250
  8314  031C  00CD               	movwf	trapmf@d+1
  8315  031D  3044               	movlw	68
  8316  031E  00CE               	movwf	trapmf@d+2
  8317  031F  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8318  0324  1283               	bcf	3,5	;RP0=0, select bank0
  8319  0325  1303               	bcf	3,6	;RP1=0, select bank0
  8320  0326  0840               	movf	?_trapmf,w
  8321  0327  1683               	bsf	3,5	;RP0=1, select bank1
  8322  0328  1303               	bcf	3,6	;RP1=0, select bank1
  8323  0329  00C0               	movwf	ISR@rule^(0+128)
  8324  032A  1283               	bcf	3,5	;RP0=0, select bank0
  8325  032B  1303               	bcf	3,6	;RP1=0, select bank0
  8326  032C  0841               	movf	?_trapmf+1,w
  8327  032D  1683               	bsf	3,5	;RP0=1, select bank1
  8328  032E  1303               	bcf	3,6	;RP1=0, select bank1
  8329  032F  00C1               	movwf	(ISR@rule+1)^(0+128)
  8330  0330  1283               	bcf	3,5	;RP0=0, select bank0
  8331  0331  1303               	bcf	3,6	;RP1=0, select bank0
  8332  0332  0842               	movf	?_trapmf+2,w
  8333  0333  1683               	bsf	3,5	;RP0=1, select bank1
  8334  0334  1303               	bcf	3,6	;RP1=0, select bank1
  8335  0335  00C2               	movwf	(ISR@rule+2)^(0+128)
  8336                           
  8337                           ;main.c: 327: x = 0;
  8338  0336  3000               	movlw	0
  8339  0337  00C5               	movwf	ISR@x^(0+128)
  8340  0338  3000               	movlw	0
  8341  0339  00C6               	movwf	(ISR@x+1)^(0+128)
  8342  033A  3000               	movlw	0
  8343  033B  00C7               	movwf	(ISR@x+2)^(0+128)
  8344                           
  8345                           ;main.c: 328: for (int a = 0; a <= 15; a++)
  8346  033C  01BB               	clrf	ISR@a_245^(0+128)
  8347  033D  01BC               	clrf	(ISR@a_245+1)^(0+128)
  8348  033E  083C               	movf	(ISR@a_245+1)^(0+128),w
  8349  033F  3A80               	xorlw	128
  8350  0340  00FF               	movwf	127
  8351  0341  3080               	movlw	128
  8352  0342  027F               	subwf	127,w
  8353  0343  1D03               	skipz
  8354  0344  2B47               	goto	u565_25
  8355  0345  3010               	movlw	16
  8356  0346  023B               	subwf	ISR@a_245^(0+128),w
  8357  0347                     u565_25:	
  8358  0347  1803               	btfsc	3,0
  8359  0348  2C16               	goto	i1l3915
  8360  0349                     i1l3905:	
  8361                           
  8362                           ;main.c: 329: {
  8363                           ;main.c: 330: rGrande[a] = trapmf(x, 5, 10, 15, 16);
  8364  0349  3003               	movlw	3
  8365  034A  1283               	bcf	3,5	;RP0=0, select bank0
  8366  034B  1303               	bcf	3,6	;RP1=0, select bank0
  8367  034C  00E2               	movwf	??_ISR
  8368  034D  0862               	movf	??_ISR,w
  8369  034E  00F0               	movwf	___bmul@multiplicand
  8370  034F  1683               	bsf	3,5	;RP0=1, select bank1
  8371  0350  1303               	bcf	3,6	;RP1=0, select bank1
  8372  0351  083B               	movf	ISR@a_245^(0+128),w
  8373  0352  120A  118A  27EC  120A  118A  	fcall	___bmul
  8374  0357  3E10               	addlw	_rGrande& (0+255)
  8375  0358  0084               	movwf	4
  8376  0359  1683               	bsf	3,5	;RP0=1, select bank1
  8377  035A  1303               	bcf	3,6	;RP1=0, select bank1
  8378  035B  0845               	movf	ISR@x^(0+128),w
  8379  035C  1283               	bcf	3,5	;RP0=0, select bank0
  8380  035D  1303               	bcf	3,6	;RP1=0, select bank0
  8381  035E  00C0               	movwf	trapmf@x
  8382  035F  1683               	bsf	3,5	;RP0=1, select bank1
  8383  0360  1303               	bcf	3,6	;RP1=0, select bank1
  8384  0361  0846               	movf	(ISR@x+1)^(0+128),w
  8385  0362  1283               	bcf	3,5	;RP0=0, select bank0
  8386  0363  1303               	bcf	3,6	;RP1=0, select bank0
  8387  0364  00C1               	movwf	trapmf@x+1
  8388  0365  1683               	bsf	3,5	;RP0=1, select bank1
  8389  0366  1303               	bcf	3,6	;RP1=0, select bank1
  8390  0367  0847               	movf	(ISR@x+2)^(0+128),w
  8391  0368  1283               	bcf	3,5	;RP0=0, select bank0
  8392  0369  1303               	bcf	3,6	;RP1=0, select bank0
  8393  036A  00C2               	movwf	trapmf@x+2
  8394  036B  3000               	movlw	0
  8395  036C  00C3               	movwf	trapmf@a
  8396  036D  30A0               	movlw	160
  8397  036E  00C4               	movwf	trapmf@a+1
  8398  036F  3040               	movlw	64
  8399  0370  00C5               	movwf	trapmf@a+2
  8400  0371  3000               	movlw	0
  8401  0372  00C6               	movwf	trapmf@b
  8402  0373  3020               	movlw	32
  8403  0374  00C7               	movwf	trapmf@b+1
  8404  0375  3041               	movlw	65
  8405  0376  00C8               	movwf	trapmf@b+2
  8406  0377  3000               	movlw	0
  8407  0378  00C9               	movwf	trapmf@c
  8408  0379  3070               	movlw	112
  8409  037A  00CA               	movwf	trapmf@c+1
  8410  037B  3041               	movlw	65
  8411  037C  00CB               	movwf	trapmf@c+2
  8412  037D  3000               	movlw	0
  8413  037E  00CC               	movwf	trapmf@d
  8414  037F  3080               	movlw	128
  8415  0380  00CD               	movwf	trapmf@d+1
  8416  0381  3041               	movlw	65
  8417  0382  00CE               	movwf	trapmf@d+2
  8418  0383  120A  158A  26AA  120A  118A  	fcall	_trapmf
  8419  0388  1283               	bcf	3,5	;RP0=0, select bank0
  8420  0389  1303               	bcf	3,6	;RP1=0, select bank0
  8421  038A  0840               	movf	?_trapmf,w
  8422  038B  1783               	bsf	3,7	;select IRP bank2
  8423  038C  0080               	movwf	0
  8424  038D  0A84               	incf	4,f
  8425  038E  0841               	movf	?_trapmf+1,w
  8426  038F  0080               	movwf	0
  8427  0390  0A84               	incf	4,f
  8428  0391  0842               	movf	?_trapmf+2,w
  8429  0392  0080               	movwf	0
  8430                           
  8431                           ;main.c: 332: if (rGrande[a] >= rule)
  8432  0393  3003               	movlw	3
  8433  0394  00E2               	movwf	??_ISR
  8434  0395  0862               	movf	??_ISR,w
  8435  0396  00F0               	movwf	___bmul@multiplicand
  8436  0397  1683               	bsf	3,5	;RP0=1, select bank1
  8437  0398  1303               	bcf	3,6	;RP1=0, select bank1
  8438  0399  083B               	movf	ISR@a_245^(0+128),w
  8439  039A  120A  118A  27EC  120A  118A  	fcall	___bmul
  8440  039F  3E10               	addlw	_rGrande& (0+255)
  8441  03A0  0084               	movwf	4
  8442  03A1  1783               	bsf	3,7	;select IRP bank2
  8443  03A2  0800               	movf	0,w
  8444  03A3  00F4               	movwf	___ftge@ff1
  8445  03A4  0A84               	incf	4,f
  8446  03A5  0800               	movf	0,w
  8447  03A6  00F5               	movwf	___ftge@ff1+1
  8448  03A7  0A84               	incf	4,f
  8449  03A8  0800               	movf	0,w
  8450  03A9  00F6               	movwf	___ftge@ff1+2
  8451  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  8452  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  8453  03AC  0840               	movf	ISR@rule^(0+128),w
  8454  03AD  00F7               	movwf	___ftge@ff2
  8455  03AE  0841               	movf	(ISR@rule+1)^(0+128),w
  8456  03AF  00F8               	movwf	___ftge@ff2+1
  8457  03B0  0842               	movf	(ISR@rule+2)^(0+128),w
  8458  03B1  00F9               	movwf	___ftge@ff2+2
  8459  03B2  160A  118A  2414  120A  118A  	fcall	___ftge
  8460  03B7  1C03               	btfss	3,0
  8461  03B8  2BD4               	goto	i1l3909
  8462                           
  8463                           ;main.c: 333: {
  8464                           ;main.c: 334: rGrande[a] = rule;
  8465  03B9  3003               	movlw	3
  8466  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  8467  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  8468  03BC  00E2               	movwf	??_ISR
  8469  03BD  0862               	movf	??_ISR,w
  8470  03BE  00F0               	movwf	___bmul@multiplicand
  8471  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  8472  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  8473  03C1  083B               	movf	ISR@a_245^(0+128),w
  8474  03C2  120A  118A  27EC  120A  118A  	fcall	___bmul
  8475  03C7  3E10               	addlw	_rGrande& (0+255)
  8476  03C8  0084               	movwf	4
  8477  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  8478  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  8479  03CB  0840               	movf	ISR@rule^(0+128),w
  8480  03CC  1783               	bsf	3,7	;select IRP bank2
  8481  03CD  0080               	movwf	0
  8482  03CE  0A84               	incf	4,f
  8483  03CF  0841               	movf	(ISR@rule+1)^(0+128),w
  8484  03D0  0080               	movwf	0
  8485  03D1  0A84               	incf	4,f
  8486  03D2  0842               	movf	(ISR@rule+2)^(0+128),w
  8487  03D3  0080               	movwf	0
  8488  03D4                     i1l3909:	
  8489                           
  8490                           ;main.c: 335: }
  8491                           ;main.c: 337: x += 1;
  8492  03D4  3000               	movlw	0
  8493  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  8494  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  8495  03D7  00A3               	movwf	___ftadd@f1
  8496  03D8  3080               	movlw	128
  8497  03D9  00A4               	movwf	___ftadd@f1+1
  8498  03DA  303F               	movlw	63
  8499  03DB  00A5               	movwf	___ftadd@f1+2
  8500  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  8501  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  8502  03DE  0845               	movf	ISR@x^(0+128),w
  8503  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  8504  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  8505  03E1  00A6               	movwf	___ftadd@f2
  8506  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  8507  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  8508  03E4  0846               	movf	(ISR@x+1)^(0+128),w
  8509  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  8510  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  8511  03E7  00A7               	movwf	___ftadd@f2+1
  8512  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  8513  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  8514  03EA  0847               	movf	(ISR@x+2)^(0+128),w
  8515  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  8516  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  8517  03ED  00A8               	movwf	___ftadd@f2+2
  8518  03EE  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8519  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  8520  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  8521  03F5  0823               	movf	?___ftadd,w
  8522  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  8523  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  8524  03F8  00C5               	movwf	ISR@x^(0+128)
  8525  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  8526  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  8527  03FB  0824               	movf	?___ftadd+1,w
  8528  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  8529  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  8530  03FE  00C6               	movwf	(ISR@x+1)^(0+128)
  8531  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  8532  0400  1303               	bcf	3,6	;RP1=0, select bank0
  8533  0401  0825               	movf	?___ftadd+2,w
  8534  0402  1683               	bsf	3,5	;RP0=1, select bank1
  8535  0403  1303               	bcf	3,6	;RP1=0, select bank1
  8536  0404  00C7               	movwf	(ISR@x+2)^(0+128)
  8537  0405  3001               	movlw	1
  8538  0406  07BB               	addwf	ISR@a_245^(0+128),f
  8539  0407  1803               	skipnc
  8540  0408  0ABC               	incf	(ISR@a_245+1)^(0+128),f
  8541  0409  3000               	movlw	0
  8542  040A  07BC               	addwf	(ISR@a_245+1)^(0+128),f
  8543  040B  083C               	movf	(ISR@a_245+1)^(0+128),w
  8544  040C  3A80               	xorlw	128
  8545  040D  00FF               	movwf	127
  8546  040E  3080               	movlw	128
  8547  040F  027F               	subwf	127,w
  8548  0410  1D03               	skipz
  8549  0411  2C14               	goto	u567_25
  8550  0412  3010               	movlw	16
  8551  0413  023B               	subwf	ISR@a_245^(0+128),w
  8552  0414                     u567_25:	
  8553  0414  1C03               	skipc
  8554  0415  2B49               	goto	i1l3905
  8555  0416                     i1l3915:	
  8556                           
  8557                           ;main.c: 338: }
  8558                           ;main.c: 339: }
  8559                           ;main.c: 342: x = 0;
  8560  0416  3000               	movlw	0
  8561  0417  1683               	bsf	3,5	;RP0=1, select bank1
  8562  0418  1303               	bcf	3,6	;RP1=0, select bank1
  8563  0419  00C5               	movwf	ISR@x^(0+128)
  8564  041A  3000               	movlw	0
  8565  041B  00C6               	movwf	(ISR@x+1)^(0+128)
  8566  041C  3000               	movlw	0
  8567  041D  00C7               	movwf	(ISR@x+2)^(0+128)
  8568                           
  8569                           ;main.c: 343: float total_area = 0;
  8570  041E  3000               	movlw	0
  8571  041F  00BD               	movwf	ISR@total_area^(0+128)
  8572  0420  3000               	movlw	0
  8573  0421  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8574  0422  3000               	movlw	0
  8575  0423  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8576                           
  8577                           ;main.c: 344: float soma = 0;
  8578  0424  3000               	movlw	0
  8579  0425  00B2               	movwf	ISR@soma^(0+128)
  8580  0426  3000               	movlw	0
  8581  0427  00B3               	movwf	(ISR@soma+1)^(0+128)
  8582  0428  3000               	movlw	0
  8583  0429  00B4               	movwf	(ISR@soma+2)^(0+128)
  8584                           
  8585                           ;main.c: 345: for (int a = 0; a <= 15; a++)
  8586  042A  01C3               	clrf	ISR@a_248^(0+128)
  8587  042B  01C4               	clrf	(ISR@a_248+1)^(0+128)
  8588  042C  0844               	movf	(ISR@a_248+1)^(0+128),w
  8589  042D  3A80               	xorlw	128
  8590  042E  00FF               	movwf	127
  8591  042F  3080               	movlw	128
  8592  0430  027F               	subwf	127,w
  8593  0431  1D03               	skipz
  8594  0432  2C35               	goto	u568_25
  8595  0433  3010               	movlw	16
  8596  0434  0243               	subwf	ISR@a_248^(0+128),w
  8597  0435                     u568_25:	
  8598  0435  1803               	btfsc	3,0
  8599  0436  2EB1               	goto	i1l3945
  8600  0437                     i1l172:	
  8601                           
  8602                           ;main.c: 346: {
  8603                           ;main.c: 347: if (a >= 0 && a <= 5)
  8604  0437  1683               	bsf	3,5	;RP0=1, select bank1
  8605  0438  1303               	bcf	3,6	;RP1=0, select bank1
  8606  0439  1BC4               	btfsc	(ISR@a_248+1)^(0+128),7
  8607  043A  2CED               	goto	i1l3927
  8608  043B  0844               	movf	(ISR@a_248+1)^(0+128),w
  8609  043C  3A80               	xorlw	128
  8610  043D  00FF               	movwf	127
  8611  043E  3080               	movlw	128
  8612  043F  027F               	subwf	127,w
  8613  0440  1D03               	skipz
  8614  0441  2C44               	goto	u570_25
  8615  0442  3006               	movlw	6
  8616  0443  0243               	subwf	ISR@a_248^(0+128),w
  8617  0444                     u570_25:	
  8618  0444  1803               	skipnc
  8619  0445  2CED               	goto	i1l3927
  8620                           
  8621                           ;main.c: 348: {
  8622                           ;main.c: 349: total_area += rBaixo[a];
  8623  0446  3003               	movlw	3
  8624  0447  1283               	bcf	3,5	;RP0=0, select bank0
  8625  0448  1303               	bcf	3,6	;RP1=0, select bank0
  8626  0449  00E2               	movwf	??_ISR
  8627  044A  0862               	movf	??_ISR,w
  8628  044B  00F0               	movwf	___bmul@multiplicand
  8629  044C  1683               	bsf	3,5	;RP0=1, select bank1
  8630  044D  1303               	bcf	3,6	;RP1=0, select bank1
  8631  044E  0843               	movf	ISR@a_248^(0+128),w
  8632  044F  120A  118A  27EC  120A  118A  	fcall	___bmul
  8633  0454  3E90               	addlw	_rBaixo& (0+255)
  8634  0455  0084               	movwf	4
  8635  0456  1783               	bsf	3,7	;select IRP bank3
  8636  0457  0800               	movf	0,w
  8637  0458  1283               	bcf	3,5	;RP0=0, select bank0
  8638  0459  1303               	bcf	3,6	;RP1=0, select bank0
  8639  045A  00A3               	movwf	___ftadd@f1
  8640  045B  0A84               	incf	4,f
  8641  045C  0800               	movf	0,w
  8642  045D  00A4               	movwf	___ftadd@f1+1
  8643  045E  0A84               	incf	4,f
  8644  045F  0800               	movf	0,w
  8645  0460  00A5               	movwf	___ftadd@f1+2
  8646  0461  1683               	bsf	3,5	;RP0=1, select bank1
  8647  0462  1303               	bcf	3,6	;RP1=0, select bank1
  8648  0463  083D               	movf	ISR@total_area^(0+128),w
  8649  0464  1283               	bcf	3,5	;RP0=0, select bank0
  8650  0465  1303               	bcf	3,6	;RP1=0, select bank0
  8651  0466  00A6               	movwf	___ftadd@f2
  8652  0467  1683               	bsf	3,5	;RP0=1, select bank1
  8653  0468  1303               	bcf	3,6	;RP1=0, select bank1
  8654  0469  083E               	movf	(ISR@total_area+1)^(0+128),w
  8655  046A  1283               	bcf	3,5	;RP0=0, select bank0
  8656  046B  1303               	bcf	3,6	;RP1=0, select bank0
  8657  046C  00A7               	movwf	___ftadd@f2+1
  8658  046D  1683               	bsf	3,5	;RP0=1, select bank1
  8659  046E  1303               	bcf	3,6	;RP1=0, select bank1
  8660  046F  083F               	movf	(ISR@total_area+2)^(0+128),w
  8661  0470  1283               	bcf	3,5	;RP0=0, select bank0
  8662  0471  1303               	bcf	3,6	;RP1=0, select bank0
  8663  0472  00A8               	movwf	___ftadd@f2+2
  8664  0473  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8665  0478  1283               	bcf	3,5	;RP0=0, select bank0
  8666  0479  1303               	bcf	3,6	;RP1=0, select bank0
  8667  047A  0823               	movf	?___ftadd,w
  8668  047B  1683               	bsf	3,5	;RP0=1, select bank1
  8669  047C  1303               	bcf	3,6	;RP1=0, select bank1
  8670  047D  00BD               	movwf	ISR@total_area^(0+128)
  8671  047E  1283               	bcf	3,5	;RP0=0, select bank0
  8672  047F  1303               	bcf	3,6	;RP1=0, select bank0
  8673  0480  0824               	movf	?___ftadd+1,w
  8674  0481  1683               	bsf	3,5	;RP0=1, select bank1
  8675  0482  1303               	bcf	3,6	;RP1=0, select bank1
  8676  0483  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8677  0484  1283               	bcf	3,5	;RP0=0, select bank0
  8678  0485  1303               	bcf	3,6	;RP1=0, select bank0
  8679  0486  0825               	movf	?___ftadd+2,w
  8680  0487  1683               	bsf	3,5	;RP0=1, select bank1
  8681  0488  1303               	bcf	3,6	;RP1=0, select bank1
  8682  0489  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8683                           
  8684                           ;main.c: 350: soma += (x * rBaixo[a]);
  8685  048A  3003               	movlw	3
  8686  048B  1283               	bcf	3,5	;RP0=0, select bank0
  8687  048C  1303               	bcf	3,6	;RP1=0, select bank0
  8688  048D  00E2               	movwf	??_ISR
  8689  048E  0862               	movf	??_ISR,w
  8690  048F  00F0               	movwf	___bmul@multiplicand
  8691  0490  1683               	bsf	3,5	;RP0=1, select bank1
  8692  0491  1303               	bcf	3,6	;RP1=0, select bank1
  8693  0492  0843               	movf	ISR@a_248^(0+128),w
  8694  0493  120A  118A  27EC  120A  118A  	fcall	___bmul
  8695  0498  3E90               	addlw	_rBaixo& (0+255)
  8696  0499  0084               	movwf	4
  8697  049A  1783               	bsf	3,7	;select IRP bank3
  8698  049B  0800               	movf	0,w
  8699  049C  1283               	bcf	3,5	;RP0=0, select bank0
  8700  049D  1303               	bcf	3,6	;RP1=0, select bank0
  8701  049E  00D5               	movwf	___ftmul@f2
  8702  049F  0A84               	incf	4,f
  8703  04A0  0800               	movf	0,w
  8704  04A1  00D6               	movwf	___ftmul@f2+1
  8705  04A2  0A84               	incf	4,f
  8706  04A3  0800               	movf	0,w
  8707  04A4  00D7               	movwf	___ftmul@f2+2
  8708  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  8709  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  8710  04A7  0845               	movf	ISR@x^(0+128),w
  8711  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  8712  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  8713  04AA  00D2               	movwf	___ftmul@f1
  8714  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  8715  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  8716  04AD  0846               	movf	(ISR@x+1)^(0+128),w
  8717  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  8718  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  8719  04B0  00D3               	movwf	___ftmul@f1+1
  8720  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  8721  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  8722  04B3  0847               	movf	(ISR@x+2)^(0+128),w
  8723  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  8724  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  8725  04B6  00D4               	movwf	___ftmul@f1+2
  8726  04B7  120A  158A  23F5  120A  118A  	fcall	___ftmul
  8727  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  8728  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  8729  04BE  0852               	movf	?___ftmul,w
  8730  04BF  00A3               	movwf	___ftadd@f1
  8731  04C0  0853               	movf	?___ftmul+1,w
  8732  04C1  00A4               	movwf	___ftadd@f1+1
  8733  04C2  0854               	movf	?___ftmul+2,w
  8734  04C3  00A5               	movwf	___ftadd@f1+2
  8735  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  8736  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  8737  04C6  0832               	movf	ISR@soma^(0+128),w
  8738  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  8739  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  8740  04C9  00A6               	movwf	___ftadd@f2
  8741  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  8742  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  8743  04CC  0833               	movf	(ISR@soma+1)^(0+128),w
  8744  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8745  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8746  04CF  00A7               	movwf	___ftadd@f2+1
  8747  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  8748  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  8749  04D2  0834               	movf	(ISR@soma+2)^(0+128),w
  8750  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  8751  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  8752  04D5  00A8               	movwf	___ftadd@f2+2
  8753  04D6  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8754  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  8755  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  8756  04DD  0823               	movf	?___ftadd,w
  8757  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  8758  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  8759  04E0  00B2               	movwf	ISR@soma^(0+128)
  8760  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  8761  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  8762  04E3  0824               	movf	?___ftadd+1,w
  8763  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  8764  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  8765  04E6  00B3               	movwf	(ISR@soma+1)^(0+128)
  8766  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  8767  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  8768  04E9  0825               	movf	?___ftadd+2,w
  8769  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  8770  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  8771  04EC  00B4               	movwf	(ISR@soma+2)^(0+128)
  8772  04ED                     i1l3927:	
  8773                           
  8774                           ;main.c: 351: }
  8775                           ;main.c: 353: if (a >= 5 && a <= 10)
  8776  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  8777  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  8778  04EF  0844               	movf	(ISR@a_248+1)^(0+128),w
  8779  04F0  3A80               	xorlw	128
  8780  04F1  00FF               	movwf	127
  8781  04F2  3080               	movlw	128
  8782  04F3  027F               	subwf	127,w
  8783  04F4  1D03               	skipz
  8784  04F5  2CF8               	goto	u571_25
  8785  04F6  3005               	movlw	5
  8786  04F7  0243               	subwf	ISR@a_248^(0+128),w
  8787  04F8                     u571_25:	
  8788  04F8  1C03               	skipc
  8789  04F9  2DAE               	goto	i1l3933
  8790  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  8791  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  8792  04FC  0844               	movf	(ISR@a_248+1)^(0+128),w
  8793  04FD  3A80               	xorlw	128
  8794  04FE  00FF               	movwf	127
  8795  04FF  3080               	movlw	128
  8796  0500  027F               	subwf	127,w
  8797  0501  1D03               	skipz
  8798  0502  2D05               	goto	u572_25
  8799  0503  300B               	movlw	11
  8800  0504  0243               	subwf	ISR@a_248^(0+128),w
  8801  0505                     u572_25:	
  8802  0505  1803               	skipnc
  8803  0506  2DAE               	goto	i1l3933
  8804                           
  8805                           ;main.c: 354: {
  8806                           ;main.c: 355: total_area += rMedio[a];
  8807  0507  3003               	movlw	3
  8808  0508  1283               	bcf	3,5	;RP0=0, select bank0
  8809  0509  1303               	bcf	3,6	;RP1=0, select bank0
  8810  050A  00E2               	movwf	??_ISR
  8811  050B  0862               	movf	??_ISR,w
  8812  050C  00F0               	movwf	___bmul@multiplicand
  8813  050D  1683               	bsf	3,5	;RP0=1, select bank1
  8814  050E  1303               	bcf	3,6	;RP1=0, select bank1
  8815  050F  0843               	movf	ISR@a_248^(0+128),w
  8816  0510  120A  118A  27EC  120A  118A  	fcall	___bmul
  8817  0515  3E40               	addlw	_rMedio& (0+255)
  8818  0516  0084               	movwf	4
  8819  0517  1783               	bsf	3,7	;select IRP bank2
  8820  0518  0800               	movf	0,w
  8821  0519  1283               	bcf	3,5	;RP0=0, select bank0
  8822  051A  1303               	bcf	3,6	;RP1=0, select bank0
  8823  051B  00A3               	movwf	___ftadd@f1
  8824  051C  0A84               	incf	4,f
  8825  051D  0800               	movf	0,w
  8826  051E  00A4               	movwf	___ftadd@f1+1
  8827  051F  0A84               	incf	4,f
  8828  0520  0800               	movf	0,w
  8829  0521  00A5               	movwf	___ftadd@f1+2
  8830  0522  1683               	bsf	3,5	;RP0=1, select bank1
  8831  0523  1303               	bcf	3,6	;RP1=0, select bank1
  8832  0524  083D               	movf	ISR@total_area^(0+128),w
  8833  0525  1283               	bcf	3,5	;RP0=0, select bank0
  8834  0526  1303               	bcf	3,6	;RP1=0, select bank0
  8835  0527  00A6               	movwf	___ftadd@f2
  8836  0528  1683               	bsf	3,5	;RP0=1, select bank1
  8837  0529  1303               	bcf	3,6	;RP1=0, select bank1
  8838  052A  083E               	movf	(ISR@total_area+1)^(0+128),w
  8839  052B  1283               	bcf	3,5	;RP0=0, select bank0
  8840  052C  1303               	bcf	3,6	;RP1=0, select bank0
  8841  052D  00A7               	movwf	___ftadd@f2+1
  8842  052E  1683               	bsf	3,5	;RP0=1, select bank1
  8843  052F  1303               	bcf	3,6	;RP1=0, select bank1
  8844  0530  083F               	movf	(ISR@total_area+2)^(0+128),w
  8845  0531  1283               	bcf	3,5	;RP0=0, select bank0
  8846  0532  1303               	bcf	3,6	;RP1=0, select bank0
  8847  0533  00A8               	movwf	___ftadd@f2+2
  8848  0534  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8849  0539  1283               	bcf	3,5	;RP0=0, select bank0
  8850  053A  1303               	bcf	3,6	;RP1=0, select bank0
  8851  053B  0823               	movf	?___ftadd,w
  8852  053C  1683               	bsf	3,5	;RP0=1, select bank1
  8853  053D  1303               	bcf	3,6	;RP1=0, select bank1
  8854  053E  00BD               	movwf	ISR@total_area^(0+128)
  8855  053F  1283               	bcf	3,5	;RP0=0, select bank0
  8856  0540  1303               	bcf	3,6	;RP1=0, select bank0
  8857  0541  0824               	movf	?___ftadd+1,w
  8858  0542  1683               	bsf	3,5	;RP0=1, select bank1
  8859  0543  1303               	bcf	3,6	;RP1=0, select bank1
  8860  0544  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8861  0545  1283               	bcf	3,5	;RP0=0, select bank0
  8862  0546  1303               	bcf	3,6	;RP1=0, select bank0
  8863  0547  0825               	movf	?___ftadd+2,w
  8864  0548  1683               	bsf	3,5	;RP0=1, select bank1
  8865  0549  1303               	bcf	3,6	;RP1=0, select bank1
  8866  054A  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8867                           
  8868                           ;main.c: 356: soma += (x * rMedio[a]);
  8869  054B  3003               	movlw	3
  8870  054C  1283               	bcf	3,5	;RP0=0, select bank0
  8871  054D  1303               	bcf	3,6	;RP1=0, select bank0
  8872  054E  00E2               	movwf	??_ISR
  8873  054F  0862               	movf	??_ISR,w
  8874  0550  00F0               	movwf	___bmul@multiplicand
  8875  0551  1683               	bsf	3,5	;RP0=1, select bank1
  8876  0552  1303               	bcf	3,6	;RP1=0, select bank1
  8877  0553  0843               	movf	ISR@a_248^(0+128),w
  8878  0554  120A  118A  27EC  120A  118A  	fcall	___bmul
  8879  0559  3E40               	addlw	_rMedio& (0+255)
  8880  055A  0084               	movwf	4
  8881  055B  1783               	bsf	3,7	;select IRP bank2
  8882  055C  0800               	movf	0,w
  8883  055D  1283               	bcf	3,5	;RP0=0, select bank0
  8884  055E  1303               	bcf	3,6	;RP1=0, select bank0
  8885  055F  00D5               	movwf	___ftmul@f2
  8886  0560  0A84               	incf	4,f
  8887  0561  0800               	movf	0,w
  8888  0562  00D6               	movwf	___ftmul@f2+1
  8889  0563  0A84               	incf	4,f
  8890  0564  0800               	movf	0,w
  8891  0565  00D7               	movwf	___ftmul@f2+2
  8892  0566  1683               	bsf	3,5	;RP0=1, select bank1
  8893  0567  1303               	bcf	3,6	;RP1=0, select bank1
  8894  0568  0845               	movf	ISR@x^(0+128),w
  8895  0569  1283               	bcf	3,5	;RP0=0, select bank0
  8896  056A  1303               	bcf	3,6	;RP1=0, select bank0
  8897  056B  00D2               	movwf	___ftmul@f1
  8898  056C  1683               	bsf	3,5	;RP0=1, select bank1
  8899  056D  1303               	bcf	3,6	;RP1=0, select bank1
  8900  056E  0846               	movf	(ISR@x+1)^(0+128),w
  8901  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8902  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8903  0571  00D3               	movwf	___ftmul@f1+1
  8904  0572  1683               	bsf	3,5	;RP0=1, select bank1
  8905  0573  1303               	bcf	3,6	;RP1=0, select bank1
  8906  0574  0847               	movf	(ISR@x+2)^(0+128),w
  8907  0575  1283               	bcf	3,5	;RP0=0, select bank0
  8908  0576  1303               	bcf	3,6	;RP1=0, select bank0
  8909  0577  00D4               	movwf	___ftmul@f1+2
  8910  0578  120A  158A  23F5  120A  118A  	fcall	___ftmul
  8911  057D  1283               	bcf	3,5	;RP0=0, select bank0
  8912  057E  1303               	bcf	3,6	;RP1=0, select bank0
  8913  057F  0852               	movf	?___ftmul,w
  8914  0580  00A3               	movwf	___ftadd@f1
  8915  0581  0853               	movf	?___ftmul+1,w
  8916  0582  00A4               	movwf	___ftadd@f1+1
  8917  0583  0854               	movf	?___ftmul+2,w
  8918  0584  00A5               	movwf	___ftadd@f1+2
  8919  0585  1683               	bsf	3,5	;RP0=1, select bank1
  8920  0586  1303               	bcf	3,6	;RP1=0, select bank1
  8921  0587  0832               	movf	ISR@soma^(0+128),w
  8922  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8923  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8924  058A  00A6               	movwf	___ftadd@f2
  8925  058B  1683               	bsf	3,5	;RP0=1, select bank1
  8926  058C  1303               	bcf	3,6	;RP1=0, select bank1
  8927  058D  0833               	movf	(ISR@soma+1)^(0+128),w
  8928  058E  1283               	bcf	3,5	;RP0=0, select bank0
  8929  058F  1303               	bcf	3,6	;RP1=0, select bank0
  8930  0590  00A7               	movwf	___ftadd@f2+1
  8931  0591  1683               	bsf	3,5	;RP0=1, select bank1
  8932  0592  1303               	bcf	3,6	;RP1=0, select bank1
  8933  0593  0834               	movf	(ISR@soma+2)^(0+128),w
  8934  0594  1283               	bcf	3,5	;RP0=0, select bank0
  8935  0595  1303               	bcf	3,6	;RP1=0, select bank0
  8936  0596  00A8               	movwf	___ftadd@f2+2
  8937  0597  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8938  059C  1283               	bcf	3,5	;RP0=0, select bank0
  8939  059D  1303               	bcf	3,6	;RP1=0, select bank0
  8940  059E  0823               	movf	?___ftadd,w
  8941  059F  1683               	bsf	3,5	;RP0=1, select bank1
  8942  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  8943  05A1  00B2               	movwf	ISR@soma^(0+128)
  8944  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  8945  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  8946  05A4  0824               	movf	?___ftadd+1,w
  8947  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  8948  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  8949  05A7  00B3               	movwf	(ISR@soma+1)^(0+128)
  8950  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  8951  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  8952  05AA  0825               	movf	?___ftadd+2,w
  8953  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  8954  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  8955  05AD  00B4               	movwf	(ISR@soma+2)^(0+128)
  8956  05AE                     i1l3933:	
  8957                           
  8958                           ;main.c: 357: }
  8959                           ;main.c: 359: if (a >= 10 && a <= 15)
  8960  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  8961  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  8962  05B0  0844               	movf	(ISR@a_248+1)^(0+128),w
  8963  05B1  3A80               	xorlw	128
  8964  05B2  00FF               	movwf	127
  8965  05B3  3080               	movlw	128
  8966  05B4  027F               	subwf	127,w
  8967  05B5  1D03               	skipz
  8968  05B6  2DB9               	goto	u573_25
  8969  05B7  300A               	movlw	10
  8970  05B8  0243               	subwf	ISR@a_248^(0+128),w
  8971  05B9                     u573_25:	
  8972  05B9  1C03               	skipc
  8973  05BA  2E6F               	goto	i1l3939
  8974  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  8975  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  8976  05BD  0844               	movf	(ISR@a_248+1)^(0+128),w
  8977  05BE  3A80               	xorlw	128
  8978  05BF  00FF               	movwf	127
  8979  05C0  3080               	movlw	128
  8980  05C1  027F               	subwf	127,w
  8981  05C2  1D03               	skipz
  8982  05C3  2DC6               	goto	u574_25
  8983  05C4  3010               	movlw	16
  8984  05C5  0243               	subwf	ISR@a_248^(0+128),w
  8985  05C6                     u574_25:	
  8986  05C6  1803               	skipnc
  8987  05C7  2E6F               	goto	i1l3939
  8988                           
  8989                           ;main.c: 360: {
  8990                           ;main.c: 361: total_area += rGrande[a];
  8991  05C8  3003               	movlw	3
  8992  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  8993  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  8994  05CB  00E2               	movwf	??_ISR
  8995  05CC  0862               	movf	??_ISR,w
  8996  05CD  00F0               	movwf	___bmul@multiplicand
  8997  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  8998  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  8999  05D0  0843               	movf	ISR@a_248^(0+128),w
  9000  05D1  120A  118A  27EC  120A  118A  	fcall	___bmul
  9001  05D6  3E10               	addlw	_rGrande& (0+255)
  9002  05D7  0084               	movwf	4
  9003  05D8  1783               	bsf	3,7	;select IRP bank2
  9004  05D9  0800               	movf	0,w
  9005  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  9006  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  9007  05DC  00A3               	movwf	___ftadd@f1
  9008  05DD  0A84               	incf	4,f
  9009  05DE  0800               	movf	0,w
  9010  05DF  00A4               	movwf	___ftadd@f1+1
  9011  05E0  0A84               	incf	4,f
  9012  05E1  0800               	movf	0,w
  9013  05E2  00A5               	movwf	___ftadd@f1+2
  9014  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  9015  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  9016  05E5  083D               	movf	ISR@total_area^(0+128),w
  9017  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  9018  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  9019  05E8  00A6               	movwf	___ftadd@f2
  9020  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  9021  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  9022  05EB  083E               	movf	(ISR@total_area+1)^(0+128),w
  9023  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  9024  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  9025  05EE  00A7               	movwf	___ftadd@f2+1
  9026  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  9027  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  9028  05F1  083F               	movf	(ISR@total_area+2)^(0+128),w
  9029  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  9030  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  9031  05F4  00A8               	movwf	___ftadd@f2+2
  9032  05F5  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9033  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  9034  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  9035  05FC  0823               	movf	?___ftadd,w
  9036  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  9037  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  9038  05FF  00BD               	movwf	ISR@total_area^(0+128)
  9039  0600  1283               	bcf	3,5	;RP0=0, select bank0
  9040  0601  1303               	bcf	3,6	;RP1=0, select bank0
  9041  0602  0824               	movf	?___ftadd+1,w
  9042  0603  1683               	bsf	3,5	;RP0=1, select bank1
  9043  0604  1303               	bcf	3,6	;RP1=0, select bank1
  9044  0605  00BE               	movwf	(ISR@total_area+1)^(0+128)
  9045  0606  1283               	bcf	3,5	;RP0=0, select bank0
  9046  0607  1303               	bcf	3,6	;RP1=0, select bank0
  9047  0608  0825               	movf	?___ftadd+2,w
  9048  0609  1683               	bsf	3,5	;RP0=1, select bank1
  9049  060A  1303               	bcf	3,6	;RP1=0, select bank1
  9050  060B  00BF               	movwf	(ISR@total_area+2)^(0+128)
  9051                           
  9052                           ;main.c: 362: soma += (x * rGrande[a]);
  9053  060C  3003               	movlw	3
  9054  060D  1283               	bcf	3,5	;RP0=0, select bank0
  9055  060E  1303               	bcf	3,6	;RP1=0, select bank0
  9056  060F  00E2               	movwf	??_ISR
  9057  0610  0862               	movf	??_ISR,w
  9058  0611  00F0               	movwf	___bmul@multiplicand
  9059  0612  1683               	bsf	3,5	;RP0=1, select bank1
  9060  0613  1303               	bcf	3,6	;RP1=0, select bank1
  9061  0614  0843               	movf	ISR@a_248^(0+128),w
  9062  0615  120A  118A  27EC  120A  118A  	fcall	___bmul
  9063  061A  3E10               	addlw	_rGrande& (0+255)
  9064  061B  0084               	movwf	4
  9065  061C  1783               	bsf	3,7	;select IRP bank2
  9066  061D  0800               	movf	0,w
  9067  061E  1283               	bcf	3,5	;RP0=0, select bank0
  9068  061F  1303               	bcf	3,6	;RP1=0, select bank0
  9069  0620  00D5               	movwf	___ftmul@f2
  9070  0621  0A84               	incf	4,f
  9071  0622  0800               	movf	0,w
  9072  0623  00D6               	movwf	___ftmul@f2+1
  9073  0624  0A84               	incf	4,f
  9074  0625  0800               	movf	0,w
  9075  0626  00D7               	movwf	___ftmul@f2+2
  9076  0627  1683               	bsf	3,5	;RP0=1, select bank1
  9077  0628  1303               	bcf	3,6	;RP1=0, select bank1
  9078  0629  0845               	movf	ISR@x^(0+128),w
  9079  062A  1283               	bcf	3,5	;RP0=0, select bank0
  9080  062B  1303               	bcf	3,6	;RP1=0, select bank0
  9081  062C  00D2               	movwf	___ftmul@f1
  9082  062D  1683               	bsf	3,5	;RP0=1, select bank1
  9083  062E  1303               	bcf	3,6	;RP1=0, select bank1
  9084  062F  0846               	movf	(ISR@x+1)^(0+128),w
  9085  0630  1283               	bcf	3,5	;RP0=0, select bank0
  9086  0631  1303               	bcf	3,6	;RP1=0, select bank0
  9087  0632  00D3               	movwf	___ftmul@f1+1
  9088  0633  1683               	bsf	3,5	;RP0=1, select bank1
  9089  0634  1303               	bcf	3,6	;RP1=0, select bank1
  9090  0635  0847               	movf	(ISR@x+2)^(0+128),w
  9091  0636  1283               	bcf	3,5	;RP0=0, select bank0
  9092  0637  1303               	bcf	3,6	;RP1=0, select bank0
  9093  0638  00D4               	movwf	___ftmul@f1+2
  9094  0639  120A  158A  23F5  120A  118A  	fcall	___ftmul
  9095  063E  1283               	bcf	3,5	;RP0=0, select bank0
  9096  063F  1303               	bcf	3,6	;RP1=0, select bank0
  9097  0640  0852               	movf	?___ftmul,w
  9098  0641  00A3               	movwf	___ftadd@f1
  9099  0642  0853               	movf	?___ftmul+1,w
  9100  0643  00A4               	movwf	___ftadd@f1+1
  9101  0644  0854               	movf	?___ftmul+2,w
  9102  0645  00A5               	movwf	___ftadd@f1+2
  9103  0646  1683               	bsf	3,5	;RP0=1, select bank1
  9104  0647  1303               	bcf	3,6	;RP1=0, select bank1
  9105  0648  0832               	movf	ISR@soma^(0+128),w
  9106  0649  1283               	bcf	3,5	;RP0=0, select bank0
  9107  064A  1303               	bcf	3,6	;RP1=0, select bank0
  9108  064B  00A6               	movwf	___ftadd@f2
  9109  064C  1683               	bsf	3,5	;RP0=1, select bank1
  9110  064D  1303               	bcf	3,6	;RP1=0, select bank1
  9111  064E  0833               	movf	(ISR@soma+1)^(0+128),w
  9112  064F  1283               	bcf	3,5	;RP0=0, select bank0
  9113  0650  1303               	bcf	3,6	;RP1=0, select bank0
  9114  0651  00A7               	movwf	___ftadd@f2+1
  9115  0652  1683               	bsf	3,5	;RP0=1, select bank1
  9116  0653  1303               	bcf	3,6	;RP1=0, select bank1
  9117  0654  0834               	movf	(ISR@soma+2)^(0+128),w
  9118  0655  1283               	bcf	3,5	;RP0=0, select bank0
  9119  0656  1303               	bcf	3,6	;RP1=0, select bank0
  9120  0657  00A8               	movwf	___ftadd@f2+2
  9121  0658  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9122  065D  1283               	bcf	3,5	;RP0=0, select bank0
  9123  065E  1303               	bcf	3,6	;RP1=0, select bank0
  9124  065F  0823               	movf	?___ftadd,w
  9125  0660  1683               	bsf	3,5	;RP0=1, select bank1
  9126  0661  1303               	bcf	3,6	;RP1=0, select bank1
  9127  0662  00B2               	movwf	ISR@soma^(0+128)
  9128  0663  1283               	bcf	3,5	;RP0=0, select bank0
  9129  0664  1303               	bcf	3,6	;RP1=0, select bank0
  9130  0665  0824               	movf	?___ftadd+1,w
  9131  0666  1683               	bsf	3,5	;RP0=1, select bank1
  9132  0667  1303               	bcf	3,6	;RP1=0, select bank1
  9133  0668  00B3               	movwf	(ISR@soma+1)^(0+128)
  9134  0669  1283               	bcf	3,5	;RP0=0, select bank0
  9135  066A  1303               	bcf	3,6	;RP1=0, select bank0
  9136  066B  0825               	movf	?___ftadd+2,w
  9137  066C  1683               	bsf	3,5	;RP0=1, select bank1
  9138  066D  1303               	bcf	3,6	;RP1=0, select bank1
  9139  066E  00B4               	movwf	(ISR@soma+2)^(0+128)
  9140  066F                     i1l3939:	
  9141                           
  9142                           ;main.c: 363: }
  9143                           ;main.c: 364: x += 1;
  9144  066F  3000               	movlw	0
  9145  0670  1283               	bcf	3,5	;RP0=0, select bank0
  9146  0671  1303               	bcf	3,6	;RP1=0, select bank0
  9147  0672  00A3               	movwf	___ftadd@f1
  9148  0673  3080               	movlw	128
  9149  0674  00A4               	movwf	___ftadd@f1+1
  9150  0675  303F               	movlw	63
  9151  0676  00A5               	movwf	___ftadd@f1+2
  9152  0677  1683               	bsf	3,5	;RP0=1, select bank1
  9153  0678  1303               	bcf	3,6	;RP1=0, select bank1
  9154  0679  0845               	movf	ISR@x^(0+128),w
  9155  067A  1283               	bcf	3,5	;RP0=0, select bank0
  9156  067B  1303               	bcf	3,6	;RP1=0, select bank0
  9157  067C  00A6               	movwf	___ftadd@f2
  9158  067D  1683               	bsf	3,5	;RP0=1, select bank1
  9159  067E  1303               	bcf	3,6	;RP1=0, select bank1
  9160  067F  0846               	movf	(ISR@x+1)^(0+128),w
  9161  0680  1283               	bcf	3,5	;RP0=0, select bank0
  9162  0681  1303               	bcf	3,6	;RP1=0, select bank0
  9163  0682  00A7               	movwf	___ftadd@f2+1
  9164  0683  1683               	bsf	3,5	;RP0=1, select bank1
  9165  0684  1303               	bcf	3,6	;RP1=0, select bank1
  9166  0685  0847               	movf	(ISR@x+2)^(0+128),w
  9167  0686  1283               	bcf	3,5	;RP0=0, select bank0
  9168  0687  1303               	bcf	3,6	;RP1=0, select bank0
  9169  0688  00A8               	movwf	___ftadd@f2+2
  9170  0689  120A  158A  25A1  120A  118A  	fcall	___ftadd
  9171  068E  1283               	bcf	3,5	;RP0=0, select bank0
  9172  068F  1303               	bcf	3,6	;RP1=0, select bank0
  9173  0690  0823               	movf	?___ftadd,w
  9174  0691  1683               	bsf	3,5	;RP0=1, select bank1
  9175  0692  1303               	bcf	3,6	;RP1=0, select bank1
  9176  0693  00C5               	movwf	ISR@x^(0+128)
  9177  0694  1283               	bcf	3,5	;RP0=0, select bank0
  9178  0695  1303               	bcf	3,6	;RP1=0, select bank0
  9179  0696  0824               	movf	?___ftadd+1,w
  9180  0697  1683               	bsf	3,5	;RP0=1, select bank1
  9181  0698  1303               	bcf	3,6	;RP1=0, select bank1
  9182  0699  00C6               	movwf	(ISR@x+1)^(0+128)
  9183  069A  1283               	bcf	3,5	;RP0=0, select bank0
  9184  069B  1303               	bcf	3,6	;RP1=0, select bank0
  9185  069C  0825               	movf	?___ftadd+2,w
  9186  069D  1683               	bsf	3,5	;RP0=1, select bank1
  9187  069E  1303               	bcf	3,6	;RP1=0, select bank1
  9188  069F  00C7               	movwf	(ISR@x+2)^(0+128)
  9189  06A0  3001               	movlw	1
  9190  06A1  07C3               	addwf	ISR@a_248^(0+128),f
  9191  06A2  1803               	skipnc
  9192  06A3  0AC4               	incf	(ISR@a_248+1)^(0+128),f
  9193  06A4  3000               	movlw	0
  9194  06A5  07C4               	addwf	(ISR@a_248+1)^(0+128),f
  9195  06A6  0844               	movf	(ISR@a_248+1)^(0+128),w
  9196  06A7  3A80               	xorlw	128
  9197  06A8  00FF               	movwf	127
  9198  06A9  3080               	movlw	128
  9199  06AA  027F               	subwf	127,w
  9200  06AB  1D03               	skipz
  9201  06AC  2EAF               	goto	u575_25
  9202  06AD  3010               	movlw	16
  9203  06AE  0243               	subwf	ISR@a_248^(0+128),w
  9204  06AF                     u575_25:	
  9205  06AF  1C03               	skipc
  9206  06B0  2C37               	goto	i1l172
  9207  06B1                     i1l3945:	
  9208                           
  9209                           ;main.c: 365: }
  9210                           ;main.c: 368: float reajuste = 0;
  9211  06B1  3000               	movlw	0
  9212  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  9213  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  9214  06B4  00A8               	movwf	ISR@reajuste^(0+128)
  9215  06B5  3000               	movlw	0
  9216  06B6  00A9               	movwf	(ISR@reajuste+1)^(0+128)
  9217  06B7  3000               	movlw	0
  9218  06B8  00AA               	movwf	(ISR@reajuste+2)^(0+128)
  9219                           
  9220                           ;main.c: 369: if (total_area != 0)
  9221  06B9  083F               	movf	(ISR@total_area+2)^(0+128),w
  9222  06BA  043E               	iorwf	(ISR@total_area+1)^(0+128),w
  9223  06BB  043D               	iorwf	ISR@total_area^(0+128),w
  9224  06BC  1903               	skipnz
  9225  06BD  2EF7               	goto	i1l3949
  9226                           
  9227                           ;main.c: 370: {
  9228                           ;main.c: 371: reajuste = soma / total_area;
  9229  06BE  083D               	movf	ISR@total_area^(0+128),w
  9230  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  9231  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  9232  06C1  00B0               	movwf	___ftdiv@f2
  9233  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  9234  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  9235  06C4  083E               	movf	(ISR@total_area+1)^(0+128),w
  9236  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  9237  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  9238  06C7  00B1               	movwf	___ftdiv@f2+1
  9239  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  9240  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  9241  06CA  083F               	movf	(ISR@total_area+2)^(0+128),w
  9242  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  9243  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  9244  06CD  00B2               	movwf	___ftdiv@f2+2
  9245  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  9246  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  9247  06D0  0832               	movf	ISR@soma^(0+128),w
  9248  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  9249  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  9250  06D3  00B3               	movwf	___ftdiv@f1
  9251  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  9252  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  9253  06D6  0833               	movf	(ISR@soma+1)^(0+128),w
  9254  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  9255  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  9256  06D9  00B4               	movwf	___ftdiv@f1+1
  9257  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  9258  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  9259  06DC  0834               	movf	(ISR@soma+2)^(0+128),w
  9260  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  9261  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  9262  06DF  00B5               	movwf	___ftdiv@f1+2
  9263  06E0  120A  158A  233D  120A  118A  	fcall	___ftdiv
  9264  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  9265  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  9266  06E7  0830               	movf	?___ftdiv,w
  9267  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  9268  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  9269  06EA  00A8               	movwf	ISR@reajuste^(0+128)
  9270  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  9271  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  9272  06ED  0831               	movf	?___ftdiv+1,w
  9273  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  9274  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  9275  06F0  00A9               	movwf	(ISR@reajuste+1)^(0+128)
  9276  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  9277  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  9278  06F3  0832               	movf	?___ftdiv+2,w
  9279  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  9280  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  9281  06F6  00AA               	movwf	(ISR@reajuste+2)^(0+128)
  9282  06F7                     i1l3949:	
  9283                           
  9284                           ;main.c: 372: }
  9285                           ;main.c: 374: int auxiliar = -1;
  9286  06F7  30FF               	movlw	255
  9287  06F8  00AB               	movwf	ISR@auxiliar^(0+128)
  9288  06F9  30FF               	movlw	255
  9289  06FA  00AC               	movwf	(ISR@auxiliar^(0+128)+1)
  9290                           
  9291                           ;main.c: 375: if(setpoint > rpm){
  9292  06FB  0866               	movf	(_setpoint+1)^(0+128),w
  9293  06FC  0263               	subwf	(_rpm+1)^(0+128),w
  9294  06FD  1D03               	skipz
  9295  06FE  2F01               	goto	u577_25
  9296  06FF  0865               	movf	_setpoint^(0+128),w
  9297  0700  0262               	subwf	_rpm^(0+128),w
  9298  0701                     u577_25:	
  9299  0701  1803               	skipnc
  9300  0702  2F07               	goto	i1l3955
  9301                           
  9302                           ;main.c: 376: auxiliar = 1;
  9303  0703  3001               	movlw	1
  9304  0704  00AB               	movwf	ISR@auxiliar^(0+128)
  9305  0705  3000               	movlw	0
  9306  0706  00AC               	movwf	(ISR@auxiliar^(0+128)+1)
  9307  0707                     i1l3955:	
  9308                           
  9309                           ;main.c: 377: }
  9310                           ;main.c: 379: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, erro_atual)) * (auxiliar)
      +                          , 1023), 0);
  9311  0707  082C               	movf	(ISR@auxiliar+1)^(0+128),w
  9312  0708  1283               	bcf	3,5	;RP0=0, select bank0
  9313  0709  1303               	bcf	3,6	;RP1=0, select bank0
  9314  070A  01C3               	clrf	___wmul@multiplicand+1
  9315  070B  07C3               	addwf	___wmul@multiplicand+1,f
  9316  070C  1683               	bsf	3,5	;RP0=1, select bank1
  9317  070D  1303               	bcf	3,6	;RP1=0, select bank1
  9318  070E  082B               	movf	ISR@auxiliar^(0+128),w
  9319  070F  1283               	bcf	3,5	;RP0=0, select bank0
  9320  0710  1303               	bcf	3,6	;RP1=0, select bank0
  9321  0711  01C2               	clrf	___wmul@multiplicand
  9322  0712  07C2               	addwf	___wmul@multiplicand,f
  9323  0713  1683               	bsf	3,5	;RP0=1, select bank1
  9324  0714  1303               	bcf	3,6	;RP1=0, select bank1
  9325  0715  085B               	movf	(_erro_atual+1)^(0+128),w
  9326  0716  01F9               	clrf	___awtoft@c+1
  9327  0717  07F9               	addwf	___awtoft@c+1,f
  9328  0718  085A               	movf	_erro_atual^(0+128),w
  9329  0719  01F8               	clrf	___awtoft@c
  9330  071A  07F8               	addwf	___awtoft@c,f
  9331  071B  160A  118A  21DD  120A  118A  	fcall	___awtoft
  9332  0720  0878               	movf	?___awtoft,w
  9333  0721  1283               	bcf	3,5	;RP0=0, select bank0
  9334  0722  1303               	bcf	3,6	;RP1=0, select bank0
  9335  0723  00A9               	movwf	minimo@b
  9336  0724  0879               	movf	?___awtoft+1,w
  9337  0725  00AA               	movwf	minimo@b+1
  9338  0726  087A               	movf	?___awtoft+2,w
  9339  0727  00AB               	movwf	minimo@b+2
  9340  0728  1683               	bsf	3,5	;RP0=1, select bank1
  9341  0729  1303               	bcf	3,6	;RP1=0, select bank1
  9342  072A  0828               	movf	ISR@reajuste^(0+128),w
  9343  072B  1283               	bcf	3,5	;RP0=0, select bank0
  9344  072C  1303               	bcf	3,6	;RP1=0, select bank0
  9345  072D  00A6               	movwf	minimo@a
  9346  072E  1683               	bsf	3,5	;RP0=1, select bank1
  9347  072F  1303               	bcf	3,6	;RP1=0, select bank1
  9348  0730  0829               	movf	(ISR@reajuste+1)^(0+128),w
  9349  0731  1283               	bcf	3,5	;RP0=0, select bank0
  9350  0732  1303               	bcf	3,6	;RP1=0, select bank0
  9351  0733  00A7               	movwf	minimo@a+1
  9352  0734  1683               	bsf	3,5	;RP0=1, select bank1
  9353  0735  1303               	bcf	3,6	;RP1=0, select bank1
  9354  0736  082A               	movf	(ISR@reajuste+2)^(0+128),w
  9355  0737  1283               	bcf	3,5	;RP0=0, select bank0
  9356  0738  1303               	bcf	3,6	;RP1=0, select bank0
  9357  0739  00A8               	movwf	minimo@a+2
  9358  073A  160A  118A  21BF  120A  118A  	fcall	_minimo
  9359  073F  1283               	bcf	3,5	;RP0=0, select bank0
  9360  0740  1303               	bcf	3,6	;RP1=0, select bank0
  9361  0741  0826               	movf	?_minimo,w
  9362  0742  00B2               	movwf	___fttol@f1
  9363  0743  0827               	movf	?_minimo+1,w
  9364  0744  00B3               	movwf	___fttol@f1+1
  9365  0745  0828               	movf	?_minimo+2,w
  9366  0746  00B4               	movwf	___fttol@f1+2
  9367  0747  160A  118A  26E3  120A  118A  	fcall	___fttol
  9368  074C  1283               	bcf	3,5	;RP0=0, select bank0
  9369  074D  1303               	bcf	3,6	;RP1=0, select bank0
  9370  074E  0833               	movf	?___fttol+1,w
  9371  074F  01C1               	clrf	___wmul@multiplier+1
  9372  0750  07C1               	addwf	___wmul@multiplier+1,f
  9373  0751  0832               	movf	?___fttol,w
  9374  0752  01C0               	clrf	___wmul@multiplier
  9375  0753  07C0               	addwf	___wmul@multiplier,f
  9376  0754  160A  118A  2264  120A  118A  	fcall	___wmul
  9377  0759  1683               	bsf	3,5	;RP0=1, select bank1
  9378  075A  1303               	bcf	3,6	;RP1=0, select bank1
  9379  075B  085E               	movf	_pwm^(0+128),w
  9380  075C  1283               	bcf	3,5	;RP0=0, select bank0
  9381  075D  1303               	bcf	3,6	;RP1=0, select bank0
  9382  075E  0740               	addwf	?___wmul,w
  9383  075F  00C6               	movwf	___lwtoft@c
  9384  0760  1683               	bsf	3,5	;RP0=1, select bank1
  9385  0761  1303               	bcf	3,6	;RP1=0, select bank1
  9386  0762  085F               	movf	(_pwm+1)^(0+128),w
  9387  0763  1803               	skipnc
  9388  0764  0A5F               	incf	(_pwm+1)^(0+128),w
  9389  0765  1283               	bcf	3,5	;RP0=0, select bank0
  9390  0766  1303               	bcf	3,6	;RP1=0, select bank0
  9391  0767  0741               	addwf	?___wmul+1,w
  9392  0768  00C7               	movwf	___lwtoft@c+1
  9393  0769  160A  118A  2152  120A  118A  	fcall	___lwtoft
  9394  076E  1283               	bcf	3,5	;RP0=0, select bank0
  9395  076F  1303               	bcf	3,6	;RP1=0, select bank0
  9396  0770  0846               	movf	?___lwtoft,w
  9397  0771  1683               	bsf	3,5	;RP0=1, select bank1
  9398  0772  1303               	bcf	3,6	;RP1=0, select bank1
  9399  0773  00A5               	movwf	_ISR$1668^(0+128)
  9400  0774  1283               	bcf	3,5	;RP0=0, select bank0
  9401  0775  1303               	bcf	3,6	;RP1=0, select bank0
  9402  0776  0847               	movf	?___lwtoft+1,w
  9403  0777  1683               	bsf	3,5	;RP0=1, select bank1
  9404  0778  1303               	bcf	3,6	;RP1=0, select bank1
  9405  0779  00A6               	movwf	(_ISR$1668+1)^(0+128)
  9406  077A  1283               	bcf	3,5	;RP0=0, select bank0
  9407  077B  1303               	bcf	3,6	;RP1=0, select bank0
  9408  077C  0848               	movf	?___lwtoft+2,w
  9409  077D  1683               	bsf	3,5	;RP0=1, select bank1
  9410  077E  1303               	bcf	3,6	;RP1=0, select bank1
  9411  077F  00A7               	movwf	(_ISR$1668+2)^(0+128)
  9412                           
  9413                           ;main.c: 377: }
  9414                           ;main.c: 379: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, erro_atual)) * (auxiliar)
      +                          , 1023), 0);
  9415  0780  3000               	movlw	0
  9416  0781  1283               	bcf	3,5	;RP0=0, select bank0
  9417  0782  1303               	bcf	3,6	;RP1=0, select bank0
  9418  0783  00AF               	movwf	maximo@b
  9419  0784  3000               	movlw	0
  9420  0785  00B0               	movwf	maximo@b+1
  9421  0786  3000               	movlw	0
  9422  0787  00B1               	movwf	maximo@b+2
  9423  0788  30C0               	movlw	192
  9424  0789  00A9               	movwf	minimo@b
  9425  078A  307F               	movlw	127
  9426  078B  00AA               	movwf	minimo@b+1
  9427  078C  3044               	movlw	68
  9428  078D  00AB               	movwf	minimo@b+2
  9429  078E  1683               	bsf	3,5	;RP0=1, select bank1
  9430  078F  1303               	bcf	3,6	;RP1=0, select bank1
  9431  0790  0825               	movf	_ISR$1668^(0+128),w
  9432  0791  1283               	bcf	3,5	;RP0=0, select bank0
  9433  0792  1303               	bcf	3,6	;RP1=0, select bank0
  9434  0793  00A6               	movwf	minimo@a
  9435  0794  1683               	bsf	3,5	;RP0=1, select bank1
  9436  0795  1303               	bcf	3,6	;RP1=0, select bank1
  9437  0796  0826               	movf	(_ISR$1668+1)^(0+128),w
  9438  0797  1283               	bcf	3,5	;RP0=0, select bank0
  9439  0798  1303               	bcf	3,6	;RP1=0, select bank0
  9440  0799  00A7               	movwf	minimo@a+1
  9441  079A  1683               	bsf	3,5	;RP0=1, select bank1
  9442  079B  1303               	bcf	3,6	;RP1=0, select bank1
  9443  079C  0827               	movf	(_ISR$1668+2)^(0+128),w
  9444  079D  1283               	bcf	3,5	;RP0=0, select bank0
  9445  079E  1303               	bcf	3,6	;RP1=0, select bank0
  9446  079F  00A8               	movwf	minimo@a+2
  9447  07A0  160A  118A  21BF  120A  118A  	fcall	_minimo
  9448  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  9449  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  9450  07A7  0826               	movf	?_minimo,w
  9451  07A8  00AC               	movwf	maximo@a
  9452  07A9  0827               	movf	?_minimo+1,w
  9453  07AA  00AD               	movwf	maximo@a+1
  9454  07AB  0828               	movf	?_minimo+2,w
  9455  07AC  00AE               	movwf	maximo@a+2
  9456  07AD  160A  118A  21A1  120A  118A  	fcall	_maximo
  9457  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  9458  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  9459  07B4  082C               	movf	?_maximo,w
  9460  07B5  00B2               	movwf	___fttol@f1
  9461  07B6  082D               	movf	?_maximo+1,w
  9462  07B7  00B3               	movwf	___fttol@f1+1
  9463  07B8  082E               	movf	?_maximo+2,w
  9464  07B9  00B4               	movwf	___fttol@f1+2
  9465  07BA  160A  118A  26E3  120A  118A  	fcall	___fttol
  9466  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  9467  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  9468  07C1  0833               	movf	?___fttol+1,w
  9469  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  9470  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  9471  07C4  01DF               	clrf	(_pwm+1)^(0+128)
  9472  07C5  07DF               	addwf	(_pwm+1)^(0+128),f
  9473  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  9474  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  9475  07C8  0832               	movf	?___fttol,w
  9476  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  9477  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  9478  07CB  01DE               	clrf	_pwm^(0+128)
  9479  07CC  07DE               	addwf	_pwm^(0+128),f
  9480                           
  9481                           ;main.c: 381: PWM_DutyCycle2(pwm);
  9482  07CD  085F               	movf	(_pwm+1)^(0+128),w
  9483  07CE  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  9484  07CF  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  9485  07D0  085E               	movf	_pwm^(0+128),w
  9486  07D1  01F0               	clrf	i1PWM_DutyCycle2@valor
  9487  07D2  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  9488  07D3  160A  118A  216A  120A  118A  	fcall	i1_PWM_DutyCycle2
  9489                           
  9490                           ;main.c: 384: PORTBbits.RB6 = 0;
  9491  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  9492  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  9493  07DA  1306               	bcf	6,6	;volatile
  9494  07DB                     i1l3963:	
  9495                           
  9496                           ;main.c: 385: }
  9497                           ;main.c: 388: INTCONbits.T0IF = 0;
  9498  07DB  110B               	bcf	11,2	;volatile
  9499  07DC                     i1l3965:	
  9500                           
  9501                           ;main.c: 389: }
  9502                           ;main.c: 392: if (PIR1bits.TMR1IF) {
  9503  07DC  180C               	btfsc	12,0	;volatile
  9504                           
  9505                           ;main.c: 397: PIR1bits.TMR1IF = 0;
  9506  07DD  100C               	bcf	12,0	;volatile
  9507  07DE  0867               	movf	??_ISR+5,w
  9508  07DF  00FF               	movwf	127
  9509  07E0  0866               	movf	??_ISR+4,w
  9510  07E1  008A               	movwf	10
  9511  07E2  0865               	movf	??_ISR+3,w
  9512  07E3  0084               	movwf	4
  9513  07E4  0E64               	swapf	(??_ISR+2)^0,w
  9514  07E5  0083               	movwf	3
  9515  07E6  0EFE               	swapf	126,f
  9516  07E7  0E7E               	swapf	126,w
  9517  07E8  0009               	retfie
  9518  07E9                     L18:	
  9519  07E9                     __end_of_ISR:	
  9520  07E9  120A  158A  28B7   	ljmp	i1l3831


Data Sizes:
    Strings     40
    Constant    0
    Data        4
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     40      71
    BANK3            96     26      74
    BANK2            96      0      96

Pointer List with Targets:

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _send->___lwdiv
    _minimo->___awtoft
    _maximo->___awtoft
    ___ftge->___bmul
    ___wmul->___awtoft
    ___lwtoft->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _minimo->___ftge
    _maximo->_minimo
    ___wmul->___fttol
    ___lwtoft->___wmul
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv
    _LCD_Init->_LCD_WriteCmd

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     821
                                             23 BANK3      3     3      0
                           _LCD_Init
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                             _inicia
                                _res
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  1     1      0       0
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _res                                                  1     1      0       0
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicia                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     146
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      22
                                              2 BANK3      2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         2     2      0      22
                                              0 BANK3      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 46    46      0   50503
                                             66 BANK0      6     6      0
                                              0 BANK1     40    40      0
                         _LCD_Cursor
                      _LCD_WriteData
                  _USART_ReceiveChar
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                               _send
                             _trapmf
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                           i1_inicia
                              i1_res
                              i1_set
 ---------------------------------------------------------------------------------
 (4) i1_set                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_res                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_inicia                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _trapmf                                              18     3     15   17597
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     365
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2751
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    6867
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     682
                                              8 COMMON     3     3      0
                    _USART_WriteChar
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _minimo                                               6     0      6    2528
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (4) _maximo                                               6     0      6    2272
                                             12 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1928
                                              4 COMMON     6     0      6
                                              0 BANK0      6     6      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1844
                                             32 BANK0      6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                             38 BANK0      4     1      3
                           ___awtoft (ARG)
                           ___ftpack
                            ___fttol (ARG)
                             ___wmul (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     508
                                             18 BANK0     14    10      4
                           ___awtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     560
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2754
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _LCD_Cursor                                           3     2      1     130
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_WriteCmd
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _inicia
   _res
   _set

 _ISR (ROOT)
   _LCD_Cursor
   _LCD_WriteData
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   ___awtoft
     ___ftpack
     _abs (ARG)
   ___bmul
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftge
     ___bmul (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
     _trapmf (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___lwdiv
   ___lwtoft
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___wmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
               ___bmul (ARG)
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       ___lwdiv (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___wmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___lwdiv (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _abs
   _maximo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _minimo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
   _send
     _USART_WriteChar
     ___lwdiv
   _trapmf
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_inicia
   i1_res
   i1_set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      11      100.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     28      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     14F      12        0.0%
ABS                  0      0     14F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 21:25:22 2022

         ?i1_PWM_DutyCycle2 0070                           pc 0002                 ?_LCD_Cursor 0070  
            ___bmul@product 0072     __size_of_PWM_DutyCycle1 0021     __size_of_PWM_DutyCycle2 0021  
               __CFG_CP$OFF 0000                 _SSPSTATbits 0094                          l99 10D8  
                        fsr 0004         ___wmul@multiplicand 0042          ??i1_PWM_DutyCycle2 0072  
              ___ftadd@exp1 002F                ___ftadd@exp2 002E               _contagens_tm0 00D6  
              ___ftadd@sign 002D                         l203 0D7B                         l192 0D55  
                       l185 0D3E                         l196 0D62                         l189 0D49  
                       l199 0D6E                         l609 1783                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 092A                         _abs 10F0  
                       _res 1301                         _set 1382                         _rpm 00E2  
                       fsr0 0004                         _pwm 00DE  __size_of_USART_WriteString 001C  
                       indf 0000                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
                      ?_ISR 0070                ___ftdiv@cntr 003A                        ISR@a 00B5  
                      ISR@x 00C5                ___ftdiv@sign 003F                        ?_abs 0070  
                      l2213 17F7                        l2205 17DC                        l2209 17E9  
                      l2411 1322                        l2425 13AC                        l3233 0D3A  
                      l2195 17A4                        l2187 1794                        l2197 17B4  
                      l3263 0D92                        l3255 0D77                        l3247 0D5E  
                      l3239 0D45                        ?_res 0070                        ?_set 0070  
                      STR_1 1006                        u3005 1234                        u3015 13D4  
                      u3025 1213                        u2255 17A8                        u2275 17B6  
                      u2285 17CB                        u2295 17DD                        u5807 0D51  
                      u5817 0D6A                        _OERR 00C1                        i1l99 10CF  
                      u5907 153B                        u5827 0D83                        u5917 1547  
                      u5837 0D9A                        u5927 1134                        u5847 14E9  
                      u5857 14F9                        u5867 1507                        u5877 1513  
                      u5797 0D33                        u5887 151F                        u5897 152D  
                      _TMR0 0001                        _TMR1 000E                        abs@a 0070  
                      _main 0CC8                ___ftpack@arg 0070                        _kmph 006A  
              ___ftpack@exp 0073                        _send 15D0                        btemp 007E  
                      ltemp 007E                        start 0012                        ttemp 007E  
                      wtemp 007E               ?_LCD_WriteCmd 0070               _LCD_WriteData 10FE  
         ___bmul@multiplier 0073                ___ftmul@cntr 0060                ___ftmul@sign 0061  
   __end_of_USART_WriteChar 10B9                       ??_ISR 0062                ___fttol@exp1 003F  
                     ??_abs 0072                ___fttol@lval 003B                       ??_res 01C0  
                     ??_set 01C0                 ?_TIMER0_Set 0070            __end_of_LCD_Init 154A  
           __end_of___aldiv 1800                       ?_main 0070                       _EEADR 010D  
           __end_of___ftadd 0EAA                       ?_send 0070               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 0BF5             __end_of___ftneg 10E5             __end_of___ftmul 0CC8  
                     _T1CON 0010             __end_of___fttol 1771             __end_of___lwdiv 1301  
                     i1l116 0FF7                       i1l230 10B2                       i1l172 0437  
                     i1l550 1270                       i1l721 14C4                       i1l715 14AB  
                     i1l744 0E49                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019                       i1_res 1289                       i1_set 133F  
             __CFG_PWRTE$ON 0000               ___awtoft@sign 007D               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000         __size_of_LCD_Cursor 0016                       pclath 000A  
          __end_of_PWM_Init 1264                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
          __end_ofi1_inicia 10D2              ??_LCD_WriteCmd 01C0              ?_LCD_WriteData 0070  
               ?_USART_Init 01CF       i1TIMER0_Set@contagens 0070             __initialization 0015  
          _velocidadeSetada 006E                __end_of_main 0DA1                __end_of_send 1657  
                    ??_main 01D7               ___fttol@sign1 003A                      ??_send 0078  
              ?_TIMER0_Init 0070                      ?i1_res 0070                      ?i1_set 0070  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1L 0015                      _CCPR2L 001B                      _EECON2 018D  
          __end_of___awtoft 11FE            __end_of___ftpack 14DD                      i1l2141 1490  
                    i1l2301 0B6B                      i1l2151 14BA                      i1l2143 1495  
                    i1l2135 147D                      i1l2139 1484                      i1l2323 0BCF  
                    i1l2315 0BB0                      i1l2501 1143                      i1l2149 14B0  
                    i1l2167 1186                      i1l2335 143D                      i1l2521 1117  
                    i1l2339 1466                      i1l2371 12D9                      i1l2509 114F  
                    i1l2381 12FA                      i1l2711 0C62                      i1l2295 0B55  
                    i1l2377 12EF                      i1l2369 12CB                      i1l2723 0C8A  
                    i1l2715 0C72                      i1l2491 164C                      i1l2483 1632  
                    i1l2661 07EE                      i1l3701 0F23                      i1l2727 0C9A  
                    i1l2743 16FD                      i1l2665 07F4                      i1l2761 172F  
                    i1l2649 1268                      i1l3625 0DCA                      i1l3713 0FDA  
                    i1l2809 1369                      i1l2683 11E7                      i1l2771 1757  
                    i1l2763 173F                      i1l3635 0DE0                      i1l3707 0F55  
                    i1l2693 0C0D                      i1l2773 175A                      i1l3653 0E0F  
                    i1l3629 0DD1                      i1l3671 0E5B                      i1l3655 0E1B  
                    i1l3647 0DFA                      i1l3831 08B7                      i1l3727 0941  
                    i1l2777 1768                      i1l2769 174C                      i1l3665 0E39  
                    i1l3657 0E20                      i1l3905 0349                      i1l3841 0AE7  
                    i1l3745 0982                      i1l3729 0947                      i1l2699 0C23  
                    i1l3675 0E6D                      i1l3667 0E45                      i1l3659 0E24  
                    i1l2795 12AA                      i1l3915 0416                      i1l3835 0AA5  
                    i1l3763 09AE                      u212_25 1489                      i1l3685 0E90  
                    i1l3933 05AE                      i1l3909 03D4                      i1l3861 010F  
                    i1l3781 082C                      i1l3773 0816                      i1l3757 0996  
                    i1l3927 04ED                      i1l3945 06B1                      i1l3857 0084  
                    i1l3777 0821                      i1l3769 080D                      i1l3785 083B  
                    i1l3955 0707                      i1l3939 066F                      i1l3883 0218  
                    i1l3867 0151                      i1l3963 07DB                      i1l3787 083E  
                    i1l3949 06F7                      i1l3893 02E5                      i1l3797 085D  
                    i1l3965 07DC                      i1l3887 02A3                      u214_25 14A4  
                    u216_25 14B3                      u312_25 0C2F                      u304_25 1271  
                    u321_25 0C9B                      u313_25 0C41                      u305_25 1278  
                    u322_25 0CA3                      u219_25 14CB                      u331_25 174E  
                    u316_25 0C73                      u260_25 0BB1                      u317_25 0C7B  
                    u325_25 1704                      u261_25 0BC2                      u262_25 0BD0  
                    u342_25 117B                      u271_25 12CE                      u328_25 1730  
                    u512_25 0E25                      u265_21 1430                      u265_22 1431  
                    u265_23 1436                      u265_24 1437                      u273_25 12DA  
          __end_of___lwtoft 116A                      u274_25 12E6                      u506_25 0DFB  
                    u258_25 0B7D                      u267_21 1459                      u267_22 145A  
                    u267_23 145F                      u267_24 1460                      u275_25 12F0  
                    u515_25 0E3A                      u259_25 0B8F                      u509_25 0E10  
       __size_of_TIMER0_Set 0008                      u551_25 0AE5                      u560_25 0176  
                    u552_25 0AF2                      u561_25 0216                      u553_25 0AFF  
                    u570_25 0444                      u554_25 0B0C                      u571_25 04F8  
                    u563_25 02E3                      u555_25 0082                      u572_25 0505  
                    u564_25 02F0                      u548_25 16AB                      u573_25 05B9  
                    u565_25 0347                      u557_25 014F                      u549_25 08B3  
                    u574_25 05C6                      u558_25 015C                      u575_25 06AF  
                    u567_25 0414                      u559_25 0169                      u568_25 0435  
                    u577_25 0701                      u593_27 1107                      u594_27 111D  
                    _SSPADD 0093                      _SSPBUF 0013            LCD_WriteCmd@Byte 01C1  
                    ___bmul 07EC                      ___ftge 1414                   ??___aldiv 01C8  
                    _rBaixo 0190                      ___wmul 1264                   ??___ftadd 0029  
            _PWM_DutyCycle1 11FE              _PWM_DutyCycle2 121F            ?_USART_WriteChar 0070  
                 ??___ftdiv 0036                   ??___ftneg 007E                      _rMedio 0140  
                 ??___ftmul 0058                   ??___fttol 0036                   ??___lwdiv 0074  
                    _buffer 00C8                      _inicia 10D2                      _maximo 11A1  
                    _minimo 11BF       USART_ReceiveChar@byte 0074                      _trapmf 0EAA  
                    _pulsos 00DC       ___ftmul@f3_as_product 005D                      saved_w 007E  
       __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070     __end_of__initialization 004F  
                 ?_LCD_Init 0070                  ___ftadd@f1 0023                  ___ftadd@f2 0026  
           ??_LCD_WriteData 0070                  ___ftge@ff1 0074                  ___ftge@ff2 0077  
                ___ftdiv@f1 0033                  ___ftdiv@f2 0030                  ___ftdiv@f3 003B  
                ___ftneg@f1 0020                  ___awtoft@c 0078         ___bmul@multiplicand 0070  
    __end_of_PWM_DutyCycle1 121F      __end_of_PWM_DutyCycle2 1240               __end_ofi1_res 12C3  
             __end_ofi1_set 1382                  ___ftmul@f1 0052                  ___ftmul@f2 0055  
                ___fttol@f1 0032              __pcstackCOMMON 0070                 ISR@checksum 00AD  
              __pidataBANK0 07FD                __pidataBANK1 10A9               LCD_Cursor@Col 0070  
             _erro_anterior 00D8               LCD_Cursor@Row 0072               ISR@total_area 00BD  
              ??_LCD_Cursor 0071                  ___lwtoft@c 0046                   ?_PWM_Init 0070  
               ISR@auxiliar 00AB                   ?i1_inicia 0070              _OPTION_REGbits 0081  
                   ??i1_res 0070                     ??i1_set 0070        __end_of_LCD_WriteCmd 113A  
               ISR@reajuste 00A8   __size_ofi1_PWM_DutyCycle2 001B              ??i1_TIMER0_Set 0070  
                __pbssBANK0 0068                  __pbssBANK1 00C8                  __pbssBANK2 0110  
                __pbssBANK3 0190          __end_of_LCD_Cursor 1123                  ??_LCD_Init 01C2  
                 ISR@rpmAux 00A0                     ISR@byte 00AE                     ISR@soma 00B2  
                   ISR@rule 00C0             ?_PWM_DutyCycle1 01C0             ?_PWM_DutyCycle2 01C0  
                __pmaintext 0CC8                     ?___bmul 0070                     ?___ftge 0074  
                   ?___wmul 0040                  __pintentry 0004                ??_TIMER0_Set 01C0  
                   _CCP1CON 0017                     _CCP2CON 001D                     ?_inicia 0070  
                   ?_maximo 002C                     ?_minimo 0026                   ?___awtoft 0078  
                 ?___ftpack 0070                     ?_trapmf 0040                  ??_PWM_Init 01C0  
                 ?___lwtoft 0046                  ??i1_inicia 0070        __size_of_TIMER0_Init 000B  
                   _SSPCON2 0091                  __stringtab 1000          __end_of_TIMER0_Set 10C1  
              ??_USART_Init 01D3           LCD_WriteData@Byte 0071                     ___aldiv 1771  
           __size_of___bmul 0011             __size_of___ftge 0061                     ___ftadd 0DA1  
                   ___ftdiv 0B3D                     ___ftneg 10DB             __size_of___wmul 0025  
                   ___ftmul 0BF5                     ___fttol 16E3                  _erro_atual 00DA  
                   ___lwdiv 12C3             __size_of_inicia 0009                  ??___awtoft 007B  
                ??___ftpack 0075                     _rGrande 0110             __size_of_maximo 001E  
           __size_of_minimo 001E                     __ptext1 1382                     __ptext2 1301  
                   __ptext3 10D2                     __ptext4 13C9                     __ptext5 1771  
                   __ptext6 10B9                     __ptext7 10E5                     __ptext8 1240  
                   __ptext9 121F                  ??___lwtoft 0049             __size_of_trapmf 0156  
              __size_of_ISR FEBF                   _T1CONbits 0010                   _T2CONbits 0012  
              __size_of_abs 000E                __size_of_res 003E                __size_of_set 0047  
          ___aldiv@dividend 01C4          __end_of_USART_Init 1414                     clrloop0 10C2  
      end_of_initialization 004F                     maximo@a 002C                     maximo@b 002F  
                   minimo@a 0026                     minimo@b 0029                   _RCSTAbits 0018  
          ___aldiv@quotient 01CB                     psplit$0 1E003B                     psplit$1 3B003C  
                   psplit$2 3C003D                     psplit$3 3D003E                     psplit$4 3E003F  
                   psplit$5 3F0040                     psplit$6 400041                     trapmf@a 0043  
                   trapmf@b 0046                     trapmf@c 0049                     trapmf@d 004C  
                   trapmf@x 0040        __end_ofi1_TIMER0_Set 10B1       __size_of_LCD_WriteCmd 0017  
                 _PORTBbits 0006                   _PORTEbits 0009            i1_PWM_DutyCycle2 116A  
              _contador_rb6 0068         PWM_DutyCycle1@valor 01C0         PWM_DutyCycle2@valor 01C0  
               _CCP1CONbits 0017                 ___ftdiv@exp 003E                 _CCP2CONbits 001D  
                 _TXSTAbits 0098           __size_of_LCD_Init 006D                _LCD_WriteCmd 1123  
               ___ftmul@exp 005C              __end_of___bmul 07FD              __end_of___ftge 1475  
            __end_of___wmul 1289              __end_of_inicia 10DB              __end_of_maximo 11BF  
            __end_of_minimo 11DD              __end_of_trapmf 1000    __size_of_USART_WriteChar 0008  
         __size_of_PWM_Init 0024         start_initialization 0015                 __end_of_ISR 07E9  
               __end_of_abs 10FE                 __end_of_res 133F                 __end_of_set 13C9  
         __size_ofi1_inicia 0009            ??_PWM_DutyCycle1 01C2            ??_PWM_DutyCycle2 01C2  
     __end_of_LCD_WriteData 110D           _USART_ReceiveChar 113A                    ??___bmul 0071  
                  ??___ftge 0020          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK0 006E                 __pdataBANK1 00E5                    ??_inicia 01C0  
              send@checksum 0079                    ??_maximo 007E                    ??_minimo 007E  
                  ??_trapmf 007E         ??_USART_ReceiveChar 0073           __size_of___awtoft 0021  
         __size_of___ftpack 0068                   ___latbits 0002           __size_of___lwtoft 0018  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               __pcstackBANK3 01C0  
       __end_of__stringdata 102E                    ISR@a_243 00B7                    ISR@a_244 00B9  
                  ISR@a_245 00BB                    ISR@a_248 00C3   __end_of_USART_ReceiveChar 1152  
                  ISR@delta 00B0                    ISR@index 00AF       __size_ofi1_TIMER0_Set 0006  
          ___lwdiv@dividend 0072         TIMER0_Set@contagens 01C0                    ?___aldiv 01C0  
                  ?___ftadd 0023                    ?___ftdiv 0030                    ?___ftneg 0020  
                  ?___ftmul 0052                    ?___fttol 0032                    ?___lwdiv 0070  
                 __pstrings 1000               ??_TIMER0_Init 01C0          USART_Init@BaudRate 01CF  
            __size_ofi1_res 003A              __size_ofi1_set 0043            ___lwdiv@quotient 0075  
                pnum$text13 001E           ??_USART_WriteChar 0070                    _ISR$1667 00A2  
                  _ISR$1668 00A5                i1_TIMER0_Set 10AB                _receiveIndex 00E0  
           ___aldiv@divisor 01C0           interrupt_function 0004             ___aldiv@counter 01C9  
                  _LCD_Init 14DD              ___wmul@product 0044                   clear_ram0 10C1  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 1185                   _tempo_rb6 006C  
                _ADCON0bits 001F                 __stringbase 1005                  _ADCON1bits 009F  
               __stringdata 1006                    _PWM_Init 1240           ___wmul@multiplier 0040  
                  i1_inicia 10C9         __end_of_TIMER0_Init 10F0  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D3  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___awtoft 11DD  
                  ___ftpack 1475          __end_of__stringtab 1006                    ___lwtoft 1152  
                 send@index 007A             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 1185                    __ptext10 11FE                    __ptext11 14DD  
                  __ptext20 10DB                    __ptext12 1123                    __ptext21 0B3D  
                  __ptext13 092A                    __ptext30 1152                    __ptext22 0DA1  
                  __ptext14 133F                    __ptext31 16E3                    __ptext23 15D0  
                  __ptext15 1289                    __ptext40 110D                    __ptext32 0BF5  
                  __ptext24 12C3                    __ptext16 10C9                    __ptext33 07EC  
                  __ptext25 11BF                    __ptext17 10AB                    __ptext34 11DD  
                  __ptext26 11A1                    __ptext18 116A                    __ptext35 1475  
                  __ptext27 1414                    __ptext19 0EAA                    __ptext36 113A  
                  __ptext28 10F0                    __ptext37 1185                    __ptext29 1264  
                  __ptext38 10B1                    __ptext39 10FE          ?_USART_WriteString 0070  
             __size_of_main 00D9               __size_of_send 0087         USART_WriteChar@byte 0070  
       ??_USART_WriteString 0071              _receivedBuffer 00D1                    _setpoint 00E5  
                _LCD_Cursor 110D          pnum$text13_split_1 003B          pnum$text13_split_2 003C  
        pnum$text13_split_3 003D          pnum$text13_split_4 003E          pnum$text13_split_5 003F  
        pnum$text13_split_6 0040          pnum$text13_split_7 0041                 _TIMER0_Init 10E5  
                _INTCONbits 000B   __end_of_USART_WriteString 11A1                    intlevel1 0000  
               _pilotoAtivo 00E4                   stringcode 1000        USART_WriteString@str 0072  
                _TIMER0_Set 10B9                    trapmf@ua 004F             _USART_WriteChar 10B1  
                  stringdir 1000                    stringtab 1000                ___aldiv@sign 01CA  
    __size_of_LCD_WriteData 000F                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070  
                _SSPCONbits 0014                  _USART_Init 13C9  
