

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 23 04:37:30 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text11_split_1,local,class=CODE,merge=1,delta=2
    58                           	psect	text11_split_2,local,class=CODE,merge=1,delta=2
    59                           	psect	text11_split_3,local,class=CODE,merge=1,delta=2
    60                           	psect	text11_split_4,local,class=CODE,merge=1,delta=2
    61                           	psect	text11_split_5,local,class=CODE,merge=1,delta=2
    62                           	psect	text11_split_6,local,class=CODE,merge=1,delta=2
    63                           	psect	text11_split_7,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0088                     	;# 
   465  0089                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0008                     	;# 
   494  0009                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001D                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  0081                     	;# 
   521  0085                     	;# 
   522  0086                     	;# 
   523  0087                     	;# 
   524  0088                     	;# 
   525  0089                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  009F                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  000E                     	;# 
   561  000F                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  0081                     	;# 
   581  0085                     	;# 
   582  0086                     	;# 
   583  0087                     	;# 
   584  0088                     	;# 
   585  0089                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  009F                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010F                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605                           
   606                           	psect	idataBANK0
   607  07FD                     __pidataBANK0:	
   608                           
   609                           ;initializer for _velocidadeSetada
   610  07FD  3458               	retlw	88
   611  07FE  341B               	retlw	27
   612                           
   613                           	psect	idataBANK1
   614  0801                     __pidataBANK1:	
   615                           
   616                           ;initializer for _setpoint
   617  0801  3458               	retlw	88
   618  0802  341B               	retlw	27
   619  000E                     _TMR1	set	14
   620  001F                     _ADCON0bits	set	31
   621  001E                     _ADRESH	set	30
   622  0017                     _CCP1CON	set	23
   623  0017                     _CCP1CONbits	set	23
   624  001D                     _CCP2CON	set	29
   625  001D                     _CCP2CONbits	set	29
   626  0015                     _CCPR1L	set	21
   627  001B                     _CCPR2L	set	27
   628  000B                     _INTCONbits	set	11
   629  000C                     _PIR1bits	set	12
   630  000D                     _PIR2bits	set	13
   631  0005                     _PORTA	set	5
   632  0006                     _PORTB	set	6
   633  0006                     _PORTBbits	set	6
   634  0007                     _PORTC	set	7
   635  0008                     _PORTD	set	8
   636  0009                     _PORTE	set	9
   637  0009                     _PORTEbits	set	9
   638  001A                     _RCREG	set	26
   639  0018                     _RCSTAbits	set	24
   640  0013                     _SSPBUF	set	19
   641  0014                     _SSPCONbits	set	20
   642  0010                     _T1CON	set	16
   643  0010                     _T1CONbits	set	16
   644  0012                     _T2CONbits	set	18
   645  0001                     _TMR0	set	1
   646  000F                     _TMR1H	set	15
   647  000E                     _TMR1L	set	14
   648  0019                     _TXREG	set	25
   649  00C1                     _OERR	set	193
   650  009F                     _ADCON1bits	set	159
   651  009E                     _ADRESL	set	158
   652  0081                     _OPTION_REGbits	set	129
   653  008C                     _PIE1bits	set	140
   654  008D                     _PIE2bits	set	141
   655  0092                     _PR2	set	146
   656  0099                     _SPBRG	set	153
   657  0093                     _SSPADD	set	147
   658  0091                     _SSPCON2	set	145
   659  0091                     _SSPCON2bits	set	145
   660  0094                     _SSPSTATbits	set	148
   661  0085                     _TRISA	set	133
   662  0086                     _TRISB	set	134
   663  0087                     _TRISC	set	135
   664  0088                     _TRISD	set	136
   665  0089                     _TRISE	set	137
   666  0098                     _TXSTAbits	set	152
   667  010D                     _EEADR	set	269
   668  010C                     _EEDATA	set	268
   669  018C                     _EECON1bits	set	396
   670  018D                     _EECON2	set	397
   671                           
   672                           	psect	strings
   673  1000                     __pstrings:	
   674  1000                     stringtab:	
   675  1000                     __stringtab:	
   676  1000                     stringcode:	
   677                           ;	String table - string pointers are 1 byte each
   678                           
   679  1000                     stringdir:	
   680  1000  3010               	movlw	high stringdir
   681  1001  008A               	movwf	10
   682  1002  0804               	movf	4,w
   683  1003  0A84               	incf	4,f
   684  1004  0782               	addwf	2,f
   685  1005                     __stringbase:	
   686  1005  3400               	retlw	0
   687  1006                     __end_of__stringtab:	
   688  1006                     __stringdata:	
   689  1006                     STR_1:	
   690  1006  340A               	retlw	10
   691  1007  340D               	retlw	13
   692  1008  3420               	retlw	32	;' '
   693  1009  342D               	retlw	45	;'-'
   694  100A  342D               	retlw	45	;'-'
   695  100B  342D               	retlw	45	;'-'
   696  100C  342D               	retlw	45	;'-'
   697  100D  342D               	retlw	45	;'-'
   698  100E  342D               	retlw	45	;'-'
   699  100F  342D               	retlw	45	;'-'
   700  1010  3420               	retlw	32	;' '
   701  1011  3445               	retlw	69	;'E'
   702  1012  3453               	retlw	83	;'S'
   703  1013  3454               	retlw	84	;'T'
   704  1014  344F               	retlw	79	;'O'
   705  1015  3455               	retlw	85	;'U'
   706  1016  3452               	retlw	82	;'R'
   707  1017  344F               	retlw	79	;'O'
   708  1018  3420               	retlw	32	;' '
   709  1019  3444               	retlw	68	;'D'
   710  101A  3445               	retlw	69	;'E'
   711  101B  3420               	retlw	32	;' '
   712  101C  3450               	retlw	80	;'P'
   713  101D  3449               	retlw	73	;'I'
   714  101E  344C               	retlw	76	;'L'
   715  101F  3448               	retlw	72	;'H'
   716  1020  3441               	retlw	65	;'A'
   717  1021  3420               	retlw	32	;' '
   718  1022  342D               	retlw	45	;'-'
   719  1023  342D               	retlw	45	;'-'
   720  1024  342D               	retlw	45	;'-'
   721  1025  342D               	retlw	45	;'-'
   722  1026  342D               	retlw	45	;'-'
   723  1027  342D               	retlw	45	;'-'
   724  1028  342D               	retlw	45	;'-'
   725  1029  3420               	retlw	32	;' '
   726  102A  340A               	retlw	10
   727  102B  340D               	retlw	13
   728  102C  3420               	retlw	32	;' '
   729  102D  3400               	retlw	0
   730  102E                     __end_of__stringdata:	
   731                           
   732                           ; #config settings
   733  0000                     
   734                           	psect	cinit
   735  0015                     start_initialization:	
   736  0015                     __initialization:	
   737                           
   738                           ; Clear objects allocated to BANK0
   739  0015  01E8               	clrf	__pbssBANK0& (0+127)
   740  0016  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   741  0017  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   742  0018  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   743  0019  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   744  001A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   745                           
   746                           ; Clear objects allocated to BANK1
   747  001B  1383               	bcf	3,7	;select IRP bank0
   748  001C  30C8               	movlw	low __pbssBANK1
   749  001D  0084               	movwf	4
   750  001E  30E5               	movlw	low (__pbssBANK1+29)
   751  001F  160A  118A  2178  120A  118A  	fcall	clear_ram0
   752                           
   753                           ; Clear objects allocated to BANK3
   754  0024  1783               	bsf	3,7	;select IRP bank2
   755  0025  3090               	movlw	low __pbssBANK3
   756  0026  0084               	movwf	4
   757  0027  30C0               	movlw	low (__pbssBANK3+48)
   758  0028  160A  118A  2178  120A  118A  	fcall	clear_ram0
   759                           
   760                           ; Clear objects allocated to BANK2
   761  002D  3010               	movlw	low __pbssBANK2
   762  002E  0084               	movwf	4
   763  002F  3070               	movlw	low (__pbssBANK2+96)
   764  0030  160A  118A  2178  120A  118A  	fcall	clear_ram0
   765                           
   766                           ; Initialize objects allocated to BANK1
   767  0035  1683               	bsf	3,5	;RP0=1, select bank1
   768  0036  1303               	bcf	3,6	;RP1=0, select bank1
   769  0037  120A  158A  2001  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   770  003C  00E5               	movwf	__pdataBANK1& (0+127)
   771  003D  120A  158A  2002  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   772  0042  00E6               	movwf	(__pdataBANK1+1)& (0+127)
   773                           
   774                           ; Initialize objects allocated to BANK0
   775  0043  1283               	bcf	3,5	;RP0=0, select bank0
   776  0044  1303               	bcf	3,6	;RP1=0, select bank0
   777  0045  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   778  004A  00EE               	movwf	__pdataBANK0& (0+127)
   779  004B  120A  118A  27FE   	fcall	__pidataBANK0+1	;fetch initializer
   780  004E  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   781  004F                     end_of_initialization:	
   782                           ;End of C runtime variable initialization code
   783                           
   784  004F                     __end_of__initialization:	
   785  004F  0183               	clrf	3
   786  0050  120A  158A  2CC9   	ljmp	_main	;jump to C main() function
   787                           
   788                           	psect	bssBANK0
   789  0068                     __pbssBANK0:	
   790  0068                     _contador_rb6:	
   791  0068                     	ds	2
   792  006A                     _kmph:	
   793  006A                     	ds	2
   794  006C                     _tempo_rb6:	
   795  006C                     	ds	2
   796                           
   797                           	psect	dataBANK0
   798  006E                     __pdataBANK0:	
   799  006E                     _velocidadeSetada:	
   800  006E                     	ds	2
   801                           
   802                           	psect	bssBANK1
   803  00C8                     __pbssBANK1:	
   804  00C8                     _buffer:	
   805  00C8                     	ds	9
   806  00D1                     _receivedBuffer:	
   807  00D1                     	ds	5
   808  00D6                     _contagens_tm0:	
   809  00D6                     	ds	2
   810  00D8                     _erro_anterior:	
   811  00D8                     	ds	2
   812  00DA                     _erro_atual:	
   813  00DA                     	ds	2
   814  00DC                     _pulsos:	
   815  00DC                     	ds	2
   816  00DE                     _pwm:	
   817  00DE                     	ds	2
   818  00E0                     _receiveIndex:	
   819  00E0                     	ds	2
   820  00E2                     _rpm:	
   821  00E2                     	ds	2
   822  00E4                     _pilotoAtivo:	
   823  00E4                     	ds	1
   824                           
   825                           	psect	dataBANK1
   826  00E5                     __pdataBANK1:	
   827  00E5                     _setpoint:	
   828  00E5                     	ds	2
   829                           
   830                           	psect	bssBANK3
   831  0190                     __pbssBANK3:	
   832  0190                     _rBaixo:	
   833  0190                     	ds	48
   834                           
   835                           	psect	bssBANK2
   836  0110                     __pbssBANK2:	
   837  0110                     _rGrande:	
   838  0110                     	ds	48
   839  0140                     _rMedio:	
   840  0140                     	ds	48
   841                           
   842                           	psect	clrtext
   843  1178                     clear_ram0:	
   844                           ;	Called with FSR containing the base address, and
   845                           ;	W with the last address+1
   846                           
   847  1178  0064               	clrwdt	;clear the watchdog before getting into this loop
   848  1179                     clrloop0:	
   849  1179  0180               	clrf	0	;clear RAM location pointed to by FSR
   850  117A  0A84               	incf	4,f	;increment pointer
   851  117B  0604               	xorwf	4,w	;XOR with final address
   852  117C  1903               	btfsc	3,2	;have we reached the end yet?
   853  117D  3400               	retlw	0	;all done for this memory range, return
   854  117E  0604               	xorwf	4,w	;XOR again to restore value
   855  117F  2979               	goto	clrloop0	;do the next byte
   856                           
   857                           	psect	cstackBANK3
   858  01C0                     __pcstackBANK3:	
   859  01C0                     ??_TIMER0_Set:	
   860  01C0                     ?_PWM_DutyCycle2:	
   861                           ; 0 bytes @ 0x0
   862                           
   863  01C0                     ??_TIMER0_Init:	
   864                           ; 0 bytes @ 0x0
   865                           
   866  01C0                     ??_PWM_Init:	
   867                           ; 0 bytes @ 0x0
   868                           
   869  01C0                     ?_PWM_DutyCycle1:	
   870                           ; 0 bytes @ 0x0
   871                           
   872  01C0                     ??_inicia:	
   873                           ; 0 bytes @ 0x0
   874                           
   875  01C0                     ??_res:	
   876                           ; 0 bytes @ 0x0
   877                           
   878  01C0                     ??_set:	
   879                           ; 0 bytes @ 0x0
   880                           
   881  01C0                     ?___aldiv:	
   882                           ; 0 bytes @ 0x0
   883                           
   884  01C0                     TIMER0_Set@contagens:	
   885                           ; 4 bytes @ 0x0
   886                           
   887  01C0                     PWM_DutyCycle1@valor:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  01C0                     PWM_DutyCycle2@valor:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  01C0                     ___aldiv@divisor:	
   894                           ; 2 bytes @ 0x0
   895                           
   896                           
   897                           ; 4 bytes @ 0x0
   898  01C0                     	ds	2
   899  01C2                     ??_PWM_DutyCycle2:	
   900  01C2                     ??_PWM_DutyCycle1:	
   901                           ; 0 bytes @ 0x2
   902                           
   903                           
   904                           ; 0 bytes @ 0x2
   905  01C2                     	ds	2
   906  01C4                     ___aldiv@dividend:	
   907                           
   908                           ; 4 bytes @ 0x4
   909  01C4                     	ds	4
   910  01C8                     ??___aldiv:	
   911                           
   912                           ; 0 bytes @ 0x8
   913  01C8                     	ds	1
   914  01C9                     ___aldiv@counter:	
   915                           
   916                           ; 1 bytes @ 0x9
   917  01C9                     	ds	1
   918  01CA                     ___aldiv@sign:	
   919                           
   920                           ; 1 bytes @ 0xA
   921  01CA                     	ds	1
   922  01CB                     ___aldiv@quotient:	
   923                           
   924                           ; 4 bytes @ 0xB
   925  01CB                     	ds	4
   926  01CF                     ?_USART_Init:	
   927  01CF                     USART_Init@BaudRate:	
   928                           ; 0 bytes @ 0xF
   929                           
   930                           
   931                           ; 4 bytes @ 0xF
   932  01CF                     	ds	4
   933  01D3                     ??_USART_Init:	
   934                           
   935                           ; 0 bytes @ 0x13
   936  01D3                     	ds	4
   937  01D7                     ??_main:	
   938                           
   939                           ; 0 bytes @ 0x17
   940  01D7                     	ds	3
   941                           
   942                           	psect	cstackBANK1
   943  00A0                     __pcstackBANK1:	
   944  00A0                     ISR@rpmAux:	
   945                           
   946                           ; 2 bytes @ 0x0
   947  00A0                     	ds	2
   948  00A2                     _ISR$1661:	
   949                           
   950                           ; 3 bytes @ 0x2
   951  00A2                     	ds	3
   952  00A5                     _ISR$1662:	
   953                           
   954                           ; 3 bytes @ 0x5
   955  00A5                     	ds	3
   956  00A8                     ISR@reajuste:	
   957                           
   958                           ; 3 bytes @ 0x8
   959  00A8                     	ds	3
   960  00AB                     _ISR$235:	
   961                           
   962                           ; 2 bytes @ 0xB
   963  00AB                     	ds	2
   964  00AD                     ISR@checksum:	
   965                           
   966                           ; 1 bytes @ 0xD
   967  00AD                     	ds	1
   968  00AE                     ISR@byte:	
   969                           
   970                           ; 1 bytes @ 0xE
   971  00AE                     	ds	1
   972  00AF                     ISR@index:	
   973                           
   974                           ; 1 bytes @ 0xF
   975  00AF                     	ds	1
   976  00B0                     ISR@delta:	
   977                           
   978                           ; 2 bytes @ 0x10
   979  00B0                     	ds	2
   980  00B2                     ISR@soma:	
   981                           
   982                           ; 3 bytes @ 0x12
   983  00B2                     	ds	3
   984  00B5                     ISR@a:	
   985                           
   986                           ; 2 bytes @ 0x15
   987  00B5                     	ds	2
   988  00B7                     ISR@a_228:	
   989                           
   990                           ; 2 bytes @ 0x17
   991  00B7                     	ds	2
   992  00B9                     ISR@a_229:	
   993                           
   994                           ; 2 bytes @ 0x19
   995  00B9                     	ds	2
   996  00BB                     ISR@a_230:	
   997                           
   998                           ; 2 bytes @ 0x1B
   999  00BB                     	ds	2
  1000  00BD                     ISR@total_area:	
  1001                           
  1002                           ; 3 bytes @ 0x1D
  1003  00BD                     	ds	3
  1004  00C0                     ISR@rule:	
  1005                           
  1006                           ; 3 bytes @ 0x20
  1007  00C0                     	ds	3
  1008  00C3                     ISR@a_233:	
  1009                           
  1010                           ; 2 bytes @ 0x23
  1011  00C3                     	ds	2
  1012  00C5                     ISR@x:	
  1013                           
  1014                           ; 3 bytes @ 0x25
  1015  00C5                     	ds	3
  1016                           
  1017                           	psect	cstackCOMMON
  1018  0070                     __pcstackCOMMON:	
  1019  0070                     ?_USART_WriteChar:	
  1020  0070                     ??_USART_WriteChar:	
  1021                           ; 0 bytes @ 0x0
  1022                           
  1023  0070                     ?_TIMER0_Set:	
  1024                           ; 0 bytes @ 0x0
  1025                           
  1026  0070                     ?_TIMER0_Init:	
  1027                           ; 0 bytes @ 0x0
  1028                           
  1029  0070                     ?_PWM_Init:	
  1030                           ; 0 bytes @ 0x0
  1031                           
  1032  0070                     ?_inicia:	
  1033                           ; 0 bytes @ 0x0
  1034                           
  1035  0070                     ?_res:	
  1036                           ; 0 bytes @ 0x0
  1037                           
  1038  0070                     ?_set:	
  1039                           ; 0 bytes @ 0x0
  1040                           
  1041  0070                     ?_send:	
  1042                           ; 0 bytes @ 0x0
  1043                           
  1044  0070                     ?_ISR:	
  1045                           ; 0 bytes @ 0x0
  1046                           
  1047  0070                     ?_main:	
  1048                           ; 0 bytes @ 0x0
  1049                           
  1050  0070                     ?_USART_WriteString:	
  1051                           ; 0 bytes @ 0x0
  1052                           
  1053  0070                     ?i1_inicia:	
  1054                           ; 0 bytes @ 0x0
  1055                           
  1056  0070                     ??i1_inicia:	
  1057                           ; 0 bytes @ 0x0
  1058                           
  1059  0070                     ?i1_res:	
  1060                           ; 0 bytes @ 0x0
  1061                           
  1062  0070                     ??i1_res:	
  1063                           ; 0 bytes @ 0x0
  1064                           
  1065  0070                     ?i1_set:	
  1066                           ; 0 bytes @ 0x0
  1067                           
  1068  0070                     ??i1_set:	
  1069                           ; 0 bytes @ 0x0
  1070                           
  1071  0070                     ?i1_TIMER0_Set:	
  1072                           ; 0 bytes @ 0x0
  1073                           
  1074  0070                     ??i1_TIMER0_Set:	
  1075                           ; 0 bytes @ 0x0
  1076                           
  1077  0070                     ?i1_PWM_DutyCycle2:	
  1078                           ; 0 bytes @ 0x0
  1079                           
  1080  0070                     ?_USART_ReceiveChar:	
  1081                           ; 0 bytes @ 0x0
  1082                           
  1083  0070                     ?___bmul:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_abs:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?___lwdiv:	
  1090                           ; 2 bytes @ 0x0
  1091                           
  1092  0070                     ?___ftpack:	
  1093                           ; 2 bytes @ 0x0
  1094                           
  1095  0070                     USART_WriteChar@byte:	
  1096                           ; 3 bytes @ 0x0
  1097                           
  1098  0070                     ___bmul@multiplicand:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     i1TIMER0_Set@contagens:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     abs@a:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ___lwdiv@divisor:	
  1108                           ; 2 bytes @ 0x0
  1109                           
  1110  0070                     i1PWM_DutyCycle2@valor:	
  1111                           ; 2 bytes @ 0x0
  1112                           
  1113  0070                     ___ftpack@arg:	
  1114                           ; 2 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 3 bytes @ 0x0
  1118  0070                     	ds	1
  1119  0071                     ??_USART_WriteString:	
  1120  0071                     ??___bmul:	
  1121                           ; 0 bytes @ 0x1
  1122                           
  1123                           
  1124                           ; 0 bytes @ 0x1
  1125  0071                     	ds	1
  1126  0072                     ??_abs:	
  1127  0072                     ??i1_PWM_DutyCycle2:	
  1128                           ; 0 bytes @ 0x2
  1129                           
  1130  0072                     USART_WriteString@str:	
  1131                           ; 0 bytes @ 0x2
  1132                           
  1133  0072                     ___bmul@product:	
  1134                           ; 1 bytes @ 0x2
  1135                           
  1136  0072                     ___lwdiv@dividend:	
  1137                           ; 1 bytes @ 0x2
  1138                           
  1139                           
  1140                           ; 2 bytes @ 0x2
  1141  0072                     	ds	1
  1142  0073                     ??_USART_ReceiveChar:	
  1143  0073                     ___bmul@multiplier:	
  1144                           ; 0 bytes @ 0x3
  1145                           
  1146  0073                     ___ftpack@exp:	
  1147                           ; 1 bytes @ 0x3
  1148                           
  1149                           
  1150                           ; 1 bytes @ 0x3
  1151  0073                     	ds	1
  1152  0074                     ?___ftge:	
  1153  0074                     ??___lwdiv:	
  1154                           ; 1 bit 
  1155                           
  1156  0074                     USART_ReceiveChar@byte:	
  1157                           ; 0 bytes @ 0x4
  1158                           
  1159  0074                     ___ftpack@sign:	
  1160                           ; 1 bytes @ 0x4
  1161                           
  1162  0074                     ___ftge@ff1:	
  1163                           ; 1 bytes @ 0x4
  1164                           
  1165                           
  1166                           ; 3 bytes @ 0x4
  1167  0074                     	ds	1
  1168  0075                     ??___ftpack:	
  1169  0075                     ___lwdiv@quotient:	
  1170                           ; 0 bytes @ 0x5
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x5
  1174  0075                     	ds	2
  1175  0077                     ___lwdiv@counter:	
  1176  0077                     ___ftge@ff2:	
  1177                           ; 1 bytes @ 0x7
  1178                           
  1179                           
  1180                           ; 3 bytes @ 0x7
  1181  0077                     	ds	1
  1182  0078                     ??_send:	
  1183  0078                     ?___awtoft:	
  1184                           ; 0 bytes @ 0x8
  1185                           
  1186  0078                     ___awtoft@c:	
  1187                           ; 3 bytes @ 0x8
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x8
  1191  0078                     	ds	1
  1192  0079                     send@checksum:	
  1193                           
  1194                           ; 1 bytes @ 0x9
  1195  0079                     	ds	1
  1196  007A                     send@index:	
  1197                           
  1198                           ; 1 bytes @ 0xA
  1199  007A                     	ds	1
  1200  007B                     ??___awtoft:	
  1201                           
  1202                           ; 0 bytes @ 0xB
  1203  007B                     	ds	2
  1204  007D                     ___awtoft@sign:	
  1205                           
  1206                           ; 1 bytes @ 0xD
  1207  007D                     	ds	1
  1208  007E                     ??_maximo:	
  1209  007E                     ??_minimo:	
  1210                           ; 0 bytes @ 0xE
  1211                           
  1212  007E                     ??_trapmf:	
  1213                           ; 0 bytes @ 0xE
  1214                           
  1215  007E                     ??___wmul:	
  1216                           ; 0 bytes @ 0xE
  1217                           
  1218  007E                     ??___ftneg:	
  1219                           ; 0 bytes @ 0xE
  1220                           
  1221                           
  1222                           	psect	cstackBANK0
  1223  0020                     __pcstackBANK0:	
  1224                           ; 0 bytes @ 0xE
  1225                           
  1226  0020                     ??___ftge:	
  1227  0020                     ?___ftneg:	
  1228                           ; 0 bytes @ 0x0
  1229                           
  1230  0020                     ___ftneg@f1:	
  1231                           ; 3 bytes @ 0x0
  1232                           
  1233                           
  1234                           ; 3 bytes @ 0x0
  1235  0020                     	ds	3
  1236  0023                     ?___ftadd:	
  1237  0023                     ___ftadd@f1:	
  1238                           ; 3 bytes @ 0x3
  1239                           
  1240                           
  1241                           ; 3 bytes @ 0x3
  1242  0023                     	ds	3
  1243  0026                     ?_minimo:	
  1244  0026                     minimo@a:	
  1245                           ; 3 bytes @ 0x6
  1246                           
  1247  0026                     ___ftadd@f2:	
  1248                           ; 3 bytes @ 0x6
  1249                           
  1250                           
  1251                           ; 3 bytes @ 0x6
  1252  0026                     	ds	3
  1253  0029                     ??___ftadd:	
  1254  0029                     minimo@b:	
  1255                           ; 0 bytes @ 0x9
  1256                           
  1257                           
  1258                           ; 3 bytes @ 0x9
  1259  0029                     	ds	3
  1260  002C                     ?_maximo:	
  1261  002C                     maximo@a:	
  1262                           ; 3 bytes @ 0xC
  1263                           
  1264                           
  1265                           ; 3 bytes @ 0xC
  1266  002C                     	ds	1
  1267  002D                     ___ftadd@sign:	
  1268                           
  1269                           ; 1 bytes @ 0xD
  1270  002D                     	ds	1
  1271  002E                     ___ftadd@exp2:	
  1272                           
  1273                           ; 1 bytes @ 0xE
  1274  002E                     	ds	1
  1275  002F                     ___ftadd@exp1:	
  1276  002F                     maximo@b:	
  1277                           ; 1 bytes @ 0xF
  1278                           
  1279                           
  1280                           ; 3 bytes @ 0xF
  1281  002F                     	ds	1
  1282  0030                     ?___ftdiv:	
  1283  0030                     ___ftdiv@f2:	
  1284                           ; 3 bytes @ 0x10
  1285                           
  1286                           
  1287                           ; 3 bytes @ 0x10
  1288  0030                     	ds	2
  1289  0032                     ?___fttol:	
  1290  0032                     ___fttol@f1:	
  1291                           ; 4 bytes @ 0x12
  1292                           
  1293                           
  1294                           ; 3 bytes @ 0x12
  1295  0032                     	ds	1
  1296  0033                     ___ftdiv@f1:	
  1297                           
  1298                           ; 3 bytes @ 0x13
  1299  0033                     	ds	3
  1300  0036                     ??___ftdiv:	
  1301  0036                     ??___fttol:	
  1302                           ; 0 bytes @ 0x16
  1303                           
  1304                           
  1305                           ; 0 bytes @ 0x16
  1306  0036                     	ds	4
  1307  003A                     ___ftdiv@cntr:	
  1308  003A                     ___fttol@sign1:	
  1309                           ; 1 bytes @ 0x1A
  1310                           
  1311                           
  1312                           ; 1 bytes @ 0x1A
  1313  003A                     	ds	1
  1314  003B                     ___ftdiv@f3:	
  1315  003B                     ___fttol@lval:	
  1316                           ; 3 bytes @ 0x1B
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x1B
  1320  003B                     	ds	3
  1321  003E                     ___ftdiv@exp:	
  1322                           
  1323                           ; 1 bytes @ 0x1E
  1324  003E                     	ds	1
  1325  003F                     ___ftdiv@sign:	
  1326  003F                     ___fttol@exp1:	
  1327                           ; 1 bytes @ 0x1F
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x1F
  1331  003F                     	ds	1
  1332  0040                     ?___wmul:	
  1333  0040                     ?_trapmf:	
  1334                           ; 2 bytes @ 0x20
  1335                           
  1336  0040                     ___wmul@multiplier:	
  1337                           ; 3 bytes @ 0x20
  1338                           
  1339  0040                     trapmf@x:	
  1340                           ; 2 bytes @ 0x20
  1341                           
  1342                           
  1343                           ; 3 bytes @ 0x20
  1344  0040                     	ds	2
  1345  0042                     ___wmul@multiplicand:	
  1346                           
  1347                           ; 2 bytes @ 0x22
  1348  0042                     	ds	1
  1349  0043                     trapmf@a:	
  1350                           
  1351                           ; 3 bytes @ 0x23
  1352  0043                     	ds	1
  1353  0044                     ___wmul@product:	
  1354                           
  1355                           ; 2 bytes @ 0x24
  1356  0044                     	ds	2
  1357  0046                     ?___lwtoft:	
  1358  0046                     ___lwtoft@c:	
  1359                           ; 3 bytes @ 0x26
  1360                           
  1361  0046                     trapmf@b:	
  1362                           ; 2 bytes @ 0x26
  1363                           
  1364                           
  1365                           ; 3 bytes @ 0x26
  1366  0046                     	ds	3
  1367  0049                     ??___lwtoft:	
  1368  0049                     trapmf@c:	
  1369                           ; 0 bytes @ 0x29
  1370                           
  1371                           
  1372                           ; 3 bytes @ 0x29
  1373  0049                     	ds	3
  1374  004C                     trapmf@d:	
  1375                           
  1376                           ; 3 bytes @ 0x2C
  1377  004C                     	ds	3
  1378  004F                     trapmf@ua:	
  1379                           
  1380                           ; 3 bytes @ 0x2F
  1381  004F                     	ds	3
  1382  0052                     ?___ftmul:	
  1383  0052                     ___ftmul@f1:	
  1384                           ; 3 bytes @ 0x32
  1385                           
  1386                           
  1387                           ; 3 bytes @ 0x32
  1388  0052                     	ds	3
  1389  0055                     ___ftmul@f2:	
  1390                           
  1391                           ; 3 bytes @ 0x35
  1392  0055                     	ds	3
  1393  0058                     ??___ftmul:	
  1394                           
  1395                           ; 0 bytes @ 0x38
  1396  0058                     	ds	4
  1397  005C                     ___ftmul@exp:	
  1398                           
  1399                           ; 1 bytes @ 0x3C
  1400  005C                     	ds	1
  1401  005D                     ___ftmul@f3_as_product:	
  1402                           
  1403                           ; 3 bytes @ 0x3D
  1404  005D                     	ds	3
  1405  0060                     ___ftmul@cntr:	
  1406                           
  1407                           ; 1 bytes @ 0x40
  1408  0060                     	ds	1
  1409  0061                     ___ftmul@sign:	
  1410                           
  1411                           ; 1 bytes @ 0x41
  1412  0061                     	ds	1
  1413  0062                     ??_ISR:	
  1414                           
  1415                           ; 0 bytes @ 0x42
  1416  0062                     	ds	6
  1417                           
  1418                           	psect	maintext
  1419  0CC9                     __pmaintext:	
  1420 ;;
  1421 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1422 ;;
  1423 ;; *************** function _main *****************
  1424 ;; Defined at:
  1425 ;;		line 394 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;		None               void
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 17F/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0
  1441 ;;      Temps:          0       0       0       3       0
  1442 ;;      Totals:         0       0       0       3       0
  1443 ;;Total ram usage:        3 bytes
  1444 ;; Hardware stack levels required when called:    6
  1445 ;; This function calls:
  1446 ;;		_PWM_DutyCycle1
  1447 ;;		_PWM_DutyCycle2
  1448 ;;		_PWM_Init
  1449 ;;		_TIMER0_Init
  1450 ;;		_TIMER0_Set
  1451 ;;		_USART_Init
  1452 ;;		_inicia
  1453 ;;		_res
  1454 ;;		_set
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _main
  1462  0CC9                     _main:	
  1463                           
  1464                           ;main.c: 395: TRISA = 0b00000001;
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1468  0CC9  3001               	movlw	1
  1469  0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0CCB  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0CCC  0085               	movwf	5	;volatile
  1472                           
  1473                           ;main.c: 396: PORTA = 0b00000001;
  1474  0CCD  3001               	movlw	1
  1475  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  1476  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  1477  0CD0  0085               	movwf	5	;volatile
  1478                           
  1479                           ;main.c: 397: TRISB = 0b00001111;
  1480  0CD1  300F               	movlw	15
  1481  0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0CD4  0086               	movwf	6	;volatile
  1484                           
  1485                           ;main.c: 398: PORTB = 0b00000000;
  1486  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0CD7  0186               	clrf	6	;volatile
  1489                           
  1490                           ;main.c: 399: TRISC = 0b10000001;
  1491  0CD8  3081               	movlw	129
  1492  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  1493  0CDA  1303               	bcf	3,6	;RP1=0, select bank1
  1494  0CDB  0087               	movwf	7	;volatile
  1495                           
  1496                           ;main.c: 401: PORTC = 0b11000000;
  1497  0CDC  30C0               	movlw	192
  1498  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0CDF  0087               	movwf	7	;volatile
  1501                           
  1502                           ;main.c: 402: TRISD = 0b00000000;
  1503  0CE0  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0CE1  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0CE2  0188               	clrf	8	;volatile
  1506                           
  1507                           ;main.c: 403: PORTD = 0b00000000;
  1508  0CE3  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0CE4  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0CE5  0188               	clrf	8	;volatile
  1511                           
  1512                           ;main.c: 404: TRISE = 0b00000000;
  1513  0CE6  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0CE7  1303               	bcf	3,6	;RP1=0, select bank1
  1515  0CE8  0189               	clrf	9	;volatile
  1516                           
  1517                           ;main.c: 405: PORTE = 0b00000000;
  1518  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0CEB  0189               	clrf	9	;volatile
  1521                           
  1522                           ;main.c: 408: T1CON = 0x03;
  1523  0CEC  3003               	movlw	3
  1524  0CED  0090               	movwf	16	;volatile
  1525                           
  1526                           ;main.c: 409: TMR1L = 0x00;
  1527  0CEE  018E               	clrf	14	;volatile
  1528                           
  1529                           ;main.c: 410: TMR1H = 0x00;
  1530  0CEF  018F               	clrf	15	;volatile
  1531                           
  1532                           ;main.c: 414: USART_Init(115200);
  1533  0CF0  3000               	movlw	0
  1534  0CF1  1683               	bsf	3,5	;RP0=1, select bank3
  1535  0CF2  1703               	bsf	3,6	;RP1=1, select bank3
  1536  0CF3  00D2               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1537  0CF4  3001               	movlw	1
  1538  0CF5  00D1               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1539  0CF6  30C2               	movlw	194
  1540  0CF7  00D0               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1541  0CF8  3000               	movlw	0
  1542  0CF9  00CF               	movwf	USART_Init@BaudRate^(0+384)
  1543  0CFA  160A  118A  2436  120A  158A  	fcall	_USART_Init
  1544                           
  1545                           ;main.c: 415: TIMER0_Init();
  1546  0CFF  160A  118A  219C  120A  158A  	fcall	_TIMER0_Init
  1547                           
  1548                           ;main.c: 418: PWM_Init();
  1549  0D04  160A  118A  22AD  120A  158A  	fcall	_PWM_Init
  1550                           
  1551                           ;main.c: 422: INTCONbits.PEIE = 1;
  1552  0D09  170B               	bsf	11,6	;volatile
  1553                           
  1554                           ;main.c: 423: INTCONbits.GIE = 1;
  1555  0D0A  178B               	bsf	11,7	;volatile
  1556                           
  1557                           ;main.c: 426: PWM_DutyCycle1(0);
  1558  0D0B  3000               	movlw	0
  1559  0D0C  1683               	bsf	3,5	;RP0=1, select bank3
  1560  0D0D  1703               	bsf	3,6	;RP1=1, select bank3
  1561  0D0E  00C0               	movwf	PWM_DutyCycle1@valor^(0+384)
  1562  0D0F  3000               	movlw	0
  1563  0D10  00C1               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1564  0D11  160A  118A  226B  120A  158A  	fcall	_PWM_DutyCycle1
  1565                           
  1566                           ;main.c: 427: PWM_DutyCycle2(10);
  1567  0D16  300A               	movlw	10
  1568  0D17  1683               	bsf	3,5	;RP0=1, select bank3
  1569  0D18  1703               	bsf	3,6	;RP1=1, select bank3
  1570  0D19  00C0               	movwf	PWM_DutyCycle2@valor^(0+384)
  1571  0D1A  3000               	movlw	0
  1572  0D1B  00C1               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1573  0D1C  160A  118A  228C  120A  158A  	fcall	_PWM_DutyCycle2
  1574                           
  1575                           ;main.c: 430: TIMER0_Set(238);
  1576  0D21  30EE               	movlw	238
  1577  0D22  160A  118A  2170  120A  158A  	fcall	_TIMER0_Set
  1578                           
  1579                           ;main.c: 433: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1580  0D27  3018               	movlw	24
  1581  0D28  1683               	bsf	3,5	;RP0=1, select bank3
  1582  0D29  1703               	bsf	3,6	;RP1=1, select bank3
  1583  0D2A  00D9               	movwf	(??_main^(0+384)+2)
  1584  0D2B  3061               	movlw	97
  1585  0D2C  00D8               	movwf	(??_main^(0+384)+1)
  1586  0D2D  306E               	movlw	110
  1587  0D2E  00D7               	movwf	??_main^(0+384)
  1588  0D2F                     u5807:	
  1589  0D2F  0BD7               	decfsz	??_main^(0+384),f
  1590  0D30  2D2F               	goto	u5807
  1591  0D31  0BD8               	decfsz	(??_main^(0+384)+1),f
  1592  0D32  2D2F               	goto	u5807
  1593  0D33  0BD9               	decfsz	(??_main^(0+384)+2),f
  1594  0D34  2D2F               	goto	u5807
  1595  0D35  0000               	nop
  1596  0D36                     l3151:	
  1597                           ;main.c: 436: while (1) {
  1598                           
  1599                           
  1600                           ;main.c: 438: if(PORTBbits.RB0 == 0){
  1601  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0D38  1806               	btfsc	6,0	;volatile
  1604  0D39  2D41               	goto	l3157
  1605  0D3A                     l182:	
  1606                           ;main.c: 439: while(PORTBbits.RB0 == 0);
  1607                           
  1608  0D3A  1C06               	btfss	6,0	;volatile
  1609  0D3B  2D3A               	goto	l182
  1610                           
  1611                           ;main.c: 440: inicia();
  1612  0D3C  160A  118A  2189  120A  158A  	fcall	_inicia
  1613  0D41                     l3157:	
  1614                           
  1615                           ;main.c: 441: }
  1616                           ;main.c: 442: if(PORTBbits.RB1 == 0){
  1617  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0D43  1886               	btfsc	6,1	;volatile
  1620  0D44  2D5A               	goto	l3165
  1621  0D45                     l186:	
  1622                           ;main.c: 443: while(PORTBbits.RB1 == 0);
  1623                           
  1624  0D45  1C86               	btfss	6,1	;volatile
  1625  0D46  2D45               	goto	l186
  1626                           
  1627                           ;main.c: 444: _delay((unsigned long)((20)*(18432000/4000.0)));
  1628  0D47  3078               	movlw	120
  1629  0D48  1683               	bsf	3,5	;RP0=1, select bank3
  1630  0D49  1703               	bsf	3,6	;RP1=1, select bank3
  1631  0D4A  00D8               	movwf	(??_main^(0+384)+1)
  1632  0D4B  30AF               	movlw	175
  1633  0D4C  00D7               	movwf	??_main^(0+384)
  1634  0D4D                     u5817:	
  1635  0D4D  0BD7               	decfsz	??_main^(0+384),f
  1636  0D4E  2D4D               	goto	u5817
  1637  0D4F  0BD8               	decfsz	(??_main^(0+384)+1),f
  1638  0D50  2D4D               	goto	u5817
  1639  0D51                     l189:	
  1640                           ;main.c: 445: while(PORTBbits.RB1 == 0);
  1641                           
  1642  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0D53  1C86               	btfss	6,1	;volatile
  1645  0D54  2D51               	goto	l189
  1646                           
  1647                           ;main.c: 446: res();
  1648  0D55  160A  118A  236E  120A  158A  	fcall	_res
  1649  0D5A                     l3165:	
  1650                           
  1651                           ;main.c: 447: }
  1652                           ;main.c: 448: if(PORTBbits.RB2 == 0){
  1653  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0D5C  1906               	btfsc	6,2	;volatile
  1656  0D5D  2D73               	goto	l3173
  1657  0D5E                     l193:	
  1658                           ;main.c: 449: while(PORTBbits.RB2 == 0);
  1659                           
  1660  0D5E  1D06               	btfss	6,2	;volatile
  1661  0D5F  2D5E               	goto	l193
  1662                           
  1663                           ;main.c: 450: _delay((unsigned long)((20)*(18432000/4000.0)));
  1664  0D60  3078               	movlw	120
  1665  0D61  1683               	bsf	3,5	;RP0=1, select bank3
  1666  0D62  1703               	bsf	3,6	;RP1=1, select bank3
  1667  0D63  00D8               	movwf	(??_main^(0+384)+1)
  1668  0D64  30AF               	movlw	175
  1669  0D65  00D7               	movwf	??_main^(0+384)
  1670  0D66                     u5827:	
  1671  0D66  0BD7               	decfsz	??_main^(0+384),f
  1672  0D67  2D66               	goto	u5827
  1673  0D68  0BD8               	decfsz	(??_main^(0+384)+1),f
  1674  0D69  2D66               	goto	u5827
  1675  0D6A                     l196:	
  1676                           ;main.c: 451: while(PORTBbits.RB2 == 0);
  1677                           
  1678  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0D6C  1D06               	btfss	6,2	;volatile
  1681  0D6D  2D6A               	goto	l196
  1682                           
  1683                           ;main.c: 452: set();
  1684  0D6E  160A  118A  23EF  120A  158A  	fcall	_set
  1685  0D73                     l3173:	
  1686                           
  1687                           ;main.c: 454: }
  1688                           ;main.c: 455: if(PORTBbits.RB3 == 0){
  1689  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0D75  1986               	btfsc	6,3	;volatile
  1692  0D76  2D92               	goto	l3181
  1693  0D77                     l200:	
  1694                           ;main.c: 456: while(PORTBbits.RB3 == 0);
  1695                           
  1696  0D77  1D86               	btfss	6,3	;volatile
  1697  0D78  2D77               	goto	l200
  1698                           
  1699                           ;main.c: 457: _delay((unsigned long)((20)*(18432000/4000.0)));
  1700  0D79  3078               	movlw	120
  1701  0D7A  1683               	bsf	3,5	;RP0=1, select bank3
  1702  0D7B  1703               	bsf	3,6	;RP1=1, select bank3
  1703  0D7C  00D8               	movwf	(??_main^(0+384)+1)
  1704  0D7D  30AF               	movlw	175
  1705  0D7E  00D7               	movwf	??_main^(0+384)
  1706  0D7F                     u5837:	
  1707  0D7F  0BD7               	decfsz	??_main^(0+384),f
  1708  0D80  2D7F               	goto	u5837
  1709  0D81  0BD8               	decfsz	(??_main^(0+384)+1),f
  1710  0D82  2D7F               	goto	u5837
  1711  0D83                     l203:	
  1712                           ;main.c: 458: while(PORTBbits.RB3 == 0);
  1713                           
  1714  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0D85  1D86               	btfss	6,3	;volatile
  1717  0D86  2D83               	goto	l203
  1718                           
  1719                           ;main.c: 459: pilotoAtivo = pilotoAtivo & 0b11111101;
  1720  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0D89  0864               	movf	_pilotoAtivo^(0+128),w
  1723  0D8A  39FD               	andlw	253
  1724  0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  1725  0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  1726  0D8D  00D7               	movwf	??_main^(0+384)
  1727  0D8E  0857               	movf	??_main^(0+384),w
  1728  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0D91  00E4               	movwf	_pilotoAtivo^(0+128)
  1731  0D92                     l3181:	
  1732                           
  1733                           ;main.c: 460: }
  1734                           ;main.c: 461: _delay((unsigned long)((200)*(18432000/4000.0)));
  1735  0D92  3005               	movlw	5
  1736  0D93  1683               	bsf	3,5	;RP0=1, select bank3
  1737  0D94  1703               	bsf	3,6	;RP1=1, select bank3
  1738  0D95  00D9               	movwf	(??_main^(0+384)+2)
  1739  0D96  30AD               	movlw	173
  1740  0D97  00D8               	movwf	(??_main^(0+384)+1)
  1741  0D98  30E0               	movlw	224
  1742  0D99  00D7               	movwf	??_main^(0+384)
  1743  0D9A                     u5847:	
  1744  0D9A  0BD7               	decfsz	??_main^(0+384),f
  1745  0D9B  2D9A               	goto	u5847
  1746  0D9C  0BD8               	decfsz	(??_main^(0+384)+1),f
  1747  0D9D  2D9A               	goto	u5847
  1748  0D9E  0BD9               	decfsz	(??_main^(0+384)+2),f
  1749  0D9F  2D9A               	goto	u5847
  1750  0DA0  2D36               	goto	l3151
  1751  0DA1                     __end_of_main:	
  1752                           
  1753                           	psect	text1
  1754  13EF                     __ptext1:	
  1755 ;; *************** function _set *****************
  1756 ;; Defined at:
  1757 ;;		line 99 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;		None               void
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          0       0       0       1       0
  1774 ;;      Totals:         0       0       0       1       0
  1775 ;;Total ram usage:        1 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    4
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _set
  1787  13EF                     _set:	
  1788                           
  1789                           ;main.c: 100: if(kmph > 40){
  1790                           
  1791                           ;incstack = 0
  1792                           ; Regs used in _set: [wreg+status,2+status,0]
  1793  13EF  3000               	movlw	0
  1794  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  1795  13F1  1303               	bcf	3,6	;RP1=0, select bank0
  1796  13F2  026B               	subwf	_kmph+1,w
  1797  13F3  3029               	movlw	41
  1798  13F4  1903               	skipnz
  1799  13F5  026A               	subwf	_kmph,w
  1800  13F6  1C03               	skipc
  1801  13F7  0008               	return
  1802                           
  1803                           ;main.c: 102: if(pilotoAtivo == 3 && setpoint > 1640){
  1804  13F8  1683               	bsf	3,5	;RP0=1, select bank1
  1805  13F9  1303               	bcf	3,6	;RP1=0, select bank1
  1806  13FA  0864               	movf	_pilotoAtivo^(0+128),w
  1807  13FB  3A03               	xorlw	3
  1808  13FC  1D03               	skipz
  1809  13FD  2C19               	goto	l2413
  1810  13FE  3006               	movlw	6
  1811  13FF  0266               	subwf	(_setpoint+1)^(0+128),w
  1812  1400  3069               	movlw	105
  1813  1401  1903               	skipnz
  1814  1402  0265               	subwf	_setpoint^(0+128),w
  1815  1403  1C03               	skipc
  1816  1404  2C19               	goto	l2413
  1817                           
  1818                           ;main.c: 104: setpoint = setpoint - 41;
  1819  1405  0865               	movf	_setpoint^(0+128),w
  1820  1406  3ED7               	addlw	215
  1821  1407  00E5               	movwf	_setpoint^(0+128)
  1822  1408  0866               	movf	(_setpoint+1)^(0+128),w
  1823  1409  1803               	skipnc
  1824  140A  3E01               	addlw	1
  1825  140B  3EFF               	addlw	255
  1826  140C  00E6               	movwf	(_setpoint+1)^(0+128)
  1827                           
  1828                           ;main.c: 105: velocidadeSetada = setpoint;
  1829  140D  0866               	movf	(_setpoint+1)^(0+128),w
  1830  140E  1283               	bcf	3,5	;RP0=0, select bank0
  1831  140F  1303               	bcf	3,6	;RP1=0, select bank0
  1832  1410  01EF               	clrf	_velocidadeSetada+1
  1833  1411  07EF               	addwf	_velocidadeSetada+1,f
  1834  1412  1683               	bsf	3,5	;RP0=1, select bank1
  1835  1413  1303               	bcf	3,6	;RP1=0, select bank1
  1836  1414  0865               	movf	_setpoint^(0+128),w
  1837  1415  1283               	bcf	3,5	;RP0=0, select bank0
  1838  1416  1303               	bcf	3,6	;RP1=0, select bank0
  1839  1417  01EE               	clrf	_velocidadeSetada
  1840  1418  07EE               	addwf	_velocidadeSetada,f
  1841  1419                     l2413:	
  1842                           
  1843                           ;main.c: 106: }
  1844                           ;main.c: 107: if(pilotoAtivo == 1){
  1845  1419  1683               	bsf	3,5	;RP0=1, select bank1
  1846  141A  1303               	bcf	3,6	;RP1=0, select bank1
  1847  141B  0864               	movf	_pilotoAtivo^(0+128),w
  1848  141C  3A01               	xorlw	1
  1849  141D  1D03               	skipz
  1850  141E  0008               	return
  1851                           
  1852                           ;main.c: 109: pilotoAtivo = 3;
  1853  141F  3003               	movlw	3
  1854  1420  1683               	bsf	3,5	;RP0=1, select bank3
  1855  1421  1703               	bsf	3,6	;RP1=1, select bank3
  1856  1422  00C0               	movwf	??_set^(0+384)
  1857  1423  0840               	movf	??_set^(0+384),w
  1858  1424  1683               	bsf	3,5	;RP0=1, select bank1
  1859  1425  1303               	bcf	3,6	;RP1=0, select bank1
  1860  1426  00E4               	movwf	_pilotoAtivo^(0+128)
  1861                           
  1862                           ;main.c: 110: setpoint = velocidadeSetada;
  1863  1427  1283               	bcf	3,5	;RP0=0, select bank0
  1864  1428  1303               	bcf	3,6	;RP1=0, select bank0
  1865  1429  086F               	movf	_velocidadeSetada+1,w
  1866  142A  1683               	bsf	3,5	;RP0=1, select bank1
  1867  142B  1303               	bcf	3,6	;RP1=0, select bank1
  1868  142C  01E6               	clrf	(_setpoint+1)^(0+128)
  1869  142D  07E6               	addwf	(_setpoint+1)^(0+128),f
  1870  142E  1283               	bcf	3,5	;RP0=0, select bank0
  1871  142F  1303               	bcf	3,6	;RP1=0, select bank0
  1872  1430  086E               	movf	_velocidadeSetada,w
  1873  1431  1683               	bsf	3,5	;RP0=1, select bank1
  1874  1432  1303               	bcf	3,6	;RP1=0, select bank1
  1875  1433  01E5               	clrf	_setpoint^(0+128)
  1876  1434  07E5               	addwf	_setpoint^(0+128),f
  1877  1435  0008               	return
  1878  1436                     __end_of_set:	
  1879                           
  1880                           	psect	text2
  1881  136E                     __ptext2:	
  1882 ;; *************** function _res *****************
  1883 ;; Defined at:
  1884 ;;		line 86 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;		None               void
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0
  1900 ;;      Temps:          0       0       0       1       0
  1901 ;;      Totals:         0       0       0       1       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    4
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _res
  1914  136E                     _res:	
  1915                           
  1916                           ;main.c: 87: if(pilotoAtivo == 3 && setpoint < 9000){
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _res: [wreg+status,2+status,0]
  1920  136E  1683               	bsf	3,5	;RP0=1, select bank1
  1921  136F  1303               	bcf	3,6	;RP1=0, select bank1
  1922  1370  0864               	movf	_pilotoAtivo^(0+128),w
  1923  1371  3A03               	xorlw	3
  1924  1372  1D03               	skipz
  1925  1373  2B8F               	goto	l2399
  1926  1374  3023               	movlw	35
  1927  1375  0266               	subwf	(_setpoint+1)^(0+128),w
  1928  1376  3028               	movlw	40
  1929  1377  1903               	skipnz
  1930  1378  0265               	subwf	_setpoint^(0+128),w
  1931  1379  1803               	skipnc
  1932  137A  2B8F               	goto	l2399
  1933                           
  1934                           ;main.c: 89: setpoint = setpoint + 41;
  1935  137B  0865               	movf	_setpoint^(0+128),w
  1936  137C  3E29               	addlw	41
  1937  137D  00E5               	movwf	_setpoint^(0+128)
  1938  137E  0866               	movf	(_setpoint+1)^(0+128),w
  1939  137F  1803               	skipnc
  1940  1380  3E01               	addlw	1
  1941  1381  3E00               	addlw	0
  1942  1382  00E6               	movwf	(_setpoint+1)^(0+128)
  1943                           
  1944                           ;main.c: 90: velocidadeSetada = setpoint;
  1945  1383  0866               	movf	(_setpoint+1)^(0+128),w
  1946  1384  1283               	bcf	3,5	;RP0=0, select bank0
  1947  1385  1303               	bcf	3,6	;RP1=0, select bank0
  1948  1386  01EF               	clrf	_velocidadeSetada+1
  1949  1387  07EF               	addwf	_velocidadeSetada+1,f
  1950  1388  1683               	bsf	3,5	;RP0=1, select bank1
  1951  1389  1303               	bcf	3,6	;RP1=0, select bank1
  1952  138A  0865               	movf	_setpoint^(0+128),w
  1953  138B  1283               	bcf	3,5	;RP0=0, select bank0
  1954  138C  1303               	bcf	3,6	;RP1=0, select bank0
  1955  138D  01EE               	clrf	_velocidadeSetada
  1956  138E  07EE               	addwf	_velocidadeSetada,f
  1957  138F                     l2399:	
  1958                           
  1959                           ;main.c: 91: }
  1960                           ;main.c: 92: if(pilotoAtivo == 1){
  1961  138F  1683               	bsf	3,5	;RP0=1, select bank1
  1962  1390  1303               	bcf	3,6	;RP1=0, select bank1
  1963  1391  0864               	movf	_pilotoAtivo^(0+128),w
  1964  1392  3A01               	xorlw	1
  1965  1393  1D03               	skipz
  1966  1394  0008               	return
  1967                           
  1968                           ;main.c: 94: pilotoAtivo = 3;
  1969  1395  3003               	movlw	3
  1970  1396  1683               	bsf	3,5	;RP0=1, select bank3
  1971  1397  1703               	bsf	3,6	;RP1=1, select bank3
  1972  1398  00C0               	movwf	??_res^(0+384)
  1973  1399  0840               	movf	??_res^(0+384),w
  1974  139A  1683               	bsf	3,5	;RP0=1, select bank1
  1975  139B  1303               	bcf	3,6	;RP1=0, select bank1
  1976  139C  00E4               	movwf	_pilotoAtivo^(0+128)
  1977                           
  1978                           ;main.c: 95: setpoint = velocidadeSetada;
  1979  139D  1283               	bcf	3,5	;RP0=0, select bank0
  1980  139E  1303               	bcf	3,6	;RP1=0, select bank0
  1981  139F  086F               	movf	_velocidadeSetada+1,w
  1982  13A0  1683               	bsf	3,5	;RP0=1, select bank1
  1983  13A1  1303               	bcf	3,6	;RP1=0, select bank1
  1984  13A2  01E6               	clrf	(_setpoint+1)^(0+128)
  1985  13A3  07E6               	addwf	(_setpoint+1)^(0+128),f
  1986  13A4  1283               	bcf	3,5	;RP0=0, select bank0
  1987  13A5  1303               	bcf	3,6	;RP1=0, select bank0
  1988  13A6  086E               	movf	_velocidadeSetada,w
  1989  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  1990  13A8  1303               	bcf	3,6	;RP1=0, select bank1
  1991  13A9  01E5               	clrf	_setpoint^(0+128)
  1992  13AA  07E5               	addwf	_setpoint^(0+128),f
  1993  13AB  0008               	return
  1994  13AC                     __end_of_res:	
  1995                           
  1996                           	psect	text3
  1997  1189                     __ptext3:	
  1998 ;; *************** function _inicia *****************
  1999 ;; Defined at:
  2000 ;;		line 79 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;		None               void
  2007 ;; Registers used:
  2008 ;;		status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    4
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _inicia
  2030  1189                     _inicia:	
  2031                           
  2032                           ;main.c: 80: if(pilotoAtivo & 1){
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _inicia: [status,2]
  2036  1189  1683               	bsf	3,5	;RP0=1, select bank1
  2037  118A  1303               	bcf	3,6	;RP1=0, select bank1
  2038  118B  1C64               	btfss	_pilotoAtivo^(0+128),0
  2039  118C  298F               	goto	l93
  2040                           
  2041                           ;main.c: 81: pilotoAtivo = 0;
  2042  118D  01E4               	clrf	_pilotoAtivo^(0+128)
  2043                           
  2044                           ;main.c: 82: }else{
  2045  118E  0008               	return
  2046  118F                     l93:	
  2047                           
  2048                           ;main.c: 83: pilotoAtivo = 1;
  2049  118F  01E4               	clrf	_pilotoAtivo^(0+128)
  2050  1190  0AE4               	incf	_pilotoAtivo^(0+128),f
  2051  1191  0008               	return
  2052  1192                     __end_of_inicia:	
  2053                           
  2054                           	psect	text4
  2055  1436                     __ptext4:	
  2056 ;; *************** function _USART_Init *****************
  2057 ;; Defined at:
  2058 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  BaudRate        4   15[BANK3 ] long 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;		None               void
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2072 ;;      Params:         0       0       0       4       0
  2073 ;;      Locals:         0       0       0       0       0
  2074 ;;      Temps:          0       0       0       4       0
  2075 ;;      Totals:         0       0       0       8       0
  2076 ;;Total ram usage:        8 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    5
  2079 ;; This function calls:
  2080 ;;		___aldiv
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           
  2087                           ;psect for function _USART_Init
  2088  1436                     _USART_Init:	
  2089                           
  2090                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  2094  1436  1683               	bsf	3,5	;RP0=1, select bank3
  2095  1437  1703               	bsf	3,6	;RP1=1, select bank3
  2096  1438  084F               	movf	USART_Init@BaudRate^(0+384),w
  2097  1439  00D3               	movwf	??_USART_Init^(0+384)
  2098  143A  0850               	movf	(USART_Init@BaudRate+1)^(0+384),w
  2099  143B  00D4               	movwf	(??_USART_Init^(0+384)+1)
  2100  143C  0851               	movf	(USART_Init@BaudRate+2)^(0+384),w
  2101  143D  00D5               	movwf	(??_USART_Init^(0+384)+2)
  2102  143E  0852               	movf	(USART_Init@BaudRate+3)^(0+384),w
  2103  143F  00D6               	movwf	(??_USART_Init^(0+384)+3)
  2104  1440  3004               	movlw	4
  2105  1441                     u3015:	
  2106  1441  1003               	clrc
  2107  1442  0DD3               	rlf	??_USART_Init^(0+384),f
  2108  1443  0DD4               	rlf	(??_USART_Init^(0+384)+1),f
  2109  1444  0DD5               	rlf	(??_USART_Init^(0+384)+2),f
  2110  1445  0DD6               	rlf	(??_USART_Init^(0+384)+3),f
  2111  1446  3EFF               	addlw	-1
  2112  1447  1D03               	skipz
  2113  1448  2C41               	goto	u3015
  2114  1449  0856               	movf	(??_USART_Init+3)^(0+384),w
  2115  144A  00C3               	movwf	(___aldiv@divisor+3)^(0+384)
  2116  144B  0855               	movf	(??_USART_Init+2)^(0+384),w
  2117  144C  00C2               	movwf	(___aldiv@divisor+2)^(0+384)
  2118  144D  0854               	movf	(??_USART_Init+1)^(0+384),w
  2119  144E  00C1               	movwf	(___aldiv@divisor+1)^(0+384)
  2120  144F  0853               	movf	??_USART_Init^(0+384),w
  2121  1450  00C0               	movwf	___aldiv@divisor^(0+384)
  2122  1451  3001               	movlw	1
  2123  1452  00C7               	movwf	(___aldiv@dividend+3)^(0+384)
  2124  1453  3019               	movlw	25
  2125  1454  00C6               	movwf	(___aldiv@dividend+2)^(0+384)
  2126  1455  3040               	movlw	64
  2127  1456  00C5               	movwf	(___aldiv@dividend+1)^(0+384)
  2128  1457  3000               	movlw	0
  2129  1458  00C4               	movwf	___aldiv@dividend^(0+384)
  2130  1459  160A  118A  2771   	fcall	___aldiv
  2131  145C  1683               	bsf	3,5	;RP0=1, select bank3
  2132  145D  1703               	bsf	3,6	;RP1=1, select bank3
  2133  145E  0840               	movf	?___aldiv^(0+384),w
  2134  145F  3EFF               	addlw	255
  2135  1460  1683               	bsf	3,5	;RP0=1, select bank1
  2136  1461  1303               	bcf	3,6	;RP1=0, select bank1
  2137  1462  0099               	movwf	25	;volatile
  2138                           
  2139                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  2140  1463  1398               	bcf	24,7	;volatile
  2141                           
  2142                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  2143  1464  1318               	bcf	24,6	;volatile
  2144                           
  2145                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  2146  1465  1698               	bsf	24,5	;volatile
  2147                           
  2148                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  2149  1466  1218               	bcf	24,4	;volatile
  2150                           
  2151                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  2152  1467  1518               	bsf	24,2	;volatile
  2153                           
  2154                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  2155  1468  1498               	bsf	24,1	;volatile
  2156                           
  2157                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  2158  1469  1018               	bcf	24,0	;volatile
  2159                           
  2160                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  2161  146A  1283               	bcf	3,5	;RP0=0, select bank0
  2162  146B  1303               	bcf	3,6	;RP1=0, select bank0
  2163  146C  1798               	bsf	24,7	;volatile
  2164                           
  2165                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  2166  146D  1318               	bcf	24,6	;volatile
  2167                           
  2168                           ;usart.c: 28: RCSTAbits.SREN = 0;
  2169  146E  1298               	bcf	24,5	;volatile
  2170                           
  2171                           ;usart.c: 29: RCSTAbits.CREN = 1;
  2172  146F  1618               	bsf	24,4	;volatile
  2173                           
  2174                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  2175  1470  1198               	bcf	24,3	;volatile
  2176                           
  2177                           ;usart.c: 31: RCSTAbits.FERR = 0;
  2178  1471  1118               	bcf	24,2	;volatile
  2179                           
  2180                           ;usart.c: 32: RCSTAbits.OERR = 0;
  2181  1472  1098               	bcf	24,1	;volatile
  2182                           
  2183                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  2184  1473  1018               	bcf	24,0	;volatile
  2185                           
  2186                           ;usart.c: 36: PIE1bits.TXIE = 0;
  2187  1474  1683               	bsf	3,5	;RP0=1, select bank1
  2188  1475  1303               	bcf	3,6	;RP1=0, select bank1
  2189  1476  120C               	bcf	12,4	;volatile
  2190                           
  2191                           ;usart.c: 37: PIR1bits.TXIF = 0;
  2192  1477  1283               	bcf	3,5	;RP0=0, select bank0
  2193  1478  1303               	bcf	3,6	;RP1=0, select bank0
  2194  1479  120C               	bcf	12,4	;volatile
  2195                           
  2196                           ;usart.c: 38: PIE1bits.RCIE = 1;
  2197  147A  1683               	bsf	3,5	;RP0=1, select bank1
  2198  147B  1303               	bcf	3,6	;RP1=0, select bank1
  2199  147C  168C               	bsf	12,5	;volatile
  2200                           
  2201                           ;usart.c: 39: PIR1bits.RCIF = 0;
  2202  147D  1283               	bcf	3,5	;RP0=0, select bank0
  2203  147E  1303               	bcf	3,6	;RP1=0, select bank0
  2204  147F  128C               	bcf	12,5	;volatile
  2205  1480  0008               	return
  2206  1481                     __end_of_USART_Init:	
  2207                           
  2208                           	psect	text5
  2209  1771                     __ptext5:	
  2210 ;; *************** function ___aldiv *****************
  2211 ;; Defined at:
  2212 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  divisor         4    0[BANK3 ] long 
  2215 ;;  dividend        4    4[BANK3 ] long 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  quotient        4   11[BANK3 ] long 
  2218 ;;  sign            1   10[BANK3 ] unsigned char 
  2219 ;;  counter         1    9[BANK3 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  4    0[BANK3 ] long 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       0       0       8       0
  2230 ;;      Locals:         0       0       0       6       0
  2231 ;;      Temps:          0       0       0       1       0
  2232 ;;      Totals:         0       0       0      15       0
  2233 ;;Total ram usage:       15 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    4
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_USART_Init
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           
  2244                           ;psect for function ___aldiv
  2245  1771                     ___aldiv:	
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2249  1771  1683               	bsf	3,5	;RP0=1, select bank3
  2250  1772  1703               	bsf	3,6	;RP1=1, select bank3
  2251  1773  01CA               	clrf	___aldiv@sign^(0+384)
  2252  1774  1FC3               	btfss	(___aldiv@divisor+3)^(0+384),7
  2253  1775  2F83               	goto	l609
  2254  1776  09C0               	comf	___aldiv@divisor^(0+384),f
  2255  1777  09C1               	comf	(___aldiv@divisor+1)^(0+384),f
  2256  1778  09C2               	comf	(___aldiv@divisor+2)^(0+384),f
  2257  1779  09C3               	comf	(___aldiv@divisor+3)^(0+384),f
  2258  177A  0AC0               	incf	___aldiv@divisor^(0+384),f
  2259  177B  1903               	skipnz
  2260  177C  0AC1               	incf	(___aldiv@divisor+1)^(0+384),f
  2261  177D  1903               	skipnz
  2262  177E  0AC2               	incf	(___aldiv@divisor+2)^(0+384),f
  2263  177F  1903               	skipnz
  2264  1780  0AC3               	incf	(___aldiv@divisor+3)^(0+384),f
  2265  1781  01CA               	clrf	___aldiv@sign^(0+384)
  2266  1782  0ACA               	incf	___aldiv@sign^(0+384),f
  2267  1783                     l609:	
  2268  1783  1FC7               	btfss	(___aldiv@dividend+3)^(0+384),7
  2269  1784  2F94               	goto	l2175
  2270  1785  09C4               	comf	___aldiv@dividend^(0+384),f
  2271  1786  09C5               	comf	(___aldiv@dividend+1)^(0+384),f
  2272  1787  09C6               	comf	(___aldiv@dividend+2)^(0+384),f
  2273  1788  09C7               	comf	(___aldiv@dividend+3)^(0+384),f
  2274  1789  0AC4               	incf	___aldiv@dividend^(0+384),f
  2275  178A  1903               	skipnz
  2276  178B  0AC5               	incf	(___aldiv@dividend+1)^(0+384),f
  2277  178C  1903               	skipnz
  2278  178D  0AC6               	incf	(___aldiv@dividend+2)^(0+384),f
  2279  178E  1903               	skipnz
  2280  178F  0AC7               	incf	(___aldiv@dividend+3)^(0+384),f
  2281  1790  3001               	movlw	1
  2282  1791  00C8               	movwf	??___aldiv^(0+384)
  2283  1792  0848               	movf	??___aldiv^(0+384),w
  2284  1793  06CA               	xorwf	___aldiv@sign^(0+384),f
  2285  1794                     l2175:	
  2286  1794  3000               	movlw	0
  2287  1795  00CE               	movwf	(___aldiv@quotient+3)^(0+384)
  2288  1796  3000               	movlw	0
  2289  1797  00CD               	movwf	(___aldiv@quotient+2)^(0+384)
  2290  1798  3000               	movlw	0
  2291  1799  00CC               	movwf	(___aldiv@quotient+1)^(0+384)
  2292  179A  3000               	movlw	0
  2293  179B  00CB               	movwf	___aldiv@quotient^(0+384)
  2294  179C  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2295  179D  0442               	iorwf	(___aldiv@divisor+2)^(0+384),w
  2296  179E  0441               	iorwf	(___aldiv@divisor+1)^(0+384),w
  2297  179F  0440               	iorwf	___aldiv@divisor^(0+384),w
  2298  17A0  1903               	skipnz
  2299  17A1  2FE9               	goto	l2197
  2300  17A2  01C9               	clrf	___aldiv@counter^(0+384)
  2301  17A3  0AC9               	incf	___aldiv@counter^(0+384),f
  2302  17A4                     l2183:	
  2303  17A4  1BC3               	btfsc	(___aldiv@divisor+3)^(0+384),7
  2304  17A5  2FB4               	goto	l2185
  2305  17A6  3001               	movlw	1
  2306  17A7  00C8               	movwf	??___aldiv^(0+384)
  2307  17A8                     u2265:	
  2308  17A8  1003               	clrc
  2309  17A9  0DC0               	rlf	___aldiv@divisor^(0+384),f
  2310  17AA  0DC1               	rlf	(___aldiv@divisor+1)^(0+384),f
  2311  17AB  0DC2               	rlf	(___aldiv@divisor+2)^(0+384),f
  2312  17AC  0DC3               	rlf	(___aldiv@divisor+3)^(0+384),f
  2313  17AD  0BC8               	decfsz	??___aldiv^(0+384),f
  2314  17AE  2FA8               	goto	u2265
  2315  17AF  3001               	movlw	1
  2316  17B0  00C8               	movwf	??___aldiv^(0+384)
  2317  17B1  0848               	movf	??___aldiv^(0+384),w
  2318  17B2  07C9               	addwf	___aldiv@counter^(0+384),f
  2319  17B3  2FA4               	goto	l2183
  2320  17B4                     l2185:	
  2321  17B4  3001               	movlw	1
  2322  17B5  00C8               	movwf	??___aldiv^(0+384)
  2323  17B6                     u2285:	
  2324  17B6  1003               	clrc
  2325  17B7  0DCB               	rlf	___aldiv@quotient^(0+384),f
  2326  17B8  0DCC               	rlf	(___aldiv@quotient+1)^(0+384),f
  2327  17B9  0DCD               	rlf	(___aldiv@quotient+2)^(0+384),f
  2328  17BA  0DCE               	rlf	(___aldiv@quotient+3)^(0+384),f
  2329  17BB  0BC8               	decfsz	??___aldiv^(0+384),f
  2330  17BC  2FB6               	goto	u2285
  2331  17BD  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2332  17BE  0247               	subwf	(___aldiv@dividend+3)^(0+384),w
  2333  17BF  1D03               	skipz
  2334  17C0  2FCB               	goto	u2295
  2335  17C1  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  2336  17C2  0246               	subwf	(___aldiv@dividend+2)^(0+384),w
  2337  17C3  1D03               	skipz
  2338  17C4  2FCB               	goto	u2295
  2339  17C5  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  2340  17C6  0245               	subwf	(___aldiv@dividend+1)^(0+384),w
  2341  17C7  1D03               	skipz
  2342  17C8  2FCB               	goto	u2295
  2343  17C9  0840               	movf	___aldiv@divisor^(0+384),w
  2344  17CA  0244               	subwf	___aldiv@dividend^(0+384),w
  2345  17CB                     u2295:	
  2346  17CB  1C03               	skipc
  2347  17CC  2FDC               	goto	l2193
  2348  17CD  0840               	movf	___aldiv@divisor^(0+384),w
  2349  17CE  02C4               	subwf	___aldiv@dividend^(0+384),f
  2350  17CF  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  2351  17D0  1C03               	skipc
  2352  17D1  0F41               	incfsz	(___aldiv@divisor+1)^(0+384),w
  2353  17D2  02C5               	subwf	(___aldiv@dividend+1)^(0+384),f
  2354  17D3  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  2355  17D4  1C03               	skipc
  2356  17D5  0F42               	incfsz	(___aldiv@divisor+2)^(0+384),w
  2357  17D6  02C6               	subwf	(___aldiv@dividend+2)^(0+384),f
  2358  17D7  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  2359  17D8  1C03               	skipc
  2360  17D9  0F43               	incfsz	(___aldiv@divisor+3)^(0+384),w
  2361  17DA  02C7               	subwf	(___aldiv@dividend+3)^(0+384),f
  2362  17DB  144B               	bsf	___aldiv@quotient^(0+384),0
  2363  17DC                     l2193:	
  2364  17DC  3001               	movlw	1
  2365  17DD                     u2305:	
  2366  17DD  1003               	clrc
  2367  17DE  0CC3               	rrf	(___aldiv@divisor+3)^(0+384),f
  2368  17DF  0CC2               	rrf	(___aldiv@divisor+2)^(0+384),f
  2369  17E0  0CC1               	rrf	(___aldiv@divisor+1)^(0+384),f
  2370  17E1  0CC0               	rrf	___aldiv@divisor^(0+384),f
  2371  17E2  3EFF               	addlw	-1
  2372  17E3  1D03               	skipz
  2373  17E4  2FDD               	goto	u2305
  2374  17E5  3001               	movlw	1
  2375  17E6  02C9               	subwf	___aldiv@counter^(0+384),f
  2376  17E7  1D03               	btfss	3,2
  2377  17E8  2FB4               	goto	l2185
  2378  17E9                     l2197:	
  2379  17E9  084A               	movf	___aldiv@sign^(0+384),w
  2380  17EA  1903               	btfsc	3,2
  2381  17EB  2FF7               	goto	l2201
  2382  17EC  09CB               	comf	___aldiv@quotient^(0+384),f
  2383  17ED  09CC               	comf	(___aldiv@quotient+1)^(0+384),f
  2384  17EE  09CD               	comf	(___aldiv@quotient+2)^(0+384),f
  2385  17EF  09CE               	comf	(___aldiv@quotient+3)^(0+384),f
  2386  17F0  0ACB               	incf	___aldiv@quotient^(0+384),f
  2387  17F1  1903               	skipnz
  2388  17F2  0ACC               	incf	(___aldiv@quotient+1)^(0+384),f
  2389  17F3  1903               	skipnz
  2390  17F4  0ACD               	incf	(___aldiv@quotient+2)^(0+384),f
  2391  17F5  1903               	skipnz
  2392  17F6  0ACE               	incf	(___aldiv@quotient+3)^(0+384),f
  2393  17F7                     l2201:	
  2394  17F7  084E               	movf	(___aldiv@quotient+3)^(0+384),w
  2395  17F8  00C3               	movwf	(?___aldiv+3)^(0+384)
  2396  17F9  084D               	movf	(___aldiv@quotient+2)^(0+384),w
  2397  17FA  00C2               	movwf	(?___aldiv+2)^(0+384)
  2398  17FB  084C               	movf	(___aldiv@quotient+1)^(0+384),w
  2399  17FC  00C1               	movwf	(?___aldiv+1)^(0+384)
  2400  17FD  084B               	movf	___aldiv@quotient^(0+384),w
  2401  17FE  00C0               	movwf	?___aldiv^(0+384)
  2402  17FF  0008               	return
  2403  1800                     __end_of___aldiv:	
  2404                           
  2405                           	psect	text6
  2406  1170                     __ptext6:	
  2407 ;; *************** function _TIMER0_Set *****************
  2408 ;; Defined at:
  2409 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  contagens       1    wreg     unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  contagens       1    0[BANK3 ] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;		None               void
  2416 ;; Registers used:
  2417 ;;		wreg
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2423 ;;      Params:         0       0       0       0       0
  2424 ;;      Locals:         0       0       0       1       0
  2425 ;;      Temps:          0       0       0       0       0
  2426 ;;      Totals:         0       0       0       1       0
  2427 ;;Total ram usage:        1 bytes
  2428 ;; Hardware stack levels used:    1
  2429 ;; Hardware stack levels required when called:    4
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _TIMER0_Set
  2439  1170                     _TIMER0_Set:	
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _TIMER0_Set: [wreg]
  2443                           ;TIMER0_Set@contagens stored from wreg
  2444  1170  1683               	bsf	3,5	;RP0=1, select bank3
  2445  1171  1703               	bsf	3,6	;RP1=1, select bank3
  2446  1172  00C0               	movwf	TIMER0_Set@contagens^(0+384)
  2447                           
  2448                           ;timers.c: 22: TMR0 = contagens;
  2449  1173  0840               	movf	TIMER0_Set@contagens^(0+384),w
  2450  1174  1283               	bcf	3,5	;RP0=0, select bank0
  2451  1175  1303               	bcf	3,6	;RP1=0, select bank0
  2452  1176  0081               	movwf	1	;volatile
  2453  1177  0008               	return
  2454  1178                     __end_of_TIMER0_Set:	
  2455                           
  2456                           	psect	text7
  2457  119C                     __ptext7:	
  2458 ;; *************** function _TIMER0_Init *****************
  2459 ;; Defined at:
  2460 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;		None               void
  2467 ;; Registers used:
  2468 ;;		None
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    4
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _TIMER0_Init
  2490  119C                     _TIMER0_Init:	
  2491                           
  2492                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _TIMER0_Init: []
  2496  119C  1683               	bsf	3,5	;RP0=1, select bank1
  2497  119D  1303               	bcf	3,6	;RP1=0, select bank1
  2498  119E  1281               	bcf	1,5	;volatile
  2499                           
  2500                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2501  119F  1201               	bcf	1,4	;volatile
  2502                           
  2503                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2504  11A0  1181               	bcf	1,3	;volatile
  2505                           
  2506                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2507  11A1  1501               	bsf	1,2	;volatile
  2508                           
  2509                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2510  11A2  1481               	bsf	1,1	;volatile
  2511                           
  2512                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2513  11A3  1401               	bsf	1,0	;volatile
  2514                           
  2515                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2516  11A4  110B               	bcf	11,2	;volatile
  2517                           
  2518                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2519  11A5  168B               	bsf	11,5	;volatile
  2520  11A6  0008               	return
  2521  11A7                     __end_of_TIMER0_Init:	
  2522                           
  2523                           	psect	text8
  2524  12AD                     __ptext8:	
  2525 ;; *************** function _PWM_Init *****************
  2526 ;; Defined at:
  2527 ;;		line 5 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;		None               void
  2534 ;; Registers used:
  2535 ;;		wreg
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    4
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _PWM_Init
  2557  12AD                     _PWM_Init:	
  2558                           
  2559                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _PWM_Init: [wreg]
  2563  12AD  1283               	bcf	3,5	;RP0=0, select bank0
  2564  12AE  1303               	bcf	3,6	;RP1=0, select bank0
  2565  12AF  1492               	bsf	18,1	;volatile
  2566                           
  2567                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2568  12B0  1012               	bcf	18,0	;volatile
  2569                           
  2570                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2571  12B1  1312               	bcf	18,6	;volatile
  2572                           
  2573                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2574  12B2  1292               	bcf	18,5	;volatile
  2575                           
  2576                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2577  12B3  1212               	bcf	18,4	;volatile
  2578                           
  2579                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2580  12B4  1192               	bcf	18,3	;volatile
  2581                           
  2582                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2583  12B5  1512               	bsf	18,2	;volatile
  2584                           
  2585                           ;pwm.c: 27: PR2 = 255;
  2586  12B6  30FF               	movlw	255
  2587  12B7  1683               	bsf	3,5	;RP0=1, select bank1
  2588  12B8  1303               	bcf	3,6	;RP1=0, select bank1
  2589  12B9  0092               	movwf	18	;volatile
  2590                           
  2591                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2592  12BA  1283               	bcf	3,5	;RP0=0, select bank0
  2593  12BB  1303               	bcf	3,6	;RP1=0, select bank0
  2594  12BC  1597               	bsf	23,3	;volatile
  2595                           
  2596                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2597  12BD  1517               	bsf	23,2	;volatile
  2598                           
  2599                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2600  12BE  1497               	bsf	23,1	;volatile
  2601                           
  2602                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2603  12BF  1417               	bsf	23,0	;volatile
  2604                           
  2605                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2606  12C0  1683               	bsf	3,5	;RP0=1, select bank1
  2607  12C1  1303               	bcf	3,6	;RP1=0, select bank1
  2608  12C2  150C               	bsf	12,2	;volatile
  2609                           
  2610                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2611  12C3  1283               	bcf	3,5	;RP0=0, select bank0
  2612  12C4  1303               	bcf	3,6	;RP1=0, select bank0
  2613  12C5  110C               	bcf	12,2	;volatile
  2614                           
  2615                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2616  12C6  159D               	bsf	29,3	;volatile
  2617                           
  2618                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2619  12C7  151D               	bsf	29,2	;volatile
  2620                           
  2621                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2622  12C8  149D               	bsf	29,1	;volatile
  2623                           
  2624                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2625  12C9  141D               	bsf	29,0	;volatile
  2626                           
  2627                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2628  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  2629  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  2630  12CC  140D               	bsf	13,0	;volatile
  2631                           
  2632                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2633  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  2634  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  2635  12CF  100D               	bcf	13,0	;volatile
  2636  12D0  0008               	return
  2637  12D1                     __end_of_PWM_Init:	
  2638                           
  2639                           	psect	text9
  2640  128C                     __ptext9:	
  2641 ;; *************** function _PWM_DutyCycle2 *****************
  2642 ;; Defined at:
  2643 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  valor           2    0[BANK3 ] int 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       2       0
  2658 ;;      Locals:         0       0       0       0       0
  2659 ;;      Temps:          0       0       0       2       0
  2660 ;;      Totals:         0       0       0       4       0
  2661 ;;Total ram usage:        4 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    4
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _PWM_DutyCycle2
  2673  128C                     _PWM_DutyCycle2:	
  2674                           
  2675                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2679  128C  1683               	bsf	3,5	;RP0=1, select bank3
  2680  128D  1703               	bsf	3,6	;RP1=1, select bank3
  2681  128E  0841               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2682  128F  00C3               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2683  1290  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2684  1291  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2685  1292  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2686  1293  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2687  1294  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2688  1295  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2689  1296  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2690  1297  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2691  1298  0842               	movf	??_PWM_DutyCycle2^(0+384),w
  2692  1299  1283               	bcf	3,5	;RP0=0, select bank0
  2693  129A  1303               	bcf	3,6	;RP1=0, select bank0
  2694  129B  009B               	movwf	27	;volatile
  2695                           
  2696                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2697  129C  1683               	bsf	3,5	;RP0=1, select bank3
  2698  129D  1703               	bsf	3,6	;RP1=1, select bank3
  2699  129E  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2700  129F  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2701  12A0  3003               	movlw	3
  2702  12A1                     u3005:	
  2703  12A1  1003               	clrc
  2704  12A2  0DC2               	rlf	??_PWM_DutyCycle2^(0+384),f
  2705  12A3  3EFF               	addlw	-1
  2706  12A4  1D03               	skipz
  2707  12A5  2AA1               	goto	u3005
  2708  12A6  1003               	clrc
  2709  12A7  0D42               	rlf	??_PWM_DutyCycle2^(0+384),w
  2710  12A8  380C               	iorlw	12
  2711  12A9  1283               	bcf	3,5	;RP0=0, select bank0
  2712  12AA  1303               	bcf	3,6	;RP1=0, select bank0
  2713  12AB  009D               	movwf	29	;volatile
  2714  12AC  0008               	return
  2715  12AD                     __end_of_PWM_DutyCycle2:	
  2716                           
  2717                           	psect	text10
  2718  126B                     __ptext10:	
  2719 ;; *************** function _PWM_DutyCycle1 *****************
  2720 ;; Defined at:
  2721 ;;		line 64 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  valor           2    0[BANK3 ] int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;		None               void
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       0       0       2       0
  2736 ;;      Locals:         0       0       0       0       0
  2737 ;;      Temps:          0       0       0       2       0
  2738 ;;      Totals:         0       0       0       4       0
  2739 ;;Total ram usage:        4 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    4
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _PWM_DutyCycle1
  2751  126B                     _PWM_DutyCycle1:	
  2752                           
  2753                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2757  126B  1683               	bsf	3,5	;RP0=1, select bank3
  2758  126C  1703               	bsf	3,6	;RP1=1, select bank3
  2759  126D  0841               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2760  126E  00C3               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2761  126F  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2762  1270  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2763  1271  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2764  1272  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2765  1273  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2766  1274  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2767  1275  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2768  1276  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2769  1277  0842               	movf	??_PWM_DutyCycle1^(0+384),w
  2770  1278  1283               	bcf	3,5	;RP0=0, select bank0
  2771  1279  1303               	bcf	3,6	;RP1=0, select bank0
  2772  127A  0095               	movwf	21	;volatile
  2773                           
  2774                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2775  127B  1683               	bsf	3,5	;RP0=1, select bank3
  2776  127C  1703               	bsf	3,6	;RP1=1, select bank3
  2777  127D  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2778  127E  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2779  127F  3003               	movlw	3
  2780  1280                     u3025:	
  2781  1280  1003               	clrc
  2782  1281  0DC2               	rlf	??_PWM_DutyCycle1^(0+384),f
  2783  1282  3EFF               	addlw	-1
  2784  1283  1D03               	skipz
  2785  1284  2A80               	goto	u3025
  2786  1285  1003               	clrc
  2787  1286  0D42               	rlf	??_PWM_DutyCycle1^(0+384),w
  2788  1287  380C               	iorlw	12
  2789  1288  1283               	bcf	3,5	;RP0=0, select bank0
  2790  1289  1303               	bcf	3,6	;RP1=0, select bank0
  2791  128A  0097               	movwf	23	;volatile
  2792  128B  0008               	return
  2793  128C                     __end_of_PWM_DutyCycle1:	
  2794                           
  2795                           	psect	text11
  2796  093B                     __ptext11:	
  2797 ;; *************** function _ISR *****************
  2798 ;; Defined at:
  2799 ;;		line 166 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  index           1   15[BANK1 ] unsigned char 
  2804 ;;  a               2   27[BANK1 ] int 
  2805 ;;  a               2   25[BANK1 ] int 
  2806 ;;  a               2   23[BANK1 ] int 
  2807 ;;  a               2   21[BANK1 ] int 
  2808 ;;  checksum        1   13[BANK1 ] unsigned char 
  2809 ;;  a               2   35[BANK1 ] int 
  2810 ;;  x               3   37[BANK1 ] float 
  2811 ;;  rule            3   32[BANK1 ] float 
  2812 ;;  total_area      3   29[BANK1 ] float 
  2813 ;;  soma            3   18[BANK1 ] float 
  2814 ;;  reajuste        3    8[BANK1 ] float 
  2815 ;;  delta           2   16[BANK1 ] int 
  2816 ;;  rpmAux          2    0[BANK1 ] int 
  2817 ;;  byte            1   14[BANK1 ] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0      40       0       0
  2829 ;;      Temps:          0       6       0       0       0
  2830 ;;      Totals:         0       6      40       0       0
  2831 ;;Total ram usage:       46 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    3
  2834 ;; This function calls:
  2835 ;;		_USART_ReceiveChar
  2836 ;;		___awtoft
  2837 ;;		___bmul
  2838 ;;		___ftadd
  2839 ;;		___ftdiv
  2840 ;;		___ftge
  2841 ;;		___ftmul
  2842 ;;		___ftneg
  2843 ;;		___fttol
  2844 ;;		___lwdiv
  2845 ;;		___lwtoft
  2846 ;;		___wmul
  2847 ;;		_abs
  2848 ;;		_maximo
  2849 ;;		_minimo
  2850 ;;		_send
  2851 ;;		_trapmf
  2852 ;;		i1_PWM_DutyCycle2
  2853 ;;		i1_TIMER0_Set
  2854 ;;		i1_inicia
  2855 ;;		i1_res
  2856 ;;		i1_set
  2857 ;; This function is called by:
  2858 ;;		Interrupt level 1
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _ISR
  2864  093B                     _ISR:	
  2865                           
  2866                           ;main.c: 168: if (PIR1bits.RCIF) {
  2867  093B  120A  158A  1E8C   	btfss	12,5	;volatile
  2868  093E  284F               	goto	i1l3701
  2869                           
  2870                           ;main.c: 171: unsigned char byte = USART_ReceiveChar();
  2871  093F  160A  118A  21A7  120A  158A  	fcall	_USART_ReceiveChar
  2872  0944  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0945  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0946  00E2               	movwf	??_ISR
  2875  0947  0862               	movf	??_ISR,w
  2876  0948  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0949  1303               	bcf	3,6	;RP1=0, select bank1
  2878  094A  00AE               	movwf	ISR@byte^(0+128)
  2879                           
  2880                           ;main.c: 172: if (byte == '#')
  2881  094B  082E               	movf	ISR@byte^(0+128),w
  2882  094C  3A23               	xorlw	35
  2883  094D  1D03               	skipz
  2884  094E  2952               	goto	i1l3643
  2885                           
  2886                           ;main.c: 173: {
  2887                           ;main.c: 174: receiveIndex = 0;
  2888  094F  01E0               	clrf	_receiveIndex^(0+128)
  2889  0950  01E1               	clrf	(_receiveIndex+1)^(0+128)
  2890                           
  2891                           ;main.c: 175: } else {
  2892  0951  2958               	goto	i1l3645
  2893  0952                     i1l3643:	
  2894                           
  2895                           ;main.c: 176: receiveIndex++;
  2896  0952  3001               	movlw	1
  2897  0953  07E0               	addwf	_receiveIndex^(0+128),f
  2898  0954  1803               	skipnc
  2899  0955  0AE1               	incf	(_receiveIndex+1)^(0+128),f
  2900  0956  3000               	movlw	0
  2901  0957  07E1               	addwf	(_receiveIndex+1)^(0+128),f
  2902  0958                     i1l3645:	
  2903                           
  2904                           ;main.c: 177: }
  2905                           ;main.c: 178: receivedBuffer[receiveIndex] = byte;
  2906  0958  082E               	movf	ISR@byte^(0+128),w
  2907  0959  1283               	bcf	3,5	;RP0=0, select bank0
  2908  095A  1303               	bcf	3,6	;RP1=0, select bank0
  2909  095B  00E2               	movwf	??_ISR
  2910  095C  1683               	bsf	3,5	;RP0=1, select bank1
  2911  095D  1303               	bcf	3,6	;RP1=0, select bank1
  2912  095E  0860               	movf	_receiveIndex^(0+128),w
  2913  095F  3ED1               	addlw	_receivedBuffer& (0+255)
  2914  0960  0084               	movwf	4
  2915  0961  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0962  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0963  0862               	movf	??_ISR,w
  2918  0964  1383               	bcf	3,7	;select IRP bank1
  2919  0965  0080               	movwf	0
  2920                           
  2921                           ;main.c: 180: if (receiveIndex == 6) {
  2922  0966  3006               	movlw	6
  2923  0967  1683               	bsf	3,5	;RP0=1, select bank1
  2924  0968  1303               	bcf	3,6	;RP1=0, select bank1
  2925  0969  0660               	xorwf	_receiveIndex^(0+128),w
  2926  096A  0461               	iorwf	(_receiveIndex+1)^(0+128),w
  2927  096B  1D03               	skipz
  2928  096C  2980               	goto	L11
  2929                           
  2930                           ;main.c: 181: receiveIndex = 0;
  2931  096D  01E0               	clrf	_receiveIndex^(0+128)
  2932  096E  01E1               	clrf	(_receiveIndex+1)^(0+128)
  2933                           
  2934                           ;main.c: 183: if (receivedBuffer[1] == 'A' && receivedBuffer[2] == 'A' && receivedBuffer
      +                          [3] == 'A') {
  2935  096F  0852               	movf	(_receivedBuffer^(0+128)+1),w
  2936  0970  3A41               	xorlw	65
  2937  0971  1D03               	skipz
  2938  0972  2983               	goto	i1l3659
  2939  0973  0853               	movf	(_receivedBuffer^(0+128)+2),w
  2940  0974  3A41               	xorlw	65
  2941  0975  1D03               	skipz
  2942  0976  2983               	goto	i1l3659
  2943  0977  0854               	movf	(_receivedBuffer^(0+128)+3),w
  2944  0978  3A41               	xorlw	65
  2945  0979  1D03               	skipz
  2946  097A  2983               	goto	i1l3659
  2947                           
  2948                           ;main.c: 184: send();
  2949  097B  160A  118A  25D0  120A  158A  	fcall	_send
  2950  0980                     L11:	
  2951                           
  2952                           ;main.c: 185: } else {
  2953  0980  120A  158A  284C   	goto	i1l3699
  2954  0983                     i1l3659:	
  2955                           
  2956                           ;main.c: 186: if (receivedBuffer[0] == '#' && receivedBuffer[1] == '$' && receivedBuffer
      +                          [2] == ':') {
  2957  0983  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0984  1303               	bcf	3,6	;RP1=0, select bank1
  2959  0985  0851               	movf	_receivedBuffer^(0+128),w
  2960  0986  3A23               	xorlw	35
  2961  0987  1D03               	skipz
  2962  0988  2980               	goto	L11
  2963  0989  0852               	movf	(_receivedBuffer^(0+128)+1),w
  2964  098A  3A24               	xorlw	36
  2965  098B  1D03               	skipz
  2966  098C  2980               	goto	L11
  2967  098D  0853               	movf	(_receivedBuffer^(0+128)+2),w
  2968  098E  3A3A               	xorlw	58
  2969  098F  1D03               	skipz
  2970  0990  2980               	goto	L11
  2971                           
  2972                           ;main.c: 187: unsigned char checksum = 0x00;
  2973  0991  01AD               	clrf	ISR@checksum^(0+128)
  2974                           
  2975                           ;main.c: 188: for (unsigned char index = 0; index < 6; index++) {
  2976  0992  01AF               	clrf	ISR@index^(0+128)
  2977  0993  3006               	movlw	6
  2978  0994  022F               	subwf	ISR@index^(0+128),w
  2979  0995  1803               	btfsc	3,0
  2980  0996  29AF               	goto	i1l3677
  2981  0997                     i1l3671:	
  2982                           
  2983                           ;main.c: 189: checksum ^= receivedBuffer[index];
  2984  0997  082F               	movf	ISR@index^(0+128),w
  2985  0998  3ED1               	addlw	_receivedBuffer& (0+255)
  2986  0999  0084               	movwf	4
  2987  099A  1383               	bcf	3,7	;select IRP bank1
  2988  099B  0800               	movf	0,w
  2989  099C  1283               	bcf	3,5	;RP0=0, select bank0
  2990  099D  1303               	bcf	3,6	;RP1=0, select bank0
  2991  099E  00E2               	movwf	??_ISR
  2992  099F  0862               	movf	??_ISR,w
  2993  09A0  1683               	bsf	3,5	;RP0=1, select bank1
  2994  09A1  1303               	bcf	3,6	;RP1=0, select bank1
  2995  09A2  06AD               	xorwf	ISR@checksum^(0+128),f
  2996  09A3  3001               	movlw	1
  2997  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  2998  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  2999  09A6  00E2               	movwf	??_ISR
  3000  09A7  0862               	movf	??_ISR,w
  3001  09A8  1683               	bsf	3,5	;RP0=1, select bank1
  3002  09A9  1303               	bcf	3,6	;RP1=0, select bank1
  3003  09AA  07AF               	addwf	ISR@index^(0+128),f
  3004  09AB  3006               	movlw	6
  3005  09AC  022F               	subwf	ISR@index^(0+128),w
  3006  09AD  1C03               	skipc
  3007  09AE  2997               	goto	i1l3671
  3008  09AF                     i1l3677:	
  3009                           
  3010                           ;main.c: 190: }
  3011                           ;main.c: 191: if (receivedBuffer[6] == checksum) {
  3012  09AF  0857               	movf	(_receivedBuffer^(0+128)+6),w
  3013  09B0  062D               	xorwf	ISR@checksum^(0+128),w
  3014  09B1  1D03               	skipz
  3015  09B2  2980               	goto	L11
  3016                           
  3017                           ;main.c: 192: if(receivedBuffer[3] == 'M'){
  3018  09B3  0854               	movf	(_receivedBuffer^(0+128)+3),w
  3019  09B4  3A4D               	xorlw	77
  3020  09B5  120A  158A  1D03   	skipz
  3021  09B8  281E               	goto	i1l3683
  3022                           
  3023                           ;main.c: 193: setpoint = ((receivedBuffer[4] << 8) + (receivedBuffer[5])) * 41;
  3024  09B9  0855               	movf	(_receivedBuffer^(0+128)+4),w
  3025  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  3026  09BB  1303               	bcf	3,6	;RP1=0, select bank0
  3027  09BC  00E2               	movwf	??_ISR
  3028  09BD  01E3               	clrf	??_ISR+1
  3029  09BE  0862               	movf	??_ISR,w
  3030  09BF  00E3               	movwf	??_ISR+1
  3031  09C0  01E2               	clrf	??_ISR
  3032  09C1  1683               	bsf	3,5	;RP0=1, select bank1
  3033  09C2  1303               	bcf	3,6	;RP1=0, select bank1
  3034  09C3  0856               	movf	(_receivedBuffer^(0+128)+5),w
  3035  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  3036  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  3037  09C6  0762               	addwf	??_ISR,w
  3038  09C7  00C0               	movwf	___wmul@multiplier
  3039  09C8  3000               	movlw	0
  3040  09C9  1803               	skipnc
  3041  09CA  3001               	movlw	1
  3042  09CB  0763               	addwf	??_ISR+1,w
  3043  09CC  00C1               	movwf	___wmul@multiplier+1
  3044  09CD  3029               	movlw	41
  3045  09CE  00C2               	movwf	___wmul@multiplicand
  3046  09CF  3000               	movlw	0
  3047  09D0  00C3               	movwf	___wmul@multiplicand+1
  3048  09D1  160A  118A  22D1   	fcall	___wmul
  3049  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  3050  09D5  120A  158A  2811   	ljmp	L10
  3051                           
  3052                           	psect	intentry
  3053  0004                     __pintentry:	
  3054                           ;incstack = 0
  3055                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3056                           
  3057  0004                     interrupt_function:	
  3058  007E                     saved_w	set	btemp
  3059  0004  00FE               	movwf	btemp
  3060  0005  0E03               	swapf	3,w
  3061  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0008  00E4               	movwf	??_ISR+2
  3064  0009  0804               	movf	4,w
  3065  000A  00E5               	movwf	??_ISR+3
  3066  000B  080A               	movf	10,w
  3067  000C  00E6               	movwf	??_ISR+4
  3068  000D  087F               	movf	btemp+1,w
  3069  000E  00E7               	movwf	??_ISR+5
  3070  000F  120A  158A  293B   	ljmp	_ISR
  3071                           
  3072                           	psect	text12
  3073  13AC                     __ptext12:	
  3074 ;; *************** function i1_set *****************
  3075 ;; Defined at:
  3076 ;;		line 99 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;		None               void
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          1       0       0       0       0
  3093 ;;      Totals:         1       0       0       0       0
  3094 ;;Total ram usage:        1 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_ISR
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function i1_set
  3105  13AC                     i1_set:	
  3106                           
  3107                           ;main.c: 100: if(kmph > 40){
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in i1_set: [wreg+status,2+status,0]
  3111  13AC  3000               	movlw	0
  3112  13AD  1283               	bcf	3,5	;RP0=0, select bank0
  3113  13AE  1303               	bcf	3,6	;RP1=0, select bank0
  3114  13AF  026B               	subwf	_kmph+1,w
  3115  13B0  3029               	movlw	41
  3116  13B1  1903               	skipnz
  3117  13B2  026A               	subwf	_kmph,w
  3118  13B3  1C03               	skipc
  3119  13B4  0008               	return
  3120                           
  3121                           ;main.c: 102: if(pilotoAtivo == 3 && setpoint > 1640){
  3122  13B5  1683               	bsf	3,5	;RP0=1, select bank1
  3123  13B6  1303               	bcf	3,6	;RP1=0, select bank1
  3124  13B7  0864               	movf	_pilotoAtivo^(0+128),w
  3125  13B8  3A03               	xorlw	3
  3126  13B9  1D03               	skipz
  3127  13BA  2BD6               	goto	i1l2751
  3128  13BB  3006               	movlw	6
  3129  13BC  0266               	subwf	(_setpoint+1)^(0+128),w
  3130  13BD  3069               	movlw	105
  3131  13BE  1903               	skipnz
  3132  13BF  0265               	subwf	_setpoint^(0+128),w
  3133  13C0  1C03               	skipc
  3134  13C1  2BD6               	goto	i1l2751
  3135                           
  3136                           ;main.c: 104: setpoint = setpoint - 41;
  3137  13C2  0865               	movf	_setpoint^(0+128),w
  3138  13C3  3ED7               	addlw	215
  3139  13C4  00E5               	movwf	_setpoint^(0+128)
  3140  13C5  0866               	movf	(_setpoint+1)^(0+128),w
  3141  13C6  1803               	skipnc
  3142  13C7  3E01               	addlw	1
  3143  13C8  3EFF               	addlw	255
  3144  13C9  00E6               	movwf	(_setpoint+1)^(0+128)
  3145                           
  3146                           ;main.c: 105: velocidadeSetada = setpoint;
  3147  13CA  0866               	movf	(_setpoint+1)^(0+128),w
  3148  13CB  1283               	bcf	3,5	;RP0=0, select bank0
  3149  13CC  1303               	bcf	3,6	;RP1=0, select bank0
  3150  13CD  01EF               	clrf	_velocidadeSetada+1
  3151  13CE  07EF               	addwf	_velocidadeSetada+1,f
  3152  13CF  1683               	bsf	3,5	;RP0=1, select bank1
  3153  13D0  1303               	bcf	3,6	;RP1=0, select bank1
  3154  13D1  0865               	movf	_setpoint^(0+128),w
  3155  13D2  1283               	bcf	3,5	;RP0=0, select bank0
  3156  13D3  1303               	bcf	3,6	;RP1=0, select bank0
  3157  13D4  01EE               	clrf	_velocidadeSetada
  3158  13D5  07EE               	addwf	_velocidadeSetada,f
  3159  13D6                     i1l2751:	
  3160                           
  3161                           ;main.c: 106: }
  3162                           ;main.c: 107: if(pilotoAtivo == 1){
  3163  13D6  1683               	bsf	3,5	;RP0=1, select bank1
  3164  13D7  1303               	bcf	3,6	;RP1=0, select bank1
  3165  13D8  0864               	movf	_pilotoAtivo^(0+128),w
  3166  13D9  3A01               	xorlw	1
  3167  13DA  1D03               	skipz
  3168  13DB  0008               	return
  3169                           
  3170                           ;main.c: 109: pilotoAtivo = 3;
  3171  13DC  3003               	movlw	3
  3172  13DD  00F0               	movwf	??i1_set
  3173  13DE  0870               	movf	??i1_set,w
  3174  13DF  00E4               	movwf	_pilotoAtivo^(0+128)
  3175                           
  3176                           ;main.c: 110: setpoint = velocidadeSetada;
  3177  13E0  1283               	bcf	3,5	;RP0=0, select bank0
  3178  13E1  1303               	bcf	3,6	;RP1=0, select bank0
  3179  13E2  086F               	movf	_velocidadeSetada+1,w
  3180  13E3  1683               	bsf	3,5	;RP0=1, select bank1
  3181  13E4  1303               	bcf	3,6	;RP1=0, select bank1
  3182  13E5  01E6               	clrf	(_setpoint+1)^(0+128)
  3183  13E6  07E6               	addwf	(_setpoint+1)^(0+128),f
  3184  13E7  1283               	bcf	3,5	;RP0=0, select bank0
  3185  13E8  1303               	bcf	3,6	;RP1=0, select bank0
  3186  13E9  086E               	movf	_velocidadeSetada,w
  3187  13EA  1683               	bsf	3,5	;RP0=1, select bank1
  3188  13EB  1303               	bcf	3,6	;RP1=0, select bank1
  3189  13EC  01E5               	clrf	_setpoint^(0+128)
  3190  13ED  07E5               	addwf	_setpoint^(0+128),f
  3191  13EE  0008               	return
  3192  13EF                     __end_ofi1_set:	
  3193                           
  3194                           	psect	text13
  3195  12F6                     __ptext13:	
  3196 ;; *************** function i1_res *****************
  3197 ;; Defined at:
  3198 ;;		line 86 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;		None               void
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0
  3214 ;;      Temps:          1       0       0       0       0
  3215 ;;      Totals:         1       0       0       0       0
  3216 ;;Total ram usage:        1 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_ISR
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           
  3226                           ;psect for function i1_res
  3227  12F6                     i1_res:	
  3228                           
  3229                           ;main.c: 87: if(pilotoAtivo == 3 && setpoint < 9000){
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in i1_res: [wreg+status,2+status,0]
  3233  12F6  1683               	bsf	3,5	;RP0=1, select bank1
  3234  12F7  1303               	bcf	3,6	;RP1=0, select bank1
  3235  12F8  0864               	movf	_pilotoAtivo^(0+128),w
  3236  12F9  3A03               	xorlw	3
  3237  12FA  1D03               	skipz
  3238  12FB  2B17               	goto	i1l2737
  3239  12FC  3023               	movlw	35
  3240  12FD  0266               	subwf	(_setpoint+1)^(0+128),w
  3241  12FE  3028               	movlw	40
  3242  12FF  1903               	skipnz
  3243  1300  0265               	subwf	_setpoint^(0+128),w
  3244  1301  1803               	skipnc
  3245  1302  2B17               	goto	i1l2737
  3246                           
  3247                           ;main.c: 89: setpoint = setpoint + 41;
  3248  1303  0865               	movf	_setpoint^(0+128),w
  3249  1304  3E29               	addlw	41
  3250  1305  00E5               	movwf	_setpoint^(0+128)
  3251  1306  0866               	movf	(_setpoint+1)^(0+128),w
  3252  1307  1803               	skipnc
  3253  1308  3E01               	addlw	1
  3254  1309  3E00               	addlw	0
  3255  130A  00E6               	movwf	(_setpoint+1)^(0+128)
  3256                           
  3257                           ;main.c: 90: velocidadeSetada = setpoint;
  3258  130B  0866               	movf	(_setpoint+1)^(0+128),w
  3259  130C  1283               	bcf	3,5	;RP0=0, select bank0
  3260  130D  1303               	bcf	3,6	;RP1=0, select bank0
  3261  130E  01EF               	clrf	_velocidadeSetada+1
  3262  130F  07EF               	addwf	_velocidadeSetada+1,f
  3263  1310  1683               	bsf	3,5	;RP0=1, select bank1
  3264  1311  1303               	bcf	3,6	;RP1=0, select bank1
  3265  1312  0865               	movf	_setpoint^(0+128),w
  3266  1313  1283               	bcf	3,5	;RP0=0, select bank0
  3267  1314  1303               	bcf	3,6	;RP1=0, select bank0
  3268  1315  01EE               	clrf	_velocidadeSetada
  3269  1316  07EE               	addwf	_velocidadeSetada,f
  3270  1317                     i1l2737:	
  3271                           
  3272                           ;main.c: 91: }
  3273                           ;main.c: 92: if(pilotoAtivo == 1){
  3274  1317  1683               	bsf	3,5	;RP0=1, select bank1
  3275  1318  1303               	bcf	3,6	;RP1=0, select bank1
  3276  1319  0864               	movf	_pilotoAtivo^(0+128),w
  3277  131A  3A01               	xorlw	1
  3278  131B  1D03               	skipz
  3279  131C  0008               	return
  3280                           
  3281                           ;main.c: 94: pilotoAtivo = 3;
  3282  131D  3003               	movlw	3
  3283  131E  00F0               	movwf	??i1_res
  3284  131F  0870               	movf	??i1_res,w
  3285  1320  00E4               	movwf	_pilotoAtivo^(0+128)
  3286                           
  3287                           ;main.c: 95: setpoint = velocidadeSetada;
  3288  1321  1283               	bcf	3,5	;RP0=0, select bank0
  3289  1322  1303               	bcf	3,6	;RP1=0, select bank0
  3290  1323  086F               	movf	_velocidadeSetada+1,w
  3291  1324  1683               	bsf	3,5	;RP0=1, select bank1
  3292  1325  1303               	bcf	3,6	;RP1=0, select bank1
  3293  1326  01E6               	clrf	(_setpoint+1)^(0+128)
  3294  1327  07E6               	addwf	(_setpoint+1)^(0+128),f
  3295  1328  1283               	bcf	3,5	;RP0=0, select bank0
  3296  1329  1303               	bcf	3,6	;RP1=0, select bank0
  3297  132A  086E               	movf	_velocidadeSetada,w
  3298  132B  1683               	bsf	3,5	;RP0=1, select bank1
  3299  132C  1303               	bcf	3,6	;RP1=0, select bank1
  3300  132D  01E5               	clrf	_setpoint^(0+128)
  3301  132E  07E5               	addwf	_setpoint^(0+128),f
  3302  132F  0008               	return
  3303  1330                     __end_ofi1_res:	
  3304                           
  3305                           	psect	text14
  3306  1180                     __ptext14:	
  3307 ;; *************** function i1_inicia *****************
  3308 ;; Defined at:
  3309 ;;		line 79 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;		None               void
  3316 ;; Registers used:
  3317 ;;		status,2
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0
  3325 ;;      Temps:          0       0       0       0       0
  3326 ;;      Totals:         0       0       0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_ISR
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function i1_inicia
  3338  1180                     i1_inicia:	
  3339                           
  3340                           ;main.c: 80: if(pilotoAtivo & 1){
  3341                           
  3342                           ;incstack = 0
  3343                           ; Regs used in i1_inicia: [status,2]
  3344  1180  1683               	bsf	3,5	;RP0=1, select bank1
  3345  1181  1303               	bcf	3,6	;RP1=0, select bank1
  3346  1182  1C64               	btfss	_pilotoAtivo^(0+128),0
  3347  1183  2986               	goto	i1l93
  3348                           
  3349                           ;main.c: 81: pilotoAtivo = 0;
  3350  1184  01E4               	clrf	_pilotoAtivo^(0+128)
  3351                           
  3352                           ;main.c: 82: }else{
  3353  1185  0008               	return
  3354  1186                     i1l93:	
  3355                           
  3356                           ;main.c: 83: pilotoAtivo = 1;
  3357  1186  01E4               	clrf	_pilotoAtivo^(0+128)
  3358  1187  0AE4               	incf	_pilotoAtivo^(0+128),f
  3359  1188  0008               	return
  3360  1189                     __end_ofi1_inicia:	
  3361                           
  3362                           	psect	text15
  3363  1162                     __ptext15:	
  3364 ;; *************** function i1_TIMER0_Set *****************
  3365 ;; Defined at:
  3366 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  contagens       1    wreg     unsigned char 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  contagens       1    0[COMMON] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         1       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         1       0       0       0       0
  3384 ;;Total ram usage:        1 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_ISR
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function i1_TIMER0_Set
  3395  1162                     i1_TIMER0_Set:	
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in i1_TIMER0_Set: [wreg]
  3399                           ;i1TIMER0_Set@contagens stored from wreg
  3400  1162  00F0               	movwf	i1TIMER0_Set@contagens
  3401                           
  3402                           ;timers.c: 22: TMR0 = contagens;
  3403  1163  0870               	movf	i1TIMER0_Set@contagens,w
  3404  1164  1283               	bcf	3,5	;RP0=0, select bank0
  3405  1165  1303               	bcf	3,6	;RP1=0, select bank0
  3406  1166  0081               	movwf	1	;volatile
  3407  1167  0008               	return
  3408  1168                     __end_ofi1_TIMER0_Set:	
  3409                           
  3410                           	psect	text16
  3411  11D7                     __ptext16:	
  3412 ;; *************** function i1_PWM_DutyCycle2 *****************
  3413 ;; Defined at:
  3414 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  valor           2    0[COMMON] int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;		None               void
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         2       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          2       0       0       0       0
  3431 ;;      Totals:         4       0       0       0       0
  3432 ;;Total ram usage:        4 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_ISR
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           
  3442                           ;psect for function i1_PWM_DutyCycle2
  3443  11D7                     i1_PWM_DutyCycle2:	
  3444                           
  3445                           ;pwm.c: 98: CCPR2L = valor >> 2;
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  3449  11D7  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  3450  11D8  00F3               	movwf	??i1_PWM_DutyCycle2+1
  3451  11D9  0870               	movf	i1PWM_DutyCycle2@valor,w
  3452  11DA  00F2               	movwf	??i1_PWM_DutyCycle2
  3453  11DB  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  3454  11DC  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  3455  11DD  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  3456  11DE  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  3457  11DF  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  3458  11E0  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  3459  11E1  0872               	movf	??i1_PWM_DutyCycle2,w
  3460  11E2  1283               	bcf	3,5	;RP0=0, select bank0
  3461  11E3  1303               	bcf	3,6	;RP1=0, select bank0
  3462  11E4  009B               	movwf	27	;volatile
  3463                           
  3464                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  3465  11E5  0870               	movf	i1PWM_DutyCycle2@valor,w
  3466  11E6  00F2               	movwf	??i1_PWM_DutyCycle2
  3467  11E7  3003               	movlw	3
  3468  11E8                     u342_25:	
  3469  11E8  1003               	clrc
  3470  11E9  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  3471  11EA  3EFF               	addlw	-1
  3472  11EB  1D03               	skipz
  3473  11EC  29E8               	goto	u342_25
  3474  11ED  1003               	clrc
  3475  11EE  0D72               	rlf	??i1_PWM_DutyCycle2,w
  3476  11EF  380C               	iorlw	12
  3477  11F0  009D               	movwf	29	;volatile
  3478  11F1  0008               	return
  3479  11F2                     __end_ofi1_PWM_DutyCycle2:	
  3480                           
  3481                           	psect	text17
  3482  0EAA                     __ptext17:	
  3483 ;; *************** function _trapmf *****************
  3484 ;; Defined at:
  3485 ;;		line 116 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  x               3   32[BANK0 ] float 
  3488 ;;  a               3   35[BANK0 ] float 
  3489 ;;  b               3   38[BANK0 ] float 
  3490 ;;  c               3   41[BANK0 ] float 
  3491 ;;  d               3   44[BANK0 ] float 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  ua              3   47[BANK0 ] float 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  3   32[BANK0 ] float 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0      15       0       0       0
  3504 ;;      Locals:         0       3       0       0       0
  3505 ;;      Temps:          0       0       0       0       0
  3506 ;;      Totals:         0      18       0       0       0
  3507 ;;Total ram usage:       18 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    2
  3510 ;; This function calls:
  3511 ;;		___ftadd
  3512 ;;		___ftdiv
  3513 ;;		___ftge
  3514 ;;		___ftneg
  3515 ;; This function is called by:
  3516 ;;		_ISR
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _trapmf
  3522  0EAA                     _trapmf:	
  3523                           
  3524                           ;main.c: 117: float ua = 0;
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  3528  0EAA  3000               	movlw	0
  3529  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0EAD  00CF               	movwf	trapmf@ua
  3532  0EAE  3000               	movlw	0
  3533  0EAF  00D0               	movwf	trapmf@ua+1
  3534  0EB0  3000               	movlw	0
  3535  0EB1  00D1               	movwf	trapmf@ua+2
  3536                           
  3537                           ;main.c: 119: if (x <= a)
  3538  0EB2  0843               	movf	trapmf@a,w
  3539  0EB3  00F4               	movwf	___ftge@ff1
  3540  0EB4  0844               	movf	trapmf@a+1,w
  3541  0EB5  00F5               	movwf	___ftge@ff1+1
  3542  0EB6  0845               	movf	trapmf@a+2,w
  3543  0EB7  00F6               	movwf	___ftge@ff1+2
  3544  0EB8  0840               	movf	trapmf@x,w
  3545  0EB9  00F7               	movwf	___ftge@ff2
  3546  0EBA  0841               	movf	trapmf@x+1,w
  3547  0EBB  00F8               	movwf	___ftge@ff2+1
  3548  0EBC  0842               	movf	trapmf@x+2,w
  3549  0EBD  00F9               	movwf	___ftge@ff2+2
  3550  0EBE  160A  118A  2481  120A  158A  	fcall	___ftge
  3551  0EC3  1803               	btfsc	3,0
  3552  0EC4  2FEF               	goto	L6
  3553                           
  3554                           ;main.c: 121: else if ((a < x) && (x <= b))
  3555                           
  3556                           ;main.c: 120: ua = 0;
  3557  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0EC7  0843               	movf	trapmf@a,w
  3560  0EC8  00F4               	movwf	___ftge@ff1
  3561  0EC9  0844               	movf	trapmf@a+1,w
  3562  0ECA  00F5               	movwf	___ftge@ff1+1
  3563  0ECB  0845               	movf	trapmf@a+2,w
  3564  0ECC  00F6               	movwf	___ftge@ff1+2
  3565  0ECD  0840               	movf	trapmf@x,w
  3566  0ECE  00F7               	movwf	___ftge@ff2
  3567  0ECF  0841               	movf	trapmf@x+1,w
  3568  0ED0  00F8               	movwf	___ftge@ff2+1
  3569  0ED1  0842               	movf	trapmf@x+2,w
  3570  0ED2  00F9               	movwf	___ftge@ff2+2
  3571  0ED3  160A  118A  2481  120A  158A  	fcall	___ftge
  3572  0ED8  1803               	btfsc	3,0
  3573  0ED9  2F23               	goto	i1l3617
  3574  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0EDC  0846               	movf	trapmf@b,w
  3577  0EDD  00F4               	movwf	___ftge@ff1
  3578  0EDE  0847               	movf	trapmf@b+1,w
  3579  0EDF  00F5               	movwf	___ftge@ff1+1
  3580  0EE0  0848               	movf	trapmf@b+2,w
  3581  0EE1  00F6               	movwf	___ftge@ff1+2
  3582  0EE2  0840               	movf	trapmf@x,w
  3583  0EE3  00F7               	movwf	___ftge@ff2
  3584  0EE4  0841               	movf	trapmf@x+1,w
  3585  0EE5  00F8               	movwf	___ftge@ff2+1
  3586  0EE6  0842               	movf	trapmf@x+2,w
  3587  0EE7  00F9               	movwf	___ftge@ff2+2
  3588  0EE8  160A  118A  2481  120A  158A  	fcall	___ftge
  3589  0EED  1C03               	btfss	3,0
  3590  0EEE  2F23               	goto	i1l3617
  3591                           
  3592                           ;main.c: 122: ua = ((x - a) / (b - a));
  3593  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  3595  0EF1  0846               	movf	trapmf@b,w
  3596  0EF2  00A3               	movwf	___ftadd@f1
  3597  0EF3  0847               	movf	trapmf@b+1,w
  3598  0EF4  00A4               	movwf	___ftadd@f1+1
  3599  0EF5  0848               	movf	trapmf@b+2,w
  3600  0EF6  00A5               	movwf	___ftadd@f1+2
  3601  0EF7  0843               	movf	trapmf@a,w
  3602  0EF8  00A0               	movwf	___ftneg@f1
  3603  0EF9  0844               	movf	trapmf@a+1,w
  3604  0EFA  00A1               	movwf	___ftneg@f1+1
  3605  0EFB  0845               	movf	trapmf@a+2,w
  3606  0EFC  00A2               	movwf	___ftneg@f1+2
  3607  0EFD  160A  118A  2192  120A  158A  	fcall	___ftneg
  3608  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  3609  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  3610  0F04  0820               	movf	?___ftneg,w
  3611  0F05  00A6               	movwf	___ftadd@f2
  3612  0F06  0821               	movf	?___ftneg+1,w
  3613  0F07  00A7               	movwf	___ftadd@f2+1
  3614  0F08  0822               	movf	?___ftneg+2,w
  3615  0F09  00A8               	movwf	___ftadd@f2+2
  3616  0F0A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  3617  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  3618  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  3619  0F11  0823               	movf	?___ftadd,w
  3620  0F12  00B0               	movwf	___ftdiv@f2
  3621  0F13  0824               	movf	?___ftadd+1,w
  3622  0F14  00B1               	movwf	___ftdiv@f2+1
  3623  0F15  0825               	movf	?___ftadd+2,w
  3624  0F16  00B2               	movwf	___ftdiv@f2+2
  3625  0F17  0840               	movf	trapmf@x,w
  3626  0F18  00A3               	movwf	___ftadd@f1
  3627  0F19  0841               	movf	trapmf@x+1,w
  3628  0F1A  00A4               	movwf	___ftadd@f1+1
  3629  0F1B  0842               	movf	trapmf@x+2,w
  3630  0F1C  00A5               	movwf	___ftadd@f1+2
  3631  0F1D  0843               	movf	trapmf@a,w
  3632  0F1E  00A0               	movwf	___ftneg@f1
  3633  0F1F  0844               	movf	trapmf@a+1,w
  3634  0F20  00A1               	movwf	___ftneg@f1+1
  3635  0F21  0845               	movf	trapmf@a+2,w
  3636  0F22  2FB2               	goto	L8
  3637  0F23                     i1l3617:	
  3638                           
  3639                           ;main.c: 123: else if ((b <= x) && (x <= c))
  3640  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0F25  0840               	movf	trapmf@x,w
  3643  0F26  00F4               	movwf	___ftge@ff1
  3644  0F27  0841               	movf	trapmf@x+1,w
  3645  0F28  00F5               	movwf	___ftge@ff1+1
  3646  0F29  0842               	movf	trapmf@x+2,w
  3647  0F2A  00F6               	movwf	___ftge@ff1+2
  3648  0F2B  0846               	movf	trapmf@b,w
  3649  0F2C  00F7               	movwf	___ftge@ff2
  3650  0F2D  0847               	movf	trapmf@b+1,w
  3651  0F2E  00F8               	movwf	___ftge@ff2+1
  3652  0F2F  0848               	movf	trapmf@b+2,w
  3653  0F30  00F9               	movwf	___ftge@ff2+2
  3654  0F31  160A  118A  2481  120A  158A  	fcall	___ftge
  3655  0F36  1C03               	btfss	3,0
  3656  0F37  2F55               	goto	i1l3623
  3657  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0F3A  0849               	movf	trapmf@c,w
  3660  0F3B  00F4               	movwf	___ftge@ff1
  3661  0F3C  084A               	movf	trapmf@c+1,w
  3662  0F3D  00F5               	movwf	___ftge@ff1+1
  3663  0F3E  084B               	movf	trapmf@c+2,w
  3664  0F3F  00F6               	movwf	___ftge@ff1+2
  3665  0F40  0840               	movf	trapmf@x,w
  3666  0F41  00F7               	movwf	___ftge@ff2
  3667  0F42  0841               	movf	trapmf@x+1,w
  3668  0F43  00F8               	movwf	___ftge@ff2+1
  3669  0F44  0842               	movf	trapmf@x+2,w
  3670  0F45  00F9               	movwf	___ftge@ff2+2
  3671  0F46  160A  118A  2481  120A  158A  	fcall	___ftge
  3672  0F4B  1C03               	btfss	3,0
  3673  0F4C  2F55               	goto	i1l3623
  3674                           
  3675                           ;main.c: 124: ua = 1;
  3676  0F4D  3000               	movlw	0
  3677  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0F50  00CF               	movwf	trapmf@ua
  3680  0F51  3080               	movlw	128
  3681  0F52  00D0               	movwf	trapmf@ua+1
  3682  0F53  303F               	movlw	63
  3683  0F54  2FF6               	goto	L5
  3684  0F55                     i1l3623:	
  3685                           
  3686                           ;main.c: 125: else if ((c < x) && (x <= d))
  3687  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0F57  0849               	movf	trapmf@c,w
  3690  0F58  00F4               	movwf	___ftge@ff1
  3691  0F59  084A               	movf	trapmf@c+1,w
  3692  0F5A  00F5               	movwf	___ftge@ff1+1
  3693  0F5B  084B               	movf	trapmf@c+2,w
  3694  0F5C  00F6               	movwf	___ftge@ff1+2
  3695  0F5D  0840               	movf	trapmf@x,w
  3696  0F5E  00F7               	movwf	___ftge@ff2
  3697  0F5F  0841               	movf	trapmf@x+1,w
  3698  0F60  00F8               	movwf	___ftge@ff2+1
  3699  0F61  0842               	movf	trapmf@x+2,w
  3700  0F62  00F9               	movwf	___ftge@ff2+2
  3701  0F63  160A  118A  2481  120A  158A  	fcall	___ftge
  3702  0F68  1803               	btfsc	3,0
  3703  0F69  2FDA               	goto	i1l3629
  3704  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0F6C  084C               	movf	trapmf@d,w
  3707  0F6D  00F4               	movwf	___ftge@ff1
  3708  0F6E  084D               	movf	trapmf@d+1,w
  3709  0F6F  00F5               	movwf	___ftge@ff1+1
  3710  0F70  084E               	movf	trapmf@d+2,w
  3711  0F71  00F6               	movwf	___ftge@ff1+2
  3712  0F72  0840               	movf	trapmf@x,w
  3713  0F73  00F7               	movwf	___ftge@ff2
  3714  0F74  0841               	movf	trapmf@x+1,w
  3715  0F75  00F8               	movwf	___ftge@ff2+1
  3716  0F76  0842               	movf	trapmf@x+2,w
  3717  0F77  00F9               	movwf	___ftge@ff2+2
  3718  0F78  160A  118A  2481  120A  158A  	fcall	___ftge
  3719  0F7D  1C03               	btfss	3,0
  3720  0F7E  2FDA               	goto	i1l3629
  3721                           
  3722                           ;main.c: 126: ua = ((d - x) / (d - c));
  3723  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0F81  084C               	movf	trapmf@d,w
  3726  0F82  00A3               	movwf	___ftadd@f1
  3727  0F83  084D               	movf	trapmf@d+1,w
  3728  0F84  00A4               	movwf	___ftadd@f1+1
  3729  0F85  084E               	movf	trapmf@d+2,w
  3730  0F86  00A5               	movwf	___ftadd@f1+2
  3731  0F87  0849               	movf	trapmf@c,w
  3732  0F88  00A0               	movwf	___ftneg@f1
  3733  0F89  084A               	movf	trapmf@c+1,w
  3734  0F8A  00A1               	movwf	___ftneg@f1+1
  3735  0F8B  084B               	movf	trapmf@c+2,w
  3736  0F8C  00A2               	movwf	___ftneg@f1+2
  3737  0F8D  160A  118A  2192  120A  158A  	fcall	___ftneg
  3738  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0F94  0820               	movf	?___ftneg,w
  3741  0F95  00A6               	movwf	___ftadd@f2
  3742  0F96  0821               	movf	?___ftneg+1,w
  3743  0F97  00A7               	movwf	___ftadd@f2+1
  3744  0F98  0822               	movf	?___ftneg+2,w
  3745  0F99  00A8               	movwf	___ftadd@f2+2
  3746  0F9A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  3747  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0FA1  0823               	movf	?___ftadd,w
  3750  0FA2  00B0               	movwf	___ftdiv@f2
  3751  0FA3  0824               	movf	?___ftadd+1,w
  3752  0FA4  00B1               	movwf	___ftdiv@f2+1
  3753  0FA5  0825               	movf	?___ftadd+2,w
  3754  0FA6  00B2               	movwf	___ftdiv@f2+2
  3755  0FA7  084C               	movf	trapmf@d,w
  3756  0FA8  00A3               	movwf	___ftadd@f1
  3757  0FA9  084D               	movf	trapmf@d+1,w
  3758  0FAA  00A4               	movwf	___ftadd@f1+1
  3759  0FAB  084E               	movf	trapmf@d+2,w
  3760  0FAC  00A5               	movwf	___ftadd@f1+2
  3761  0FAD  0840               	movf	trapmf@x,w
  3762  0FAE  00A0               	movwf	___ftneg@f1
  3763  0FAF  0841               	movf	trapmf@x+1,w
  3764  0FB0  00A1               	movwf	___ftneg@f1+1
  3765  0FB1  0842               	movf	trapmf@x+2,w
  3766  0FB2                     L8:	
  3767  0FB2  00A2               	movwf	___ftneg@f1+2
  3768  0FB3  160A  118A  2192  120A  158A  	fcall	___ftneg
  3769  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0FBA  0820               	movf	?___ftneg,w
  3772  0FBB  00A6               	movwf	___ftadd@f2
  3773  0FBC  0821               	movf	?___ftneg+1,w
  3774  0FBD  00A7               	movwf	___ftadd@f2+1
  3775  0FBE  0822               	movf	?___ftneg+2,w
  3776  0FBF  00A8               	movwf	___ftadd@f2+2
  3777  0FC0  120A  158A  25A1  120A  158A  	fcall	___ftadd
  3778  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  3780  0FC7  0823               	movf	?___ftadd,w
  3781  0FC8  00B3               	movwf	___ftdiv@f1
  3782  0FC9  0824               	movf	?___ftadd+1,w
  3783  0FCA  00B4               	movwf	___ftdiv@f1+1
  3784  0FCB  0825               	movf	?___ftadd+2,w
  3785  0FCC  00B5               	movwf	___ftdiv@f1+2
  3786  0FCD  120A  158A  233E  120A  158A  	fcall	___ftdiv
  3787  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0FD4  0830               	movf	?___ftdiv,w
  3790  0FD5  00CF               	movwf	trapmf@ua
  3791  0FD6  0831               	movf	?___ftdiv+1,w
  3792  0FD7  00D0               	movwf	trapmf@ua+1
  3793  0FD8  0832               	movf	?___ftdiv+2,w
  3794  0FD9  2FF6               	goto	L5
  3795  0FDA                     i1l3629:	
  3796                           
  3797                           ;main.c: 127: else if (x > d)
  3798  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0FDC  084C               	movf	trapmf@d,w
  3801  0FDD  00F4               	movwf	___ftge@ff1
  3802  0FDE  084D               	movf	trapmf@d+1,w
  3803  0FDF  00F5               	movwf	___ftge@ff1+1
  3804  0FE0  084E               	movf	trapmf@d+2,w
  3805  0FE1  00F6               	movwf	___ftge@ff1+2
  3806  0FE2  0840               	movf	trapmf@x,w
  3807  0FE3  00F7               	movwf	___ftge@ff2
  3808  0FE4  0841               	movf	trapmf@x+1,w
  3809  0FE5  00F8               	movwf	___ftge@ff2+1
  3810  0FE6  0842               	movf	trapmf@x+2,w
  3811  0FE7  00F9               	movwf	___ftge@ff2+2
  3812  0FE8  160A  118A  2481  120A  158A  	fcall	___ftge
  3813  0FED  1803               	btfsc	3,0
  3814  0FEE  2FF7               	goto	i1l110
  3815  0FEF                     L6:	
  3816                           
  3817                           ;main.c: 128: ua = 0;
  3818  0FEF  3000               	movlw	0
  3819  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0FF2  00CF               	movwf	trapmf@ua
  3822  0FF3  3000               	movlw	0
  3823  0FF4  00D0               	movwf	trapmf@ua+1
  3824  0FF5  3000               	movlw	0
  3825  0FF6                     L5:	
  3826  0FF6  00D1               	movwf	trapmf@ua+2
  3827  0FF7                     i1l110:	
  3828                           
  3829                           ;main.c: 130: return (ua);
  3830  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0FF9  084F               	movf	trapmf@ua,w
  3833  0FFA  00C0               	movwf	?_trapmf
  3834  0FFB  0850               	movf	trapmf@ua+1,w
  3835  0FFC  00C1               	movwf	?_trapmf+1
  3836  0FFD  0851               	movf	trapmf@ua+2,w
  3837  0FFE  00C2               	movwf	?_trapmf+2
  3838  0FFF  0008               	return
  3839  1000                     __end_of_trapmf:	
  3840                           
  3841                           	psect	text18
  3842  1192                     __ptext18:	
  3843 ;; *************** function ___ftneg *****************
  3844 ;; Defined at:
  3845 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  f1              3    0[BANK0 ] float 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  3    0[BANK0 ] float 
  3852 ;; Registers used:
  3853 ;;		wreg
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       3       0       0       0
  3860 ;;      Locals:         0       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0
  3862 ;;      Totals:         0       3       0       0       0
  3863 ;;Total ram usage:        3 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_trapmf
  3869 ;;		_ISR
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           
  3874                           ;psect for function ___ftneg
  3875  1192                     ___ftneg:	
  3876                           
  3877                           ;incstack = 0
  3878                           ; Regs used in ___ftneg: [wreg]
  3879  1192  1283               	bcf	3,5	;RP0=0, select bank0
  3880  1193  1303               	bcf	3,6	;RP1=0, select bank0
  3881  1194  0822               	movf	___ftneg@f1+2,w
  3882  1195  0421               	iorwf	___ftneg@f1+1,w
  3883  1196  0420               	iorwf	___ftneg@f1,w
  3884  1197  1903               	skipnz
  3885  1198  0008               	return
  3886  1199  3080               	movlw	128
  3887  119A  06A2               	xorwf	___ftneg@f1+2,f
  3888  119B  0008               	return
  3889  119C                     __end_of___ftneg:	
  3890                           
  3891                           	psect	text19
  3892  0B3E                     __ptext19:	
  3893 ;; *************** function ___ftdiv *****************
  3894 ;; Defined at:
  3895 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  f2              3   16[BANK0 ] float 
  3898 ;;  f1              3   19[BANK0 ] float 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  f3              3   27[BANK0 ] float 
  3901 ;;  sign            1   31[BANK0 ] unsigned char 
  3902 ;;  exp             1   30[BANK0 ] unsigned char 
  3903 ;;  cntr            1   26[BANK0 ] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  3   16[BANK0 ] float 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3913 ;;      Params:         0       6       0       0       0
  3914 ;;      Locals:         0       6       0       0       0
  3915 ;;      Temps:          0       4       0       0       0
  3916 ;;      Totals:         0      16       0       0       0
  3917 ;;Total ram usage:       16 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    1
  3920 ;; This function calls:
  3921 ;;		___ftpack
  3922 ;; This function is called by:
  3923 ;;		_trapmf
  3924 ;;		_ISR
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function ___ftdiv
  3930  0B3E                     ___ftdiv:	
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3934  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0B40  0833               	movf	___ftdiv@f1,w
  3937  0B41  00B6               	movwf	??___ftdiv
  3938  0B42  0834               	movf	___ftdiv@f1+1,w
  3939  0B43  00B7               	movwf	??___ftdiv+1
  3940  0B44  0835               	movf	___ftdiv@f1+2,w
  3941  0B45  00B8               	movwf	??___ftdiv+2
  3942  0B46  1003               	clrc
  3943  0B47  0D37               	rlf	??___ftdiv+1,w
  3944  0B48  0D38               	rlf	??___ftdiv+2,w
  3945  0B49  00B9               	movwf	??___ftdiv+3
  3946  0B4A  0839               	movf	??___ftdiv+3,w
  3947  0B4B  00BE               	movwf	___ftdiv@exp
  3948  0B4C  08BE               	movf	___ftdiv@exp,f
  3949  0B4D  1D03               	skipz
  3950  0B4E  2B56               	goto	i1l2283
  3951  0B4F  3000               	movlw	0
  3952  0B50  00B0               	movwf	?___ftdiv
  3953  0B51  3000               	movlw	0
  3954  0B52  00B1               	movwf	?___ftdiv+1
  3955  0B53  3000               	movlw	0
  3956  0B54  00B2               	movwf	?___ftdiv+2
  3957  0B55  0008               	return
  3958  0B56                     i1l2283:	
  3959  0B56  0830               	movf	___ftdiv@f2,w
  3960  0B57  00B6               	movwf	??___ftdiv
  3961  0B58  0831               	movf	___ftdiv@f2+1,w
  3962  0B59  00B7               	movwf	??___ftdiv+1
  3963  0B5A  0832               	movf	___ftdiv@f2+2,w
  3964  0B5B  00B8               	movwf	??___ftdiv+2
  3965  0B5C  1003               	clrc
  3966  0B5D  0D37               	rlf	??___ftdiv+1,w
  3967  0B5E  0D38               	rlf	??___ftdiv+2,w
  3968  0B5F  00B9               	movwf	??___ftdiv+3
  3969  0B60  0839               	movf	??___ftdiv+3,w
  3970  0B61  00BF               	movwf	___ftdiv@sign
  3971  0B62  08BF               	movf	___ftdiv@sign,f
  3972  0B63  1D03               	skipz
  3973  0B64  2B6C               	goto	i1l2289
  3974  0B65  3000               	movlw	0
  3975  0B66  00B0               	movwf	?___ftdiv
  3976  0B67  3000               	movlw	0
  3977  0B68  00B1               	movwf	?___ftdiv+1
  3978  0B69  3000               	movlw	0
  3979  0B6A  00B2               	movwf	?___ftdiv+2
  3980  0B6B  0008               	return
  3981  0B6C                     i1l2289:	
  3982  0B6C  3000               	movlw	0
  3983  0B6D  00BB               	movwf	___ftdiv@f3
  3984  0B6E  3000               	movlw	0
  3985  0B6F  00BC               	movwf	___ftdiv@f3+1
  3986  0B70  3000               	movlw	0
  3987  0B71  00BD               	movwf	___ftdiv@f3+2
  3988  0B72  3089               	movlw	137
  3989  0B73  073F               	addwf	___ftdiv@sign,w
  3990  0B74  00B6               	movwf	??___ftdiv
  3991  0B75  0836               	movf	??___ftdiv,w
  3992  0B76  02BE               	subwf	___ftdiv@exp,f
  3993  0B77  0833               	movf	___ftdiv@f1,w
  3994  0B78  00B6               	movwf	??___ftdiv
  3995  0B79  0834               	movf	___ftdiv@f1+1,w
  3996  0B7A  00B7               	movwf	??___ftdiv+1
  3997  0B7B  0835               	movf	___ftdiv@f1+2,w
  3998  0B7C  00B8               	movwf	??___ftdiv+2
  3999  0B7D  3010               	movlw	16
  4000  0B7E                     u259_25:	
  4001  0B7E  1003               	clrc
  4002  0B7F  0CB8               	rrf	??___ftdiv+2,f
  4003  0B80  0CB7               	rrf	??___ftdiv+1,f
  4004  0B81  0CB6               	rrf	??___ftdiv,f
  4005  0B82  3EFF               	addlw	-1
  4006  0B83  1D03               	skipz
  4007  0B84  2B7E               	goto	u259_25
  4008  0B85  0836               	movf	??___ftdiv,w
  4009  0B86  00B9               	movwf	??___ftdiv+3
  4010  0B87  0839               	movf	??___ftdiv+3,w
  4011  0B88  00BF               	movwf	___ftdiv@sign
  4012  0B89  0830               	movf	___ftdiv@f2,w
  4013  0B8A  00B6               	movwf	??___ftdiv
  4014  0B8B  0831               	movf	___ftdiv@f2+1,w
  4015  0B8C  00B7               	movwf	??___ftdiv+1
  4016  0B8D  0832               	movf	___ftdiv@f2+2,w
  4017  0B8E  00B8               	movwf	??___ftdiv+2
  4018  0B8F  3010               	movlw	16
  4019  0B90                     u260_25:	
  4020  0B90  1003               	clrc
  4021  0B91  0CB8               	rrf	??___ftdiv+2,f
  4022  0B92  0CB7               	rrf	??___ftdiv+1,f
  4023  0B93  0CB6               	rrf	??___ftdiv,f
  4024  0B94  3EFF               	addlw	-1
  4025  0B95  1D03               	skipz
  4026  0B96  2B90               	goto	u260_25
  4027  0B97  0836               	movf	??___ftdiv,w
  4028  0B98  00B9               	movwf	??___ftdiv+3
  4029  0B99  0839               	movf	??___ftdiv+3,w
  4030  0B9A  06BF               	xorwf	___ftdiv@sign,f
  4031  0B9B  3080               	movlw	128
  4032  0B9C  00B6               	movwf	??___ftdiv
  4033  0B9D  0836               	movf	??___ftdiv,w
  4034  0B9E  05BF               	andwf	___ftdiv@sign,f
  4035  0B9F  17B4               	bsf	___ftdiv@f1+1,7
  4036  0BA0  30FF               	movlw	255
  4037  0BA1  05B3               	andwf	___ftdiv@f1,f
  4038  0BA2  30FF               	movlw	255
  4039  0BA3  05B4               	andwf	___ftdiv@f1+1,f
  4040  0BA4  3000               	movlw	0
  4041  0BA5  05B5               	andwf	___ftdiv@f1+2,f
  4042  0BA6  17B1               	bsf	___ftdiv@f2+1,7
  4043  0BA7  30FF               	movlw	255
  4044  0BA8  05B0               	andwf	___ftdiv@f2,f
  4045  0BA9  30FF               	movlw	255
  4046  0BAA  05B1               	andwf	___ftdiv@f2+1,f
  4047  0BAB  3000               	movlw	0
  4048  0BAC  05B2               	andwf	___ftdiv@f2+2,f
  4049  0BAD  3018               	movlw	24
  4050  0BAE  00B6               	movwf	??___ftdiv
  4051  0BAF  0836               	movf	??___ftdiv,w
  4052  0BB0  00BA               	movwf	___ftdiv@cntr
  4053  0BB1                     i1l2303:	
  4054  0BB1  3001               	movlw	1
  4055  0BB2                     u261_25:	
  4056  0BB2  1003               	clrc
  4057  0BB3  0DBB               	rlf	___ftdiv@f3,f
  4058  0BB4  0DBC               	rlf	___ftdiv@f3+1,f
  4059  0BB5  0DBD               	rlf	___ftdiv@f3+2,f
  4060  0BB6  3EFF               	addlw	-1
  4061  0BB7  1D03               	skipz
  4062  0BB8  2BB2               	goto	u261_25
  4063  0BB9  0832               	movf	___ftdiv@f2+2,w
  4064  0BBA  0235               	subwf	___ftdiv@f1+2,w
  4065  0BBB  1D03               	skipz
  4066  0BBC  2BC3               	goto	u262_25
  4067  0BBD  0831               	movf	___ftdiv@f2+1,w
  4068  0BBE  0234               	subwf	___ftdiv@f1+1,w
  4069  0BBF  1D03               	skipz
  4070  0BC0  2BC3               	goto	u262_25
  4071  0BC1  0830               	movf	___ftdiv@f2,w
  4072  0BC2  0233               	subwf	___ftdiv@f1,w
  4073  0BC3                     u262_25:	
  4074  0BC3  1C03               	skipc
  4075  0BC4  2BD0               	goto	i1l2311
  4076  0BC5  0830               	movf	___ftdiv@f2,w
  4077  0BC6  02B3               	subwf	___ftdiv@f1,f
  4078  0BC7  0831               	movf	___ftdiv@f2+1,w
  4079  0BC8  1C03               	skipc
  4080  0BC9  0F31               	incfsz	___ftdiv@f2+1,w
  4081  0BCA  02B4               	subwf	___ftdiv@f1+1,f
  4082  0BCB  0832               	movf	___ftdiv@f2+2,w
  4083  0BCC  1C03               	skipc
  4084  0BCD  0A32               	incf	___ftdiv@f2+2,w
  4085  0BCE  02B5               	subwf	___ftdiv@f1+2,f
  4086  0BCF  143B               	bsf	___ftdiv@f3,0
  4087  0BD0                     i1l2311:	
  4088  0BD0  3001               	movlw	1
  4089  0BD1                     u263_25:	
  4090  0BD1  1003               	clrc
  4091  0BD2  0DB3               	rlf	___ftdiv@f1,f
  4092  0BD3  0DB4               	rlf	___ftdiv@f1+1,f
  4093  0BD4  0DB5               	rlf	___ftdiv@f1+2,f
  4094  0BD5  3EFF               	addlw	-1
  4095  0BD6  1D03               	skipz
  4096  0BD7  2BD1               	goto	u263_25
  4097  0BD8  3001               	movlw	1
  4098  0BD9  02BA               	subwf	___ftdiv@cntr,f
  4099  0BDA  1D03               	btfss	3,2
  4100  0BDB  2BB1               	goto	i1l2303
  4101  0BDC  083B               	movf	___ftdiv@f3,w
  4102  0BDD  00F0               	movwf	___ftpack@arg
  4103  0BDE  083C               	movf	___ftdiv@f3+1,w
  4104  0BDF  00F1               	movwf	___ftpack@arg+1
  4105  0BE0  083D               	movf	___ftdiv@f3+2,w
  4106  0BE1  00F2               	movwf	___ftpack@arg+2
  4107  0BE2  083E               	movf	___ftdiv@exp,w
  4108  0BE3  00B6               	movwf	??___ftdiv
  4109  0BE4  0836               	movf	??___ftdiv,w
  4110  0BE5  00F3               	movwf	___ftpack@exp
  4111  0BE6  083F               	movf	___ftdiv@sign,w
  4112  0BE7  00B7               	movwf	??___ftdiv+1
  4113  0BE8  0837               	movf	??___ftdiv+1,w
  4114  0BE9  00F4               	movwf	___ftpack@sign
  4115  0BEA  160A  118A  24E2   	fcall	___ftpack
  4116  0BED  0870               	movf	?___ftpack,w
  4117  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0BF0  00B0               	movwf	?___ftdiv
  4120  0BF1  0871               	movf	?___ftpack+1,w
  4121  0BF2  00B1               	movwf	?___ftdiv+1
  4122  0BF3  0872               	movf	?___ftpack+2,w
  4123  0BF4  00B2               	movwf	?___ftdiv+2
  4124  0BF5  0008               	return
  4125  0BF6                     __end_of___ftdiv:	
  4126                           
  4127                           	psect	text20
  4128  0DA1                     __ptext20:	
  4129 ;; *************** function ___ftadd *****************
  4130 ;; Defined at:
  4131 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  f1              3    3[BANK0 ] float 
  4134 ;;  f2              3    6[BANK0 ] float 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  exp1            1   15[BANK0 ] unsigned char 
  4137 ;;  exp2            1   14[BANK0 ] unsigned char 
  4138 ;;  sign            1   13[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  3    3[BANK0 ] float 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0, pclath, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4148 ;;      Params:         0       6       0       0       0
  4149 ;;      Locals:         0       3       0       0       0
  4150 ;;      Temps:          0       4       0       0       0
  4151 ;;      Totals:         0      13       0       0       0
  4152 ;;Total ram usage:       13 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    1
  4155 ;; This function calls:
  4156 ;;		___ftpack
  4157 ;; This function is called by:
  4158 ;;		_trapmf
  4159 ;;		_ISR
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function ___ftadd
  4165  0DA1                     ___ftadd:	
  4166                           
  4167                           ;incstack = 0
  4168                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4169  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4170  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4171  0DA3  0823               	movf	___ftadd@f1,w
  4172  0DA4  00A9               	movwf	??___ftadd
  4173  0DA5  0824               	movf	___ftadd@f1+1,w
  4174  0DA6  00AA               	movwf	??___ftadd+1
  4175  0DA7  0825               	movf	___ftadd@f1+2,w
  4176  0DA8  00AB               	movwf	??___ftadd+2
  4177  0DA9  1003               	clrc
  4178  0DAA  0D2A               	rlf	??___ftadd+1,w
  4179  0DAB  0D2B               	rlf	??___ftadd+2,w
  4180  0DAC  00AC               	movwf	??___ftadd+3
  4181  0DAD  082C               	movf	??___ftadd+3,w
  4182  0DAE  00AF               	movwf	___ftadd@exp1
  4183  0DAF  0826               	movf	___ftadd@f2,w
  4184  0DB0  00A9               	movwf	??___ftadd
  4185  0DB1  0827               	movf	___ftadd@f2+1,w
  4186  0DB2  00AA               	movwf	??___ftadd+1
  4187  0DB3  0828               	movf	___ftadd@f2+2,w
  4188  0DB4  00AB               	movwf	??___ftadd+2
  4189  0DB5  1003               	clrc
  4190  0DB6  0D2A               	rlf	??___ftadd+1,w
  4191  0DB7  0D2B               	rlf	??___ftadd+2,w
  4192  0DB8  00AC               	movwf	??___ftadd+3
  4193  0DB9  082C               	movf	??___ftadd+3,w
  4194  0DBA  00AE               	movwf	___ftadd@exp2
  4195  0DBB  082F               	movf	___ftadd@exp1,w
  4196  0DBC  1903               	btfsc	3,2
  4197  0DBD  2DCA               	goto	i1l3541
  4198  0DBE  082E               	movf	___ftadd@exp2,w
  4199  0DBF  022F               	subwf	___ftadd@exp1,w
  4200  0DC0  1803               	skipnc
  4201  0DC1  2DD1               	goto	i1l3545
  4202  0DC2  032F               	decf	___ftadd@exp1,w
  4203  0DC3  3AFF               	xorlw	255
  4204  0DC4  072E               	addwf	___ftadd@exp2,w
  4205  0DC5  00A9               	movwf	??___ftadd
  4206  0DC6  3019               	movlw	25
  4207  0DC7  0229               	subwf	??___ftadd,w
  4208  0DC8  1C03               	skipc
  4209  0DC9  2DD1               	goto	i1l3545
  4210  0DCA                     i1l3541:	
  4211  0DCA  0826               	movf	___ftadd@f2,w
  4212  0DCB  00A3               	movwf	?___ftadd
  4213  0DCC  0827               	movf	___ftadd@f2+1,w
  4214  0DCD  00A4               	movwf	?___ftadd+1
  4215  0DCE  0828               	movf	___ftadd@f2+2,w
  4216  0DCF  00A5               	movwf	?___ftadd+2
  4217  0DD0  0008               	return
  4218  0DD1                     i1l3545:	
  4219  0DD1  082E               	movf	___ftadd@exp2,w
  4220  0DD2  1903               	btfsc	3,2
  4221  0DD3  0008               	return
  4222  0DD4  082F               	movf	___ftadd@exp1,w
  4223  0DD5  022E               	subwf	___ftadd@exp2,w
  4224  0DD6  1803               	skipnc
  4225  0DD7  2DE0               	goto	i1l3551
  4226  0DD8  032E               	decf	___ftadd@exp2,w
  4227  0DD9  3AFF               	xorlw	255
  4228  0DDA  072F               	addwf	___ftadd@exp1,w
  4229  0DDB  00A9               	movwf	??___ftadd
  4230  0DDC  3019               	movlw	25
  4231  0DDD  0229               	subwf	??___ftadd,w
  4232  0DDE  1803               	btfsc	3,0
  4233  0DDF  0008               	return
  4234  0DE0                     i1l3551:	
  4235  0DE0  3006               	movlw	6
  4236  0DE1  00A9               	movwf	??___ftadd
  4237  0DE2  0829               	movf	??___ftadd,w
  4238  0DE3  00AD               	movwf	___ftadd@sign
  4239  0DE4  1BA5               	btfsc	___ftadd@f1+2,7
  4240  0DE5  17AD               	bsf	___ftadd@sign,7
  4241  0DE6  1BA8               	btfsc	___ftadd@f2+2,7
  4242  0DE7  172D               	bsf	___ftadd@sign,6
  4243  0DE8  17A4               	bsf	___ftadd@f1+1,7
  4244  0DE9  30FF               	movlw	255
  4245  0DEA  05A3               	andwf	___ftadd@f1,f
  4246  0DEB  30FF               	movlw	255
  4247  0DEC  05A4               	andwf	___ftadd@f1+1,f
  4248  0DED  3000               	movlw	0
  4249  0DEE  05A5               	andwf	___ftadd@f1+2,f
  4250  0DEF  17A7               	bsf	___ftadd@f2+1,7
  4251  0DF0  30FF               	movlw	255
  4252  0DF1  05A6               	andwf	___ftadd@f2,f
  4253  0DF2  30FF               	movlw	255
  4254  0DF3  05A7               	andwf	___ftadd@f2+1,f
  4255  0DF4  3000               	movlw	0
  4256  0DF5  05A8               	andwf	___ftadd@f2+2,f
  4257  0DF6  082E               	movf	___ftadd@exp2,w
  4258  0DF7  022F               	subwf	___ftadd@exp1,w
  4259  0DF8  1803               	skipnc
  4260  0DF9  2E20               	goto	i1l3573
  4261  0DFA                     i1l3563:	
  4262  0DFA  3001               	movlw	1
  4263  0DFB                     u507_25:	
  4264  0DFB  1003               	clrc
  4265  0DFC  0DA6               	rlf	___ftadd@f2,f
  4266  0DFD  0DA7               	rlf	___ftadd@f2+1,f
  4267  0DFE  0DA8               	rlf	___ftadd@f2+2,f
  4268  0DFF  3EFF               	addlw	-1
  4269  0E00  1D03               	skipz
  4270  0E01  2DFB               	goto	u507_25
  4271  0E02  3001               	movlw	1
  4272  0E03  02AE               	subwf	___ftadd@exp2,f
  4273  0E04  082E               	movf	___ftadd@exp2,w
  4274  0E05  062F               	xorwf	___ftadd@exp1,w
  4275  0E06  1903               	skipnz
  4276  0E07  2E1B               	goto	i1l3571
  4277  0E08  3001               	movlw	1
  4278  0E09  02AD               	subwf	___ftadd@sign,f
  4279  0E0A  082D               	movf	___ftadd@sign,w
  4280  0E0B  3907               	andlw	7
  4281  0E0C  1903               	btfsc	3,2
  4282  0E0D  2E1B               	goto	i1l3571
  4283  0E0E  2DFA               	goto	i1l3563
  4284  0E0F                     i1l3569:	
  4285  0E0F  3001               	movlw	1
  4286  0E10                     u510_25:	
  4287  0E10  1003               	clrc
  4288  0E11  0CA5               	rrf	___ftadd@f1+2,f
  4289  0E12  0CA4               	rrf	___ftadd@f1+1,f
  4290  0E13  0CA3               	rrf	___ftadd@f1,f
  4291  0E14  3EFF               	addlw	-1
  4292  0E15  1D03               	skipz
  4293  0E16  2E10               	goto	u510_25
  4294  0E17  3001               	movlw	1
  4295  0E18  00A9               	movwf	??___ftadd
  4296  0E19  0829               	movf	??___ftadd,w
  4297  0E1A  07AF               	addwf	___ftadd@exp1,f
  4298  0E1B                     i1l3571:	
  4299  0E1B  082F               	movf	___ftadd@exp1,w
  4300  0E1C  062E               	xorwf	___ftadd@exp2,w
  4301  0E1D  1903               	btfsc	3,2
  4302  0E1E  2E49               	goto	i1l744
  4303  0E1F  2E0F               	goto	i1l3569
  4304  0E20                     i1l3573:	
  4305  0E20  082F               	movf	___ftadd@exp1,w
  4306  0E21  022E               	subwf	___ftadd@exp2,w
  4307  0E22  1803               	skipnc
  4308  0E23  2E49               	goto	i1l744
  4309  0E24                     i1l3575:	
  4310  0E24  3001               	movlw	1
  4311  0E25                     u513_25:	
  4312  0E25  1003               	clrc
  4313  0E26  0DA3               	rlf	___ftadd@f1,f
  4314  0E27  0DA4               	rlf	___ftadd@f1+1,f
  4315  0E28  0DA5               	rlf	___ftadd@f1+2,f
  4316  0E29  3EFF               	addlw	-1
  4317  0E2A  1D03               	skipz
  4318  0E2B  2E25               	goto	u513_25
  4319  0E2C  3001               	movlw	1
  4320  0E2D  02AF               	subwf	___ftadd@exp1,f
  4321  0E2E  082E               	movf	___ftadd@exp2,w
  4322  0E2F  062F               	xorwf	___ftadd@exp1,w
  4323  0E30  1903               	skipnz
  4324  0E31  2E45               	goto	i1l3583
  4325  0E32  3001               	movlw	1
  4326  0E33  02AD               	subwf	___ftadd@sign,f
  4327  0E34  082D               	movf	___ftadd@sign,w
  4328  0E35  3907               	andlw	7
  4329  0E36  1903               	btfsc	3,2
  4330  0E37  2E45               	goto	i1l3583
  4331  0E38  2E24               	goto	i1l3575
  4332  0E39                     i1l3581:	
  4333  0E39  3001               	movlw	1
  4334  0E3A                     u516_25:	
  4335  0E3A  1003               	clrc
  4336  0E3B  0CA8               	rrf	___ftadd@f2+2,f
  4337  0E3C  0CA7               	rrf	___ftadd@f2+1,f
  4338  0E3D  0CA6               	rrf	___ftadd@f2,f
  4339  0E3E  3EFF               	addlw	-1
  4340  0E3F  1D03               	skipz
  4341  0E40  2E3A               	goto	u516_25
  4342  0E41  3001               	movlw	1
  4343  0E42  00A9               	movwf	??___ftadd
  4344  0E43  0829               	movf	??___ftadd,w
  4345  0E44  07AE               	addwf	___ftadd@exp2,f
  4346  0E45                     i1l3583:	
  4347  0E45  082F               	movf	___ftadd@exp1,w
  4348  0E46  062E               	xorwf	___ftadd@exp2,w
  4349  0E47  1D03               	skipz
  4350  0E48  2E39               	goto	i1l3581
  4351  0E49                     i1l744:	
  4352  0E49  1FAD               	btfss	___ftadd@sign,7
  4353  0E4A  2E5B               	goto	i1l3587
  4354  0E4B  30FF               	movlw	255
  4355  0E4C  06A3               	xorwf	___ftadd@f1,f
  4356  0E4D  30FF               	movlw	255
  4357  0E4E  06A4               	xorwf	___ftadd@f1+1,f
  4358  0E4F  30FF               	movlw	255
  4359  0E50  06A5               	xorwf	___ftadd@f1+2,f
  4360  0E51  3001               	movlw	1
  4361  0E52  07A3               	addwf	___ftadd@f1,f
  4362  0E53  3000               	movlw	0
  4363  0E54  1803               	skipnc
  4364  0E55  3001               	movlw	1
  4365  0E56  07A4               	addwf	___ftadd@f1+1,f
  4366  0E57  3000               	movlw	0
  4367  0E58  1803               	skipnc
  4368  0E59  3001               	movlw	1
  4369  0E5A  07A5               	addwf	___ftadd@f1+2,f
  4370  0E5B                     i1l3587:	
  4371  0E5B  1F2D               	btfss	___ftadd@sign,6
  4372  0E5C  2E6D               	goto	i1l3591
  4373  0E5D  30FF               	movlw	255
  4374  0E5E  06A6               	xorwf	___ftadd@f2,f
  4375  0E5F  30FF               	movlw	255
  4376  0E60  06A7               	xorwf	___ftadd@f2+1,f
  4377  0E61  30FF               	movlw	255
  4378  0E62  06A8               	xorwf	___ftadd@f2+2,f
  4379  0E63  3001               	movlw	1
  4380  0E64  07A6               	addwf	___ftadd@f2,f
  4381  0E65  3000               	movlw	0
  4382  0E66  1803               	skipnc
  4383  0E67  3001               	movlw	1
  4384  0E68  07A7               	addwf	___ftadd@f2+1,f
  4385  0E69  3000               	movlw	0
  4386  0E6A  1803               	skipnc
  4387  0E6B  3001               	movlw	1
  4388  0E6C  07A8               	addwf	___ftadd@f2+2,f
  4389  0E6D                     i1l3591:	
  4390  0E6D  01AD               	clrf	___ftadd@sign
  4391  0E6E  0823               	movf	___ftadd@f1,w
  4392  0E6F  07A6               	addwf	___ftadd@f2,f
  4393  0E70  0824               	movf	___ftadd@f1+1,w
  4394  0E71  1103               	clrz
  4395  0E72  1803               	skipnc
  4396  0E73  0A24               	incf	___ftadd@f1+1,w
  4397  0E74  1D03               	btfss	3,2
  4398  0E75  07A7               	addwf	___ftadd@f2+1,f
  4399  0E76  0825               	movf	___ftadd@f1+2,w
  4400  0E77  1103               	clrz
  4401  0E78  1803               	skipnc
  4402  0E79  0A25               	incf	___ftadd@f1+2,w
  4403  0E7A  1D03               	btfss	3,2
  4404  0E7B  07A8               	addwf	___ftadd@f2+2,f
  4405  0E7C  1FA8               	btfss	___ftadd@f2+2,7
  4406  0E7D  2E90               	goto	i1l3601
  4407  0E7E  30FF               	movlw	255
  4408  0E7F  06A6               	xorwf	___ftadd@f2,f
  4409  0E80  30FF               	movlw	255
  4410  0E81  06A7               	xorwf	___ftadd@f2+1,f
  4411  0E82  30FF               	movlw	255
  4412  0E83  06A8               	xorwf	___ftadd@f2+2,f
  4413  0E84  3001               	movlw	1
  4414  0E85  07A6               	addwf	___ftadd@f2,f
  4415  0E86  3000               	movlw	0
  4416  0E87  1803               	skipnc
  4417  0E88  3001               	movlw	1
  4418  0E89  07A7               	addwf	___ftadd@f2+1,f
  4419  0E8A  3000               	movlw	0
  4420  0E8B  1803               	skipnc
  4421  0E8C  3001               	movlw	1
  4422  0E8D  07A8               	addwf	___ftadd@f2+2,f
  4423  0E8E  01AD               	clrf	___ftadd@sign
  4424  0E8F  0AAD               	incf	___ftadd@sign,f
  4425  0E90                     i1l3601:	
  4426  0E90  0826               	movf	___ftadd@f2,w
  4427  0E91  00F0               	movwf	___ftpack@arg
  4428  0E92  0827               	movf	___ftadd@f2+1,w
  4429  0E93  00F1               	movwf	___ftpack@arg+1
  4430  0E94  0828               	movf	___ftadd@f2+2,w
  4431  0E95  00F2               	movwf	___ftpack@arg+2
  4432  0E96  082F               	movf	___ftadd@exp1,w
  4433  0E97  00A9               	movwf	??___ftadd
  4434  0E98  0829               	movf	??___ftadd,w
  4435  0E99  00F3               	movwf	___ftpack@exp
  4436  0E9A  082D               	movf	___ftadd@sign,w
  4437  0E9B  00AA               	movwf	??___ftadd+1
  4438  0E9C  082A               	movf	??___ftadd+1,w
  4439  0E9D  00F4               	movwf	___ftpack@sign
  4440  0E9E  160A  118A  24E2   	fcall	___ftpack
  4441  0EA1  0870               	movf	?___ftpack,w
  4442  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  4443  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  4444  0EA4  00A3               	movwf	?___ftadd
  4445  0EA5  0871               	movf	?___ftpack+1,w
  4446  0EA6  00A4               	movwf	?___ftadd+1
  4447  0EA7  0872               	movf	?___ftpack+2,w
  4448  0EA8  00A5               	movwf	?___ftadd+2
  4449  0EA9  0008               	return
  4450  0EAA                     __end_of___ftadd:	
  4451                           
  4452                           	psect	text21
  4453  15D0                     __ptext21:	
  4454 ;; *************** function _send *****************
  4455 ;; Defined at:
  4456 ;;		line 134 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  index           1   10[COMMON] unsigned char 
  4461 ;;  checksum        1    9[COMMON] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;		None               void
  4464 ;; Registers used:
  4465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4471 ;;      Params:         0       0       0       0       0
  4472 ;;      Locals:         2       0       0       0       0
  4473 ;;      Temps:          1       0       0       0       0
  4474 ;;      Totals:         3       0       0       0       0
  4475 ;;Total ram usage:        3 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    1
  4478 ;; This function calls:
  4479 ;;		_USART_WriteChar
  4480 ;;		___lwdiv
  4481 ;; This function is called by:
  4482 ;;		_ISR
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function _send
  4488  15D0                     _send:	
  4489                           
  4490                           ;main.c: 138: buffer[0] = '#';
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4494  15D0  3023               	movlw	35
  4495  15D1  00F8               	movwf	??_send
  4496  15D2  0878               	movf	??_send,w
  4497  15D3  1683               	bsf	3,5	;RP0=1, select bank1
  4498  15D4  1303               	bcf	3,6	;RP1=0, select bank1
  4499  15D5  00C8               	movwf	_buffer^(0+128)
  4500                           
  4501                           ;main.c: 139: buffer[1] = '$';
  4502  15D6  3024               	movlw	36
  4503  15D7  00F8               	movwf	??_send
  4504  15D8  0878               	movf	??_send,w
  4505  15D9  00C9               	movwf	(_buffer^(0+128)+1)
  4506                           
  4507                           ;main.c: 140: buffer[2] = ':';
  4508  15DA  303A               	movlw	58
  4509  15DB  00F8               	movwf	??_send
  4510  15DC  0878               	movf	??_send,w
  4511  15DD  00CA               	movwf	(_buffer^(0+128)+2)
  4512                           
  4513                           ;main.c: 142: kmph = rpm/41;
  4514  15DE  3029               	movlw	41
  4515  15DF  00F0               	movwf	___lwdiv@divisor
  4516  15E0  3000               	movlw	0
  4517  15E1  00F1               	movwf	___lwdiv@divisor+1
  4518  15E2  0863               	movf	(_rpm+1)^(0+128),w
  4519  15E3  01F3               	clrf	___lwdiv@dividend+1
  4520  15E4  07F3               	addwf	___lwdiv@dividend+1,f
  4521  15E5  0862               	movf	_rpm^(0+128),w
  4522  15E6  01F2               	clrf	___lwdiv@dividend
  4523  15E7  07F2               	addwf	___lwdiv@dividend,f
  4524  15E8  160A  118A  2330  160A  118A  	fcall	___lwdiv
  4525  15ED  0871               	movf	?___lwdiv+1,w
  4526  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  4527  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  4528  15F0  01EB               	clrf	_kmph+1
  4529  15F1  07EB               	addwf	_kmph+1,f
  4530  15F2  0870               	movf	?___lwdiv,w
  4531  15F3  01EA               	clrf	_kmph
  4532  15F4  07EA               	addwf	_kmph,f
  4533                           
  4534                           ;main.c: 144: buffer[3] = (kmph >> 8);
  4535  15F5  086B               	movf	_kmph+1,w
  4536  15F6  00F8               	movwf	??_send
  4537  15F7  0878               	movf	??_send,w
  4538  15F8  1683               	bsf	3,5	;RP0=1, select bank1
  4539  15F9  1303               	bcf	3,6	;RP1=0, select bank1
  4540  15FA  00CB               	movwf	(_buffer^(0+128)+3)
  4541                           
  4542                           ;main.c: 145: buffer[4] = kmph;
  4543  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  4544  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  4545  15FD  086A               	movf	_kmph,w
  4546  15FE  00F8               	movwf	??_send
  4547  15FF  0878               	movf	??_send,w
  4548  1600  1683               	bsf	3,5	;RP0=1, select bank1
  4549  1601  1303               	bcf	3,6	;RP1=0, select bank1
  4550  1602  00CC               	movwf	(_buffer^(0+128)+4)
  4551                           
  4552                           ;main.c: 146: kmph = setpoint/41;
  4553  1603  3029               	movlw	41
  4554  1604  00F0               	movwf	___lwdiv@divisor
  4555  1605  3000               	movlw	0
  4556  1606  00F1               	movwf	___lwdiv@divisor+1
  4557  1607  0866               	movf	(_setpoint+1)^(0+128),w
  4558  1608  01F3               	clrf	___lwdiv@dividend+1
  4559  1609  07F3               	addwf	___lwdiv@dividend+1,f
  4560  160A  0865               	movf	_setpoint^(0+128),w
  4561  160B  01F2               	clrf	___lwdiv@dividend
  4562  160C  07F2               	addwf	___lwdiv@dividend,f
  4563  160D  160A  118A  2330  160A  118A  	fcall	___lwdiv
  4564  1612  0871               	movf	?___lwdiv+1,w
  4565  1613  1283               	bcf	3,5	;RP0=0, select bank0
  4566  1614  1303               	bcf	3,6	;RP1=0, select bank0
  4567  1615  01EB               	clrf	_kmph+1
  4568  1616  07EB               	addwf	_kmph+1,f
  4569  1617  0870               	movf	?___lwdiv,w
  4570  1618  01EA               	clrf	_kmph
  4571  1619  07EA               	addwf	_kmph,f
  4572                           
  4573                           ;main.c: 147: buffer[5] = (kmph >> 8);
  4574  161A  086B               	movf	_kmph+1,w
  4575  161B  00F8               	movwf	??_send
  4576  161C  0878               	movf	??_send,w
  4577  161D  1683               	bsf	3,5	;RP0=1, select bank1
  4578  161E  1303               	bcf	3,6	;RP1=0, select bank1
  4579  161F  00CD               	movwf	(_buffer^(0+128)+5)
  4580                           
  4581                           ;main.c: 148: buffer[6] = kmph;
  4582  1620  1283               	bcf	3,5	;RP0=0, select bank0
  4583  1621  1303               	bcf	3,6	;RP1=0, select bank0
  4584  1622  086A               	movf	_kmph,w
  4585  1623  00F8               	movwf	??_send
  4586  1624  0878               	movf	??_send,w
  4587  1625  1683               	bsf	3,5	;RP0=1, select bank1
  4588  1626  1303               	bcf	3,6	;RP1=0, select bank1
  4589  1627  00CE               	movwf	(_buffer^(0+128)+6)
  4590                           
  4591                           ;main.c: 149: buffer[7] = pilotoAtivo;
  4592  1628  0864               	movf	_pilotoAtivo^(0+128),w
  4593  1629  00F8               	movwf	??_send
  4594  162A  0878               	movf	??_send,w
  4595  162B  00CF               	movwf	(_buffer^(0+128)+7)
  4596                           
  4597                           ;main.c: 152: unsigned char checksum = 0x00;
  4598  162C  01F9               	clrf	send@checksum
  4599                           
  4600                           ;main.c: 153: for (unsigned char index = 0; index < 8; index++)
  4601  162D  01FA               	clrf	send@index
  4602  162E  3008               	movlw	8
  4603  162F  027A               	subwf	send@index,w
  4604  1630  1803               	btfsc	3,0
  4605  1631  2E4C               	goto	i1l2479
  4606  1632                     i1l2471:	
  4607                           
  4608                           ;main.c: 154: {
  4609                           ;main.c: 155: USART_WriteChar(buffer[index]);
  4610  1632  087A               	movf	send@index,w
  4611  1633  3EC8               	addlw	_buffer& (0+255)
  4612  1634  0084               	movwf	4
  4613  1635  1383               	bcf	3,7	;select IRP bank1
  4614  1636  0800               	movf	0,w
  4615  1637  160A  118A  2168  160A  118A  	fcall	_USART_WriteChar
  4616                           
  4617                           ;main.c: 156: checksum ^= buffer[index];
  4618  163C  087A               	movf	send@index,w
  4619  163D  3EC8               	addlw	_buffer& (0+255)
  4620  163E  0084               	movwf	4
  4621  163F  1383               	bcf	3,7	;select IRP bank1
  4622  1640  0800               	movf	0,w
  4623  1641  00F8               	movwf	??_send
  4624  1642  0878               	movf	??_send,w
  4625  1643  06F9               	xorwf	send@checksum,f
  4626  1644  3001               	movlw	1
  4627  1645  00F8               	movwf	??_send
  4628  1646  0878               	movf	??_send,w
  4629  1647  07FA               	addwf	send@index,f
  4630  1648  3008               	movlw	8
  4631  1649  027A               	subwf	send@index,w
  4632  164A  1C03               	skipc
  4633  164B  2E32               	goto	i1l2471
  4634  164C                     i1l2479:	
  4635                           
  4636                           ;main.c: 157: }
  4637                           ;main.c: 158: buffer[8] = checksum;
  4638  164C  0879               	movf	send@checksum,w
  4639  164D  00F8               	movwf	??_send
  4640  164E  0878               	movf	??_send,w
  4641  164F  1683               	bsf	3,5	;RP0=1, select bank1
  4642  1650  1303               	bcf	3,6	;RP1=0, select bank1
  4643  1651  00D0               	movwf	(_buffer^(0+128)+8)
  4644                           
  4645                           ;main.c: 159: USART_WriteChar(buffer[8]);
  4646  1652  0850               	movf	(_buffer^(0+128)+8),w
  4647  1653  160A  118A  2168   	fcall	_USART_WriteChar
  4648  1656  0008               	return
  4649  1657                     __end_of_send:	
  4650                           
  4651                           	psect	text22
  4652  1330                     __ptext22:	
  4653 ;; *************** function ___lwdiv *****************
  4654 ;; Defined at:
  4655 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  divisor         2    0[COMMON] unsigned int 
  4658 ;;  dividend        2    2[COMMON] unsigned int 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  quotient        2    5[COMMON] unsigned int 
  4661 ;;  counter         1    7[COMMON] unsigned char 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  2    0[COMMON] unsigned int 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4671 ;;      Params:         4       0       0       0       0
  4672 ;;      Locals:         3       0       0       0       0
  4673 ;;      Temps:          1       0       0       0       0
  4674 ;;      Totals:         8       0       0       0       0
  4675 ;;Total ram usage:        8 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_send
  4681 ;;		_ISR
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           
  4686                           ;psect for function ___lwdiv
  4687  1330                     ___lwdiv:	
  4688                           
  4689                           ;incstack = 0
  4690                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4691  1330  01F5               	clrf	___lwdiv@quotient
  4692  1331  01F6               	clrf	___lwdiv@quotient+1
  4693  1332  0871               	movf	___lwdiv@divisor+1,w
  4694  1333  0470               	iorwf	___lwdiv@divisor,w
  4695  1334  1903               	skipnz
  4696  1335  2B67               	goto	i1l2369
  4697  1336  01F7               	clrf	___lwdiv@counter
  4698  1337  0AF7               	incf	___lwdiv@counter,f
  4699  1338                     i1l2357:	
  4700  1338  1BF1               	btfsc	___lwdiv@divisor+1,7
  4701  1339  2B46               	goto	i1l2359
  4702  133A  3001               	movlw	1
  4703  133B                     u272_25:	
  4704  133B  1003               	clrc
  4705  133C  0DF0               	rlf	___lwdiv@divisor,f
  4706  133D  0DF1               	rlf	___lwdiv@divisor+1,f
  4707  133E  3EFF               	addlw	-1
  4708  133F  1D03               	skipz
  4709  1340  2B3B               	goto	u272_25
  4710  1341  3001               	movlw	1
  4711  1342  00F4               	movwf	??___lwdiv
  4712  1343  0874               	movf	??___lwdiv,w
  4713  1344  07F7               	addwf	___lwdiv@counter,f
  4714  1345  2B38               	goto	i1l2357
  4715  1346                     i1l2359:	
  4716  1346  3001               	movlw	1
  4717  1347                     u274_25:	
  4718  1347  1003               	clrc
  4719  1348  0DF5               	rlf	___lwdiv@quotient,f
  4720  1349  0DF6               	rlf	___lwdiv@quotient+1,f
  4721  134A  3EFF               	addlw	-1
  4722  134B  1D03               	skipz
  4723  134C  2B47               	goto	u274_25
  4724  134D  0871               	movf	___lwdiv@divisor+1,w
  4725  134E  0273               	subwf	___lwdiv@dividend+1,w
  4726  134F  1D03               	skipz
  4727  1350  2B53               	goto	u275_25
  4728  1351  0870               	movf	___lwdiv@divisor,w
  4729  1352  0272               	subwf	___lwdiv@dividend,w
  4730  1353                     u275_25:	
  4731  1353  1C03               	skipc
  4732  1354  2B5C               	goto	i1l2365
  4733  1355  0870               	movf	___lwdiv@divisor,w
  4734  1356  02F2               	subwf	___lwdiv@dividend,f
  4735  1357  0871               	movf	___lwdiv@divisor+1,w
  4736  1358  1C03               	skipc
  4737  1359  03F3               	decf	___lwdiv@dividend+1,f
  4738  135A  02F3               	subwf	___lwdiv@dividend+1,f
  4739  135B  1475               	bsf	___lwdiv@quotient,0
  4740  135C                     i1l2365:	
  4741  135C  3001               	movlw	1
  4742  135D                     u276_25:	
  4743  135D  1003               	clrc
  4744  135E  0CF1               	rrf	___lwdiv@divisor+1,f
  4745  135F  0CF0               	rrf	___lwdiv@divisor,f
  4746  1360  3EFF               	addlw	-1
  4747  1361  1D03               	skipz
  4748  1362  2B5D               	goto	u276_25
  4749  1363  3001               	movlw	1
  4750  1364  02F7               	subwf	___lwdiv@counter,f
  4751  1365  1D03               	btfss	3,2
  4752  1366  2B46               	goto	i1l2359
  4753  1367                     i1l2369:	
  4754  1367  0876               	movf	___lwdiv@quotient+1,w
  4755  1368  01F1               	clrf	?___lwdiv+1
  4756  1369  07F1               	addwf	?___lwdiv+1,f
  4757  136A  0875               	movf	___lwdiv@quotient,w
  4758  136B  01F0               	clrf	?___lwdiv
  4759  136C  07F0               	addwf	?___lwdiv,f
  4760  136D  0008               	return
  4761  136E                     __end_of___lwdiv:	
  4762                           
  4763                           	psect	text23
  4764  122C                     __ptext23:	
  4765 ;; *************** function _minimo *****************
  4766 ;; Defined at:
  4767 ;;		line 25 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  a               3    6[BANK0 ] float 
  4770 ;;  b               3    9[BANK0 ] float 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  3    6[BANK0 ] float 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0, pclath, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4782 ;;      Params:         0       6       0       0       0
  4783 ;;      Locals:         0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0
  4785 ;;      Totals:         0       6       0       0       0
  4786 ;;Total ram usage:        6 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    1
  4789 ;; This function calls:
  4790 ;;		___ftge
  4791 ;; This function is called by:
  4792 ;;		_ISR
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           
  4797                           ;psect for function _minimo
  4798  122C                     _minimo:	
  4799                           
  4800                           ;main.c: 26: if (a < b) {
  4801                           
  4802                           ;incstack = 0
  4803                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  4804  122C  1283               	bcf	3,5	;RP0=0, select bank0
  4805  122D  1303               	bcf	3,6	;RP1=0, select bank0
  4806  122E  0826               	movf	minimo@a,w
  4807  122F  00F4               	movwf	___ftge@ff1
  4808  1230  0827               	movf	minimo@a+1,w
  4809  1231  00F5               	movwf	___ftge@ff1+1
  4810  1232  0828               	movf	minimo@a+2,w
  4811  1233  00F6               	movwf	___ftge@ff1+2
  4812  1234  0829               	movf	minimo@b,w
  4813  1235  00F7               	movwf	___ftge@ff2
  4814  1236  082A               	movf	minimo@b+1,w
  4815  1237  00F8               	movwf	___ftge@ff2+1
  4816  1238  082B               	movf	minimo@b+2,w
  4817  1239  00F9               	movwf	___ftge@ff2+2
  4818  123A  160A  118A  2481  160A  118A  	fcall	___ftge
  4819  123F  1C03               	btfss	3,0
  4820  1240  0008               	return
  4821                           
  4822                           ;main.c: 28: }
  4823                           ;main.c: 29: return b;
  4824                           
  4825                           ;main.c: 27: return a;
  4826  1241  1283               	bcf	3,5	;RP0=0, select bank0
  4827  1242  1303               	bcf	3,6	;RP1=0, select bank0
  4828  1243  0829               	movf	minimo@b,w
  4829  1244  00A6               	movwf	?_minimo
  4830  1245  082A               	movf	minimo@b+1,w
  4831  1246  00A7               	movwf	?_minimo+1
  4832  1247  082B               	movf	minimo@b+2,w
  4833  1248  00A8               	movwf	?_minimo+2
  4834  1249  0008               	return
  4835  124A                     __end_of_minimo:	
  4836                           
  4837                           	psect	text24
  4838  120E                     __ptext24:	
  4839 ;; *************** function _maximo *****************
  4840 ;; Defined at:
  4841 ;;		line 18 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  a               3   12[BANK0 ] float 
  4844 ;;  b               3   15[BANK0 ] float 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  3   12[BANK0 ] float 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4856 ;;      Params:         0       6       0       0       0
  4857 ;;      Locals:         0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0
  4859 ;;      Totals:         0       6       0       0       0
  4860 ;;Total ram usage:        6 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    1
  4863 ;; This function calls:
  4864 ;;		___ftge
  4865 ;; This function is called by:
  4866 ;;		_ISR
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _maximo
  4872  120E                     _maximo:	
  4873                           
  4874                           ;main.c: 19: if (a > b) {
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  4878  120E  1283               	bcf	3,5	;RP0=0, select bank0
  4879  120F  1303               	bcf	3,6	;RP1=0, select bank0
  4880  1210  082F               	movf	maximo@b,w
  4881  1211  00F4               	movwf	___ftge@ff1
  4882  1212  0830               	movf	maximo@b+1,w
  4883  1213  00F5               	movwf	___ftge@ff1+1
  4884  1214  0831               	movf	maximo@b+2,w
  4885  1215  00F6               	movwf	___ftge@ff1+2
  4886  1216  082C               	movf	maximo@a,w
  4887  1217  00F7               	movwf	___ftge@ff2
  4888  1218  082D               	movf	maximo@a+1,w
  4889  1219  00F8               	movwf	___ftge@ff2+1
  4890  121A  082E               	movf	maximo@a+2,w
  4891  121B  00F9               	movwf	___ftge@ff2+2
  4892  121C  160A  118A  2481  160A  118A  	fcall	___ftge
  4893  1221  1C03               	btfss	3,0
  4894  1222  0008               	return
  4895                           
  4896                           ;main.c: 21: }
  4897                           ;main.c: 22: return b;
  4898                           
  4899                           ;main.c: 20: return a;
  4900  1223  1283               	bcf	3,5	;RP0=0, select bank0
  4901  1224  1303               	bcf	3,6	;RP1=0, select bank0
  4902  1225  082F               	movf	maximo@b,w
  4903  1226  00AC               	movwf	?_maximo
  4904  1227  0830               	movf	maximo@b+1,w
  4905  1228  00AD               	movwf	?_maximo+1
  4906  1229  0831               	movf	maximo@b+2,w
  4907  122A  00AE               	movwf	?_maximo+2
  4908  122B  0008               	return
  4909  122C                     __end_of_maximo:	
  4910                           
  4911                           	psect	text25
  4912  1481                     __ptext25:	
  4913 ;; *************** function ___ftge *****************
  4914 ;; Defined at:
  4915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  ff1             3    4[COMMON] float 
  4918 ;;  ff2             3    7[COMMON] float 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4930 ;;      Params:         6       0       0       0       0
  4931 ;;      Locals:         0       0       0       0       0
  4932 ;;      Temps:          0       6       0       0       0
  4933 ;;      Totals:         6       6       0       0       0
  4934 ;;Total ram usage:       12 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_maximo
  4940 ;;		_minimo
  4941 ;;		_trapmf
  4942 ;;		_ISR
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function ___ftge
  4948  1481                     ___ftge:	
  4949                           
  4950                           ;incstack = 0
  4951                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4952  1481  1FF6               	btfss	___ftge@ff1+2,7
  4953  1482  2CAA               	goto	i1l2323
  4954  1483  3000               	movlw	0
  4955  1484  1283               	bcf	3,5	;RP0=0, select bank0
  4956  1485  1303               	bcf	3,6	;RP1=0, select bank0
  4957  1486  00A0               	movwf	??___ftge
  4958  1487  3000               	movlw	0
  4959  1488  00A1               	movwf	??___ftge+1
  4960  1489  3080               	movlw	128
  4961  148A  00A2               	movwf	??___ftge+2
  4962  148B  0974               	comf	___ftge@ff1,w
  4963  148C  00A3               	movwf	??___ftge+3
  4964  148D  0975               	comf	___ftge@ff1+1,w
  4965  148E  00A4               	movwf	??___ftge+4
  4966  148F  0976               	comf	___ftge@ff1+2,w
  4967  1490  00A5               	movwf	??___ftge+5
  4968  1491  0AA3               	incf	??___ftge+3,f
  4969  1492  1903               	skipnz
  4970  1493  0AA4               	incf	??___ftge+4,f
  4971  1494  1903               	skipnz
  4972  1495  0AA5               	incf	??___ftge+5,f
  4973  1496  0823               	movf	??___ftge+3,w
  4974  1497  07A0               	addwf	??___ftge,f
  4975  1498  0824               	movf	??___ftge+4,w
  4976  1499  1803               	skipnc
  4977  149A  0F24               	incfsz	??___ftge+4,w
  4978  149B  2C9D               	goto	u266_21
  4979  149C  2C9E               	goto	u266_22
  4980  149D                     u266_21:	
  4981  149D  07A1               	addwf	??___ftge+1,f
  4982  149E                     u266_22:	
  4983  149E  0825               	movf	??___ftge+5,w
  4984  149F  1803               	skipnc
  4985  14A0  0F25               	incfsz	??___ftge+5,w
  4986  14A1  2CA3               	goto	u266_23
  4987  14A2  2CA4               	goto	u266_24
  4988  14A3                     u266_23:	
  4989  14A3  07A2               	addwf	??___ftge+2,f
  4990  14A4                     u266_24:	
  4991  14A4  0820               	movf	??___ftge,w
  4992  14A5  00F4               	movwf	___ftge@ff1
  4993  14A6  0821               	movf	??___ftge+1,w
  4994  14A7  00F5               	movwf	___ftge@ff1+1
  4995  14A8  0822               	movf	??___ftge+2,w
  4996  14A9  00F6               	movwf	___ftge@ff1+2
  4997  14AA                     i1l2323:	
  4998  14AA  1FF9               	btfss	___ftge@ff2+2,7
  4999  14AB  2CD3               	goto	i1l2327
  5000  14AC  3000               	movlw	0
  5001  14AD  1283               	bcf	3,5	;RP0=0, select bank0
  5002  14AE  1303               	bcf	3,6	;RP1=0, select bank0
  5003  14AF  00A0               	movwf	??___ftge
  5004  14B0  3000               	movlw	0
  5005  14B1  00A1               	movwf	??___ftge+1
  5006  14B2  3080               	movlw	128
  5007  14B3  00A2               	movwf	??___ftge+2
  5008  14B4  0977               	comf	___ftge@ff2,w
  5009  14B5  00A3               	movwf	??___ftge+3
  5010  14B6  0978               	comf	___ftge@ff2+1,w
  5011  14B7  00A4               	movwf	??___ftge+4
  5012  14B8  0979               	comf	___ftge@ff2+2,w
  5013  14B9  00A5               	movwf	??___ftge+5
  5014  14BA  0AA3               	incf	??___ftge+3,f
  5015  14BB  1903               	skipnz
  5016  14BC  0AA4               	incf	??___ftge+4,f
  5017  14BD  1903               	skipnz
  5018  14BE  0AA5               	incf	??___ftge+5,f
  5019  14BF  0823               	movf	??___ftge+3,w
  5020  14C0  07A0               	addwf	??___ftge,f
  5021  14C1  0824               	movf	??___ftge+4,w
  5022  14C2  1803               	skipnc
  5023  14C3  0F24               	incfsz	??___ftge+4,w
  5024  14C4  2CC6               	goto	u268_21
  5025  14C5  2CC7               	goto	u268_22
  5026  14C6                     u268_21:	
  5027  14C6  07A1               	addwf	??___ftge+1,f
  5028  14C7                     u268_22:	
  5029  14C7  0825               	movf	??___ftge+5,w
  5030  14C8  1803               	skipnc
  5031  14C9  0F25               	incfsz	??___ftge+5,w
  5032  14CA  2CCC               	goto	u268_23
  5033  14CB  2CCD               	goto	u268_24
  5034  14CC                     u268_23:	
  5035  14CC  07A2               	addwf	??___ftge+2,f
  5036  14CD                     u268_24:	
  5037  14CD  0820               	movf	??___ftge,w
  5038  14CE  00F7               	movwf	___ftge@ff2
  5039  14CF  0821               	movf	??___ftge+1,w
  5040  14D0  00F8               	movwf	___ftge@ff2+1
  5041  14D1  0822               	movf	??___ftge+2,w
  5042  14D2  00F9               	movwf	___ftge@ff2+2
  5043  14D3                     i1l2327:	
  5044  14D3  3080               	movlw	128
  5045  14D4  06F6               	xorwf	___ftge@ff1+2,f
  5046  14D5  3080               	movlw	128
  5047  14D6  06F9               	xorwf	___ftge@ff2+2,f
  5048  14D7  0879               	movf	___ftge@ff2+2,w
  5049  14D8  0276               	subwf	___ftge@ff1+2,w
  5050  14D9  1D03               	skipz
  5051  14DA  0008               	return
  5052  14DB  0878               	movf	___ftge@ff2+1,w
  5053  14DC  0275               	subwf	___ftge@ff1+1,w
  5054  14DD  1D03               	skipz
  5055  14DE  0008               	return
  5056  14DF  0877               	movf	___ftge@ff2,w
  5057  14E0  0274               	subwf	___ftge@ff1,w
  5058  14E1  0008               	return
  5059  14E2                     __end_of___ftge:	
  5060                           
  5061                           	psect	text26
  5062  0803                     __ptext26:	
  5063 ;; *************** function _abs *****************
  5064 ;; Defined at:
  5065 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  a               2    0[COMMON] int 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  2    0[COMMON] int 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         2       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0
  5081 ;;      Temps:          2       0       0       0       0
  5082 ;;      Totals:         4       0       0       0       0
  5083 ;;Total ram usage:        4 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; This function calls:
  5086 ;;		Nothing
  5087 ;; This function is called by:
  5088 ;;		_ISR
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           
  5093                           ;psect for function _abs
  5094  0803                     _abs:	
  5095                           
  5096                           ;incstack = 0
  5097                           ; Regs used in _abs: [wreg+status,2+status,0]
  5098  0803  1FF1               	btfss	abs@a+1,7
  5099  0804  0008               	return
  5100  0805  0970               	comf	abs@a,w
  5101  0806  00F2               	movwf	??_abs
  5102  0807  0971               	comf	abs@a+1,w
  5103  0808  00F3               	movwf	??_abs+1
  5104  0809  0AF2               	incf	??_abs,f
  5105  080A  1903               	skipnz
  5106  080B  0AF3               	incf	??_abs+1,f
  5107  080C  0872               	movf	??_abs,w
  5108  080D  00F0               	movwf	?_abs
  5109  080E  0873               	movf	??_abs+1,w
  5110  080F  00F1               	movwf	?_abs+1
  5111  0810  0008               	return
  5112  0811                     __end_of_abs:	
  5113                           
  5114                           	psect	text27
  5115  12D1                     __ptext27:	
  5116 ;; *************** function ___wmul *****************
  5117 ;; Defined at:
  5118 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  multiplier      2   32[BANK0 ] unsigned int 
  5121 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  product         2   36[BANK0 ] unsigned int 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  2   32[BANK0 ] unsigned int 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5133 ;;      Params:         0       4       0       0       0
  5134 ;;      Locals:         0       2       0       0       0
  5135 ;;      Temps:          0       0       0       0       0
  5136 ;;      Totals:         0       6       0       0       0
  5137 ;;Total ram usage:        6 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_ISR
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function ___wmul
  5148  12D1                     ___wmul:	
  5149                           
  5150                           ;incstack = 0
  5151                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5152  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  5153  12D2  1303               	bcf	3,6	;RP1=0, select bank0
  5154  12D3  01C4               	clrf	___wmul@product
  5155  12D4  01C5               	clrf	___wmul@product+1
  5156  12D5                     i1l2591:	
  5157  12D5  1C40               	btfss	___wmul@multiplier,0
  5158  12D6  2ADD               	goto	i1l550
  5159  12D7  0842               	movf	___wmul@multiplicand,w
  5160  12D8  07C4               	addwf	___wmul@product,f
  5161  12D9  1803               	skipnc
  5162  12DA  0AC5               	incf	___wmul@product+1,f
  5163  12DB  0843               	movf	___wmul@multiplicand+1,w
  5164  12DC  07C5               	addwf	___wmul@product+1,f
  5165  12DD                     i1l550:	
  5166  12DD  3001               	movlw	1
  5167  12DE                     u304_25:	
  5168  12DE  1003               	clrc
  5169  12DF  0DC2               	rlf	___wmul@multiplicand,f
  5170  12E0  0DC3               	rlf	___wmul@multiplicand+1,f
  5171  12E1  3EFF               	addlw	-1
  5172  12E2  1D03               	skipz
  5173  12E3  2ADE               	goto	u304_25
  5174  12E4  3001               	movlw	1
  5175  12E5                     u305_25:	
  5176  12E5  1003               	clrc
  5177  12E6  0CC1               	rrf	___wmul@multiplier+1,f
  5178  12E7  0CC0               	rrf	___wmul@multiplier,f
  5179  12E8  3EFF               	addlw	-1
  5180  12E9  1D03               	skipz
  5181  12EA  2AE5               	goto	u305_25
  5182  12EB  0841               	movf	___wmul@multiplier+1,w
  5183  12EC  0440               	iorwf	___wmul@multiplier,w
  5184  12ED  1D03               	skipz
  5185  12EE  2AD5               	goto	i1l2591
  5186  12EF  0845               	movf	___wmul@product+1,w
  5187  12F0  01C1               	clrf	?___wmul+1
  5188  12F1  07C1               	addwf	?___wmul+1,f
  5189  12F2  0844               	movf	___wmul@product,w
  5190  12F3  01C0               	clrf	?___wmul
  5191  12F4  07C0               	addwf	?___wmul,f
  5192  12F5  0008               	return
  5193  12F6                     __end_of___wmul:	
  5194                           
  5195                           	psect	text28
  5196  11BF                     __ptext28:	
  5197 ;; *************** function ___lwtoft *****************
  5198 ;; Defined at:
  5199 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  c               2   38[BANK0 ] unsigned int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  3   38[BANK0 ] float 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, pclath, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5213 ;;      Params:         0       3       0       0       0
  5214 ;;      Locals:         0       0       0       0       0
  5215 ;;      Temps:          0       1       0       0       0
  5216 ;;      Totals:         0       4       0       0       0
  5217 ;;Total ram usage:        4 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    1
  5220 ;; This function calls:
  5221 ;;		___ftpack
  5222 ;; This function is called by:
  5223 ;;		_ISR
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           
  5228                           ;psect for function ___lwtoft
  5229  11BF                     ___lwtoft:	
  5230                           
  5231                           ;incstack = 0
  5232                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5233  11BF  1283               	bcf	3,5	;RP0=0, select bank0
  5234  11C0  1303               	bcf	3,6	;RP1=0, select bank0
  5235  11C1  0846               	movf	___lwtoft@c,w
  5236  11C2  00F0               	movwf	___ftpack@arg
  5237  11C3  0847               	movf	___lwtoft@c+1,w
  5238  11C4  00F1               	movwf	___ftpack@arg+1
  5239  11C5  01F2               	clrf	___ftpack@arg+2
  5240  11C6  308E               	movlw	142
  5241  11C7  00C9               	movwf	??___lwtoft
  5242  11C8  0849               	movf	??___lwtoft,w
  5243  11C9  00F3               	movwf	___ftpack@exp
  5244  11CA  01F4               	clrf	___ftpack@sign
  5245  11CB  160A  118A  24E2   	fcall	___ftpack
  5246  11CE  0870               	movf	?___ftpack,w
  5247  11CF  1283               	bcf	3,5	;RP0=0, select bank0
  5248  11D0  1303               	bcf	3,6	;RP1=0, select bank0
  5249  11D1  00C6               	movwf	?___lwtoft
  5250  11D2  0871               	movf	?___ftpack+1,w
  5251  11D3  00C7               	movwf	?___lwtoft+1
  5252  11D4  0872               	movf	?___ftpack+2,w
  5253  11D5  00C8               	movwf	?___lwtoft+2
  5254  11D6  0008               	return
  5255  11D7                     __end_of___lwtoft:	
  5256                           
  5257                           	psect	text29
  5258  16E3                     __ptext29:	
  5259 ;; *************** function ___fttol *****************
  5260 ;; Defined at:
  5261 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  f1              3   18[BANK0 ] float 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  lval            4   27[BANK0 ] unsigned long 
  5266 ;;  exp1            1   31[BANK0 ] unsigned char 
  5267 ;;  sign1           1   26[BANK0 ] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  4   18[BANK0 ] long 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5277 ;;      Params:         0       4       0       0       0
  5278 ;;      Locals:         0       6       0       0       0
  5279 ;;      Temps:          0       4       0       0       0
  5280 ;;      Totals:         0      14       0       0       0
  5281 ;;Total ram usage:       14 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_ISR
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function ___fttol
  5292  16E3                     ___fttol:	
  5293                           
  5294                           ;incstack = 0
  5295                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5296  16E3  1283               	bcf	3,5	;RP0=0, select bank0
  5297  16E4  1303               	bcf	3,6	;RP1=0, select bank0
  5298  16E5  0832               	movf	___fttol@f1,w
  5299  16E6  00B6               	movwf	??___fttol
  5300  16E7  0833               	movf	___fttol@f1+1,w
  5301  16E8  00B7               	movwf	??___fttol+1
  5302  16E9  0834               	movf	___fttol@f1+2,w
  5303  16EA  00B8               	movwf	??___fttol+2
  5304  16EB  1003               	clrc
  5305  16EC  0D37               	rlf	??___fttol+1,w
  5306  16ED  0D38               	rlf	??___fttol+2,w
  5307  16EE  00B9               	movwf	??___fttol+3
  5308  16EF  0839               	movf	??___fttol+3,w
  5309  16F0  00BF               	movwf	___fttol@exp1
  5310  16F1  08BF               	movf	___fttol@exp1,f
  5311  16F2  1D03               	skipz
  5312  16F3  2EFD               	goto	i1l2685
  5313  16F4  3000               	movlw	0
  5314  16F5  00B5               	movwf	?___fttol+3
  5315  16F6  3000               	movlw	0
  5316  16F7  00B4               	movwf	?___fttol+2
  5317  16F8  3000               	movlw	0
  5318  16F9  00B3               	movwf	?___fttol+1
  5319  16FA  3000               	movlw	0
  5320  16FB  00B2               	movwf	?___fttol
  5321  16FC  0008               	return
  5322  16FD                     i1l2685:	
  5323  16FD  0832               	movf	___fttol@f1,w
  5324  16FE  00B6               	movwf	??___fttol
  5325  16FF  0833               	movf	___fttol@f1+1,w
  5326  1700  00B7               	movwf	??___fttol+1
  5327  1701  0834               	movf	___fttol@f1+2,w
  5328  1702  00B8               	movwf	??___fttol+2
  5329  1703  3017               	movlw	23
  5330  1704                     u325_25:	
  5331  1704  1003               	clrc
  5332  1705  0CB8               	rrf	??___fttol+2,f
  5333  1706  0CB7               	rrf	??___fttol+1,f
  5334  1707  0CB6               	rrf	??___fttol,f
  5335  1708  3EFF               	addlw	-1
  5336  1709  1D03               	skipz
  5337  170A  2F04               	goto	u325_25
  5338  170B  0836               	movf	??___fttol,w
  5339  170C  00B9               	movwf	??___fttol+3
  5340  170D  0839               	movf	??___fttol+3,w
  5341  170E  00BA               	movwf	___fttol@sign1
  5342  170F  17B3               	bsf	___fttol@f1+1,7
  5343  1710  30FF               	movlw	255
  5344  1711  05B2               	andwf	___fttol@f1,f
  5345  1712  30FF               	movlw	255
  5346  1713  05B3               	andwf	___fttol@f1+1,f
  5347  1714  3000               	movlw	0
  5348  1715  05B4               	andwf	___fttol@f1+2,f
  5349  1716  0832               	movf	___fttol@f1,w
  5350  1717  00BB               	movwf	___fttol@lval
  5351  1718  0833               	movf	___fttol@f1+1,w
  5352  1719  00BC               	movwf	___fttol@lval+1
  5353  171A  0834               	movf	___fttol@f1+2,w
  5354  171B  00BD               	movwf	___fttol@lval+2
  5355  171C  01BE               	clrf	___fttol@lval+3
  5356  171D  308E               	movlw	142
  5357  171E  02BF               	subwf	___fttol@exp1,f
  5358  171F  1FBF               	btfss	___fttol@exp1,7
  5359  1720  2F3F               	goto	i1l2705
  5360  1721  083F               	movf	___fttol@exp1,w
  5361  1722  3A80               	xorlw	128
  5362  1723  3E8F               	addlw	143
  5363  1724  1803               	skipnc
  5364  1725  2F2F               	goto	i1l2703
  5365  1726  3000               	movlw	0
  5366  1727  00B5               	movwf	?___fttol+3
  5367  1728  3000               	movlw	0
  5368  1729  00B4               	movwf	?___fttol+2
  5369  172A  3000               	movlw	0
  5370  172B  00B3               	movwf	?___fttol+1
  5371  172C  3000               	movlw	0
  5372  172D  00B2               	movwf	?___fttol
  5373  172E  0008               	return
  5374  172F                     i1l2703:	
  5375  172F  3001               	movlw	1
  5376  1730                     u328_25:	
  5377  1730  1003               	clrc
  5378  1731  0CBE               	rrf	___fttol@lval+3,f
  5379  1732  0CBD               	rrf	___fttol@lval+2,f
  5380  1733  0CBC               	rrf	___fttol@lval+1,f
  5381  1734  0CBB               	rrf	___fttol@lval,f
  5382  1735  3EFF               	addlw	-1
  5383  1736  1D03               	skipz
  5384  1737  2F30               	goto	u328_25
  5385  1738  3001               	movlw	1
  5386  1739  00B6               	movwf	??___fttol
  5387  173A  0836               	movf	??___fttol,w
  5388  173B  07BF               	addwf	___fttol@exp1,f
  5389  173C  1903               	btfsc	3,2
  5390  173D  2F5A               	goto	i1l2715
  5391  173E  2F2F               	goto	i1l2703
  5392  173F                     i1l2705:	
  5393  173F  3018               	movlw	24
  5394  1740  023F               	subwf	___fttol@exp1,w
  5395  1741  1C03               	skipc
  5396  1742  2F57               	goto	i1l2713
  5397  1743  3000               	movlw	0
  5398  1744  00B5               	movwf	?___fttol+3
  5399  1745  3000               	movlw	0
  5400  1746  00B4               	movwf	?___fttol+2
  5401  1747  3000               	movlw	0
  5402  1748  00B3               	movwf	?___fttol+1
  5403  1749  3000               	movlw	0
  5404  174A  00B2               	movwf	?___fttol
  5405  174B  0008               	return
  5406  174C                     i1l2711:	
  5407  174C  3001               	movlw	1
  5408  174D  00B6               	movwf	??___fttol
  5409  174E                     u331_25:	
  5410  174E  1003               	clrc
  5411  174F  0DBB               	rlf	___fttol@lval,f
  5412  1750  0DBC               	rlf	___fttol@lval+1,f
  5413  1751  0DBD               	rlf	___fttol@lval+2,f
  5414  1752  0DBE               	rlf	___fttol@lval+3,f
  5415  1753  0BB6               	decfsz	??___fttol,f
  5416  1754  2F4E               	goto	u331_25
  5417  1755  3001               	movlw	1
  5418  1756  02BF               	subwf	___fttol@exp1,f
  5419  1757                     i1l2713:	
  5420  1757  08BF               	movf	___fttol@exp1,f
  5421  1758  1D03               	skipz
  5422  1759  2F4C               	goto	i1l2711
  5423  175A                     i1l2715:	
  5424  175A  083A               	movf	___fttol@sign1,w
  5425  175B  1903               	btfsc	3,2
  5426  175C  2F68               	goto	i1l2719
  5427  175D  09BB               	comf	___fttol@lval,f
  5428  175E  09BC               	comf	___fttol@lval+1,f
  5429  175F  09BD               	comf	___fttol@lval+2,f
  5430  1760  09BE               	comf	___fttol@lval+3,f
  5431  1761  0ABB               	incf	___fttol@lval,f
  5432  1762  1903               	skipnz
  5433  1763  0ABC               	incf	___fttol@lval+1,f
  5434  1764  1903               	skipnz
  5435  1765  0ABD               	incf	___fttol@lval+2,f
  5436  1766  1903               	skipnz
  5437  1767  0ABE               	incf	___fttol@lval+3,f
  5438  1768                     i1l2719:	
  5439  1768  083E               	movf	___fttol@lval+3,w
  5440  1769  00B5               	movwf	?___fttol+3
  5441  176A  083D               	movf	___fttol@lval+2,w
  5442  176B  00B4               	movwf	?___fttol+2
  5443  176C  083C               	movf	___fttol@lval+1,w
  5444  176D  00B3               	movwf	?___fttol+1
  5445  176E  083B               	movf	___fttol@lval,w
  5446  176F  00B2               	movwf	?___fttol
  5447  1770  0008               	return
  5448  1771                     __end_of___fttol:	
  5449                           
  5450                           	psect	text30
  5451  0BF6                     __ptext30:	
  5452 ;; *************** function ___ftmul *****************
  5453 ;; Defined at:
  5454 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  f1              3   50[BANK0 ] float 
  5457 ;;  f2              3   53[BANK0 ] float 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  5460 ;;  sign            1   65[BANK0 ] unsigned char 
  5461 ;;  cntr            1   64[BANK0 ] unsigned char 
  5462 ;;  exp             1   60[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  3   50[BANK0 ] float 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5472 ;;      Params:         0       6       0       0       0
  5473 ;;      Locals:         0       6       0       0       0
  5474 ;;      Temps:          0       4       0       0       0
  5475 ;;      Totals:         0      16       0       0       0
  5476 ;;Total ram usage:       16 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    1
  5479 ;; This function calls:
  5480 ;;		___ftpack
  5481 ;; This function is called by:
  5482 ;;		_ISR
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function ___ftmul
  5488  0BF6                     ___ftmul:	
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5492  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5494  0BF8  0852               	movf	___ftmul@f1,w
  5495  0BF9  00D8               	movwf	??___ftmul
  5496  0BFA  0853               	movf	___ftmul@f1+1,w
  5497  0BFB  00D9               	movwf	??___ftmul+1
  5498  0BFC  0854               	movf	___ftmul@f1+2,w
  5499  0BFD  00DA               	movwf	??___ftmul+2
  5500  0BFE  1003               	clrc
  5501  0BFF  0D59               	rlf	??___ftmul+1,w
  5502  0C00  0D5A               	rlf	??___ftmul+2,w
  5503  0C01  00DB               	movwf	??___ftmul+3
  5504  0C02  085B               	movf	??___ftmul+3,w
  5505  0C03  00DC               	movwf	___ftmul@exp
  5506  0C04  08DC               	movf	___ftmul@exp,f
  5507  0C05  1D03               	skipz
  5508  0C06  2C0E               	goto	i1l2635
  5509  0C07  3000               	movlw	0
  5510  0C08  00D2               	movwf	?___ftmul
  5511  0C09  3000               	movlw	0
  5512  0C0A  00D3               	movwf	?___ftmul+1
  5513  0C0B  3000               	movlw	0
  5514  0C0C  00D4               	movwf	?___ftmul+2
  5515  0C0D  0008               	return
  5516  0C0E                     i1l2635:	
  5517  0C0E  0855               	movf	___ftmul@f2,w
  5518  0C0F  00D8               	movwf	??___ftmul
  5519  0C10  0856               	movf	___ftmul@f2+1,w
  5520  0C11  00D9               	movwf	??___ftmul+1
  5521  0C12  0857               	movf	___ftmul@f2+2,w
  5522  0C13  00DA               	movwf	??___ftmul+2
  5523  0C14  1003               	clrc
  5524  0C15  0D59               	rlf	??___ftmul+1,w
  5525  0C16  0D5A               	rlf	??___ftmul+2,w
  5526  0C17  00DB               	movwf	??___ftmul+3
  5527  0C18  085B               	movf	??___ftmul+3,w
  5528  0C19  00E1               	movwf	___ftmul@sign
  5529  0C1A  08E1               	movf	___ftmul@sign,f
  5530  0C1B  1D03               	skipz
  5531  0C1C  2C24               	goto	i1l2641
  5532  0C1D  3000               	movlw	0
  5533  0C1E  00D2               	movwf	?___ftmul
  5534  0C1F  3000               	movlw	0
  5535  0C20  00D3               	movwf	?___ftmul+1
  5536  0C21  3000               	movlw	0
  5537  0C22  00D4               	movwf	?___ftmul+2
  5538  0C23  0008               	return
  5539  0C24                     i1l2641:	
  5540  0C24  0861               	movf	___ftmul@sign,w
  5541  0C25  3E7B               	addlw	123
  5542  0C26  00D8               	movwf	??___ftmul
  5543  0C27  0858               	movf	??___ftmul,w
  5544  0C28  07DC               	addwf	___ftmul@exp,f
  5545  0C29  0852               	movf	___ftmul@f1,w
  5546  0C2A  00D8               	movwf	??___ftmul
  5547  0C2B  0853               	movf	___ftmul@f1+1,w
  5548  0C2C  00D9               	movwf	??___ftmul+1
  5549  0C2D  0854               	movf	___ftmul@f1+2,w
  5550  0C2E  00DA               	movwf	??___ftmul+2
  5551  0C2F  3010               	movlw	16
  5552  0C30                     u312_25:	
  5553  0C30  1003               	clrc
  5554  0C31  0CDA               	rrf	??___ftmul+2,f
  5555  0C32  0CD9               	rrf	??___ftmul+1,f
  5556  0C33  0CD8               	rrf	??___ftmul,f
  5557  0C34  3EFF               	addlw	-1
  5558  0C35  1D03               	skipz
  5559  0C36  2C30               	goto	u312_25
  5560  0C37  0858               	movf	??___ftmul,w
  5561  0C38  00DB               	movwf	??___ftmul+3
  5562  0C39  085B               	movf	??___ftmul+3,w
  5563  0C3A  00E1               	movwf	___ftmul@sign
  5564  0C3B  0855               	movf	___ftmul@f2,w
  5565  0C3C  00D8               	movwf	??___ftmul
  5566  0C3D  0856               	movf	___ftmul@f2+1,w
  5567  0C3E  00D9               	movwf	??___ftmul+1
  5568  0C3F  0857               	movf	___ftmul@f2+2,w
  5569  0C40  00DA               	movwf	??___ftmul+2
  5570  0C41  3010               	movlw	16
  5571  0C42                     u313_25:	
  5572  0C42  1003               	clrc
  5573  0C43  0CDA               	rrf	??___ftmul+2,f
  5574  0C44  0CD9               	rrf	??___ftmul+1,f
  5575  0C45  0CD8               	rrf	??___ftmul,f
  5576  0C46  3EFF               	addlw	-1
  5577  0C47  1D03               	skipz
  5578  0C48  2C42               	goto	u313_25
  5579  0C49  0858               	movf	??___ftmul,w
  5580  0C4A  00DB               	movwf	??___ftmul+3
  5581  0C4B  085B               	movf	??___ftmul+3,w
  5582  0C4C  06E1               	xorwf	___ftmul@sign,f
  5583  0C4D  3080               	movlw	128
  5584  0C4E  00D8               	movwf	??___ftmul
  5585  0C4F  0858               	movf	??___ftmul,w
  5586  0C50  05E1               	andwf	___ftmul@sign,f
  5587  0C51  17D3               	bsf	___ftmul@f1+1,7
  5588  0C52  17D6               	bsf	___ftmul@f2+1,7
  5589  0C53  30FF               	movlw	255
  5590  0C54  05D5               	andwf	___ftmul@f2,f
  5591  0C55  30FF               	movlw	255
  5592  0C56  05D6               	andwf	___ftmul@f2+1,f
  5593  0C57  3000               	movlw	0
  5594  0C58  05D7               	andwf	___ftmul@f2+2,f
  5595  0C59  3000               	movlw	0
  5596  0C5A  00DD               	movwf	___ftmul@f3_as_product
  5597  0C5B  3000               	movlw	0
  5598  0C5C  00DE               	movwf	___ftmul@f3_as_product+1
  5599  0C5D  3000               	movlw	0
  5600  0C5E  00DF               	movwf	___ftmul@f3_as_product+2
  5601  0C5F  3007               	movlw	7
  5602  0C60  00D8               	movwf	??___ftmul
  5603  0C61  0858               	movf	??___ftmul,w
  5604  0C62  00E0               	movwf	___ftmul@cntr
  5605  0C63                     i1l2653:	
  5606  0C63  1C52               	btfss	___ftmul@f1,0
  5607  0C64  2C73               	goto	i1l2657
  5608  0C65  0855               	movf	___ftmul@f2,w
  5609  0C66  07DD               	addwf	___ftmul@f3_as_product,f
  5610  0C67  0856               	movf	___ftmul@f2+1,w
  5611  0C68  1103               	clrz
  5612  0C69  1803               	skipnc
  5613  0C6A  0A56               	incf	___ftmul@f2+1,w
  5614  0C6B  1D03               	btfss	3,2
  5615  0C6C  07DE               	addwf	___ftmul@f3_as_product+1,f
  5616  0C6D  0857               	movf	___ftmul@f2+2,w
  5617  0C6E  1103               	clrz
  5618  0C6F  1803               	skipnc
  5619  0C70  0A57               	incf	___ftmul@f2+2,w
  5620  0C71  1D03               	btfss	3,2
  5621  0C72  07DF               	addwf	___ftmul@f3_as_product+2,f
  5622  0C73                     i1l2657:	
  5623  0C73  3001               	movlw	1
  5624  0C74                     u316_25:	
  5625  0C74  1003               	clrc
  5626  0C75  0CD4               	rrf	___ftmul@f1+2,f
  5627  0C76  0CD3               	rrf	___ftmul@f1+1,f
  5628  0C77  0CD2               	rrf	___ftmul@f1,f
  5629  0C78  3EFF               	addlw	-1
  5630  0C79  1D03               	skipz
  5631  0C7A  2C74               	goto	u316_25
  5632  0C7B  3001               	movlw	1
  5633  0C7C                     u317_25:	
  5634  0C7C  1003               	clrc
  5635  0C7D  0DD5               	rlf	___ftmul@f2,f
  5636  0C7E  0DD6               	rlf	___ftmul@f2+1,f
  5637  0C7F  0DD7               	rlf	___ftmul@f2+2,f
  5638  0C80  3EFF               	addlw	-1
  5639  0C81  1D03               	skipz
  5640  0C82  2C7C               	goto	u317_25
  5641  0C83  3001               	movlw	1
  5642  0C84  02E0               	subwf	___ftmul@cntr,f
  5643  0C85  1D03               	btfss	3,2
  5644  0C86  2C63               	goto	i1l2653
  5645  0C87  3009               	movlw	9
  5646  0C88  00D8               	movwf	??___ftmul
  5647  0C89  0858               	movf	??___ftmul,w
  5648  0C8A  00E0               	movwf	___ftmul@cntr
  5649  0C8B                     i1l2665:	
  5650  0C8B  1C52               	btfss	___ftmul@f1,0
  5651  0C8C  2C9B               	goto	i1l2669
  5652  0C8D  0855               	movf	___ftmul@f2,w
  5653  0C8E  07DD               	addwf	___ftmul@f3_as_product,f
  5654  0C8F  0856               	movf	___ftmul@f2+1,w
  5655  0C90  1103               	clrz
  5656  0C91  1803               	skipnc
  5657  0C92  0A56               	incf	___ftmul@f2+1,w
  5658  0C93  1D03               	btfss	3,2
  5659  0C94  07DE               	addwf	___ftmul@f3_as_product+1,f
  5660  0C95  0857               	movf	___ftmul@f2+2,w
  5661  0C96  1103               	clrz
  5662  0C97  1803               	skipnc
  5663  0C98  0A57               	incf	___ftmul@f2+2,w
  5664  0C99  1D03               	btfss	3,2
  5665  0C9A  07DF               	addwf	___ftmul@f3_as_product+2,f
  5666  0C9B                     i1l2669:	
  5667  0C9B  3001               	movlw	1
  5668  0C9C                     u321_25:	
  5669  0C9C  1003               	clrc
  5670  0C9D  0CD4               	rrf	___ftmul@f1+2,f
  5671  0C9E  0CD3               	rrf	___ftmul@f1+1,f
  5672  0C9F  0CD2               	rrf	___ftmul@f1,f
  5673  0CA0  3EFF               	addlw	-1
  5674  0CA1  1D03               	skipz
  5675  0CA2  2C9C               	goto	u321_25
  5676  0CA3  3001               	movlw	1
  5677  0CA4                     u322_25:	
  5678  0CA4  1003               	clrc
  5679  0CA5  0CDF               	rrf	___ftmul@f3_as_product+2,f
  5680  0CA6  0CDE               	rrf	___ftmul@f3_as_product+1,f
  5681  0CA7  0CDD               	rrf	___ftmul@f3_as_product,f
  5682  0CA8  3EFF               	addlw	-1
  5683  0CA9  1D03               	skipz
  5684  0CAA  2CA4               	goto	u322_25
  5685  0CAB  3001               	movlw	1
  5686  0CAC  02E0               	subwf	___ftmul@cntr,f
  5687  0CAD  1D03               	btfss	3,2
  5688  0CAE  2C8B               	goto	i1l2665
  5689  0CAF  085D               	movf	___ftmul@f3_as_product,w
  5690  0CB0  00F0               	movwf	___ftpack@arg
  5691  0CB1  085E               	movf	___ftmul@f3_as_product+1,w
  5692  0CB2  00F1               	movwf	___ftpack@arg+1
  5693  0CB3  085F               	movf	___ftmul@f3_as_product+2,w
  5694  0CB4  00F2               	movwf	___ftpack@arg+2
  5695  0CB5  085C               	movf	___ftmul@exp,w
  5696  0CB6  00D8               	movwf	??___ftmul
  5697  0CB7  0858               	movf	??___ftmul,w
  5698  0CB8  00F3               	movwf	___ftpack@exp
  5699  0CB9  0861               	movf	___ftmul@sign,w
  5700  0CBA  00D9               	movwf	??___ftmul+1
  5701  0CBB  0859               	movf	??___ftmul+1,w
  5702  0CBC  00F4               	movwf	___ftpack@sign
  5703  0CBD  160A  118A  24E2   	fcall	___ftpack
  5704  0CC0  0870               	movf	?___ftpack,w
  5705  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  5706  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  5707  0CC3  00D2               	movwf	?___ftmul
  5708  0CC4  0871               	movf	?___ftpack+1,w
  5709  0CC5  00D3               	movwf	?___ftmul+1
  5710  0CC6  0872               	movf	?___ftpack+2,w
  5711  0CC7  00D4               	movwf	?___ftmul+2
  5712  0CC8  0008               	return
  5713  0CC9                     __end_of___ftmul:	
  5714                           
  5715                           	psect	text31
  5716  07EC                     __ptext31:	
  5717 ;; *************** function ___bmul *****************
  5718 ;; Defined at:
  5719 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  multiplier      1    wreg     unsigned char 
  5722 ;;  multiplicand    1    0[COMMON] unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  multiplier      1    3[COMMON] unsigned char 
  5725 ;;  product         1    2[COMMON] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      unsigned char 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5735 ;;      Params:         1       0       0       0       0
  5736 ;;      Locals:         2       0       0       0       0
  5737 ;;      Temps:          1       0       0       0       0
  5738 ;;      Totals:         4       0       0       0       0
  5739 ;;Total ram usage:        4 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_ISR
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function ___bmul
  5750  07EC                     ___bmul:	
  5751                           
  5752                           ;incstack = 0
  5753                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5754                           ;___bmul@multiplier stored from wreg
  5755  07EC  00F3               	movwf	___bmul@multiplier
  5756  07ED  01F2               	clrf	___bmul@product
  5757  07EE                     i1l2603:	
  5758  07EE  1C73               	btfss	___bmul@multiplier,0
  5759  07EF  2FF4               	goto	i1l2607
  5760  07F0  0870               	movf	___bmul@multiplicand,w
  5761  07F1  00F1               	movwf	??___bmul
  5762  07F2  0871               	movf	??___bmul,w
  5763  07F3  07F2               	addwf	___bmul@product,f
  5764  07F4                     i1l2607:	
  5765  07F4  1003               	clrc
  5766  07F5  0DF0               	rlf	___bmul@multiplicand,f
  5767  07F6  1003               	clrc
  5768  07F7  0CF3               	rrf	___bmul@multiplier,f
  5769  07F8  08F3               	movf	___bmul@multiplier,f
  5770  07F9  1D03               	skipz
  5771  07FA  2FEE               	goto	i1l2603
  5772  07FB  0872               	movf	___bmul@product,w
  5773  07FC  0008               	return
  5774  07FD                     __end_of___bmul:	
  5775                           
  5776                           	psect	text32
  5777  124A                     __ptext32:	
  5778 ;; *************** function ___awtoft *****************
  5779 ;; Defined at:
  5780 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  c               2    8[COMMON] int 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  sign            1   13[COMMON] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  3    8[COMMON] float 
  5787 ;; Registers used:
  5788 ;;		wreg, status,2, status,0, pclath, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 0/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5794 ;;      Params:         3       0       0       0       0
  5795 ;;      Locals:         1       0       0       0       0
  5796 ;;      Temps:          2       0       0       0       0
  5797 ;;      Totals:         6       0       0       0       0
  5798 ;;Total ram usage:        6 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    1
  5801 ;; This function calls:
  5802 ;;		___ftpack
  5803 ;; This function is called by:
  5804 ;;		_ISR
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           
  5809                           ;psect for function ___awtoft
  5810  124A                     ___awtoft:	
  5811                           
  5812                           ;incstack = 0
  5813                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5814  124A  01FD               	clrf	___awtoft@sign
  5815  124B  1FF9               	btfss	___awtoft@c+1,7
  5816  124C  2A54               	goto	i1l2625
  5817  124D  09F8               	comf	___awtoft@c,f
  5818  124E  09F9               	comf	___awtoft@c+1,f
  5819  124F  0AF8               	incf	___awtoft@c,f
  5820  1250  1903               	skipnz
  5821  1251  0AF9               	incf	___awtoft@c+1,f
  5822  1252  01FD               	clrf	___awtoft@sign
  5823  1253  0AFD               	incf	___awtoft@sign,f
  5824  1254                     i1l2625:	
  5825  1254  0878               	movf	___awtoft@c,w
  5826  1255  00F0               	movwf	___ftpack@arg
  5827  1256  0879               	movf	___awtoft@c+1,w
  5828  1257  00F1               	movwf	___ftpack@arg+1
  5829  1258  01F2               	clrf	___ftpack@arg+2
  5830  1259  308E               	movlw	142
  5831  125A  00FB               	movwf	??___awtoft
  5832  125B  087B               	movf	??___awtoft,w
  5833  125C  00F3               	movwf	___ftpack@exp
  5834  125D  087D               	movf	___awtoft@sign,w
  5835  125E  00FC               	movwf	??___awtoft+1
  5836  125F  087C               	movf	??___awtoft+1,w
  5837  1260  00F4               	movwf	___ftpack@sign
  5838  1261  160A  118A  24E2   	fcall	___ftpack
  5839  1264  0870               	movf	?___ftpack,w
  5840  1265  00F8               	movwf	?___awtoft
  5841  1266  0871               	movf	?___ftpack+1,w
  5842  1267  00F9               	movwf	?___awtoft+1
  5843  1268  0872               	movf	?___ftpack+2,w
  5844  1269  00FA               	movwf	?___awtoft+2
  5845  126A  0008               	return
  5846  126B                     __end_of___awtoft:	
  5847                           
  5848                           	psect	text33
  5849  14E2                     __ptext33:	
  5850 ;; *************** function ___ftpack *****************
  5851 ;; Defined at:
  5852 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  arg             3    0[COMMON] unsigned um
  5855 ;;  exp             1    3[COMMON] unsigned char 
  5856 ;;  sign            1    4[COMMON] unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  3    0[COMMON] float 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         5       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0
  5870 ;;      Temps:          3       0       0       0       0
  5871 ;;      Totals:         8       0       0       0       0
  5872 ;;Total ram usage:        8 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		___awtoft
  5878 ;;		___ftadd
  5879 ;;		___ftdiv
  5880 ;;		___ftmul
  5881 ;;		___lwtoft
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function ___ftpack
  5887  14E2                     ___ftpack:	
  5888                           
  5889                           ;incstack = 0
  5890                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5891  14E2  0873               	movf	___ftpack@exp,w
  5892  14E3  1903               	btfsc	3,2
  5893  14E4  2CEA               	goto	i1l2131
  5894  14E5  0872               	movf	___ftpack@arg+2,w
  5895  14E6  0471               	iorwf	___ftpack@arg+1,w
  5896  14E7  0470               	iorwf	___ftpack@arg,w
  5897  14E8  1D03               	skipz
  5898  14E9  2CFD               	goto	i1l2137
  5899  14EA                     i1l2131:	
  5900  14EA  3000               	movlw	0
  5901  14EB  00F0               	movwf	?___ftpack
  5902  14EC  3000               	movlw	0
  5903  14ED  00F1               	movwf	?___ftpack+1
  5904  14EE  3000               	movlw	0
  5905  14EF  00F2               	movwf	?___ftpack+2
  5906  14F0  0008               	return
  5907  14F1                     i1l2135:	
  5908  14F1  3001               	movlw	1
  5909  14F2  00F5               	movwf	??___ftpack
  5910  14F3  0875               	movf	??___ftpack,w
  5911  14F4  07F3               	addwf	___ftpack@exp,f
  5912  14F5  3001               	movlw	1
  5913  14F6                     u213_25:	
  5914  14F6  1003               	clrc
  5915  14F7  0CF2               	rrf	___ftpack@arg+2,f
  5916  14F8  0CF1               	rrf	___ftpack@arg+1,f
  5917  14F9  0CF0               	rrf	___ftpack@arg,f
  5918  14FA  3EFF               	addlw	-1
  5919  14FB  1D03               	skipz
  5920  14FC  2CF6               	goto	u213_25
  5921  14FD                     i1l2137:	
  5922  14FD  30FE               	movlw	254
  5923  14FE  0572               	andwf	___ftpack@arg+2,w
  5924  14FF  1903               	btfsc	3,2
  5925  1500  2D18               	goto	i1l715
  5926  1501  2CF1               	goto	i1l2135
  5927  1502                     i1l2139:	
  5928  1502  3001               	movlw	1
  5929  1503  00F5               	movwf	??___ftpack
  5930  1504  0875               	movf	??___ftpack,w
  5931  1505  07F3               	addwf	___ftpack@exp,f
  5932  1506  3001               	movlw	1
  5933  1507  07F0               	addwf	___ftpack@arg,f
  5934  1508  3000               	movlw	0
  5935  1509  1803               	skipnc
  5936  150A  3001               	movlw	1
  5937  150B  07F1               	addwf	___ftpack@arg+1,f
  5938  150C  3000               	movlw	0
  5939  150D  1803               	skipnc
  5940  150E  3001               	movlw	1
  5941  150F  07F2               	addwf	___ftpack@arg+2,f
  5942  1510  3001               	movlw	1
  5943  1511                     u215_25:	
  5944  1511  1003               	clrc
  5945  1512  0CF2               	rrf	___ftpack@arg+2,f
  5946  1513  0CF1               	rrf	___ftpack@arg+1,f
  5947  1514  0CF0               	rrf	___ftpack@arg,f
  5948  1515  3EFF               	addlw	-1
  5949  1516  1D03               	skipz
  5950  1517  2D11               	goto	u215_25
  5951  1518                     i1l715:	
  5952  1518  30FF               	movlw	255
  5953  1519  0572               	andwf	___ftpack@arg+2,w
  5954  151A  1903               	btfsc	3,2
  5955  151B  2D27               	goto	i1l2147
  5956  151C  2D02               	goto	i1l2139
  5957  151D                     i1l2145:	
  5958  151D  3001               	movlw	1
  5959  151E  02F3               	subwf	___ftpack@exp,f
  5960  151F  3001               	movlw	1
  5961  1520                     u217_25:	
  5962  1520  1003               	clrc
  5963  1521  0DF0               	rlf	___ftpack@arg,f
  5964  1522  0DF1               	rlf	___ftpack@arg+1,f
  5965  1523  0DF2               	rlf	___ftpack@arg+2,f
  5966  1524  3EFF               	addlw	-1
  5967  1525  1D03               	skipz
  5968  1526  2D20               	goto	u217_25
  5969  1527                     i1l2147:	
  5970  1527  1FF1               	btfss	___ftpack@arg+1,7
  5971  1528  2D1D               	goto	i1l2145
  5972  1529  1873               	btfsc	___ftpack@exp,0
  5973  152A  2D31               	goto	i1l721
  5974  152B  30FF               	movlw	255
  5975  152C  05F0               	andwf	___ftpack@arg,f
  5976  152D  307F               	movlw	127
  5977  152E  05F1               	andwf	___ftpack@arg+1,f
  5978  152F  30FF               	movlw	255
  5979  1530  05F2               	andwf	___ftpack@arg+2,f
  5980  1531                     i1l721:	
  5981  1531  1003               	clrc
  5982  1532  0CF3               	rrf	___ftpack@exp,f
  5983  1533  0873               	movf	___ftpack@exp,w
  5984  1534  00F5               	movwf	??___ftpack
  5985  1535  01F6               	clrf	??___ftpack+1
  5986  1536  01F7               	clrf	??___ftpack+2
  5987  1537  3010               	movlw	16
  5988  1538                     u220_25:	
  5989  1538  1003               	clrc
  5990  1539  0DF5               	rlf	??___ftpack,f
  5991  153A  0DF6               	rlf	??___ftpack+1,f
  5992  153B  0DF7               	rlf	??___ftpack+2,f
  5993  153C  3EFF               	addlw	-1
  5994  153D  1D03               	skipz
  5995  153E  2D38               	goto	u220_25
  5996  153F  0875               	movf	??___ftpack,w
  5997  1540  04F0               	iorwf	___ftpack@arg,f
  5998  1541  0876               	movf	??___ftpack+1,w
  5999  1542  04F1               	iorwf	___ftpack@arg+1,f
  6000  1543  0877               	movf	??___ftpack+2,w
  6001  1544  04F2               	iorwf	___ftpack@arg+2,f
  6002  1545  0874               	movf	___ftpack@sign,w
  6003  1546  1903               	btfsc	3,2
  6004  1547  0008               	return
  6005  1548  17F2               	bsf	___ftpack@arg+2,7
  6006  1549  0008               	return
  6007  154A                     __end_of___ftpack:	
  6008                           
  6009                           	psect	text34
  6010  11A7                     __ptext34:	
  6011 ;; *************** function _USART_ReceiveChar *****************
  6012 ;; Defined at:
  6013 ;;		line 63 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;		None
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  byte            1    4[COMMON] unsigned char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      unsigned char 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6027 ;;      Params:         0       0       0       0       0
  6028 ;;      Locals:         1       0       0       0       0
  6029 ;;      Temps:          1       0       0       0       0
  6030 ;;      Totals:         2       0       0       0       0
  6031 ;;Total ram usage:        2 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    2
  6034 ;; This function calls:
  6035 ;;		_USART_WriteString
  6036 ;; This function is called by:
  6037 ;;		_ISR
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function _USART_ReceiveChar
  6043  11A7                     _USART_ReceiveChar:	
  6044                           
  6045                           ;usart.c: 65: unsigned char byte;
  6046                           ;usart.c: 67: if (!OERR)
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6050  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  6051  11A8  1303               	bcf	3,6	;RP1=0, select bank0
  6052  11A9  1898               	btfsc	24,1	;volatile
  6053  11AA  29B0               	goto	i1l2489
  6054                           
  6055                           ;usart.c: 68: {
  6056                           ;usart.c: 69: byte = RCREG;
  6057  11AB  081A               	movf	26,w	;volatile
  6058  11AC  00F3               	movwf	??_USART_ReceiveChar
  6059  11AD  0873               	movf	??_USART_ReceiveChar,w
  6060  11AE  00F4               	movwf	USART_ReceiveChar@byte
  6061  11AF  29BC               	goto	i1l2497
  6062  11B0                     i1l2489:	
  6063                           ;usart.c: 71: }
  6064                           
  6065                           ;usart.c: 70: PIR1bits.RCIF = 0;
  6066                           
  6067                           
  6068                           ;usart.c: 72: else
  6069                           ;usart.c: 73: {
  6070                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  6071  11B0  3001               	movlw	(STR_1-__stringbase)& (0+255)
  6072  11B1  160A  118A  21F2   	fcall	_USART_WriteString
  6073                           
  6074                           ;usart.c: 76: RCSTAbits.CREN = 0;
  6075  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  6076  11B5  1303               	bcf	3,6	;RP1=0, select bank0
  6077  11B6  1218               	bcf	24,4	;volatile
  6078                           
  6079                           ;usart.c: 77: byte = RCREG;
  6080  11B7  081A               	movf	26,w	;volatile
  6081  11B8  00F3               	movwf	??_USART_ReceiveChar
  6082  11B9  0873               	movf	??_USART_ReceiveChar,w
  6083  11BA  00F4               	movwf	USART_ReceiveChar@byte
  6084                           
  6085                           ;usart.c: 78: RCSTAbits.CREN = 1;
  6086  11BB  1618               	bsf	24,4	;volatile
  6087  11BC                     i1l2497:	
  6088                           
  6089                           ;usart.c: 79: PIR1bits.RCIF = 0;
  6090  11BC  128C               	bcf	12,5	;volatile
  6091                           
  6092                           ;usart.c: 80: }
  6093                           ;usart.c: 82: return(byte);
  6094  11BD  0874               	movf	USART_ReceiveChar@byte,w
  6095  11BE  0008               	return
  6096  11BF                     __end_of_USART_ReceiveChar:	
  6097                           
  6098                           	psect	text35
  6099  11F2                     __ptext35:	
  6100 ;; *************** function _USART_WriteString *****************
  6101 ;; Defined at:
  6102 ;;		line 52 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  str             1    wreg     PTR const unsigned char 
  6105 ;;		 -> STR_1(40), 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  str             1    2[COMMON] PTR const unsigned char 
  6108 ;;		 -> STR_1(40), 
  6109 ;; Return value:  Size  Location     Type
  6110 ;;		None               void
  6111 ;; Registers used:
  6112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6118 ;;      Params:         0       0       0       0       0
  6119 ;;      Locals:         1       0       0       0       0
  6120 ;;      Temps:          1       0       0       0       0
  6121 ;;      Totals:         2       0       0       0       0
  6122 ;;Total ram usage:        2 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    1
  6125 ;; This function calls:
  6126 ;;		_USART_WriteChar
  6127 ;; This function is called by:
  6128 ;;		_USART_ReceiveChar
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _USART_WriteString
  6134  11F2                     _USART_WriteString:	
  6135                           
  6136                           ;incstack = 0
  6137                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6138                           ;USART_WriteString@str stored from wreg
  6139  11F2  00F2               	movwf	USART_WriteString@str
  6140  11F3                     i1l2163:	
  6141                           ;usart.c: 54: while(*str != '\0')
  6142                           
  6143  11F3  0872               	movf	USART_WriteString@str,w
  6144  11F4  0084               	movwf	4
  6145  11F5  160A  118A  2000  160A  118A  	fcall	stringdir
  6146  11FA  3800               	iorlw	0
  6147  11FB  1903               	btfsc	3,2
  6148  11FC  0008               	return
  6149                           
  6150                           ;usart.c: 55: {
  6151                           ;usart.c: 56: USART_WriteChar(*str);
  6152  11FD  0872               	movf	USART_WriteString@str,w
  6153  11FE  0084               	movwf	4
  6154  11FF  160A  118A  2000  160A  118A  	fcall	stringdir
  6155  1204  160A  118A  2168  160A  118A  	fcall	_USART_WriteChar
  6156                           
  6157                           ;usart.c: 57: str++;
  6158  1209  3001               	movlw	1
  6159  120A  00F1               	movwf	??_USART_WriteString
  6160  120B  0871               	movf	??_USART_WriteString,w
  6161  120C  07F2               	addwf	USART_WriteString@str,f
  6162  120D  29F3               	goto	i1l2163
  6163  120E                     __end_of_USART_WriteString:	
  6164                           
  6165                           	psect	text36
  6166  1168                     __ptext36:	
  6167 ;; *************** function _USART_WriteChar *****************
  6168 ;; Defined at:
  6169 ;;		line 44 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  byte            1    wreg     unsigned char 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  byte            1    0[COMMON] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;		None               void
  6176 ;; Registers used:
  6177 ;;		wreg
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6183 ;;      Params:         0       0       0       0       0
  6184 ;;      Locals:         1       0       0       0       0
  6185 ;;      Temps:          0       0       0       0       0
  6186 ;;      Totals:         1       0       0       0       0
  6187 ;;Total ram usage:        1 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_send
  6193 ;;		_USART_WriteString
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           
  6198                           ;psect for function _USART_WriteChar
  6199  1168                     _USART_WriteChar:	
  6200                           
  6201                           ;incstack = 0
  6202                           ; Regs used in _USART_WriteChar: [wreg]
  6203                           ;USART_WriteChar@byte stored from wreg
  6204  1168  00F0               	movwf	USART_WriteChar@byte
  6205  1169                     i1l230:	
  6206                           ;usart.c: 46: while(!PIR1bits.TXIF);
  6207                           
  6208  1169  1283               	bcf	3,5	;RP0=0, select bank0
  6209  116A  1303               	bcf	3,6	;RP1=0, select bank0
  6210  116B  1E0C               	btfss	12,4	;volatile
  6211  116C  2969               	goto	i1l230
  6212                           
  6213                           ;usart.c: 47: TXREG = byte;
  6214  116D  0870               	movf	USART_WriteChar@byte,w
  6215  116E  0099               	movwf	25	;volatile
  6216  116F  0008               	return
  6217  1170                     __end_of_USART_WriteChar:	
  6218  007E                     btemp	set	126	;btemp
  6219  007E                     wtemp	set	126
  6220  007E                     wtemp0	set	126
  6221  0080                     wtemp1	set	128
  6222  0082                     wtemp2	set	130
  6223  0084                     wtemp3	set	132
  6224  0086                     wtemp4	set	134
  6225  0088                     wtemp5	set	136
  6226  007F                     wtemp6	set	127
  6227  007E                     ttemp	set	126
  6228  007E                     ttemp0	set	126
  6229  0081                     ttemp1	set	129
  6230  0084                     ttemp2	set	132
  6231  0087                     ttemp3	set	135
  6232  007F                     ttemp4	set	127
  6233  007E                     ltemp	set	126
  6234  007E                     ltemp0	set	126
  6235  0082                     ltemp1	set	130
  6236  0086                     ltemp2	set	134
  6237  0080                     ltemp3	set	128
  6238                           
  6239                           	psect	text11_split_1
  6240  0811                     L10:	
  6241  0811  1303               	bcf	3,6	;RP1=0, select bank0
  6242  0812  0841               	movf	?___wmul+1,w
  6243  0813  1683               	bsf	3,5	;RP0=1, select bank1
  6244  0814  1303               	bcf	3,6	;RP1=0, select bank1
  6245  0815  01E6               	clrf	(_setpoint+1)^(0+128)
  6246  0816  07E6               	addwf	(_setpoint+1)^(0+128),f
  6247  0817  1283               	bcf	3,5	;RP0=0, select bank0
  6248  0818  1303               	bcf	3,6	;RP1=0, select bank0
  6249  0819  0840               	movf	?___wmul,w
  6250  081A  1683               	bsf	3,5	;RP0=1, select bank1
  6251  081B  1303               	bcf	3,6	;RP1=0, select bank1
  6252  081C  01E5               	clrf	_setpoint^(0+128)
  6253  081D  07E5               	addwf	_setpoint^(0+128),f
  6254  081E                     i1l3683:	
  6255                           
  6256                           ;main.c: 194: }
  6257                           ;main.c: 195: if(receivedBuffer[3] == 'I'){
  6258  081E  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6259  081F  3A49               	xorlw	73
  6260  0820  1D03               	skipz
  6261  0821  2827               	goto	i1l3687
  6262                           
  6263                           ;main.c: 196: inicia();
  6264  0822  160A  118A  2180  120A  158A  	fcall	i1_inicia
  6265  0827                     i1l3687:	
  6266                           
  6267                           ;main.c: 197: }
  6268                           ;main.c: 198: if(receivedBuffer[3] == 'S'){
  6269  0827  1683               	bsf	3,5	;RP0=1, select bank1
  6270  0828  1303               	bcf	3,6	;RP1=0, select bank1
  6271  0829  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6272  082A  3A53               	xorlw	83
  6273  082B  1D03               	skipz
  6274  082C  2832               	goto	i1l3691
  6275                           
  6276                           ;main.c: 199: set();
  6277  082D  160A  118A  23AC  120A  158A  	fcall	i1_set
  6278  0832                     i1l3691:	
  6279                           
  6280                           ;main.c: 200: }
  6281                           ;main.c: 201: if(receivedBuffer[3] == 'R'){
  6282  0832  1683               	bsf	3,5	;RP0=1, select bank1
  6283  0833  1303               	bcf	3,6	;RP1=0, select bank1
  6284  0834  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6285  0835  3A52               	xorlw	82
  6286  0836  1D03               	skipz
  6287  0837  283D               	goto	i1l3695
  6288                           
  6289                           ;main.c: 202: res();
  6290  0838  160A  118A  22F6  120A  158A  	fcall	i1_res
  6291  083D                     i1l3695:	
  6292                           
  6293                           ;main.c: 203: }
  6294                           ;main.c: 204: if(receivedBuffer[3] == 'F'){
  6295  083D  1683               	bsf	3,5	;RP0=1, select bank1
  6296  083E  1303               	bcf	3,6	;RP1=0, select bank1
  6297  083F  0854               	movf	(_receivedBuffer^(0+128)+3),w
  6298  0840  3A46               	xorlw	70
  6299  0841  1D03               	skipz
  6300  0842  284C               	goto	i1l3699
  6301                           
  6302                           ;main.c: 205: pilotoAtivo = pilotoAtivo & 0b11111101;
  6303  0843  0864               	movf	_pilotoAtivo^(0+128),w
  6304  0844  39FD               	andlw	253
  6305  0845  1283               	bcf	3,5	;RP0=0, select bank0
  6306  0846  1303               	bcf	3,6	;RP1=0, select bank0
  6307  0847  00E2               	movwf	??_ISR
  6308  0848  0862               	movf	??_ISR,w
  6309  0849  1683               	bsf	3,5	;RP0=1, select bank1
  6310  084A  1303               	bcf	3,6	;RP1=0, select bank1
  6311  084B  00E4               	movwf	_pilotoAtivo^(0+128)
  6312  084C                     i1l3699:	
  6313                           
  6314                           ;main.c: 206: }
  6315                           ;main.c: 208: }
  6316                           ;main.c: 209: }
  6317                           ;main.c: 210: }
  6318                           ;main.c: 211: }
  6319                           ;main.c: 212: PIR1bits.RCIF = 0;
  6320  084C  1283               	bcf	3,5	;RP0=0, select bank0
  6321  084D  1303               	bcf	3,6	;RP1=0, select bank0
  6322  084E  128C               	bcf	12,5	;volatile
  6323  084F                     i1l3701:	
  6324                           
  6325                           ;main.c: 213: }
  6326                           ;main.c: 227: if (INTCONbits.T0IF) {
  6327  084F  120A  118A  1D0B   	btfss	11,2	;volatile
  6328  0852  2FDC               	goto	i1l3879
  6329                           
  6330                           ;main.c: 229: TIMER0_Set(238);
  6331  0853  30EE               	movlw	238
  6332  0854  160A  118A  2162  120A  158A  	fcall	i1_TIMER0_Set
  6333                           
  6334                           ;main.c: 232: if (contagens_tm0 < 499) {
  6335  0859  3001               	movlw	1
  6336  085A  1683               	bsf	3,5	;RP0=1, select bank1
  6337  085B  1303               	bcf	3,6	;RP1=0, select bank1
  6338  085C  0257               	subwf	(_contagens_tm0+1)^(0+128),w
  6339  085D  30F3               	movlw	243
  6340  085E  1903               	skipnz
  6341  085F  0256               	subwf	_contagens_tm0^(0+128),w
  6342  0860  1803               	skipnc
  6343  0861  286E               	goto	i1l3711
  6344                           
  6345                           ;main.c: 234: contagens_tm0++;
  6346  0862  3001               	movlw	1
  6347  0863  07D6               	addwf	_contagens_tm0^(0+128),f
  6348  0864  1803               	skipnc
  6349  0865  0AD7               	incf	(_contagens_tm0+1)^(0+128),f
  6350  0866  3000               	movlw	0
  6351  0867  07D7               	addwf	(_contagens_tm0+1)^(0+128),f
  6352                           
  6353                           ;main.c: 237: PORTBbits.RB6 = 1;
  6354  0868  1283               	bcf	3,5	;RP0=0, select bank0
  6355  0869  1303               	bcf	3,6	;RP1=0, select bank0
  6356  086A  1706               	bsf	6,6	;volatile
  6357                           
  6358                           ;main.c: 238: } else {
  6359  086B  120A  118A  2FDB   	goto	i1l3877
  6360  086E                     i1l3711:	
  6361                           
  6362                           ;main.c: 240: contagens_tm0 = 0;
  6363  086E  1683               	bsf	3,5	;RP0=1, select bank1
  6364  086F  1303               	bcf	3,6	;RP1=0, select bank1
  6365  0870  01D6               	clrf	_contagens_tm0^(0+128)
  6366  0871  01D7               	clrf	(_contagens_tm0+1)^(0+128)
  6367                           
  6368                           ;main.c: 243: pulsos = (TMR1H << 8) + TMR1L;
  6369  0872  1283               	bcf	3,5	;RP0=0, select bank0
  6370  0873  1303               	bcf	3,6	;RP1=0, select bank0
  6371  0874  080F               	movf	15,w	;volatile
  6372  0875  1683               	bsf	3,5	;RP0=1, select bank1
  6373  0876  1303               	bcf	3,6	;RP1=0, select bank1
  6374  0877  01DD               	clrf	(_pulsos+1)^(0+128)
  6375  0878  07DD               	addwf	(_pulsos+1)^(0+128),f
  6376  0879  1283               	bcf	3,5	;RP0=0, select bank0
  6377  087A  1303               	bcf	3,6	;RP1=0, select bank0
  6378  087B  080E               	movf	14,w	;volatile
  6379  087C  1683               	bsf	3,5	;RP0=1, select bank1
  6380  087D  1303               	bcf	3,6	;RP1=0, select bank1
  6381  087E  01DC               	clrf	_pulsos^(0+128)
  6382  087F  07DC               	addwf	_pulsos^(0+128),f
  6383                           
  6384                           ;main.c: 244: rpm = ((pulsos / 7) * 120);
  6385  0880  3007               	movlw	7
  6386  0881  00F0               	movwf	___lwdiv@divisor
  6387  0882  3000               	movlw	0
  6388  0883  00F1               	movwf	___lwdiv@divisor+1
  6389  0884  085D               	movf	(_pulsos+1)^(0+128),w
  6390  0885  01F3               	clrf	___lwdiv@dividend+1
  6391  0886  07F3               	addwf	___lwdiv@dividend+1,f
  6392  0887  085C               	movf	_pulsos^(0+128),w
  6393  0888  01F2               	clrf	___lwdiv@dividend
  6394  0889  07F2               	addwf	___lwdiv@dividend,f
  6395  088A  160A  118A  2330  120A  158A  	fcall	___lwdiv
  6396  088F  0871               	movf	?___lwdiv+1,w
  6397  0890  1283               	bcf	3,5	;RP0=0, select bank0
  6398  0891  1303               	bcf	3,6	;RP1=0, select bank0
  6399  0892  01C1               	clrf	___wmul@multiplier+1
  6400  0893  07C1               	addwf	___wmul@multiplier+1,f
  6401  0894  0870               	movf	?___lwdiv,w
  6402  0895  01C0               	clrf	___wmul@multiplier
  6403  0896  07C0               	addwf	___wmul@multiplier,f
  6404  0897  3078               	movlw	120
  6405  0898  00C2               	movwf	___wmul@multiplicand
  6406  0899  3000               	movlw	0
  6407  089A  00C3               	movwf	___wmul@multiplicand+1
  6408  089B  160A  118A  22D1   	fcall	___wmul
  6409  089E  1283               	bcf	3,5	;RP0=0, select bank0
  6410  089F  120A  158A  29D8   	ljmp	L12
  6411                           
  6412                           	psect	text11_split_2
  6413  09D8                     L12:	
  6414  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  6415  09D9  0841               	movf	?___wmul+1,w
  6416  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  6417  09DB  1303               	bcf	3,6	;RP1=0, select bank1
  6418  09DC  01E3               	clrf	(_rpm+1)^(0+128)
  6419  09DD  07E3               	addwf	(_rpm+1)^(0+128),f
  6420  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  6421  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  6422  09E0  0840               	movf	?___wmul,w
  6423  09E1  1683               	bsf	3,5	;RP0=1, select bank1
  6424  09E2  1303               	bcf	3,6	;RP1=0, select bank1
  6425  09E3  01E2               	clrf	_rpm^(0+128)
  6426  09E4  07E2               	addwf	_rpm^(0+128),f
  6427                           
  6428                           ;main.c: 246: TMR1L = 0x00;
  6429  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  6430  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  6431  09E7  018E               	clrf	14	;volatile
  6432                           
  6433                           ;main.c: 247: TMR1H = 0x00;
  6434  09E8  018F               	clrf	15	;volatile
  6435                           
  6436                           ;main.c: 249: int rpmAux = rpm;
  6437  09E9  1683               	bsf	3,5	;RP0=1, select bank1
  6438  09EA  1303               	bcf	3,6	;RP1=0, select bank1
  6439  09EB  0863               	movf	(_rpm+1)^(0+128),w
  6440  09EC  01A1               	clrf	(ISR@rpmAux+1)^(0+128)
  6441  09ED  07A1               	addwf	(ISR@rpmAux+1)^(0+128),f
  6442  09EE  0862               	movf	_rpm^(0+128),w
  6443  09EF  01A0               	clrf	ISR@rpmAux^(0+128)
  6444  09F0  07A0               	addwf	ISR@rpmAux^(0+128),f
  6445                           
  6446                           ;main.c: 252: erro_anterior = erro_atual;
  6447  09F1  085B               	movf	(_erro_atual+1)^(0+128),w
  6448  09F2  01D9               	clrf	(_erro_anterior+1)^(0+128)
  6449  09F3  07D9               	addwf	(_erro_anterior+1)^(0+128),f
  6450  09F4  085A               	movf	_erro_atual^(0+128),w
  6451  09F5  01D8               	clrf	_erro_anterior^(0+128)
  6452  09F6  07D8               	addwf	_erro_anterior^(0+128),f
  6453                           
  6454                           ;main.c: 253: erro_atual = minimo(abs(setpoint - rpm), 2000);
  6455  09F7  3000               	movlw	0
  6456  09F8  1283               	bcf	3,5	;RP0=0, select bank0
  6457  09F9  1303               	bcf	3,6	;RP1=0, select bank0
  6458  09FA  00A9               	movwf	minimo@b
  6459  09FB  30FA               	movlw	250
  6460  09FC  00AA               	movwf	minimo@b+1
  6461  09FD  3044               	movlw	68
  6462  09FE  00AB               	movwf	minimo@b+2
  6463  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  6464  0A00  1303               	bcf	3,6	;RP1=0, select bank1
  6465  0A01  0962               	comf	_rpm^(0+128),w
  6466  0A02  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0A03  1303               	bcf	3,6	;RP1=0, select bank0
  6468  0A04  00E2               	movwf	??_ISR
  6469  0A05  1683               	bsf	3,5	;RP0=1, select bank1
  6470  0A06  1303               	bcf	3,6	;RP1=0, select bank1
  6471  0A07  0963               	comf	(_rpm+1)^(0+128),w
  6472  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  6473  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  6474  0A0A  00E3               	movwf	??_ISR+1
  6475  0A0B  0AE2               	incf	??_ISR,f
  6476  0A0C  1903               	skipnz
  6477  0A0D  0AE3               	incf	??_ISR+1,f
  6478  0A0E  1683               	bsf	3,5	;RP0=1, select bank1
  6479  0A0F  1303               	bcf	3,6	;RP1=0, select bank1
  6480  0A10  0865               	movf	_setpoint^(0+128),w
  6481  0A11  1283               	bcf	3,5	;RP0=0, select bank0
  6482  0A12  1303               	bcf	3,6	;RP1=0, select bank0
  6483  0A13  0762               	addwf	??_ISR,w
  6484  0A14  00F0               	movwf	abs@a
  6485  0A15  1683               	bsf	3,5	;RP0=1, select bank1
  6486  0A16  1303               	bcf	3,6	;RP1=0, select bank1
  6487  0A17  0866               	movf	(_setpoint+1)^(0+128),w
  6488  0A18  1803               	skipnc
  6489  0A19  0A66               	incf	(_setpoint+1)^(0+128),w
  6490  0A1A  1283               	bcf	3,5	;RP0=0, select bank0
  6491  0A1B  1303               	bcf	3,6	;RP1=0, select bank0
  6492  0A1C  0763               	addwf	??_ISR+1,w
  6493  0A1D  00F1               	movwf	abs@a+1
  6494  0A1E  120A  158A  2003  120A  158A  	fcall	_abs
  6495  0A23  0871               	movf	?_abs+1,w
  6496  0A24  01F9               	clrf	___awtoft@c+1
  6497  0A25  07F9               	addwf	___awtoft@c+1,f
  6498  0A26  0870               	movf	?_abs,w
  6499  0A27  01F8               	clrf	___awtoft@c
  6500  0A28  07F8               	addwf	___awtoft@c,f
  6501  0A29  160A  118A  224A  120A  158A  	fcall	___awtoft
  6502  0A2E  0878               	movf	?___awtoft,w
  6503  0A2F  1283               	bcf	3,5	;RP0=0, select bank0
  6504  0A30  1303               	bcf	3,6	;RP1=0, select bank0
  6505  0A31  00A6               	movwf	minimo@a
  6506  0A32  0879               	movf	?___awtoft+1,w
  6507  0A33  00A7               	movwf	minimo@a+1
  6508  0A34  087A               	movf	?___awtoft+2,w
  6509  0A35  00A8               	movwf	minimo@a+2
  6510  0A36  160A  118A  222C  120A  158A  	fcall	_minimo
  6511  0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  6512  0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  6513  0A3D  0826               	movf	?_minimo,w
  6514  0A3E  00B2               	movwf	___fttol@f1
  6515  0A3F  0827               	movf	?_minimo+1,w
  6516  0A40  00B3               	movwf	___fttol@f1+1
  6517  0A41  0828               	movf	?_minimo+2,w
  6518  0A42  00B4               	movwf	___fttol@f1+2
  6519  0A43  160A  118A  26E3  120A  158A  	fcall	___fttol
  6520  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  6521  0A49  1303               	bcf	3,6	;RP1=0, select bank0
  6522  0A4A  0833               	movf	?___fttol+1,w
  6523  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  6524  0A4C  1303               	bcf	3,6	;RP1=0, select bank1
  6525  0A4D  01DB               	clrf	(_erro_atual+1)^(0+128)
  6526  0A4E  07DB               	addwf	(_erro_atual+1)^(0+128),f
  6527  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  6528  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  6529  0A51  0832               	movf	?___fttol,w
  6530  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  6531  0A53  1303               	bcf	3,6	;RP1=0, select bank1
  6532  0A54  01DA               	clrf	_erro_atual^(0+128)
  6533  0A55  07DA               	addwf	_erro_atual^(0+128),f
  6534                           
  6535                           ;main.c: 254: int delta = maximo(minimo(abs(erro_atual - erro_anterior), 1000), 1);
  6536  0A56  3000               	movlw	0
  6537  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  6538  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  6539  0A59  00AF               	movwf	maximo@b
  6540  0A5A  3080               	movlw	128
  6541  0A5B  00B0               	movwf	maximo@b+1
  6542  0A5C  303F               	movlw	63
  6543  0A5D  00B1               	movwf	maximo@b+2
  6544  0A5E  3000               	movlw	0
  6545  0A5F  00A9               	movwf	minimo@b
  6546  0A60  307A               	movlw	122
  6547  0A61  00AA               	movwf	minimo@b+1
  6548  0A62  3044               	movlw	68
  6549  0A63  00AB               	movwf	minimo@b+2
  6550  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  6551  0A65  1303               	bcf	3,6	;RP1=0, select bank1
  6552  0A66  0958               	comf	_erro_anterior^(0+128),w
  6553  0A67  1283               	bcf	3,5	;RP0=0, select bank0
  6554  0A68  1303               	bcf	3,6	;RP1=0, select bank0
  6555  0A69  00E2               	movwf	??_ISR
  6556  0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  6557  0A6B  1303               	bcf	3,6	;RP1=0, select bank1
  6558  0A6C  0959               	comf	(_erro_anterior+1)^(0+128),w
  6559  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  6560  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  6561  0A6F  00E3               	movwf	??_ISR+1
  6562  0A70  0AE2               	incf	??_ISR,f
  6563  0A71  1903               	skipnz
  6564  0A72  0AE3               	incf	??_ISR+1,f
  6565  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  6566  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  6567  0A75  085A               	movf	_erro_atual^(0+128),w
  6568  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  6569  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  6570  0A78  0762               	addwf	??_ISR,w
  6571  0A79  00F0               	movwf	abs@a
  6572  0A7A  1683               	bsf	3,5	;RP0=1, select bank1
  6573  0A7B  1303               	bcf	3,6	;RP1=0, select bank1
  6574  0A7C  085B               	movf	(_erro_atual+1)^(0+128),w
  6575  0A7D  1803               	skipnc
  6576  0A7E  0A5B               	incf	(_erro_atual+1)^(0+128),w
  6577  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  6578  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  6579  0A81  0763               	addwf	??_ISR+1,w
  6580  0A82  00F1               	movwf	abs@a+1
  6581  0A83  120A  158A  2003   	fcall	_abs
  6582  0A86  0871               	movf	?_abs+1,w
  6583  0A87  160A  118A  2E57   	ljmp	L13
  6584                           
  6585                           	psect	text11_split_3
  6586  1657                     L13:	
  6587  1657  01F9               	clrf	___awtoft@c+1
  6588  1658  07F9               	addwf	___awtoft@c+1,f
  6589  1659  0870               	movf	?_abs,w
  6590  165A  01F8               	clrf	___awtoft@c
  6591  165B  07F8               	addwf	___awtoft@c,f
  6592  165C  160A  118A  224A  160A  118A  	fcall	___awtoft
  6593  1661  0878               	movf	?___awtoft,w
  6594  1662  1283               	bcf	3,5	;RP0=0, select bank0
  6595  1663  1303               	bcf	3,6	;RP1=0, select bank0
  6596  1664  00A6               	movwf	minimo@a
  6597  1665  0879               	movf	?___awtoft+1,w
  6598  1666  00A7               	movwf	minimo@a+1
  6599  1667  087A               	movf	?___awtoft+2,w
  6600  1668  00A8               	movwf	minimo@a+2
  6601  1669  160A  118A  222C  160A  118A  	fcall	_minimo
  6602  166E  1283               	bcf	3,5	;RP0=0, select bank0
  6603  166F  1303               	bcf	3,6	;RP1=0, select bank0
  6604  1670  0826               	movf	?_minimo,w
  6605  1671  00AC               	movwf	maximo@a
  6606  1672  0827               	movf	?_minimo+1,w
  6607  1673  00AD               	movwf	maximo@a+1
  6608  1674  0828               	movf	?_minimo+2,w
  6609  1675  00AE               	movwf	maximo@a+2
  6610  1676  160A  118A  220E  160A  118A  	fcall	_maximo
  6611  167B  1283               	bcf	3,5	;RP0=0, select bank0
  6612  167C  1303               	bcf	3,6	;RP1=0, select bank0
  6613  167D  082C               	movf	?_maximo,w
  6614  167E  00B2               	movwf	___fttol@f1
  6615  167F  082D               	movf	?_maximo+1,w
  6616  1680  00B3               	movwf	___fttol@f1+1
  6617  1681  082E               	movf	?_maximo+2,w
  6618  1682  00B4               	movwf	___fttol@f1+2
  6619  1683  160A  118A  26E3  160A  118A  	fcall	___fttol
  6620  1688  1283               	bcf	3,5	;RP0=0, select bank0
  6621  1689  1303               	bcf	3,6	;RP1=0, select bank0
  6622  168A  0833               	movf	?___fttol+1,w
  6623  168B  1683               	bsf	3,5	;RP0=1, select bank1
  6624  168C  1303               	bcf	3,6	;RP1=0, select bank1
  6625  168D  01B1               	clrf	(ISR@delta+1)^(0+128)
  6626  168E  07B1               	addwf	(ISR@delta+1)^(0+128),f
  6627  168F  1283               	bcf	3,5	;RP0=0, select bank0
  6628  1690  1303               	bcf	3,6	;RP1=0, select bank0
  6629  1691  0832               	movf	?___fttol,w
  6630  1692  1683               	bsf	3,5	;RP0=1, select bank1
  6631  1693  1303               	bcf	3,6	;RP1=0, select bank1
  6632  1694  01B0               	clrf	ISR@delta^(0+128)
  6633  1695  07B0               	addwf	ISR@delta^(0+128),f
  6634                           
  6635                           ;main.c: 255: float x = 0;
  6636  1696  3000               	movlw	0
  6637  1697  00C5               	movwf	ISR@x^(0+128)
  6638  1698  3000               	movlw	0
  6639  1699  00C6               	movwf	(ISR@x+1)^(0+128)
  6640  169A  3000               	movlw	0
  6641  169B  00C7               	movwf	(ISR@x+2)^(0+128)
  6642                           
  6643                           ;main.c: 256: float rule = 0;
  6644  169C  3000               	movlw	0
  6645  169D  00C0               	movwf	ISR@rule^(0+128)
  6646  169E  3000               	movlw	0
  6647  169F  00C1               	movwf	(ISR@rule+1)^(0+128)
  6648  16A0  3000               	movlw	0
  6649  16A1  00C2               	movwf	(ISR@rule+2)^(0+128)
  6650                           
  6651                           ;main.c: 259: if (erro_atual <= 100) {
  6652  16A2  085B               	movf	(_erro_atual+1)^(0+128),w
  6653  16A3  3A80               	xorlw	128
  6654  16A4  00FF               	movwf	127
  6655  16A5  3080               	movlw	128
  6656  16A6  027F               	subwf	127,w
  6657  16A7  1D03               	skipz
  6658  16A8  2EAB               	goto	u549_25
  6659  16A9  3065               	movlw	101
  6660  16AA  025A               	subwf	_erro_atual^(0+128),w
  6661  16AB                     u549_25:	
  6662  16AB  120A  158A  1803   	skipnc
  6663  16AE  2AE8               	goto	i1l3755
  6664                           
  6665                           ;main.c: 262: rule = trapmf(erro_atual, -1, 0, 1, 100);
  6666  16AF  1683               	bsf	3,5	;RP0=1, select bank1
  6667  16B0  1303               	bcf	3,6	;RP1=0, select bank1
  6668  16B1  085B               	movf	(_erro_atual+1)^(0+128),w
  6669  16B2  01F9               	clrf	___awtoft@c+1
  6670  16B3  07F9               	addwf	___awtoft@c+1,f
  6671  16B4  085A               	movf	_erro_atual^(0+128),w
  6672  16B5  01F8               	clrf	___awtoft@c
  6673  16B6  07F8               	addwf	___awtoft@c,f
  6674  16B7  160A  118A  224A  160A  118A  	fcall	___awtoft
  6675  16BC  0878               	movf	?___awtoft,w
  6676  16BD  1283               	bcf	3,5	;RP0=0, select bank0
  6677  16BE  1303               	bcf	3,6	;RP1=0, select bank0
  6678  16BF  00C0               	movwf	trapmf@x
  6679  16C0  0879               	movf	?___awtoft+1,w
  6680  16C1  00C1               	movwf	trapmf@x+1
  6681  16C2  087A               	movf	?___awtoft+2,w
  6682  16C3  00C2               	movwf	trapmf@x+2
  6683  16C4  3000               	movlw	0
  6684  16C5  00C3               	movwf	trapmf@a
  6685  16C6  3080               	movlw	128
  6686  16C7  00C4               	movwf	trapmf@a+1
  6687  16C8  30BF               	movlw	191
  6688  16C9  00C5               	movwf	trapmf@a+2
  6689  16CA  3000               	movlw	0
  6690  16CB  00C6               	movwf	trapmf@b
  6691  16CC  3000               	movlw	0
  6692  16CD  00C7               	movwf	trapmf@b+1
  6693  16CE  3000               	movlw	0
  6694  16CF  00C8               	movwf	trapmf@b+2
  6695  16D0  3000               	movlw	0
  6696  16D1  00C9               	movwf	trapmf@c
  6697  16D2  3080               	movlw	128
  6698  16D3  00CA               	movwf	trapmf@c+1
  6699  16D4  303F               	movlw	63
  6700  16D5  00CB               	movwf	trapmf@c+2
  6701  16D6  3000               	movlw	0
  6702  16D7  00CC               	movwf	trapmf@d
  6703  16D8  30C8               	movlw	200
  6704  16D9  00CD               	movwf	trapmf@d+1
  6705  16DA  3042               	movlw	66
  6706  16DB  00CE               	movwf	trapmf@d+2
  6707  16DC  120A  158A  26AA   	fcall	_trapmf
  6708  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  6709  16E0  120A  158A  28A2   	ljmp	L14
  6710                           
  6711                           	psect	text11_split_4
  6712  08A2                     L14:	
  6713  08A2  1303               	bcf	3,6	;RP1=0, select bank0
  6714  08A3  0840               	movf	?_trapmf,w
  6715  08A4  1683               	bsf	3,5	;RP0=1, select bank1
  6716  08A5  1303               	bcf	3,6	;RP1=0, select bank1
  6717  08A6  00C0               	movwf	ISR@rule^(0+128)
  6718  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  6719  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  6720  08A9  0841               	movf	?_trapmf+1,w
  6721  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  6722  08AB  1303               	bcf	3,6	;RP1=0, select bank1
  6723  08AC  00C1               	movwf	(ISR@rule+1)^(0+128)
  6724  08AD  1283               	bcf	3,5	;RP0=0, select bank0
  6725  08AE  1303               	bcf	3,6	;RP1=0, select bank0
  6726  08AF  0842               	movf	?_trapmf+2,w
  6727  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  6728  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  6729  08B2  00C2               	movwf	(ISR@rule+2)^(0+128)
  6730                           
  6731                           ;main.c: 264: x = 0;
  6732  08B3  3000               	movlw	0
  6733  08B4  00C5               	movwf	ISR@x^(0+128)
  6734  08B5  3000               	movlw	0
  6735  08B6  00C6               	movwf	(ISR@x+1)^(0+128)
  6736  08B7  3000               	movlw	0
  6737  08B8  00C7               	movwf	(ISR@x+2)^(0+128)
  6738                           
  6739                           ;main.c: 265: for (int a = 0; a <= 15; a++) {
  6740  08B9  01B5               	clrf	ISR@a^(0+128)
  6741  08BA  01B6               	clrf	(ISR@a+1)^(0+128)
  6742  08BB  0836               	movf	(ISR@a+1)^(0+128),w
  6743  08BC  3A80               	xorlw	128
  6744  08BD  00FF               	movwf	127
  6745  08BE  3080               	movlw	128
  6746  08BF  027F               	subwf	127,w
  6747  08C0  1D03               	skipz
  6748  08C1  28C4               	goto	u550_25
  6749  08C2  3010               	movlw	16
  6750  08C3  0235               	subwf	ISR@a^(0+128),w
  6751  08C4                     u550_25:	
  6752  08C4  120A  158A  1803   	btfsc	3,0
  6753  08C7  2AE8               	goto	i1l3755
  6754  08C8                     i1l3745:	
  6755                           
  6756                           ;main.c: 266: rBaixo[a] = trapmf(x, -1, 0, 0, 5);
  6757  08C8  3003               	movlw	3
  6758  08C9  1283               	bcf	3,5	;RP0=0, select bank0
  6759  08CA  1303               	bcf	3,6	;RP1=0, select bank0
  6760  08CB  00E2               	movwf	??_ISR
  6761  08CC  0862               	movf	??_ISR,w
  6762  08CD  00F0               	movwf	___bmul@multiplicand
  6763  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  6764  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  6765  08D0  0835               	movf	ISR@a^(0+128),w
  6766  08D1  120A  118A  27EC  120A  158A  	fcall	___bmul
  6767  08D6  3E90               	addlw	_rBaixo& (0+255)
  6768  08D7  0084               	movwf	4
  6769  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  6770  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  6771  08DA  0845               	movf	ISR@x^(0+128),w
  6772  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  6773  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  6774  08DD  00C0               	movwf	trapmf@x
  6775  08DE  1683               	bsf	3,5	;RP0=1, select bank1
  6776  08DF  1303               	bcf	3,6	;RP1=0, select bank1
  6777  08E0  0846               	movf	(ISR@x+1)^(0+128),w
  6778  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  6779  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  6780  08E3  00C1               	movwf	trapmf@x+1
  6781  08E4  1683               	bsf	3,5	;RP0=1, select bank1
  6782  08E5  1303               	bcf	3,6	;RP1=0, select bank1
  6783  08E6  0847               	movf	(ISR@x+2)^(0+128),w
  6784  08E7  1283               	bcf	3,5	;RP0=0, select bank0
  6785  08E8  1303               	bcf	3,6	;RP1=0, select bank0
  6786  08E9  00C2               	movwf	trapmf@x+2
  6787  08EA  3000               	movlw	0
  6788  08EB  00C3               	movwf	trapmf@a
  6789  08EC  3080               	movlw	128
  6790  08ED  00C4               	movwf	trapmf@a+1
  6791  08EE  30BF               	movlw	191
  6792  08EF  00C5               	movwf	trapmf@a+2
  6793  08F0  3000               	movlw	0
  6794  08F1  00C6               	movwf	trapmf@b
  6795  08F2  3000               	movlw	0
  6796  08F3  00C7               	movwf	trapmf@b+1
  6797  08F4  3000               	movlw	0
  6798  08F5  00C8               	movwf	trapmf@b+2
  6799  08F6  3000               	movlw	0
  6800  08F7  00C9               	movwf	trapmf@c
  6801  08F8  3000               	movlw	0
  6802  08F9  00CA               	movwf	trapmf@c+1
  6803  08FA  3000               	movlw	0
  6804  08FB  00CB               	movwf	trapmf@c+2
  6805  08FC  3000               	movlw	0
  6806  08FD  00CC               	movwf	trapmf@d
  6807  08FE  30A0               	movlw	160
  6808  08FF  00CD               	movwf	trapmf@d+1
  6809  0900  3040               	movlw	64
  6810  0901  00CE               	movwf	trapmf@d+2
  6811  0902  120A  158A  26AA  120A  158A  	fcall	_trapmf
  6812  0907  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0908  1303               	bcf	3,6	;RP1=0, select bank0
  6814  0909  0840               	movf	?_trapmf,w
  6815  090A  1783               	bsf	3,7	;select IRP bank3
  6816  090B  0080               	movwf	0
  6817  090C  0A84               	incf	4,f
  6818  090D  0841               	movf	?_trapmf+1,w
  6819  090E  0080               	movwf	0
  6820  090F  0A84               	incf	4,f
  6821  0910  0842               	movf	?_trapmf+2,w
  6822  0911  0080               	movwf	0
  6823                           
  6824                           ;main.c: 267: if (rBaixo[a] >= rule) {
  6825  0912  3003               	movlw	3
  6826  0913  00E2               	movwf	??_ISR
  6827  0914  0862               	movf	??_ISR,w
  6828  0915  00F0               	movwf	___bmul@multiplicand
  6829  0916  1683               	bsf	3,5	;RP0=1, select bank1
  6830  0917  1303               	bcf	3,6	;RP1=0, select bank1
  6831  0918  0835               	movf	ISR@a^(0+128),w
  6832  0919  120A  118A  27EC  120A  158A  	fcall	___bmul
  6833  091E  3E90               	addlw	_rBaixo& (0+255)
  6834  091F  0084               	movwf	4
  6835  0920  1783               	bsf	3,7	;select IRP bank3
  6836  0921  0800               	movf	0,w
  6837  0922  00F4               	movwf	___ftge@ff1
  6838  0923  0A84               	incf	4,f
  6839  0924  0800               	movf	0,w
  6840  0925  00F5               	movwf	___ftge@ff1+1
  6841  0926  0A84               	incf	4,f
  6842  0927  0800               	movf	0,w
  6843  0928  00F6               	movwf	___ftge@ff1+2
  6844  0929  1683               	bsf	3,5	;RP0=1, select bank1
  6845  092A  1303               	bcf	3,6	;RP1=0, select bank1
  6846  092B  0840               	movf	ISR@rule^(0+128),w
  6847  092C  00F7               	movwf	___ftge@ff2
  6848  092D  0841               	movf	(ISR@rule+1)^(0+128),w
  6849  092E  00F8               	movwf	___ftge@ff2+1
  6850  092F  0842               	movf	(ISR@rule+2)^(0+128),w
  6851  0930  00F9               	movwf	___ftge@ff2+2
  6852  0931  160A  118A  2481  120A  158A  	fcall	___ftge
  6853  0936  1C03               	btfss	3,0
  6854  0937  2938               	ljmp	L17
  6855  0938                     L17:	
  6856  0938  120A  158A  2A8A   	ljmp	L15
  6857                           
  6858                           	psect	text11_split_5
  6859  0A8A                     L15:	
  6860  0A8A  2AA6               	goto	i1l3749
  6861                           
  6862                           ;main.c: 268: rBaixo[a] = rule;
  6863  0A8B  3003               	movlw	3
  6864  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  6865  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  6866  0A8E  00E2               	movwf	??_ISR
  6867  0A8F  0862               	movf	??_ISR,w
  6868  0A90  00F0               	movwf	___bmul@multiplicand
  6869  0A91  1683               	bsf	3,5	;RP0=1, select bank1
  6870  0A92  1303               	bcf	3,6	;RP1=0, select bank1
  6871  0A93  0835               	movf	ISR@a^(0+128),w
  6872  0A94  120A  118A  27EC  120A  158A  	fcall	___bmul
  6873  0A99  3E90               	addlw	_rBaixo& (0+255)
  6874  0A9A  0084               	movwf	4
  6875  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  6876  0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  6877  0A9D  0840               	movf	ISR@rule^(0+128),w
  6878  0A9E  1783               	bsf	3,7	;select IRP bank3
  6879  0A9F  0080               	movwf	0
  6880  0AA0  0A84               	incf	4,f
  6881  0AA1  0841               	movf	(ISR@rule+1)^(0+128),w
  6882  0AA2  0080               	movwf	0
  6883  0AA3  0A84               	incf	4,f
  6884  0AA4  0842               	movf	(ISR@rule+2)^(0+128),w
  6885  0AA5  0080               	movwf	0
  6886  0AA6                     i1l3749:	
  6887                           
  6888                           ;main.c: 269: }
  6889                           ;main.c: 271: x += 1;
  6890  0AA6  3000               	movlw	0
  6891  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  6892  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  6893  0AA9  00A3               	movwf	___ftadd@f1
  6894  0AAA  3080               	movlw	128
  6895  0AAB  00A4               	movwf	___ftadd@f1+1
  6896  0AAC  303F               	movlw	63
  6897  0AAD  00A5               	movwf	___ftadd@f1+2
  6898  0AAE  1683               	bsf	3,5	;RP0=1, select bank1
  6899  0AAF  1303               	bcf	3,6	;RP1=0, select bank1
  6900  0AB0  0845               	movf	ISR@x^(0+128),w
  6901  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  6902  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  6903  0AB3  00A6               	movwf	___ftadd@f2
  6904  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  6905  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  6906  0AB6  0846               	movf	(ISR@x+1)^(0+128),w
  6907  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0AB9  00A7               	movwf	___ftadd@f2+1
  6910  0ABA  1683               	bsf	3,5	;RP0=1, select bank1
  6911  0ABB  1303               	bcf	3,6	;RP1=0, select bank1
  6912  0ABC  0847               	movf	(ISR@x+2)^(0+128),w
  6913  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  6914  0ABE  1303               	bcf	3,6	;RP1=0, select bank0
  6915  0ABF  00A8               	movwf	___ftadd@f2+2
  6916  0AC0  120A  158A  25A1  120A  158A  	fcall	___ftadd
  6917  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  6918  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  6919  0AC7  0823               	movf	?___ftadd,w
  6920  0AC8  1683               	bsf	3,5	;RP0=1, select bank1
  6921  0AC9  1303               	bcf	3,6	;RP1=0, select bank1
  6922  0ACA  00C5               	movwf	ISR@x^(0+128)
  6923  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  6924  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  6925  0ACD  0824               	movf	?___ftadd+1,w
  6926  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  6927  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  6928  0AD0  00C6               	movwf	(ISR@x+1)^(0+128)
  6929  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  6930  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  6931  0AD3  0825               	movf	?___ftadd+2,w
  6932  0AD4  1683               	bsf	3,5	;RP0=1, select bank1
  6933  0AD5  1303               	bcf	3,6	;RP1=0, select bank1
  6934  0AD6  00C7               	movwf	(ISR@x+2)^(0+128)
  6935  0AD7  3001               	movlw	1
  6936  0AD8  07B5               	addwf	ISR@a^(0+128),f
  6937  0AD9  1803               	skipnc
  6938  0ADA  0AB6               	incf	(ISR@a+1)^(0+128),f
  6939  0ADB  3000               	movlw	0
  6940  0ADC  07B6               	addwf	(ISR@a+1)^(0+128),f
  6941  0ADD  0836               	movf	(ISR@a+1)^(0+128),w
  6942  0ADE  3A80               	xorlw	128
  6943  0ADF  00FF               	movwf	127
  6944  0AE0  3080               	movlw	128
  6945  0AE1  027F               	subwf	127,w
  6946  0AE2  1D03               	skipz
  6947  0AE3  2AE6               	goto	u552_25
  6948  0AE4  3010               	movlw	16
  6949  0AE5  0235               	subwf	ISR@a^(0+128),w
  6950  0AE6                     u552_25:	
  6951  0AE6  1C03               	skipc
  6952  0AE7  2B38               	goto	L21
  6953  0AE8                     i1l3755:	
  6954                           
  6955                           ;main.c: 272: }
  6956                           ;main.c: 273: }
  6957                           ;main.c: 277: if (erro_atual >= 100 && erro_atual <= 1001 && delta <= 200) {
  6958  0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  6959  0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  6960  0AEA  085B               	movf	(_erro_atual+1)^(0+128),w
  6961  0AEB  3A80               	xorlw	128
  6962  0AEC  00FF               	movwf	127
  6963  0AED  3080               	movlw	128
  6964  0AEE  027F               	subwf	127,w
  6965  0AEF  1D03               	skipz
  6966  0AF0  2AF3               	goto	u553_25
  6967  0AF1  3064               	movlw	100
  6968  0AF2  025A               	subwf	_erro_atual^(0+128),w
  6969  0AF3                     u553_25:	
  6970  0AF3  1C03               	skipc
  6971  0AF4  2B3B               	goto	L23
  6972  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  6973  0AF6  1303               	bcf	3,6	;RP1=0, select bank1
  6974  0AF7  085B               	movf	(_erro_atual+1)^(0+128),w
  6975  0AF8  3A80               	xorlw	128
  6976  0AF9  00FF               	movwf	127
  6977  0AFA  3083               	movlw	131
  6978  0AFB  027F               	subwf	127,w
  6979  0AFC  1D03               	skipz
  6980  0AFD  2B00               	goto	u554_25
  6981  0AFE  30EA               	movlw	234
  6982  0AFF  025A               	subwf	_erro_atual^(0+128),w
  6983  0B00                     u554_25:	
  6984  0B00  1803               	skipnc
  6985  0B01  2B3B               	goto	L23
  6986  0B02  1683               	bsf	3,5	;RP0=1, select bank1
  6987  0B03  1303               	bcf	3,6	;RP1=0, select bank1
  6988  0B04  0831               	movf	(ISR@delta+1)^(0+128),w
  6989  0B05  3A80               	xorlw	128
  6990  0B06  00FF               	movwf	127
  6991  0B07  3080               	movlw	128
  6992  0B08  027F               	subwf	127,w
  6993  0B09  1D03               	skipz
  6994  0B0A  2B0D               	goto	u555_25
  6995  0B0B  30C9               	movlw	201
  6996  0B0C  0230               	subwf	ISR@delta^(0+128),w
  6997  0B0D                     u555_25:	
  6998  0B0D  1803               	skipnc
  6999  0B0E  2B3B               	goto	L23
  7000                           
  7001                           ;main.c: 279: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  7002                           ;main.c: 280: (1 - trapmf(delta, -1, 0, 1, 200));
  7003  0B0F  3000               	movlw	0
  7004  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  7005  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  7006  0B12  00CC               	movwf	trapmf@d
  7007  0B13  3048               	movlw	72
  7008  0B14  00CD               	movwf	trapmf@d+1
  7009  0B15  3043               	movlw	67
  7010  0B16  00CE               	movwf	trapmf@d+2
  7011  0B17  3000               	movlw	0
  7012  0B18  00C9               	movwf	trapmf@c
  7013  0B19  3080               	movlw	128
  7014  0B1A  00CA               	movwf	trapmf@c+1
  7015  0B1B  303F               	movlw	63
  7016  0B1C  00CB               	movwf	trapmf@c+2
  7017  0B1D  3000               	movlw	0
  7018  0B1E  00C6               	movwf	trapmf@b
  7019  0B1F  3000               	movlw	0
  7020  0B20  00C7               	movwf	trapmf@b+1
  7021  0B21  3000               	movlw	0
  7022  0B22  00C8               	movwf	trapmf@b+2
  7023  0B23  3000               	movlw	0
  7024  0B24  00C3               	movwf	trapmf@a
  7025  0B25  3080               	movlw	128
  7026  0B26  00C4               	movwf	trapmf@a+1
  7027  0B27  30BF               	movlw	191
  7028  0B28  00C5               	movwf	trapmf@a+2
  7029  0B29  1683               	bsf	3,5	;RP0=1, select bank1
  7030  0B2A  1303               	bcf	3,6	;RP1=0, select bank1
  7031  0B2B  0831               	movf	(ISR@delta+1)^(0+128),w
  7032  0B2C  01F9               	clrf	___awtoft@c+1
  7033  0B2D  07F9               	addwf	___awtoft@c+1,f
  7034  0B2E  0830               	movf	ISR@delta^(0+128),w
  7035  0B2F  01F8               	clrf	___awtoft@c
  7036  0B30  07F8               	addwf	___awtoft@c,f
  7037  0B31  160A  118A  224A   	fcall	___awtoft
  7038  0B34  0878               	movf	?___awtoft,w
  7039  0B35  160A  118A  2D4A   	ljmp	L19
  7040  0B38                     L21:	
  7041  0B38  120A  118A  2FE9   	ljmp	L18
  7042  0B3B                     L23:	
  7043  0B3B  120A  118A  2951   	ljmp	i1l3781
  7044                           
  7045                           	psect	text11_split_6
  7046  154A                     L19:	
  7047  154A  1283               	bcf	3,5	;RP0=0, select bank0
  7048  154B  1303               	bcf	3,6	;RP1=0, select bank0
  7049  154C  00C0               	movwf	trapmf@x
  7050  154D  0879               	movf	?___awtoft+1,w
  7051  154E  00C1               	movwf	trapmf@x+1
  7052  154F  087A               	movf	?___awtoft+2,w
  7053  1550  00C2               	movwf	trapmf@x+2
  7054  1551  120A  158A  26AA  160A  118A  	fcall	_trapmf
  7055  1556  1283               	bcf	3,5	;RP0=0, select bank0
  7056  1557  1303               	bcf	3,6	;RP1=0, select bank0
  7057  1558  0840               	movf	?_trapmf,w
  7058  1559  1683               	bsf	3,5	;RP0=1, select bank1
  7059  155A  1303               	bcf	3,6	;RP1=0, select bank1
  7060  155B  00A2               	movwf	_ISR$1661^(0+128)
  7061  155C  1283               	bcf	3,5	;RP0=0, select bank0
  7062  155D  1303               	bcf	3,6	;RP1=0, select bank0
  7063  155E  0841               	movf	?_trapmf+1,w
  7064  155F  1683               	bsf	3,5	;RP0=1, select bank1
  7065  1560  1303               	bcf	3,6	;RP1=0, select bank1
  7066  1561  00A3               	movwf	(_ISR$1661+1)^(0+128)
  7067  1562  1283               	bcf	3,5	;RP0=0, select bank0
  7068  1563  1303               	bcf	3,6	;RP1=0, select bank0
  7069  1564  0842               	movf	?_trapmf+2,w
  7070  1565  1683               	bsf	3,5	;RP0=1, select bank1
  7071  1566  1303               	bcf	3,6	;RP1=0, select bank1
  7072  1567  00A4               	movwf	(_ISR$1661+2)^(0+128)
  7073                           
  7074                           ;main.c: 279: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  7075                           ;main.c: 280: (1 - trapmf(delta, -1, 0, 1, 200));
  7076  1568  30C0               	movlw	192
  7077  1569  1283               	bcf	3,5	;RP0=0, select bank0
  7078  156A  1303               	bcf	3,6	;RP1=0, select bank0
  7079  156B  00CC               	movwf	trapmf@d
  7080  156C  30C1               	movlw	193
  7081  156D  00CD               	movwf	trapmf@d+1
  7082  156E  3044               	movlw	68
  7083  156F  00CE               	movwf	trapmf@d+2
  7084  1570  3000               	movlw	0
  7085  1571  00C9               	movwf	trapmf@c
  7086  1572  3048               	movlw	72
  7087  1573  00CA               	movwf	trapmf@c+1
  7088  1574  3044               	movlw	68
  7089  1575  00CB               	movwf	trapmf@c+2
  7090  1576  3000               	movlw	0
  7091  1577  00C6               	movwf	trapmf@b
  7092  1578  3048               	movlw	72
  7093  1579  00C7               	movwf	trapmf@b+1
  7094  157A  3044               	movlw	68
  7095  157B  00C8               	movwf	trapmf@b+2
  7096  157C  3000               	movlw	0
  7097  157D  00C3               	movwf	trapmf@a
  7098  157E  3048               	movlw	72
  7099  157F  00C4               	movwf	trapmf@a+1
  7100  1580  3042               	movlw	66
  7101  1581  00C5               	movwf	trapmf@a+2
  7102  1582  1683               	bsf	3,5	;RP0=1, select bank1
  7103  1583  1303               	bcf	3,6	;RP1=0, select bank1
  7104  1584  085B               	movf	(_erro_atual+1)^(0+128),w
  7105  1585  01F9               	clrf	___awtoft@c+1
  7106  1586  07F9               	addwf	___awtoft@c+1,f
  7107  1587  085A               	movf	_erro_atual^(0+128),w
  7108  1588  01F8               	clrf	___awtoft@c
  7109  1589  07F8               	addwf	___awtoft@c,f
  7110  158A  160A  118A  224A  160A  118A  	fcall	___awtoft
  7111  158F  0878               	movf	?___awtoft,w
  7112  1590  1283               	bcf	3,5	;RP0=0, select bank0
  7113  1591  1303               	bcf	3,6	;RP1=0, select bank0
  7114  1592  00C0               	movwf	trapmf@x
  7115  1593  0879               	movf	?___awtoft+1,w
  7116  1594  00C1               	movwf	trapmf@x+1
  7117  1595  087A               	movf	?___awtoft+2,w
  7118  1596  00C2               	movwf	trapmf@x+2
  7119  1597  120A  158A  26AA  160A  118A  	fcall	_trapmf
  7120  159C  1283               	bcf	3,5	;RP0=0, select bank0
  7121  159D  1303               	bcf	3,6	;RP1=0, select bank0
  7122  159E  0840               	movf	?_trapmf,w
  7123  159F  00D2               	movwf	___ftmul@f1
  7124  15A0  0841               	movf	?_trapmf+1,w
  7125  15A1  00D3               	movwf	___ftmul@f1+1
  7126  15A2  0842               	movf	?_trapmf+2,w
  7127  15A3  00D4               	movwf	___ftmul@f1+2
  7128  15A4  3000               	movlw	0
  7129  15A5  00A3               	movwf	___ftadd@f1
  7130  15A6  3080               	movlw	128
  7131  15A7  00A4               	movwf	___ftadd@f1+1
  7132  15A8  303F               	movlw	63
  7133  15A9  00A5               	movwf	___ftadd@f1+2
  7134  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  7135  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  7136  15AC  0822               	movf	_ISR$1661^(0+128),w
  7137  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  7138  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  7139  15AF  00A0               	movwf	___ftneg@f1
  7140  15B0  1683               	bsf	3,5	;RP0=1, select bank1
  7141  15B1  1303               	bcf	3,6	;RP1=0, select bank1
  7142  15B2  0823               	movf	(_ISR$1661+1)^(0+128),w
  7143  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  7144  15B4  1303               	bcf	3,6	;RP1=0, select bank0
  7145  15B5  00A1               	movwf	___ftneg@f1+1
  7146  15B6  1683               	bsf	3,5	;RP0=1, select bank1
  7147  15B7  1303               	bcf	3,6	;RP1=0, select bank1
  7148  15B8  0824               	movf	(_ISR$1661+2)^(0+128),w
  7149  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  7150  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  7151  15BB  00A2               	movwf	___ftneg@f1+2
  7152  15BC  160A  118A  2192  160A  118A  	fcall	___ftneg
  7153  15C1  1283               	bcf	3,5	;RP0=0, select bank0
  7154  15C2  1303               	bcf	3,6	;RP1=0, select bank0
  7155  15C3  0820               	movf	?___ftneg,w
  7156  15C4  00A6               	movwf	___ftadd@f2
  7157  15C5  0821               	movf	?___ftneg+1,w
  7158  15C6  00A7               	movwf	___ftadd@f2+1
  7159  15C7  0822               	movf	?___ftneg+2,w
  7160  15C8  00A8               	movwf	___ftadd@f2+2
  7161  15C9  120A  158A  25A1   	fcall	___ftadd
  7162  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  7163  15CD  120A  118A  2853   	ljmp	L24
  7164                           
  7165                           	psect	text11_split_7
  7166  0053                     L24:	
  7167  0053  1303               	bcf	3,6	;RP1=0, select bank0
  7168  0054  0823               	movf	?___ftadd,w
  7169  0055  00D5               	movwf	___ftmul@f2
  7170  0056  0824               	movf	?___ftadd+1,w
  7171  0057  00D6               	movwf	___ftmul@f2+1
  7172  0058  0825               	movf	?___ftadd+2,w
  7173  0059  00D7               	movwf	___ftmul@f2+2
  7174  005A  120A  158A  23F6  120A  118A  	fcall	___ftmul
  7175  005F  1283               	bcf	3,5	;RP0=0, select bank0
  7176  0060  1303               	bcf	3,6	;RP1=0, select bank0
  7177  0061  0852               	movf	?___ftmul,w
  7178  0062  1683               	bsf	3,5	;RP0=1, select bank1
  7179  0063  1303               	bcf	3,6	;RP1=0, select bank1
  7180  0064  00C0               	movwf	ISR@rule^(0+128)
  7181  0065  1283               	bcf	3,5	;RP0=0, select bank0
  7182  0066  1303               	bcf	3,6	;RP1=0, select bank0
  7183  0067  0853               	movf	?___ftmul+1,w
  7184  0068  1683               	bsf	3,5	;RP0=1, select bank1
  7185  0069  1303               	bcf	3,6	;RP1=0, select bank1
  7186  006A  00C1               	movwf	(ISR@rule+1)^(0+128)
  7187  006B  1283               	bcf	3,5	;RP0=0, select bank0
  7188  006C  1303               	bcf	3,6	;RP1=0, select bank0
  7189  006D  0854               	movf	?___ftmul+2,w
  7190  006E  1683               	bsf	3,5	;RP0=1, select bank1
  7191  006F  1303               	bcf	3,6	;RP1=0, select bank1
  7192  0070  00C2               	movwf	(ISR@rule+2)^(0+128)
  7193                           
  7194                           ;main.c: 282: x = 0;
  7195  0071  3000               	movlw	0
  7196  0072  00C5               	movwf	ISR@x^(0+128)
  7197  0073  3000               	movlw	0
  7198  0074  00C6               	movwf	(ISR@x+1)^(0+128)
  7199  0075  3000               	movlw	0
  7200  0076  00C7               	movwf	(ISR@x+2)^(0+128)
  7201                           
  7202                           ;main.c: 283: for (int a = 0; a <= 15; a++) {
  7203  0077  01B7               	clrf	ISR@a_228^(0+128)
  7204  0078  01B8               	clrf	(ISR@a_228+1)^(0+128)
  7205  0079  0838               	movf	(ISR@a_228+1)^(0+128),w
  7206  007A  3A80               	xorlw	128
  7207  007B  00FF               	movwf	127
  7208  007C  3080               	movlw	128
  7209  007D  027F               	subwf	127,w
  7210  007E  1D03               	skipz
  7211  007F  2882               	goto	u556_25
  7212  0080  3010               	movlw	16
  7213  0081  0237               	subwf	ISR@a_228^(0+128),w
  7214  0082                     u556_25:	
  7215  0082  1803               	btfsc	3,0
  7216  0083  2951               	goto	i1l3781
  7217  0084                     i1l3771:	
  7218                           
  7219                           ;main.c: 284: rBaixo[a] = trapmf(x, 2, 5, 5, 10);
  7220  0084  3003               	movlw	3
  7221  0085  1283               	bcf	3,5	;RP0=0, select bank0
  7222  0086  1303               	bcf	3,6	;RP1=0, select bank0
  7223  0087  00E2               	movwf	??_ISR
  7224  0088  0862               	movf	??_ISR,w
  7225  0089  00F0               	movwf	___bmul@multiplicand
  7226  008A  1683               	bsf	3,5	;RP0=1, select bank1
  7227  008B  1303               	bcf	3,6	;RP1=0, select bank1
  7228  008C  0837               	movf	ISR@a_228^(0+128),w
  7229  008D  120A  118A  27EC  120A  118A  	fcall	___bmul
  7230  0092  3E90               	addlw	_rBaixo& (0+255)
  7231  0093  0084               	movwf	4
  7232  0094  1683               	bsf	3,5	;RP0=1, select bank1
  7233  0095  1303               	bcf	3,6	;RP1=0, select bank1
  7234  0096  0845               	movf	ISR@x^(0+128),w
  7235  0097  1283               	bcf	3,5	;RP0=0, select bank0
  7236  0098  1303               	bcf	3,6	;RP1=0, select bank0
  7237  0099  00C0               	movwf	trapmf@x
  7238  009A  1683               	bsf	3,5	;RP0=1, select bank1
  7239  009B  1303               	bcf	3,6	;RP1=0, select bank1
  7240  009C  0846               	movf	(ISR@x+1)^(0+128),w
  7241  009D  1283               	bcf	3,5	;RP0=0, select bank0
  7242  009E  1303               	bcf	3,6	;RP1=0, select bank0
  7243  009F  00C1               	movwf	trapmf@x+1
  7244  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  7245  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  7246  00A2  0847               	movf	(ISR@x+2)^(0+128),w
  7247  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  7248  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  7249  00A5  00C2               	movwf	trapmf@x+2
  7250  00A6  3000               	movlw	0
  7251  00A7  00C3               	movwf	trapmf@a
  7252  00A8  3000               	movlw	0
  7253  00A9  00C4               	movwf	trapmf@a+1
  7254  00AA  3040               	movlw	64
  7255  00AB  00C5               	movwf	trapmf@a+2
  7256  00AC  3000               	movlw	0
  7257  00AD  00C6               	movwf	trapmf@b
  7258  00AE  30A0               	movlw	160
  7259  00AF  00C7               	movwf	trapmf@b+1
  7260  00B0  3040               	movlw	64
  7261  00B1  00C8               	movwf	trapmf@b+2
  7262  00B2  3000               	movlw	0
  7263  00B3  00C9               	movwf	trapmf@c
  7264  00B4  30A0               	movlw	160
  7265  00B5  00CA               	movwf	trapmf@c+1
  7266  00B6  3040               	movlw	64
  7267  00B7  00CB               	movwf	trapmf@c+2
  7268  00B8  3000               	movlw	0
  7269  00B9  00CC               	movwf	trapmf@d
  7270  00BA  3020               	movlw	32
  7271  00BB  00CD               	movwf	trapmf@d+1
  7272  00BC  3041               	movlw	65
  7273  00BD  00CE               	movwf	trapmf@d+2
  7274  00BE  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7275  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  7276  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  7277  00C5  0840               	movf	?_trapmf,w
  7278  00C6  1783               	bsf	3,7	;select IRP bank3
  7279  00C7  0080               	movwf	0
  7280  00C8  0A84               	incf	4,f
  7281  00C9  0841               	movf	?_trapmf+1,w
  7282  00CA  0080               	movwf	0
  7283  00CB  0A84               	incf	4,f
  7284  00CC  0842               	movf	?_trapmf+2,w
  7285  00CD  0080               	movwf	0
  7286                           
  7287                           ;main.c: 285: if (rBaixo[a] >= rule) {
  7288  00CE  3003               	movlw	3
  7289  00CF  00E2               	movwf	??_ISR
  7290  00D0  0862               	movf	??_ISR,w
  7291  00D1  00F0               	movwf	___bmul@multiplicand
  7292  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  7293  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  7294  00D4  0837               	movf	ISR@a_228^(0+128),w
  7295  00D5  120A  118A  27EC  120A  118A  	fcall	___bmul
  7296  00DA  3E90               	addlw	_rBaixo& (0+255)
  7297  00DB  0084               	movwf	4
  7298  00DC  1783               	bsf	3,7	;select IRP bank3
  7299  00DD  0800               	movf	0,w
  7300  00DE  00F4               	movwf	___ftge@ff1
  7301  00DF  0A84               	incf	4,f
  7302  00E0  0800               	movf	0,w
  7303  00E1  00F5               	movwf	___ftge@ff1+1
  7304  00E2  0A84               	incf	4,f
  7305  00E3  0800               	movf	0,w
  7306  00E4  00F6               	movwf	___ftge@ff1+2
  7307  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  7308  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  7309  00E7  0840               	movf	ISR@rule^(0+128),w
  7310  00E8  00F7               	movwf	___ftge@ff2
  7311  00E9  0841               	movf	(ISR@rule+1)^(0+128),w
  7312  00EA  00F8               	movwf	___ftge@ff2+1
  7313  00EB  0842               	movf	(ISR@rule+2)^(0+128),w
  7314  00EC  00F9               	movwf	___ftge@ff2+2
  7315  00ED  160A  118A  2481  120A  118A  	fcall	___ftge
  7316  00F2  1C03               	btfss	3,0
  7317  00F3  290F               	goto	i1l3775
  7318                           
  7319                           ;main.c: 286: rBaixo[a] = rule;
  7320  00F4  3003               	movlw	3
  7321  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  7322  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  7323  00F7  00E2               	movwf	??_ISR
  7324  00F8  0862               	movf	??_ISR,w
  7325  00F9  00F0               	movwf	___bmul@multiplicand
  7326  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  7327  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  7328  00FC  0837               	movf	ISR@a_228^(0+128),w
  7329  00FD  120A  118A  27EC  120A  118A  	fcall	___bmul
  7330  0102  3E90               	addlw	_rBaixo& (0+255)
  7331  0103  0084               	movwf	4
  7332  0104  1683               	bsf	3,5	;RP0=1, select bank1
  7333  0105  1303               	bcf	3,6	;RP1=0, select bank1
  7334  0106  0840               	movf	ISR@rule^(0+128),w
  7335  0107  1783               	bsf	3,7	;select IRP bank3
  7336  0108  0080               	movwf	0
  7337  0109  0A84               	incf	4,f
  7338  010A  0841               	movf	(ISR@rule+1)^(0+128),w
  7339  010B  0080               	movwf	0
  7340  010C  0A84               	incf	4,f
  7341  010D  0842               	movf	(ISR@rule+2)^(0+128),w
  7342  010E  0080               	movwf	0
  7343  010F                     i1l3775:	
  7344                           
  7345                           ;main.c: 287: }
  7346                           ;main.c: 289: x += 1;
  7347  010F  3000               	movlw	0
  7348  0110  1283               	bcf	3,5	;RP0=0, select bank0
  7349  0111  1303               	bcf	3,6	;RP1=0, select bank0
  7350  0112  00A3               	movwf	___ftadd@f1
  7351  0113  3080               	movlw	128
  7352  0114  00A4               	movwf	___ftadd@f1+1
  7353  0115  303F               	movlw	63
  7354  0116  00A5               	movwf	___ftadd@f1+2
  7355  0117  1683               	bsf	3,5	;RP0=1, select bank1
  7356  0118  1303               	bcf	3,6	;RP1=0, select bank1
  7357  0119  0845               	movf	ISR@x^(0+128),w
  7358  011A  1283               	bcf	3,5	;RP0=0, select bank0
  7359  011B  1303               	bcf	3,6	;RP1=0, select bank0
  7360  011C  00A6               	movwf	___ftadd@f2
  7361  011D  1683               	bsf	3,5	;RP0=1, select bank1
  7362  011E  1303               	bcf	3,6	;RP1=0, select bank1
  7363  011F  0846               	movf	(ISR@x+1)^(0+128),w
  7364  0120  1283               	bcf	3,5	;RP0=0, select bank0
  7365  0121  1303               	bcf	3,6	;RP1=0, select bank0
  7366  0122  00A7               	movwf	___ftadd@f2+1
  7367  0123  1683               	bsf	3,5	;RP0=1, select bank1
  7368  0124  1303               	bcf	3,6	;RP1=0, select bank1
  7369  0125  0847               	movf	(ISR@x+2)^(0+128),w
  7370  0126  1283               	bcf	3,5	;RP0=0, select bank0
  7371  0127  1303               	bcf	3,6	;RP1=0, select bank0
  7372  0128  00A8               	movwf	___ftadd@f2+2
  7373  0129  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7374  012E  1283               	bcf	3,5	;RP0=0, select bank0
  7375  012F  1303               	bcf	3,6	;RP1=0, select bank0
  7376  0130  0823               	movf	?___ftadd,w
  7377  0131  1683               	bsf	3,5	;RP0=1, select bank1
  7378  0132  1303               	bcf	3,6	;RP1=0, select bank1
  7379  0133  00C5               	movwf	ISR@x^(0+128)
  7380  0134  1283               	bcf	3,5	;RP0=0, select bank0
  7381  0135  1303               	bcf	3,6	;RP1=0, select bank0
  7382  0136  0824               	movf	?___ftadd+1,w
  7383  0137  1683               	bsf	3,5	;RP0=1, select bank1
  7384  0138  1303               	bcf	3,6	;RP1=0, select bank1
  7385  0139  00C6               	movwf	(ISR@x+1)^(0+128)
  7386  013A  1283               	bcf	3,5	;RP0=0, select bank0
  7387  013B  1303               	bcf	3,6	;RP1=0, select bank0
  7388  013C  0825               	movf	?___ftadd+2,w
  7389  013D  1683               	bsf	3,5	;RP0=1, select bank1
  7390  013E  1303               	bcf	3,6	;RP1=0, select bank1
  7391  013F  00C7               	movwf	(ISR@x+2)^(0+128)
  7392  0140  3001               	movlw	1
  7393  0141  07B7               	addwf	ISR@a_228^(0+128),f
  7394  0142  1803               	skipnc
  7395  0143  0AB8               	incf	(ISR@a_228+1)^(0+128),f
  7396  0144  3000               	movlw	0
  7397  0145  07B8               	addwf	(ISR@a_228+1)^(0+128),f
  7398  0146  0838               	movf	(ISR@a_228+1)^(0+128),w
  7399  0147  3A80               	xorlw	128
  7400  0148  00FF               	movwf	127
  7401  0149  3080               	movlw	128
  7402  014A  027F               	subwf	127,w
  7403  014B  1D03               	skipz
  7404  014C  294F               	goto	u558_25
  7405  014D  3010               	movlw	16
  7406  014E  0237               	subwf	ISR@a_228^(0+128),w
  7407  014F                     u558_25:	
  7408  014F  1C03               	skipc
  7409  0150  2884               	goto	i1l3771
  7410  0151                     i1l3781:	
  7411                           
  7412                           ;main.c: 290: }
  7413                           ;main.c: 291: }
  7414                           ;main.c: 295: if (erro_atual >= 100 && erro_atual <= 1001 && delta >= 201) {
  7415  0151  1683               	bsf	3,5	;RP0=1, select bank1
  7416  0152  1303               	bcf	3,6	;RP1=0, select bank1
  7417  0153  085B               	movf	(_erro_atual+1)^(0+128),w
  7418  0154  3A80               	xorlw	128
  7419  0155  00FF               	movwf	127
  7420  0156  3080               	movlw	128
  7421  0157  027F               	subwf	127,w
  7422  0158  1D03               	skipz
  7423  0159  295C               	goto	u559_25
  7424  015A  3064               	movlw	100
  7425  015B  025A               	subwf	_erro_atual^(0+128),w
  7426  015C                     u559_25:	
  7427  015C  1C03               	skipc
  7428  015D  2AE5               	goto	i1l3807
  7429  015E  1683               	bsf	3,5	;RP0=1, select bank1
  7430  015F  1303               	bcf	3,6	;RP1=0, select bank1
  7431  0160  085B               	movf	(_erro_atual+1)^(0+128),w
  7432  0161  3A80               	xorlw	128
  7433  0162  00FF               	movwf	127
  7434  0163  3083               	movlw	131
  7435  0164  027F               	subwf	127,w
  7436  0165  1D03               	skipz
  7437  0166  2969               	goto	u560_25
  7438  0167  30EA               	movlw	234
  7439  0168  025A               	subwf	_erro_atual^(0+128),w
  7440  0169                     u560_25:	
  7441  0169  1803               	skipnc
  7442  016A  2AE5               	goto	i1l3807
  7443  016B  1683               	bsf	3,5	;RP0=1, select bank1
  7444  016C  1303               	bcf	3,6	;RP1=0, select bank1
  7445  016D  0831               	movf	(ISR@delta+1)^(0+128),w
  7446  016E  3A80               	xorlw	128
  7447  016F  00FF               	movwf	127
  7448  0170  3080               	movlw	128
  7449  0171  027F               	subwf	127,w
  7450  0172  1D03               	skipz
  7451  0173  2976               	goto	u561_25
  7452  0174  30C9               	movlw	201
  7453  0175  0230               	subwf	ISR@delta^(0+128),w
  7454  0176                     u561_25:	
  7455  0176  1C03               	skipc
  7456  0177  2AE5               	goto	i1l3807
  7457                           
  7458                           ;main.c: 297: rule = trapmf(erro_atual, 50, 800, 800, 1550) *
  7459                           ;main.c: 298: trapmf(delta, 200, 500, 2000, 2001);
  7460  0178  3020               	movlw	32
  7461  0179  1283               	bcf	3,5	;RP0=0, select bank0
  7462  017A  1303               	bcf	3,6	;RP1=0, select bank0
  7463  017B  00CC               	movwf	trapmf@d
  7464  017C  30FA               	movlw	250
  7465  017D  00CD               	movwf	trapmf@d+1
  7466  017E  3044               	movlw	68
  7467  017F  00CE               	movwf	trapmf@d+2
  7468  0180  3000               	movlw	0
  7469  0181  00C9               	movwf	trapmf@c
  7470  0182  30FA               	movlw	250
  7471  0183  00CA               	movwf	trapmf@c+1
  7472  0184  3044               	movlw	68
  7473  0185  00CB               	movwf	trapmf@c+2
  7474  0186  3000               	movlw	0
  7475  0187  00C6               	movwf	trapmf@b
  7476  0188  30FA               	movlw	250
  7477  0189  00C7               	movwf	trapmf@b+1
  7478  018A  3043               	movlw	67
  7479  018B  00C8               	movwf	trapmf@b+2
  7480  018C  3000               	movlw	0
  7481  018D  00C3               	movwf	trapmf@a
  7482  018E  3048               	movlw	72
  7483  018F  00C4               	movwf	trapmf@a+1
  7484  0190  3043               	movlw	67
  7485  0191  00C5               	movwf	trapmf@a+2
  7486  0192  1683               	bsf	3,5	;RP0=1, select bank1
  7487  0193  1303               	bcf	3,6	;RP1=0, select bank1
  7488  0194  0831               	movf	(ISR@delta+1)^(0+128),w
  7489  0195  01F9               	clrf	___awtoft@c+1
  7490  0196  07F9               	addwf	___awtoft@c+1,f
  7491  0197  0830               	movf	ISR@delta^(0+128),w
  7492  0198  01F8               	clrf	___awtoft@c
  7493  0199  07F8               	addwf	___awtoft@c,f
  7494  019A  160A  118A  224A  120A  118A  	fcall	___awtoft
  7495  019F  0878               	movf	?___awtoft,w
  7496  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  7497  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  7498  01A2  00C0               	movwf	trapmf@x
  7499  01A3  0879               	movf	?___awtoft+1,w
  7500  01A4  00C1               	movwf	trapmf@x+1
  7501  01A5  087A               	movf	?___awtoft+2,w
  7502  01A6  00C2               	movwf	trapmf@x+2
  7503  01A7  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7504  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  7505  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  7506  01AE  0840               	movf	?_trapmf,w
  7507  01AF  00D2               	movwf	___ftmul@f1
  7508  01B0  0841               	movf	?_trapmf+1,w
  7509  01B1  00D3               	movwf	___ftmul@f1+1
  7510  01B2  0842               	movf	?_trapmf+2,w
  7511  01B3  00D4               	movwf	___ftmul@f1+2
  7512  01B4  30C0               	movlw	192
  7513  01B5  00CC               	movwf	trapmf@d
  7514  01B6  30C1               	movlw	193
  7515  01B7  00CD               	movwf	trapmf@d+1
  7516  01B8  3044               	movlw	68
  7517  01B9  00CE               	movwf	trapmf@d+2
  7518  01BA  3000               	movlw	0
  7519  01BB  00C9               	movwf	trapmf@c
  7520  01BC  3048               	movlw	72
  7521  01BD  00CA               	movwf	trapmf@c+1
  7522  01BE  3044               	movlw	68
  7523  01BF  00CB               	movwf	trapmf@c+2
  7524  01C0  3000               	movlw	0
  7525  01C1  00C6               	movwf	trapmf@b
  7526  01C2  3048               	movlw	72
  7527  01C3  00C7               	movwf	trapmf@b+1
  7528  01C4  3044               	movlw	68
  7529  01C5  00C8               	movwf	trapmf@b+2
  7530  01C6  3000               	movlw	0
  7531  01C7  00C3               	movwf	trapmf@a
  7532  01C8  3048               	movlw	72
  7533  01C9  00C4               	movwf	trapmf@a+1
  7534  01CA  3042               	movlw	66
  7535  01CB  00C5               	movwf	trapmf@a+2
  7536  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  7537  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  7538  01CE  085B               	movf	(_erro_atual+1)^(0+128),w
  7539  01CF  01F9               	clrf	___awtoft@c+1
  7540  01D0  07F9               	addwf	___awtoft@c+1,f
  7541  01D1  085A               	movf	_erro_atual^(0+128),w
  7542  01D2  01F8               	clrf	___awtoft@c
  7543  01D3  07F8               	addwf	___awtoft@c,f
  7544  01D4  160A  118A  224A  120A  118A  	fcall	___awtoft
  7545  01D9  0878               	movf	?___awtoft,w
  7546  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  7547  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  7548  01DC  00C0               	movwf	trapmf@x
  7549  01DD  0879               	movf	?___awtoft+1,w
  7550  01DE  00C1               	movwf	trapmf@x+1
  7551  01DF  087A               	movf	?___awtoft+2,w
  7552  01E0  00C2               	movwf	trapmf@x+2
  7553  01E1  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7554  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  7555  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  7556  01E8  0840               	movf	?_trapmf,w
  7557  01E9  00D5               	movwf	___ftmul@f2
  7558  01EA  0841               	movf	?_trapmf+1,w
  7559  01EB  00D6               	movwf	___ftmul@f2+1
  7560  01EC  0842               	movf	?_trapmf+2,w
  7561  01ED  00D7               	movwf	___ftmul@f2+2
  7562  01EE  120A  158A  23F6  120A  118A  	fcall	___ftmul
  7563  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  7564  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  7565  01F5  0852               	movf	?___ftmul,w
  7566  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  7567  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  7568  01F8  00C0               	movwf	ISR@rule^(0+128)
  7569  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  7570  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  7571  01FB  0853               	movf	?___ftmul+1,w
  7572  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  7573  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  7574  01FE  00C1               	movwf	(ISR@rule+1)^(0+128)
  7575  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  7576  0200  1303               	bcf	3,6	;RP1=0, select bank0
  7577  0201  0854               	movf	?___ftmul+2,w
  7578  0202  1683               	bsf	3,5	;RP0=1, select bank1
  7579  0203  1303               	bcf	3,6	;RP1=0, select bank1
  7580  0204  00C2               	movwf	(ISR@rule+2)^(0+128)
  7581                           
  7582                           ;main.c: 300: x = 0;
  7583  0205  3000               	movlw	0
  7584  0206  00C5               	movwf	ISR@x^(0+128)
  7585  0207  3000               	movlw	0
  7586  0208  00C6               	movwf	(ISR@x+1)^(0+128)
  7587  0209  3000               	movlw	0
  7588  020A  00C7               	movwf	(ISR@x+2)^(0+128)
  7589                           
  7590                           ;main.c: 301: for (int a = 0; a <= 15; a++) {
  7591  020B  01B9               	clrf	ISR@a_229^(0+128)
  7592  020C  01BA               	clrf	(ISR@a_229+1)^(0+128)
  7593  020D  083A               	movf	(ISR@a_229+1)^(0+128),w
  7594  020E  3A80               	xorlw	128
  7595  020F  00FF               	movwf	127
  7596  0210  3080               	movlw	128
  7597  0211  027F               	subwf	127,w
  7598  0212  1D03               	skipz
  7599  0213  2A16               	goto	u562_25
  7600  0214  3010               	movlw	16
  7601  0215  0239               	subwf	ISR@a_229^(0+128),w
  7602  0216                     u562_25:	
  7603  0216  1803               	btfsc	3,0
  7604  0217  2AE5               	goto	i1l3807
  7605  0218                     i1l3797:	
  7606                           
  7607                           ;main.c: 302: rMedio[a] = trapmf(x, 2, 5, 5, 10);
  7608  0218  3003               	movlw	3
  7609  0219  1283               	bcf	3,5	;RP0=0, select bank0
  7610  021A  1303               	bcf	3,6	;RP1=0, select bank0
  7611  021B  00E2               	movwf	??_ISR
  7612  021C  0862               	movf	??_ISR,w
  7613  021D  00F0               	movwf	___bmul@multiplicand
  7614  021E  1683               	bsf	3,5	;RP0=1, select bank1
  7615  021F  1303               	bcf	3,6	;RP1=0, select bank1
  7616  0220  0839               	movf	ISR@a_229^(0+128),w
  7617  0221  120A  118A  27EC  120A  118A  	fcall	___bmul
  7618  0226  3E40               	addlw	_rMedio& (0+255)
  7619  0227  0084               	movwf	4
  7620  0228  1683               	bsf	3,5	;RP0=1, select bank1
  7621  0229  1303               	bcf	3,6	;RP1=0, select bank1
  7622  022A  0845               	movf	ISR@x^(0+128),w
  7623  022B  1283               	bcf	3,5	;RP0=0, select bank0
  7624  022C  1303               	bcf	3,6	;RP1=0, select bank0
  7625  022D  00C0               	movwf	trapmf@x
  7626  022E  1683               	bsf	3,5	;RP0=1, select bank1
  7627  022F  1303               	bcf	3,6	;RP1=0, select bank1
  7628  0230  0846               	movf	(ISR@x+1)^(0+128),w
  7629  0231  1283               	bcf	3,5	;RP0=0, select bank0
  7630  0232  1303               	bcf	3,6	;RP1=0, select bank0
  7631  0233  00C1               	movwf	trapmf@x+1
  7632  0234  1683               	bsf	3,5	;RP0=1, select bank1
  7633  0235  1303               	bcf	3,6	;RP1=0, select bank1
  7634  0236  0847               	movf	(ISR@x+2)^(0+128),w
  7635  0237  1283               	bcf	3,5	;RP0=0, select bank0
  7636  0238  1303               	bcf	3,6	;RP1=0, select bank0
  7637  0239  00C2               	movwf	trapmf@x+2
  7638  023A  3000               	movlw	0
  7639  023B  00C3               	movwf	trapmf@a
  7640  023C  3000               	movlw	0
  7641  023D  00C4               	movwf	trapmf@a+1
  7642  023E  3040               	movlw	64
  7643  023F  00C5               	movwf	trapmf@a+2
  7644  0240  3000               	movlw	0
  7645  0241  00C6               	movwf	trapmf@b
  7646  0242  30A0               	movlw	160
  7647  0243  00C7               	movwf	trapmf@b+1
  7648  0244  3040               	movlw	64
  7649  0245  00C8               	movwf	trapmf@b+2
  7650  0246  3000               	movlw	0
  7651  0247  00C9               	movwf	trapmf@c
  7652  0248  30A0               	movlw	160
  7653  0249  00CA               	movwf	trapmf@c+1
  7654  024A  3040               	movlw	64
  7655  024B  00CB               	movwf	trapmf@c+2
  7656  024C  3000               	movlw	0
  7657  024D  00CC               	movwf	trapmf@d
  7658  024E  3020               	movlw	32
  7659  024F  00CD               	movwf	trapmf@d+1
  7660  0250  3041               	movlw	65
  7661  0251  00CE               	movwf	trapmf@d+2
  7662  0252  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7663  0257  1283               	bcf	3,5	;RP0=0, select bank0
  7664  0258  1303               	bcf	3,6	;RP1=0, select bank0
  7665  0259  0840               	movf	?_trapmf,w
  7666  025A  1783               	bsf	3,7	;select IRP bank2
  7667  025B  0080               	movwf	0
  7668  025C  0A84               	incf	4,f
  7669  025D  0841               	movf	?_trapmf+1,w
  7670  025E  0080               	movwf	0
  7671  025F  0A84               	incf	4,f
  7672  0260  0842               	movf	?_trapmf+2,w
  7673  0261  0080               	movwf	0
  7674                           
  7675                           ;main.c: 304: if (rMedio[a] >= rule) {
  7676  0262  3003               	movlw	3
  7677  0263  00E2               	movwf	??_ISR
  7678  0264  0862               	movf	??_ISR,w
  7679  0265  00F0               	movwf	___bmul@multiplicand
  7680  0266  1683               	bsf	3,5	;RP0=1, select bank1
  7681  0267  1303               	bcf	3,6	;RP1=0, select bank1
  7682  0268  0839               	movf	ISR@a_229^(0+128),w
  7683  0269  120A  118A  27EC  120A  118A  	fcall	___bmul
  7684  026E  3E40               	addlw	_rMedio& (0+255)
  7685  026F  0084               	movwf	4
  7686  0270  1783               	bsf	3,7	;select IRP bank2
  7687  0271  0800               	movf	0,w
  7688  0272  00F4               	movwf	___ftge@ff1
  7689  0273  0A84               	incf	4,f
  7690  0274  0800               	movf	0,w
  7691  0275  00F5               	movwf	___ftge@ff1+1
  7692  0276  0A84               	incf	4,f
  7693  0277  0800               	movf	0,w
  7694  0278  00F6               	movwf	___ftge@ff1+2
  7695  0279  1683               	bsf	3,5	;RP0=1, select bank1
  7696  027A  1303               	bcf	3,6	;RP1=0, select bank1
  7697  027B  0840               	movf	ISR@rule^(0+128),w
  7698  027C  00F7               	movwf	___ftge@ff2
  7699  027D  0841               	movf	(ISR@rule+1)^(0+128),w
  7700  027E  00F8               	movwf	___ftge@ff2+1
  7701  027F  0842               	movf	(ISR@rule+2)^(0+128),w
  7702  0280  00F9               	movwf	___ftge@ff2+2
  7703  0281  160A  118A  2481  120A  118A  	fcall	___ftge
  7704  0286  1C03               	btfss	3,0
  7705  0287  2AA3               	goto	i1l3801
  7706                           
  7707                           ;main.c: 305: rMedio[a] = rule;
  7708  0288  3003               	movlw	3
  7709  0289  1283               	bcf	3,5	;RP0=0, select bank0
  7710  028A  1303               	bcf	3,6	;RP1=0, select bank0
  7711  028B  00E2               	movwf	??_ISR
  7712  028C  0862               	movf	??_ISR,w
  7713  028D  00F0               	movwf	___bmul@multiplicand
  7714  028E  1683               	bsf	3,5	;RP0=1, select bank1
  7715  028F  1303               	bcf	3,6	;RP1=0, select bank1
  7716  0290  0839               	movf	ISR@a_229^(0+128),w
  7717  0291  120A  118A  27EC  120A  118A  	fcall	___bmul
  7718  0296  3E40               	addlw	_rMedio& (0+255)
  7719  0297  0084               	movwf	4
  7720  0298  1683               	bsf	3,5	;RP0=1, select bank1
  7721  0299  1303               	bcf	3,6	;RP1=0, select bank1
  7722  029A  0840               	movf	ISR@rule^(0+128),w
  7723  029B  1783               	bsf	3,7	;select IRP bank2
  7724  029C  0080               	movwf	0
  7725  029D  0A84               	incf	4,f
  7726  029E  0841               	movf	(ISR@rule+1)^(0+128),w
  7727  029F  0080               	movwf	0
  7728  02A0  0A84               	incf	4,f
  7729  02A1  0842               	movf	(ISR@rule+2)^(0+128),w
  7730  02A2  0080               	movwf	0
  7731  02A3                     i1l3801:	
  7732                           
  7733                           ;main.c: 306: }
  7734                           ;main.c: 308: x += 1;
  7735  02A3  3000               	movlw	0
  7736  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  7737  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  7738  02A6  00A3               	movwf	___ftadd@f1
  7739  02A7  3080               	movlw	128
  7740  02A8  00A4               	movwf	___ftadd@f1+1
  7741  02A9  303F               	movlw	63
  7742  02AA  00A5               	movwf	___ftadd@f1+2
  7743  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  7744  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  7745  02AD  0845               	movf	ISR@x^(0+128),w
  7746  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  7747  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  7748  02B0  00A6               	movwf	___ftadd@f2
  7749  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  7750  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  7751  02B3  0846               	movf	(ISR@x+1)^(0+128),w
  7752  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  7753  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  7754  02B6  00A7               	movwf	___ftadd@f2+1
  7755  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  7756  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  7757  02B9  0847               	movf	(ISR@x+2)^(0+128),w
  7758  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  7759  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  7760  02BC  00A8               	movwf	___ftadd@f2+2
  7761  02BD  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7762  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  7763  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  7764  02C4  0823               	movf	?___ftadd,w
  7765  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  7766  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  7767  02C7  00C5               	movwf	ISR@x^(0+128)
  7768  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  7769  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  7770  02CA  0824               	movf	?___ftadd+1,w
  7771  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  7772  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  7773  02CD  00C6               	movwf	(ISR@x+1)^(0+128)
  7774  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  7775  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  7776  02D0  0825               	movf	?___ftadd+2,w
  7777  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  7778  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  7779  02D3  00C7               	movwf	(ISR@x+2)^(0+128)
  7780  02D4  3001               	movlw	1
  7781  02D5  07B9               	addwf	ISR@a_229^(0+128),f
  7782  02D6  1803               	skipnc
  7783  02D7  0ABA               	incf	(ISR@a_229+1)^(0+128),f
  7784  02D8  3000               	movlw	0
  7785  02D9  07BA               	addwf	(ISR@a_229+1)^(0+128),f
  7786  02DA  083A               	movf	(ISR@a_229+1)^(0+128),w
  7787  02DB  3A80               	xorlw	128
  7788  02DC  00FF               	movwf	127
  7789  02DD  3080               	movlw	128
  7790  02DE  027F               	subwf	127,w
  7791  02DF  1D03               	skipz
  7792  02E0  2AE3               	goto	u564_25
  7793  02E1  3010               	movlw	16
  7794  02E2  0239               	subwf	ISR@a_229^(0+128),w
  7795  02E3                     u564_25:	
  7796  02E3  1C03               	skipc
  7797  02E4  2A18               	goto	i1l3797
  7798  02E5                     i1l3807:	
  7799                           
  7800                           ;main.c: 309: }
  7801                           ;main.c: 310: }
  7802                           ;main.c: 313: if (erro_atual >= 1001) {
  7803  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  7804  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  7805  02E7  085B               	movf	(_erro_atual+1)^(0+128),w
  7806  02E8  3A80               	xorlw	128
  7807  02E9  00FF               	movwf	127
  7808  02EA  3083               	movlw	131
  7809  02EB  027F               	subwf	127,w
  7810  02EC  1D03               	skipz
  7811  02ED  2AF0               	goto	u565_25
  7812  02EE  30E9               	movlw	233
  7813  02EF  025A               	subwf	_erro_atual^(0+128),w
  7814  02F0                     u565_25:	
  7815  02F0  1C03               	skipc
  7816  02F1  2C16               	goto	i1l3829
  7817                           
  7818                           ;main.c: 315: rule = trapmf(erro_atual, 1001, 1500, 2000, 2001);
  7819  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  7820  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  7821  02F4  085B               	movf	(_erro_atual+1)^(0+128),w
  7822  02F5  01F9               	clrf	___awtoft@c+1
  7823  02F6  07F9               	addwf	___awtoft@c+1,f
  7824  02F7  085A               	movf	_erro_atual^(0+128),w
  7825  02F8  01F8               	clrf	___awtoft@c
  7826  02F9  07F8               	addwf	___awtoft@c,f
  7827  02FA  160A  118A  224A  120A  118A  	fcall	___awtoft
  7828  02FF  0878               	movf	?___awtoft,w
  7829  0300  1283               	bcf	3,5	;RP0=0, select bank0
  7830  0301  1303               	bcf	3,6	;RP1=0, select bank0
  7831  0302  00C0               	movwf	trapmf@x
  7832  0303  0879               	movf	?___awtoft+1,w
  7833  0304  00C1               	movwf	trapmf@x+1
  7834  0305  087A               	movf	?___awtoft+2,w
  7835  0306  00C2               	movwf	trapmf@x+2
  7836  0307  3040               	movlw	64
  7837  0308  00C3               	movwf	trapmf@a
  7838  0309  307A               	movlw	122
  7839  030A  00C4               	movwf	trapmf@a+1
  7840  030B  3044               	movlw	68
  7841  030C  00C5               	movwf	trapmf@a+2
  7842  030D  3080               	movlw	128
  7843  030E  00C6               	movwf	trapmf@b
  7844  030F  30BB               	movlw	187
  7845  0310  00C7               	movwf	trapmf@b+1
  7846  0311  3044               	movlw	68
  7847  0312  00C8               	movwf	trapmf@b+2
  7848  0313  3000               	movlw	0
  7849  0314  00C9               	movwf	trapmf@c
  7850  0315  30FA               	movlw	250
  7851  0316  00CA               	movwf	trapmf@c+1
  7852  0317  3044               	movlw	68
  7853  0318  00CB               	movwf	trapmf@c+2
  7854  0319  3020               	movlw	32
  7855  031A  00CC               	movwf	trapmf@d
  7856  031B  30FA               	movlw	250
  7857  031C  00CD               	movwf	trapmf@d+1
  7858  031D  3044               	movlw	68
  7859  031E  00CE               	movwf	trapmf@d+2
  7860  031F  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7861  0324  1283               	bcf	3,5	;RP0=0, select bank0
  7862  0325  1303               	bcf	3,6	;RP1=0, select bank0
  7863  0326  0840               	movf	?_trapmf,w
  7864  0327  1683               	bsf	3,5	;RP0=1, select bank1
  7865  0328  1303               	bcf	3,6	;RP1=0, select bank1
  7866  0329  00C0               	movwf	ISR@rule^(0+128)
  7867  032A  1283               	bcf	3,5	;RP0=0, select bank0
  7868  032B  1303               	bcf	3,6	;RP1=0, select bank0
  7869  032C  0841               	movf	?_trapmf+1,w
  7870  032D  1683               	bsf	3,5	;RP0=1, select bank1
  7871  032E  1303               	bcf	3,6	;RP1=0, select bank1
  7872  032F  00C1               	movwf	(ISR@rule+1)^(0+128)
  7873  0330  1283               	bcf	3,5	;RP0=0, select bank0
  7874  0331  1303               	bcf	3,6	;RP1=0, select bank0
  7875  0332  0842               	movf	?_trapmf+2,w
  7876  0333  1683               	bsf	3,5	;RP0=1, select bank1
  7877  0334  1303               	bcf	3,6	;RP1=0, select bank1
  7878  0335  00C2               	movwf	(ISR@rule+2)^(0+128)
  7879                           
  7880                           ;main.c: 317: x = 0;
  7881  0336  3000               	movlw	0
  7882  0337  00C5               	movwf	ISR@x^(0+128)
  7883  0338  3000               	movlw	0
  7884  0339  00C6               	movwf	(ISR@x+1)^(0+128)
  7885  033A  3000               	movlw	0
  7886  033B  00C7               	movwf	(ISR@x+2)^(0+128)
  7887                           
  7888                           ;main.c: 318: for (int a = 0; a <= 15; a++) {
  7889  033C  01BB               	clrf	ISR@a_230^(0+128)
  7890  033D  01BC               	clrf	(ISR@a_230+1)^(0+128)
  7891  033E  083C               	movf	(ISR@a_230+1)^(0+128),w
  7892  033F  3A80               	xorlw	128
  7893  0340  00FF               	movwf	127
  7894  0341  3080               	movlw	128
  7895  0342  027F               	subwf	127,w
  7896  0343  1D03               	skipz
  7897  0344  2B47               	goto	u566_25
  7898  0345  3010               	movlw	16
  7899  0346  023B               	subwf	ISR@a_230^(0+128),w
  7900  0347                     u566_25:	
  7901  0347  1803               	btfsc	3,0
  7902  0348  2C16               	goto	i1l3829
  7903  0349                     i1l3819:	
  7904                           
  7905                           ;main.c: 319: rGrande[a] = trapmf(x, 5, 10, 15, 16);
  7906  0349  3003               	movlw	3
  7907  034A  1283               	bcf	3,5	;RP0=0, select bank0
  7908  034B  1303               	bcf	3,6	;RP1=0, select bank0
  7909  034C  00E2               	movwf	??_ISR
  7910  034D  0862               	movf	??_ISR,w
  7911  034E  00F0               	movwf	___bmul@multiplicand
  7912  034F  1683               	bsf	3,5	;RP0=1, select bank1
  7913  0350  1303               	bcf	3,6	;RP1=0, select bank1
  7914  0351  083B               	movf	ISR@a_230^(0+128),w
  7915  0352  120A  118A  27EC  120A  118A  	fcall	___bmul
  7916  0357  3E10               	addlw	_rGrande& (0+255)
  7917  0358  0084               	movwf	4
  7918  0359  1683               	bsf	3,5	;RP0=1, select bank1
  7919  035A  1303               	bcf	3,6	;RP1=0, select bank1
  7920  035B  0845               	movf	ISR@x^(0+128),w
  7921  035C  1283               	bcf	3,5	;RP0=0, select bank0
  7922  035D  1303               	bcf	3,6	;RP1=0, select bank0
  7923  035E  00C0               	movwf	trapmf@x
  7924  035F  1683               	bsf	3,5	;RP0=1, select bank1
  7925  0360  1303               	bcf	3,6	;RP1=0, select bank1
  7926  0361  0846               	movf	(ISR@x+1)^(0+128),w
  7927  0362  1283               	bcf	3,5	;RP0=0, select bank0
  7928  0363  1303               	bcf	3,6	;RP1=0, select bank0
  7929  0364  00C1               	movwf	trapmf@x+1
  7930  0365  1683               	bsf	3,5	;RP0=1, select bank1
  7931  0366  1303               	bcf	3,6	;RP1=0, select bank1
  7932  0367  0847               	movf	(ISR@x+2)^(0+128),w
  7933  0368  1283               	bcf	3,5	;RP0=0, select bank0
  7934  0369  1303               	bcf	3,6	;RP1=0, select bank0
  7935  036A  00C2               	movwf	trapmf@x+2
  7936  036B  3000               	movlw	0
  7937  036C  00C3               	movwf	trapmf@a
  7938  036D  30A0               	movlw	160
  7939  036E  00C4               	movwf	trapmf@a+1
  7940  036F  3040               	movlw	64
  7941  0370  00C5               	movwf	trapmf@a+2
  7942  0371  3000               	movlw	0
  7943  0372  00C6               	movwf	trapmf@b
  7944  0373  3020               	movlw	32
  7945  0374  00C7               	movwf	trapmf@b+1
  7946  0375  3041               	movlw	65
  7947  0376  00C8               	movwf	trapmf@b+2
  7948  0377  3000               	movlw	0
  7949  0378  00C9               	movwf	trapmf@c
  7950  0379  3070               	movlw	112
  7951  037A  00CA               	movwf	trapmf@c+1
  7952  037B  3041               	movlw	65
  7953  037C  00CB               	movwf	trapmf@c+2
  7954  037D  3000               	movlw	0
  7955  037E  00CC               	movwf	trapmf@d
  7956  037F  3080               	movlw	128
  7957  0380  00CD               	movwf	trapmf@d+1
  7958  0381  3041               	movlw	65
  7959  0382  00CE               	movwf	trapmf@d+2
  7960  0383  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7961  0388  1283               	bcf	3,5	;RP0=0, select bank0
  7962  0389  1303               	bcf	3,6	;RP1=0, select bank0
  7963  038A  0840               	movf	?_trapmf,w
  7964  038B  1783               	bsf	3,7	;select IRP bank2
  7965  038C  0080               	movwf	0
  7966  038D  0A84               	incf	4,f
  7967  038E  0841               	movf	?_trapmf+1,w
  7968  038F  0080               	movwf	0
  7969  0390  0A84               	incf	4,f
  7970  0391  0842               	movf	?_trapmf+2,w
  7971  0392  0080               	movwf	0
  7972                           
  7973                           ;main.c: 321: if (rGrande[a] >= rule) {
  7974  0393  3003               	movlw	3
  7975  0394  00E2               	movwf	??_ISR
  7976  0395  0862               	movf	??_ISR,w
  7977  0396  00F0               	movwf	___bmul@multiplicand
  7978  0397  1683               	bsf	3,5	;RP0=1, select bank1
  7979  0398  1303               	bcf	3,6	;RP1=0, select bank1
  7980  0399  083B               	movf	ISR@a_230^(0+128),w
  7981  039A  120A  118A  27EC  120A  118A  	fcall	___bmul
  7982  039F  3E10               	addlw	_rGrande& (0+255)
  7983  03A0  0084               	movwf	4
  7984  03A1  1783               	bsf	3,7	;select IRP bank2
  7985  03A2  0800               	movf	0,w
  7986  03A3  00F4               	movwf	___ftge@ff1
  7987  03A4  0A84               	incf	4,f
  7988  03A5  0800               	movf	0,w
  7989  03A6  00F5               	movwf	___ftge@ff1+1
  7990  03A7  0A84               	incf	4,f
  7991  03A8  0800               	movf	0,w
  7992  03A9  00F6               	movwf	___ftge@ff1+2
  7993  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  7994  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  7995  03AC  0840               	movf	ISR@rule^(0+128),w
  7996  03AD  00F7               	movwf	___ftge@ff2
  7997  03AE  0841               	movf	(ISR@rule+1)^(0+128),w
  7998  03AF  00F8               	movwf	___ftge@ff2+1
  7999  03B0  0842               	movf	(ISR@rule+2)^(0+128),w
  8000  03B1  00F9               	movwf	___ftge@ff2+2
  8001  03B2  160A  118A  2481  120A  118A  	fcall	___ftge
  8002  03B7  1C03               	btfss	3,0
  8003  03B8  2BD4               	goto	i1l3823
  8004                           
  8005                           ;main.c: 322: rGrande[a] = rule;
  8006  03B9  3003               	movlw	3
  8007  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  8008  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  8009  03BC  00E2               	movwf	??_ISR
  8010  03BD  0862               	movf	??_ISR,w
  8011  03BE  00F0               	movwf	___bmul@multiplicand
  8012  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  8013  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  8014  03C1  083B               	movf	ISR@a_230^(0+128),w
  8015  03C2  120A  118A  27EC  120A  118A  	fcall	___bmul
  8016  03C7  3E10               	addlw	_rGrande& (0+255)
  8017  03C8  0084               	movwf	4
  8018  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  8019  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  8020  03CB  0840               	movf	ISR@rule^(0+128),w
  8021  03CC  1783               	bsf	3,7	;select IRP bank2
  8022  03CD  0080               	movwf	0
  8023  03CE  0A84               	incf	4,f
  8024  03CF  0841               	movf	(ISR@rule+1)^(0+128),w
  8025  03D0  0080               	movwf	0
  8026  03D1  0A84               	incf	4,f
  8027  03D2  0842               	movf	(ISR@rule+2)^(0+128),w
  8028  03D3  0080               	movwf	0
  8029  03D4                     i1l3823:	
  8030                           
  8031                           ;main.c: 323: }
  8032                           ;main.c: 325: x += 1;
  8033  03D4  3000               	movlw	0
  8034  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  8035  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  8036  03D7  00A3               	movwf	___ftadd@f1
  8037  03D8  3080               	movlw	128
  8038  03D9  00A4               	movwf	___ftadd@f1+1
  8039  03DA  303F               	movlw	63
  8040  03DB  00A5               	movwf	___ftadd@f1+2
  8041  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  8042  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  8043  03DE  0845               	movf	ISR@x^(0+128),w
  8044  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  8045  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  8046  03E1  00A6               	movwf	___ftadd@f2
  8047  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  8048  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  8049  03E4  0846               	movf	(ISR@x+1)^(0+128),w
  8050  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  8051  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  8052  03E7  00A7               	movwf	___ftadd@f2+1
  8053  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  8054  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  8055  03EA  0847               	movf	(ISR@x+2)^(0+128),w
  8056  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  8057  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  8058  03ED  00A8               	movwf	___ftadd@f2+2
  8059  03EE  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8060  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  8061  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  8062  03F5  0823               	movf	?___ftadd,w
  8063  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  8064  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  8065  03F8  00C5               	movwf	ISR@x^(0+128)
  8066  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  8067  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  8068  03FB  0824               	movf	?___ftadd+1,w
  8069  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  8070  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  8071  03FE  00C6               	movwf	(ISR@x+1)^(0+128)
  8072  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  8073  0400  1303               	bcf	3,6	;RP1=0, select bank0
  8074  0401  0825               	movf	?___ftadd+2,w
  8075  0402  1683               	bsf	3,5	;RP0=1, select bank1
  8076  0403  1303               	bcf	3,6	;RP1=0, select bank1
  8077  0404  00C7               	movwf	(ISR@x+2)^(0+128)
  8078  0405  3001               	movlw	1
  8079  0406  07BB               	addwf	ISR@a_230^(0+128),f
  8080  0407  1803               	skipnc
  8081  0408  0ABC               	incf	(ISR@a_230+1)^(0+128),f
  8082  0409  3000               	movlw	0
  8083  040A  07BC               	addwf	(ISR@a_230+1)^(0+128),f
  8084  040B  083C               	movf	(ISR@a_230+1)^(0+128),w
  8085  040C  3A80               	xorlw	128
  8086  040D  00FF               	movwf	127
  8087  040E  3080               	movlw	128
  8088  040F  027F               	subwf	127,w
  8089  0410  1D03               	skipz
  8090  0411  2C14               	goto	u568_25
  8091  0412  3010               	movlw	16
  8092  0413  023B               	subwf	ISR@a_230^(0+128),w
  8093  0414                     u568_25:	
  8094  0414  1C03               	skipc
  8095  0415  2B49               	goto	i1l3819
  8096  0416                     i1l3829:	
  8097                           
  8098                           ;main.c: 326: }
  8099                           ;main.c: 327: }
  8100                           ;main.c: 331: x = 0;
  8101  0416  3000               	movlw	0
  8102  0417  1683               	bsf	3,5	;RP0=1, select bank1
  8103  0418  1303               	bcf	3,6	;RP1=0, select bank1
  8104  0419  00C5               	movwf	ISR@x^(0+128)
  8105  041A  3000               	movlw	0
  8106  041B  00C6               	movwf	(ISR@x+1)^(0+128)
  8107  041C  3000               	movlw	0
  8108  041D  00C7               	movwf	(ISR@x+2)^(0+128)
  8109                           
  8110                           ;main.c: 332: float total_area = 0;
  8111  041E  3000               	movlw	0
  8112  041F  00BD               	movwf	ISR@total_area^(0+128)
  8113  0420  3000               	movlw	0
  8114  0421  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8115  0422  3000               	movlw	0
  8116  0423  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8117                           
  8118                           ;main.c: 333: float soma = 0;
  8119  0424  3000               	movlw	0
  8120  0425  00B2               	movwf	ISR@soma^(0+128)
  8121  0426  3000               	movlw	0
  8122  0427  00B3               	movwf	(ISR@soma+1)^(0+128)
  8123  0428  3000               	movlw	0
  8124  0429  00B4               	movwf	(ISR@soma+2)^(0+128)
  8125                           
  8126                           ;main.c: 334: for (int a = 0; a <= 15; a++) {
  8127  042A  01C3               	clrf	ISR@a_233^(0+128)
  8128  042B  01C4               	clrf	(ISR@a_233+1)^(0+128)
  8129  042C  0844               	movf	(ISR@a_233+1)^(0+128),w
  8130  042D  3A80               	xorlw	128
  8131  042E  00FF               	movwf	127
  8132  042F  3080               	movlw	128
  8133  0430  027F               	subwf	127,w
  8134  0431  1D03               	skipz
  8135  0432  2C35               	goto	u569_25
  8136  0433  3010               	movlw	16
  8137  0434  0243               	subwf	ISR@a_233^(0+128),w
  8138  0435                     u569_25:	
  8139  0435  1803               	btfsc	3,0
  8140  0436  2EB1               	goto	i1l3859
  8141  0437                     i1l166:	
  8142                           
  8143                           ;main.c: 335: if (a >= 0 && a <= 5) {
  8144  0437  1683               	bsf	3,5	;RP0=1, select bank1
  8145  0438  1303               	bcf	3,6	;RP1=0, select bank1
  8146  0439  1BC4               	btfsc	(ISR@a_233+1)^(0+128),7
  8147  043A  2CED               	goto	i1l3841
  8148  043B  0844               	movf	(ISR@a_233+1)^(0+128),w
  8149  043C  3A80               	xorlw	128
  8150  043D  00FF               	movwf	127
  8151  043E  3080               	movlw	128
  8152  043F  027F               	subwf	127,w
  8153  0440  1D03               	skipz
  8154  0441  2C44               	goto	u571_25
  8155  0442  3006               	movlw	6
  8156  0443  0243               	subwf	ISR@a_233^(0+128),w
  8157  0444                     u571_25:	
  8158  0444  1803               	skipnc
  8159  0445  2CED               	goto	i1l3841
  8160                           
  8161                           ;main.c: 336: total_area += rBaixo[a];
  8162  0446  3003               	movlw	3
  8163  0447  1283               	bcf	3,5	;RP0=0, select bank0
  8164  0448  1303               	bcf	3,6	;RP1=0, select bank0
  8165  0449  00E2               	movwf	??_ISR
  8166  044A  0862               	movf	??_ISR,w
  8167  044B  00F0               	movwf	___bmul@multiplicand
  8168  044C  1683               	bsf	3,5	;RP0=1, select bank1
  8169  044D  1303               	bcf	3,6	;RP1=0, select bank1
  8170  044E  0843               	movf	ISR@a_233^(0+128),w
  8171  044F  120A  118A  27EC  120A  118A  	fcall	___bmul
  8172  0454  3E90               	addlw	_rBaixo& (0+255)
  8173  0455  0084               	movwf	4
  8174  0456  1783               	bsf	3,7	;select IRP bank3
  8175  0457  0800               	movf	0,w
  8176  0458  1283               	bcf	3,5	;RP0=0, select bank0
  8177  0459  1303               	bcf	3,6	;RP1=0, select bank0
  8178  045A  00A3               	movwf	___ftadd@f1
  8179  045B  0A84               	incf	4,f
  8180  045C  0800               	movf	0,w
  8181  045D  00A4               	movwf	___ftadd@f1+1
  8182  045E  0A84               	incf	4,f
  8183  045F  0800               	movf	0,w
  8184  0460  00A5               	movwf	___ftadd@f1+2
  8185  0461  1683               	bsf	3,5	;RP0=1, select bank1
  8186  0462  1303               	bcf	3,6	;RP1=0, select bank1
  8187  0463  083D               	movf	ISR@total_area^(0+128),w
  8188  0464  1283               	bcf	3,5	;RP0=0, select bank0
  8189  0465  1303               	bcf	3,6	;RP1=0, select bank0
  8190  0466  00A6               	movwf	___ftadd@f2
  8191  0467  1683               	bsf	3,5	;RP0=1, select bank1
  8192  0468  1303               	bcf	3,6	;RP1=0, select bank1
  8193  0469  083E               	movf	(ISR@total_area+1)^(0+128),w
  8194  046A  1283               	bcf	3,5	;RP0=0, select bank0
  8195  046B  1303               	bcf	3,6	;RP1=0, select bank0
  8196  046C  00A7               	movwf	___ftadd@f2+1
  8197  046D  1683               	bsf	3,5	;RP0=1, select bank1
  8198  046E  1303               	bcf	3,6	;RP1=0, select bank1
  8199  046F  083F               	movf	(ISR@total_area+2)^(0+128),w
  8200  0470  1283               	bcf	3,5	;RP0=0, select bank0
  8201  0471  1303               	bcf	3,6	;RP1=0, select bank0
  8202  0472  00A8               	movwf	___ftadd@f2+2
  8203  0473  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8204  0478  1283               	bcf	3,5	;RP0=0, select bank0
  8205  0479  1303               	bcf	3,6	;RP1=0, select bank0
  8206  047A  0823               	movf	?___ftadd,w
  8207  047B  1683               	bsf	3,5	;RP0=1, select bank1
  8208  047C  1303               	bcf	3,6	;RP1=0, select bank1
  8209  047D  00BD               	movwf	ISR@total_area^(0+128)
  8210  047E  1283               	bcf	3,5	;RP0=0, select bank0
  8211  047F  1303               	bcf	3,6	;RP1=0, select bank0
  8212  0480  0824               	movf	?___ftadd+1,w
  8213  0481  1683               	bsf	3,5	;RP0=1, select bank1
  8214  0482  1303               	bcf	3,6	;RP1=0, select bank1
  8215  0483  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8216  0484  1283               	bcf	3,5	;RP0=0, select bank0
  8217  0485  1303               	bcf	3,6	;RP1=0, select bank0
  8218  0486  0825               	movf	?___ftadd+2,w
  8219  0487  1683               	bsf	3,5	;RP0=1, select bank1
  8220  0488  1303               	bcf	3,6	;RP1=0, select bank1
  8221  0489  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8222                           
  8223                           ;main.c: 337: soma += (x * rBaixo[a]);
  8224  048A  3003               	movlw	3
  8225  048B  1283               	bcf	3,5	;RP0=0, select bank0
  8226  048C  1303               	bcf	3,6	;RP1=0, select bank0
  8227  048D  00E2               	movwf	??_ISR
  8228  048E  0862               	movf	??_ISR,w
  8229  048F  00F0               	movwf	___bmul@multiplicand
  8230  0490  1683               	bsf	3,5	;RP0=1, select bank1
  8231  0491  1303               	bcf	3,6	;RP1=0, select bank1
  8232  0492  0843               	movf	ISR@a_233^(0+128),w
  8233  0493  120A  118A  27EC  120A  118A  	fcall	___bmul
  8234  0498  3E90               	addlw	_rBaixo& (0+255)
  8235  0499  0084               	movwf	4
  8236  049A  1783               	bsf	3,7	;select IRP bank3
  8237  049B  0800               	movf	0,w
  8238  049C  1283               	bcf	3,5	;RP0=0, select bank0
  8239  049D  1303               	bcf	3,6	;RP1=0, select bank0
  8240  049E  00D5               	movwf	___ftmul@f2
  8241  049F  0A84               	incf	4,f
  8242  04A0  0800               	movf	0,w
  8243  04A1  00D6               	movwf	___ftmul@f2+1
  8244  04A2  0A84               	incf	4,f
  8245  04A3  0800               	movf	0,w
  8246  04A4  00D7               	movwf	___ftmul@f2+2
  8247  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  8248  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  8249  04A7  0845               	movf	ISR@x^(0+128),w
  8250  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  8251  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  8252  04AA  00D2               	movwf	___ftmul@f1
  8253  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  8254  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  8255  04AD  0846               	movf	(ISR@x+1)^(0+128),w
  8256  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  8257  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  8258  04B0  00D3               	movwf	___ftmul@f1+1
  8259  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  8260  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  8261  04B3  0847               	movf	(ISR@x+2)^(0+128),w
  8262  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  8263  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  8264  04B6  00D4               	movwf	___ftmul@f1+2
  8265  04B7  120A  158A  23F6  120A  118A  	fcall	___ftmul
  8266  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  8267  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  8268  04BE  0852               	movf	?___ftmul,w
  8269  04BF  00A3               	movwf	___ftadd@f1
  8270  04C0  0853               	movf	?___ftmul+1,w
  8271  04C1  00A4               	movwf	___ftadd@f1+1
  8272  04C2  0854               	movf	?___ftmul+2,w
  8273  04C3  00A5               	movwf	___ftadd@f1+2
  8274  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  8275  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  8276  04C6  0832               	movf	ISR@soma^(0+128),w
  8277  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  8278  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  8279  04C9  00A6               	movwf	___ftadd@f2
  8280  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  8281  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  8282  04CC  0833               	movf	(ISR@soma+1)^(0+128),w
  8283  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  8284  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  8285  04CF  00A7               	movwf	___ftadd@f2+1
  8286  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  8287  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  8288  04D2  0834               	movf	(ISR@soma+2)^(0+128),w
  8289  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  8290  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  8291  04D5  00A8               	movwf	___ftadd@f2+2
  8292  04D6  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8293  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  8294  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  8295  04DD  0823               	movf	?___ftadd,w
  8296  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  8297  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  8298  04E0  00B2               	movwf	ISR@soma^(0+128)
  8299  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  8300  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  8301  04E3  0824               	movf	?___ftadd+1,w
  8302  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  8303  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  8304  04E6  00B3               	movwf	(ISR@soma+1)^(0+128)
  8305  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  8306  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  8307  04E9  0825               	movf	?___ftadd+2,w
  8308  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  8309  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  8310  04EC  00B4               	movwf	(ISR@soma+2)^(0+128)
  8311  04ED                     i1l3841:	
  8312                           
  8313                           ;main.c: 338: }
  8314                           ;main.c: 340: if (a >= 5 && a <= 10) {
  8315  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  8316  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  8317  04EF  0844               	movf	(ISR@a_233+1)^(0+128),w
  8318  04F0  3A80               	xorlw	128
  8319  04F1  00FF               	movwf	127
  8320  04F2  3080               	movlw	128
  8321  04F3  027F               	subwf	127,w
  8322  04F4  1D03               	skipz
  8323  04F5  2CF8               	goto	u572_25
  8324  04F6  3005               	movlw	5
  8325  04F7  0243               	subwf	ISR@a_233^(0+128),w
  8326  04F8                     u572_25:	
  8327  04F8  1C03               	skipc
  8328  04F9  2DAE               	goto	i1l3847
  8329  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  8330  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  8331  04FC  0844               	movf	(ISR@a_233+1)^(0+128),w
  8332  04FD  3A80               	xorlw	128
  8333  04FE  00FF               	movwf	127
  8334  04FF  3080               	movlw	128
  8335  0500  027F               	subwf	127,w
  8336  0501  1D03               	skipz
  8337  0502  2D05               	goto	u573_25
  8338  0503  300B               	movlw	11
  8339  0504  0243               	subwf	ISR@a_233^(0+128),w
  8340  0505                     u573_25:	
  8341  0505  1803               	skipnc
  8342  0506  2DAE               	goto	i1l3847
  8343                           
  8344                           ;main.c: 341: total_area += rMedio[a];
  8345  0507  3003               	movlw	3
  8346  0508  1283               	bcf	3,5	;RP0=0, select bank0
  8347  0509  1303               	bcf	3,6	;RP1=0, select bank0
  8348  050A  00E2               	movwf	??_ISR
  8349  050B  0862               	movf	??_ISR,w
  8350  050C  00F0               	movwf	___bmul@multiplicand
  8351  050D  1683               	bsf	3,5	;RP0=1, select bank1
  8352  050E  1303               	bcf	3,6	;RP1=0, select bank1
  8353  050F  0843               	movf	ISR@a_233^(0+128),w
  8354  0510  120A  118A  27EC  120A  118A  	fcall	___bmul
  8355  0515  3E40               	addlw	_rMedio& (0+255)
  8356  0516  0084               	movwf	4
  8357  0517  1783               	bsf	3,7	;select IRP bank2
  8358  0518  0800               	movf	0,w
  8359  0519  1283               	bcf	3,5	;RP0=0, select bank0
  8360  051A  1303               	bcf	3,6	;RP1=0, select bank0
  8361  051B  00A3               	movwf	___ftadd@f1
  8362  051C  0A84               	incf	4,f
  8363  051D  0800               	movf	0,w
  8364  051E  00A4               	movwf	___ftadd@f1+1
  8365  051F  0A84               	incf	4,f
  8366  0520  0800               	movf	0,w
  8367  0521  00A5               	movwf	___ftadd@f1+2
  8368  0522  1683               	bsf	3,5	;RP0=1, select bank1
  8369  0523  1303               	bcf	3,6	;RP1=0, select bank1
  8370  0524  083D               	movf	ISR@total_area^(0+128),w
  8371  0525  1283               	bcf	3,5	;RP0=0, select bank0
  8372  0526  1303               	bcf	3,6	;RP1=0, select bank0
  8373  0527  00A6               	movwf	___ftadd@f2
  8374  0528  1683               	bsf	3,5	;RP0=1, select bank1
  8375  0529  1303               	bcf	3,6	;RP1=0, select bank1
  8376  052A  083E               	movf	(ISR@total_area+1)^(0+128),w
  8377  052B  1283               	bcf	3,5	;RP0=0, select bank0
  8378  052C  1303               	bcf	3,6	;RP1=0, select bank0
  8379  052D  00A7               	movwf	___ftadd@f2+1
  8380  052E  1683               	bsf	3,5	;RP0=1, select bank1
  8381  052F  1303               	bcf	3,6	;RP1=0, select bank1
  8382  0530  083F               	movf	(ISR@total_area+2)^(0+128),w
  8383  0531  1283               	bcf	3,5	;RP0=0, select bank0
  8384  0532  1303               	bcf	3,6	;RP1=0, select bank0
  8385  0533  00A8               	movwf	___ftadd@f2+2
  8386  0534  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8387  0539  1283               	bcf	3,5	;RP0=0, select bank0
  8388  053A  1303               	bcf	3,6	;RP1=0, select bank0
  8389  053B  0823               	movf	?___ftadd,w
  8390  053C  1683               	bsf	3,5	;RP0=1, select bank1
  8391  053D  1303               	bcf	3,6	;RP1=0, select bank1
  8392  053E  00BD               	movwf	ISR@total_area^(0+128)
  8393  053F  1283               	bcf	3,5	;RP0=0, select bank0
  8394  0540  1303               	bcf	3,6	;RP1=0, select bank0
  8395  0541  0824               	movf	?___ftadd+1,w
  8396  0542  1683               	bsf	3,5	;RP0=1, select bank1
  8397  0543  1303               	bcf	3,6	;RP1=0, select bank1
  8398  0544  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8399  0545  1283               	bcf	3,5	;RP0=0, select bank0
  8400  0546  1303               	bcf	3,6	;RP1=0, select bank0
  8401  0547  0825               	movf	?___ftadd+2,w
  8402  0548  1683               	bsf	3,5	;RP0=1, select bank1
  8403  0549  1303               	bcf	3,6	;RP1=0, select bank1
  8404  054A  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8405                           
  8406                           ;main.c: 342: soma += (x * rMedio[a]);
  8407  054B  3003               	movlw	3
  8408  054C  1283               	bcf	3,5	;RP0=0, select bank0
  8409  054D  1303               	bcf	3,6	;RP1=0, select bank0
  8410  054E  00E2               	movwf	??_ISR
  8411  054F  0862               	movf	??_ISR,w
  8412  0550  00F0               	movwf	___bmul@multiplicand
  8413  0551  1683               	bsf	3,5	;RP0=1, select bank1
  8414  0552  1303               	bcf	3,6	;RP1=0, select bank1
  8415  0553  0843               	movf	ISR@a_233^(0+128),w
  8416  0554  120A  118A  27EC  120A  118A  	fcall	___bmul
  8417  0559  3E40               	addlw	_rMedio& (0+255)
  8418  055A  0084               	movwf	4
  8419  055B  1783               	bsf	3,7	;select IRP bank2
  8420  055C  0800               	movf	0,w
  8421  055D  1283               	bcf	3,5	;RP0=0, select bank0
  8422  055E  1303               	bcf	3,6	;RP1=0, select bank0
  8423  055F  00D5               	movwf	___ftmul@f2
  8424  0560  0A84               	incf	4,f
  8425  0561  0800               	movf	0,w
  8426  0562  00D6               	movwf	___ftmul@f2+1
  8427  0563  0A84               	incf	4,f
  8428  0564  0800               	movf	0,w
  8429  0565  00D7               	movwf	___ftmul@f2+2
  8430  0566  1683               	bsf	3,5	;RP0=1, select bank1
  8431  0567  1303               	bcf	3,6	;RP1=0, select bank1
  8432  0568  0845               	movf	ISR@x^(0+128),w
  8433  0569  1283               	bcf	3,5	;RP0=0, select bank0
  8434  056A  1303               	bcf	3,6	;RP1=0, select bank0
  8435  056B  00D2               	movwf	___ftmul@f1
  8436  056C  1683               	bsf	3,5	;RP0=1, select bank1
  8437  056D  1303               	bcf	3,6	;RP1=0, select bank1
  8438  056E  0846               	movf	(ISR@x+1)^(0+128),w
  8439  056F  1283               	bcf	3,5	;RP0=0, select bank0
  8440  0570  1303               	bcf	3,6	;RP1=0, select bank0
  8441  0571  00D3               	movwf	___ftmul@f1+1
  8442  0572  1683               	bsf	3,5	;RP0=1, select bank1
  8443  0573  1303               	bcf	3,6	;RP1=0, select bank1
  8444  0574  0847               	movf	(ISR@x+2)^(0+128),w
  8445  0575  1283               	bcf	3,5	;RP0=0, select bank0
  8446  0576  1303               	bcf	3,6	;RP1=0, select bank0
  8447  0577  00D4               	movwf	___ftmul@f1+2
  8448  0578  120A  158A  23F6  120A  118A  	fcall	___ftmul
  8449  057D  1283               	bcf	3,5	;RP0=0, select bank0
  8450  057E  1303               	bcf	3,6	;RP1=0, select bank0
  8451  057F  0852               	movf	?___ftmul,w
  8452  0580  00A3               	movwf	___ftadd@f1
  8453  0581  0853               	movf	?___ftmul+1,w
  8454  0582  00A4               	movwf	___ftadd@f1+1
  8455  0583  0854               	movf	?___ftmul+2,w
  8456  0584  00A5               	movwf	___ftadd@f1+2
  8457  0585  1683               	bsf	3,5	;RP0=1, select bank1
  8458  0586  1303               	bcf	3,6	;RP1=0, select bank1
  8459  0587  0832               	movf	ISR@soma^(0+128),w
  8460  0588  1283               	bcf	3,5	;RP0=0, select bank0
  8461  0589  1303               	bcf	3,6	;RP1=0, select bank0
  8462  058A  00A6               	movwf	___ftadd@f2
  8463  058B  1683               	bsf	3,5	;RP0=1, select bank1
  8464  058C  1303               	bcf	3,6	;RP1=0, select bank1
  8465  058D  0833               	movf	(ISR@soma+1)^(0+128),w
  8466  058E  1283               	bcf	3,5	;RP0=0, select bank0
  8467  058F  1303               	bcf	3,6	;RP1=0, select bank0
  8468  0590  00A7               	movwf	___ftadd@f2+1
  8469  0591  1683               	bsf	3,5	;RP0=1, select bank1
  8470  0592  1303               	bcf	3,6	;RP1=0, select bank1
  8471  0593  0834               	movf	(ISR@soma+2)^(0+128),w
  8472  0594  1283               	bcf	3,5	;RP0=0, select bank0
  8473  0595  1303               	bcf	3,6	;RP1=0, select bank0
  8474  0596  00A8               	movwf	___ftadd@f2+2
  8475  0597  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8476  059C  1283               	bcf	3,5	;RP0=0, select bank0
  8477  059D  1303               	bcf	3,6	;RP1=0, select bank0
  8478  059E  0823               	movf	?___ftadd,w
  8479  059F  1683               	bsf	3,5	;RP0=1, select bank1
  8480  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  8481  05A1  00B2               	movwf	ISR@soma^(0+128)
  8482  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  8483  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  8484  05A4  0824               	movf	?___ftadd+1,w
  8485  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  8486  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  8487  05A7  00B3               	movwf	(ISR@soma+1)^(0+128)
  8488  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  8489  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  8490  05AA  0825               	movf	?___ftadd+2,w
  8491  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  8492  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  8493  05AD  00B4               	movwf	(ISR@soma+2)^(0+128)
  8494  05AE                     i1l3847:	
  8495                           
  8496                           ;main.c: 343: }
  8497                           ;main.c: 345: if (a >= 10 && a <= 15) {
  8498  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  8499  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  8500  05B0  0844               	movf	(ISR@a_233+1)^(0+128),w
  8501  05B1  3A80               	xorlw	128
  8502  05B2  00FF               	movwf	127
  8503  05B3  3080               	movlw	128
  8504  05B4  027F               	subwf	127,w
  8505  05B5  1D03               	skipz
  8506  05B6  2DB9               	goto	u574_25
  8507  05B7  300A               	movlw	10
  8508  05B8  0243               	subwf	ISR@a_233^(0+128),w
  8509  05B9                     u574_25:	
  8510  05B9  1C03               	skipc
  8511  05BA  2E6F               	goto	i1l3853
  8512  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  8513  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  8514  05BD  0844               	movf	(ISR@a_233+1)^(0+128),w
  8515  05BE  3A80               	xorlw	128
  8516  05BF  00FF               	movwf	127
  8517  05C0  3080               	movlw	128
  8518  05C1  027F               	subwf	127,w
  8519  05C2  1D03               	skipz
  8520  05C3  2DC6               	goto	u575_25
  8521  05C4  3010               	movlw	16
  8522  05C5  0243               	subwf	ISR@a_233^(0+128),w
  8523  05C6                     u575_25:	
  8524  05C6  1803               	skipnc
  8525  05C7  2E6F               	goto	i1l3853
  8526                           
  8527                           ;main.c: 346: total_area += rGrande[a];
  8528  05C8  3003               	movlw	3
  8529  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  8530  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  8531  05CB  00E2               	movwf	??_ISR
  8532  05CC  0862               	movf	??_ISR,w
  8533  05CD  00F0               	movwf	___bmul@multiplicand
  8534  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  8535  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  8536  05D0  0843               	movf	ISR@a_233^(0+128),w
  8537  05D1  120A  118A  27EC  120A  118A  	fcall	___bmul
  8538  05D6  3E10               	addlw	_rGrande& (0+255)
  8539  05D7  0084               	movwf	4
  8540  05D8  1783               	bsf	3,7	;select IRP bank2
  8541  05D9  0800               	movf	0,w
  8542  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  8543  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  8544  05DC  00A3               	movwf	___ftadd@f1
  8545  05DD  0A84               	incf	4,f
  8546  05DE  0800               	movf	0,w
  8547  05DF  00A4               	movwf	___ftadd@f1+1
  8548  05E0  0A84               	incf	4,f
  8549  05E1  0800               	movf	0,w
  8550  05E2  00A5               	movwf	___ftadd@f1+2
  8551  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  8552  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  8553  05E5  083D               	movf	ISR@total_area^(0+128),w
  8554  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  8555  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  8556  05E8  00A6               	movwf	___ftadd@f2
  8557  05E9  1683               	bsf	3,5	;RP0=1, select bank1
  8558  05EA  1303               	bcf	3,6	;RP1=0, select bank1
  8559  05EB  083E               	movf	(ISR@total_area+1)^(0+128),w
  8560  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  8561  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  8562  05EE  00A7               	movwf	___ftadd@f2+1
  8563  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  8564  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  8565  05F1  083F               	movf	(ISR@total_area+2)^(0+128),w
  8566  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  8567  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  8568  05F4  00A8               	movwf	___ftadd@f2+2
  8569  05F5  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8570  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  8571  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  8572  05FC  0823               	movf	?___ftadd,w
  8573  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  8574  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  8575  05FF  00BD               	movwf	ISR@total_area^(0+128)
  8576  0600  1283               	bcf	3,5	;RP0=0, select bank0
  8577  0601  1303               	bcf	3,6	;RP1=0, select bank0
  8578  0602  0824               	movf	?___ftadd+1,w
  8579  0603  1683               	bsf	3,5	;RP0=1, select bank1
  8580  0604  1303               	bcf	3,6	;RP1=0, select bank1
  8581  0605  00BE               	movwf	(ISR@total_area+1)^(0+128)
  8582  0606  1283               	bcf	3,5	;RP0=0, select bank0
  8583  0607  1303               	bcf	3,6	;RP1=0, select bank0
  8584  0608  0825               	movf	?___ftadd+2,w
  8585  0609  1683               	bsf	3,5	;RP0=1, select bank1
  8586  060A  1303               	bcf	3,6	;RP1=0, select bank1
  8587  060B  00BF               	movwf	(ISR@total_area+2)^(0+128)
  8588                           
  8589                           ;main.c: 347: soma += (x * rGrande[a]);
  8590  060C  3003               	movlw	3
  8591  060D  1283               	bcf	3,5	;RP0=0, select bank0
  8592  060E  1303               	bcf	3,6	;RP1=0, select bank0
  8593  060F  00E2               	movwf	??_ISR
  8594  0610  0862               	movf	??_ISR,w
  8595  0611  00F0               	movwf	___bmul@multiplicand
  8596  0612  1683               	bsf	3,5	;RP0=1, select bank1
  8597  0613  1303               	bcf	3,6	;RP1=0, select bank1
  8598  0614  0843               	movf	ISR@a_233^(0+128),w
  8599  0615  120A  118A  27EC  120A  118A  	fcall	___bmul
  8600  061A  3E10               	addlw	_rGrande& (0+255)
  8601  061B  0084               	movwf	4
  8602  061C  1783               	bsf	3,7	;select IRP bank2
  8603  061D  0800               	movf	0,w
  8604  061E  1283               	bcf	3,5	;RP0=0, select bank0
  8605  061F  1303               	bcf	3,6	;RP1=0, select bank0
  8606  0620  00D5               	movwf	___ftmul@f2
  8607  0621  0A84               	incf	4,f
  8608  0622  0800               	movf	0,w
  8609  0623  00D6               	movwf	___ftmul@f2+1
  8610  0624  0A84               	incf	4,f
  8611  0625  0800               	movf	0,w
  8612  0626  00D7               	movwf	___ftmul@f2+2
  8613  0627  1683               	bsf	3,5	;RP0=1, select bank1
  8614  0628  1303               	bcf	3,6	;RP1=0, select bank1
  8615  0629  0845               	movf	ISR@x^(0+128),w
  8616  062A  1283               	bcf	3,5	;RP0=0, select bank0
  8617  062B  1303               	bcf	3,6	;RP1=0, select bank0
  8618  062C  00D2               	movwf	___ftmul@f1
  8619  062D  1683               	bsf	3,5	;RP0=1, select bank1
  8620  062E  1303               	bcf	3,6	;RP1=0, select bank1
  8621  062F  0846               	movf	(ISR@x+1)^(0+128),w
  8622  0630  1283               	bcf	3,5	;RP0=0, select bank0
  8623  0631  1303               	bcf	3,6	;RP1=0, select bank0
  8624  0632  00D3               	movwf	___ftmul@f1+1
  8625  0633  1683               	bsf	3,5	;RP0=1, select bank1
  8626  0634  1303               	bcf	3,6	;RP1=0, select bank1
  8627  0635  0847               	movf	(ISR@x+2)^(0+128),w
  8628  0636  1283               	bcf	3,5	;RP0=0, select bank0
  8629  0637  1303               	bcf	3,6	;RP1=0, select bank0
  8630  0638  00D4               	movwf	___ftmul@f1+2
  8631  0639  120A  158A  23F6  120A  118A  	fcall	___ftmul
  8632  063E  1283               	bcf	3,5	;RP0=0, select bank0
  8633  063F  1303               	bcf	3,6	;RP1=0, select bank0
  8634  0640  0852               	movf	?___ftmul,w
  8635  0641  00A3               	movwf	___ftadd@f1
  8636  0642  0853               	movf	?___ftmul+1,w
  8637  0643  00A4               	movwf	___ftadd@f1+1
  8638  0644  0854               	movf	?___ftmul+2,w
  8639  0645  00A5               	movwf	___ftadd@f1+2
  8640  0646  1683               	bsf	3,5	;RP0=1, select bank1
  8641  0647  1303               	bcf	3,6	;RP1=0, select bank1
  8642  0648  0832               	movf	ISR@soma^(0+128),w
  8643  0649  1283               	bcf	3,5	;RP0=0, select bank0
  8644  064A  1303               	bcf	3,6	;RP1=0, select bank0
  8645  064B  00A6               	movwf	___ftadd@f2
  8646  064C  1683               	bsf	3,5	;RP0=1, select bank1
  8647  064D  1303               	bcf	3,6	;RP1=0, select bank1
  8648  064E  0833               	movf	(ISR@soma+1)^(0+128),w
  8649  064F  1283               	bcf	3,5	;RP0=0, select bank0
  8650  0650  1303               	bcf	3,6	;RP1=0, select bank0
  8651  0651  00A7               	movwf	___ftadd@f2+1
  8652  0652  1683               	bsf	3,5	;RP0=1, select bank1
  8653  0653  1303               	bcf	3,6	;RP1=0, select bank1
  8654  0654  0834               	movf	(ISR@soma+2)^(0+128),w
  8655  0655  1283               	bcf	3,5	;RP0=0, select bank0
  8656  0656  1303               	bcf	3,6	;RP1=0, select bank0
  8657  0657  00A8               	movwf	___ftadd@f2+2
  8658  0658  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8659  065D  1283               	bcf	3,5	;RP0=0, select bank0
  8660  065E  1303               	bcf	3,6	;RP1=0, select bank0
  8661  065F  0823               	movf	?___ftadd,w
  8662  0660  1683               	bsf	3,5	;RP0=1, select bank1
  8663  0661  1303               	bcf	3,6	;RP1=0, select bank1
  8664  0662  00B2               	movwf	ISR@soma^(0+128)
  8665  0663  1283               	bcf	3,5	;RP0=0, select bank0
  8666  0664  1303               	bcf	3,6	;RP1=0, select bank0
  8667  0665  0824               	movf	?___ftadd+1,w
  8668  0666  1683               	bsf	3,5	;RP0=1, select bank1
  8669  0667  1303               	bcf	3,6	;RP1=0, select bank1
  8670  0668  00B3               	movwf	(ISR@soma+1)^(0+128)
  8671  0669  1283               	bcf	3,5	;RP0=0, select bank0
  8672  066A  1303               	bcf	3,6	;RP1=0, select bank0
  8673  066B  0825               	movf	?___ftadd+2,w
  8674  066C  1683               	bsf	3,5	;RP0=1, select bank1
  8675  066D  1303               	bcf	3,6	;RP1=0, select bank1
  8676  066E  00B4               	movwf	(ISR@soma+2)^(0+128)
  8677  066F                     i1l3853:	
  8678                           
  8679                           ;main.c: 348: }
  8680                           ;main.c: 349: x += 1;
  8681  066F  3000               	movlw	0
  8682  0670  1283               	bcf	3,5	;RP0=0, select bank0
  8683  0671  1303               	bcf	3,6	;RP1=0, select bank0
  8684  0672  00A3               	movwf	___ftadd@f1
  8685  0673  3080               	movlw	128
  8686  0674  00A4               	movwf	___ftadd@f1+1
  8687  0675  303F               	movlw	63
  8688  0676  00A5               	movwf	___ftadd@f1+2
  8689  0677  1683               	bsf	3,5	;RP0=1, select bank1
  8690  0678  1303               	bcf	3,6	;RP1=0, select bank1
  8691  0679  0845               	movf	ISR@x^(0+128),w
  8692  067A  1283               	bcf	3,5	;RP0=0, select bank0
  8693  067B  1303               	bcf	3,6	;RP1=0, select bank0
  8694  067C  00A6               	movwf	___ftadd@f2
  8695  067D  1683               	bsf	3,5	;RP0=1, select bank1
  8696  067E  1303               	bcf	3,6	;RP1=0, select bank1
  8697  067F  0846               	movf	(ISR@x+1)^(0+128),w
  8698  0680  1283               	bcf	3,5	;RP0=0, select bank0
  8699  0681  1303               	bcf	3,6	;RP1=0, select bank0
  8700  0682  00A7               	movwf	___ftadd@f2+1
  8701  0683  1683               	bsf	3,5	;RP0=1, select bank1
  8702  0684  1303               	bcf	3,6	;RP1=0, select bank1
  8703  0685  0847               	movf	(ISR@x+2)^(0+128),w
  8704  0686  1283               	bcf	3,5	;RP0=0, select bank0
  8705  0687  1303               	bcf	3,6	;RP1=0, select bank0
  8706  0688  00A8               	movwf	___ftadd@f2+2
  8707  0689  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8708  068E  1283               	bcf	3,5	;RP0=0, select bank0
  8709  068F  1303               	bcf	3,6	;RP1=0, select bank0
  8710  0690  0823               	movf	?___ftadd,w
  8711  0691  1683               	bsf	3,5	;RP0=1, select bank1
  8712  0692  1303               	bcf	3,6	;RP1=0, select bank1
  8713  0693  00C5               	movwf	ISR@x^(0+128)
  8714  0694  1283               	bcf	3,5	;RP0=0, select bank0
  8715  0695  1303               	bcf	3,6	;RP1=0, select bank0
  8716  0696  0824               	movf	?___ftadd+1,w
  8717  0697  1683               	bsf	3,5	;RP0=1, select bank1
  8718  0698  1303               	bcf	3,6	;RP1=0, select bank1
  8719  0699  00C6               	movwf	(ISR@x+1)^(0+128)
  8720  069A  1283               	bcf	3,5	;RP0=0, select bank0
  8721  069B  1303               	bcf	3,6	;RP1=0, select bank0
  8722  069C  0825               	movf	?___ftadd+2,w
  8723  069D  1683               	bsf	3,5	;RP0=1, select bank1
  8724  069E  1303               	bcf	3,6	;RP1=0, select bank1
  8725  069F  00C7               	movwf	(ISR@x+2)^(0+128)
  8726  06A0  3001               	movlw	1
  8727  06A1  07C3               	addwf	ISR@a_233^(0+128),f
  8728  06A2  1803               	skipnc
  8729  06A3  0AC4               	incf	(ISR@a_233+1)^(0+128),f
  8730  06A4  3000               	movlw	0
  8731  06A5  07C4               	addwf	(ISR@a_233+1)^(0+128),f
  8732  06A6  0844               	movf	(ISR@a_233+1)^(0+128),w
  8733  06A7  3A80               	xorlw	128
  8734  06A8  00FF               	movwf	127
  8735  06A9  3080               	movlw	128
  8736  06AA  027F               	subwf	127,w
  8737  06AB  1D03               	skipz
  8738  06AC  2EAF               	goto	u576_25
  8739  06AD  3010               	movlw	16
  8740  06AE  0243               	subwf	ISR@a_233^(0+128),w
  8741  06AF                     u576_25:	
  8742  06AF  1C03               	skipc
  8743  06B0  2C37               	goto	i1l166
  8744  06B1                     i1l3859:	
  8745                           
  8746                           ;main.c: 350: }
  8747                           ;main.c: 353: float reajuste = 0;
  8748  06B1  3000               	movlw	0
  8749  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  8750  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  8751  06B4  00A8               	movwf	ISR@reajuste^(0+128)
  8752  06B5  3000               	movlw	0
  8753  06B6  00A9               	movwf	(ISR@reajuste+1)^(0+128)
  8754  06B7  3000               	movlw	0
  8755  06B8  00AA               	movwf	(ISR@reajuste+2)^(0+128)
  8756                           
  8757                           ;main.c: 354: if (total_area != 0) {
  8758  06B9  083F               	movf	(ISR@total_area+2)^(0+128),w
  8759  06BA  043E               	iorwf	(ISR@total_area+1)^(0+128),w
  8760  06BB  043D               	iorwf	ISR@total_area^(0+128),w
  8761  06BC  1903               	skipnz
  8762  06BD  2EF7               	goto	i1l3863
  8763                           
  8764                           ;main.c: 355: reajuste = soma / total_area;
  8765  06BE  083D               	movf	ISR@total_area^(0+128),w
  8766  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  8767  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  8768  06C1  00B0               	movwf	___ftdiv@f2
  8769  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  8770  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  8771  06C4  083E               	movf	(ISR@total_area+1)^(0+128),w
  8772  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  8773  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  8774  06C7  00B1               	movwf	___ftdiv@f2+1
  8775  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  8776  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  8777  06CA  083F               	movf	(ISR@total_area+2)^(0+128),w
  8778  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  8779  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  8780  06CD  00B2               	movwf	___ftdiv@f2+2
  8781  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  8782  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  8783  06D0  0832               	movf	ISR@soma^(0+128),w
  8784  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  8785  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  8786  06D3  00B3               	movwf	___ftdiv@f1
  8787  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  8788  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  8789  06D6  0833               	movf	(ISR@soma+1)^(0+128),w
  8790  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  8791  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  8792  06D9  00B4               	movwf	___ftdiv@f1+1
  8793  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  8794  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  8795  06DC  0834               	movf	(ISR@soma+2)^(0+128),w
  8796  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  8797  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  8798  06DF  00B5               	movwf	___ftdiv@f1+2
  8799  06E0  120A  158A  233E  120A  118A  	fcall	___ftdiv
  8800  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  8801  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  8802  06E7  0830               	movf	?___ftdiv,w
  8803  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  8804  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  8805  06EA  00A8               	movwf	ISR@reajuste^(0+128)
  8806  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  8807  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  8808  06ED  0831               	movf	?___ftdiv+1,w
  8809  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  8810  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  8811  06F0  00A9               	movwf	(ISR@reajuste+1)^(0+128)
  8812  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  8813  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  8814  06F3  0832               	movf	?___ftdiv+2,w
  8815  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  8816  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  8817  06F6  00AA               	movwf	(ISR@reajuste+2)^(0+128)
  8818  06F7                     i1l3863:	
  8819                           
  8820                           ;main.c: 356: }
  8821                           ;main.c: 360: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, erro_atual)) * (setpoint 
      +                          > rpm ? 1 : -1), 1023), 0);
  8822  06F7  0866               	movf	(_setpoint+1)^(0+128),w
  8823  06F8  0263               	subwf	(_rpm+1)^(0+128),w
  8824  06F9  1D03               	skipz
  8825  06FA  2EFD               	goto	u578_25
  8826  06FB  0865               	movf	_setpoint^(0+128),w
  8827  06FC  0262               	subwf	_rpm^(0+128),w
  8828  06FD                     u578_25:	
  8829  06FD  1C03               	skipc
  8830  06FE  2F03               	goto	i1l3867
  8831  06FF  30FF               	movlw	255
  8832  0700  00AB               	movwf	_ISR$235^(0+128)
  8833  0701  30FF               	movlw	255
  8834  0702  2F06               	goto	L1
  8835  0703                     i1l3867:	
  8836  0703  3001               	movlw	1
  8837  0704  00AB               	movwf	_ISR$235^(0+128)
  8838  0705  3000               	movlw	0
  8839  0706                     L1:	
  8840  0706  00AC               	movwf	(_ISR$235^(0+128)+1)
  8841  0707  082C               	movf	(_ISR$235+1)^(0+128),w
  8842  0708  1283               	bcf	3,5	;RP0=0, select bank0
  8843  0709  1303               	bcf	3,6	;RP1=0, select bank0
  8844  070A  01C3               	clrf	___wmul@multiplicand+1
  8845  070B  07C3               	addwf	___wmul@multiplicand+1,f
  8846  070C  1683               	bsf	3,5	;RP0=1, select bank1
  8847  070D  1303               	bcf	3,6	;RP1=0, select bank1
  8848  070E  082B               	movf	_ISR$235^(0+128),w
  8849  070F  1283               	bcf	3,5	;RP0=0, select bank0
  8850  0710  1303               	bcf	3,6	;RP1=0, select bank0
  8851  0711  01C2               	clrf	___wmul@multiplicand
  8852  0712  07C2               	addwf	___wmul@multiplicand,f
  8853  0713  1683               	bsf	3,5	;RP0=1, select bank1
  8854  0714  1303               	bcf	3,6	;RP1=0, select bank1
  8855  0715  085B               	movf	(_erro_atual+1)^(0+128),w
  8856  0716  01F9               	clrf	___awtoft@c+1
  8857  0717  07F9               	addwf	___awtoft@c+1,f
  8858  0718  085A               	movf	_erro_atual^(0+128),w
  8859  0719  01F8               	clrf	___awtoft@c
  8860  071A  07F8               	addwf	___awtoft@c,f
  8861  071B  160A  118A  224A  120A  118A  	fcall	___awtoft
  8862  0720  0878               	movf	?___awtoft,w
  8863  0721  1283               	bcf	3,5	;RP0=0, select bank0
  8864  0722  1303               	bcf	3,6	;RP1=0, select bank0
  8865  0723  00A9               	movwf	minimo@b
  8866  0724  0879               	movf	?___awtoft+1,w
  8867  0725  00AA               	movwf	minimo@b+1
  8868  0726  087A               	movf	?___awtoft+2,w
  8869  0727  00AB               	movwf	minimo@b+2
  8870  0728  1683               	bsf	3,5	;RP0=1, select bank1
  8871  0729  1303               	bcf	3,6	;RP1=0, select bank1
  8872  072A  0828               	movf	ISR@reajuste^(0+128),w
  8873  072B  1283               	bcf	3,5	;RP0=0, select bank0
  8874  072C  1303               	bcf	3,6	;RP1=0, select bank0
  8875  072D  00A6               	movwf	minimo@a
  8876  072E  1683               	bsf	3,5	;RP0=1, select bank1
  8877  072F  1303               	bcf	3,6	;RP1=0, select bank1
  8878  0730  0829               	movf	(ISR@reajuste+1)^(0+128),w
  8879  0731  1283               	bcf	3,5	;RP0=0, select bank0
  8880  0732  1303               	bcf	3,6	;RP1=0, select bank0
  8881  0733  00A7               	movwf	minimo@a+1
  8882  0734  1683               	bsf	3,5	;RP0=1, select bank1
  8883  0735  1303               	bcf	3,6	;RP1=0, select bank1
  8884  0736  082A               	movf	(ISR@reajuste+2)^(0+128),w
  8885  0737  1283               	bcf	3,5	;RP0=0, select bank0
  8886  0738  1303               	bcf	3,6	;RP1=0, select bank0
  8887  0739  00A8               	movwf	minimo@a+2
  8888  073A  160A  118A  222C  120A  118A  	fcall	_minimo
  8889  073F  1283               	bcf	3,5	;RP0=0, select bank0
  8890  0740  1303               	bcf	3,6	;RP1=0, select bank0
  8891  0741  0826               	movf	?_minimo,w
  8892  0742  00B2               	movwf	___fttol@f1
  8893  0743  0827               	movf	?_minimo+1,w
  8894  0744  00B3               	movwf	___fttol@f1+1
  8895  0745  0828               	movf	?_minimo+2,w
  8896  0746  00B4               	movwf	___fttol@f1+2
  8897  0747  160A  118A  26E3  120A  118A  	fcall	___fttol
  8898  074C  1283               	bcf	3,5	;RP0=0, select bank0
  8899  074D  1303               	bcf	3,6	;RP1=0, select bank0
  8900  074E  0833               	movf	?___fttol+1,w
  8901  074F  01C1               	clrf	___wmul@multiplier+1
  8902  0750  07C1               	addwf	___wmul@multiplier+1,f
  8903  0751  0832               	movf	?___fttol,w
  8904  0752  01C0               	clrf	___wmul@multiplier
  8905  0753  07C0               	addwf	___wmul@multiplier,f
  8906  0754  160A  118A  22D1  120A  118A  	fcall	___wmul
  8907  0759  1683               	bsf	3,5	;RP0=1, select bank1
  8908  075A  1303               	bcf	3,6	;RP1=0, select bank1
  8909  075B  085E               	movf	_pwm^(0+128),w
  8910  075C  1283               	bcf	3,5	;RP0=0, select bank0
  8911  075D  1303               	bcf	3,6	;RP1=0, select bank0
  8912  075E  0740               	addwf	?___wmul,w
  8913  075F  00C6               	movwf	___lwtoft@c
  8914  0760  1683               	bsf	3,5	;RP0=1, select bank1
  8915  0761  1303               	bcf	3,6	;RP1=0, select bank1
  8916  0762  085F               	movf	(_pwm+1)^(0+128),w
  8917  0763  1803               	skipnc
  8918  0764  0A5F               	incf	(_pwm+1)^(0+128),w
  8919  0765  1283               	bcf	3,5	;RP0=0, select bank0
  8920  0766  1303               	bcf	3,6	;RP1=0, select bank0
  8921  0767  0741               	addwf	?___wmul+1,w
  8922  0768  00C7               	movwf	___lwtoft@c+1
  8923  0769  160A  118A  21BF  120A  118A  	fcall	___lwtoft
  8924  076E  1283               	bcf	3,5	;RP0=0, select bank0
  8925  076F  1303               	bcf	3,6	;RP1=0, select bank0
  8926  0770  0846               	movf	?___lwtoft,w
  8927  0771  1683               	bsf	3,5	;RP0=1, select bank1
  8928  0772  1303               	bcf	3,6	;RP1=0, select bank1
  8929  0773  00A5               	movwf	_ISR$1662^(0+128)
  8930  0774  1283               	bcf	3,5	;RP0=0, select bank0
  8931  0775  1303               	bcf	3,6	;RP1=0, select bank0
  8932  0776  0847               	movf	?___lwtoft+1,w
  8933  0777  1683               	bsf	3,5	;RP0=1, select bank1
  8934  0778  1303               	bcf	3,6	;RP1=0, select bank1
  8935  0779  00A6               	movwf	(_ISR$1662+1)^(0+128)
  8936  077A  1283               	bcf	3,5	;RP0=0, select bank0
  8937  077B  1303               	bcf	3,6	;RP1=0, select bank0
  8938  077C  0848               	movf	?___lwtoft+2,w
  8939  077D  1683               	bsf	3,5	;RP0=1, select bank1
  8940  077E  1303               	bcf	3,6	;RP1=0, select bank1
  8941  077F  00A7               	movwf	(_ISR$1662+2)^(0+128)
  8942  0780  3000               	movlw	0
  8943  0781  1283               	bcf	3,5	;RP0=0, select bank0
  8944  0782  1303               	bcf	3,6	;RP1=0, select bank0
  8945  0783  00AF               	movwf	maximo@b
  8946  0784  3000               	movlw	0
  8947  0785  00B0               	movwf	maximo@b+1
  8948  0786  3000               	movlw	0
  8949  0787  00B1               	movwf	maximo@b+2
  8950  0788  30C0               	movlw	192
  8951  0789  00A9               	movwf	minimo@b
  8952  078A  307F               	movlw	127
  8953  078B  00AA               	movwf	minimo@b+1
  8954  078C  3044               	movlw	68
  8955  078D  00AB               	movwf	minimo@b+2
  8956  078E  1683               	bsf	3,5	;RP0=1, select bank1
  8957  078F  1303               	bcf	3,6	;RP1=0, select bank1
  8958  0790  0825               	movf	_ISR$1662^(0+128),w
  8959  0791  1283               	bcf	3,5	;RP0=0, select bank0
  8960  0792  1303               	bcf	3,6	;RP1=0, select bank0
  8961  0793  00A6               	movwf	minimo@a
  8962  0794  1683               	bsf	3,5	;RP0=1, select bank1
  8963  0795  1303               	bcf	3,6	;RP1=0, select bank1
  8964  0796  0826               	movf	(_ISR$1662+1)^(0+128),w
  8965  0797  1283               	bcf	3,5	;RP0=0, select bank0
  8966  0798  1303               	bcf	3,6	;RP1=0, select bank0
  8967  0799  00A7               	movwf	minimo@a+1
  8968  079A  1683               	bsf	3,5	;RP0=1, select bank1
  8969  079B  1303               	bcf	3,6	;RP1=0, select bank1
  8970  079C  0827               	movf	(_ISR$1662+2)^(0+128),w
  8971  079D  1283               	bcf	3,5	;RP0=0, select bank0
  8972  079E  1303               	bcf	3,6	;RP1=0, select bank0
  8973  079F  00A8               	movwf	minimo@a+2
  8974  07A0  160A  118A  222C  120A  118A  	fcall	_minimo
  8975  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  8976  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  8977  07A7  0826               	movf	?_minimo,w
  8978  07A8  00AC               	movwf	maximo@a
  8979  07A9  0827               	movf	?_minimo+1,w
  8980  07AA  00AD               	movwf	maximo@a+1
  8981  07AB  0828               	movf	?_minimo+2,w
  8982  07AC  00AE               	movwf	maximo@a+2
  8983  07AD  160A  118A  220E  120A  118A  	fcall	_maximo
  8984  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  8985  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  8986  07B4  082C               	movf	?_maximo,w
  8987  07B5  00B2               	movwf	___fttol@f1
  8988  07B6  082D               	movf	?_maximo+1,w
  8989  07B7  00B3               	movwf	___fttol@f1+1
  8990  07B8  082E               	movf	?_maximo+2,w
  8991  07B9  00B4               	movwf	___fttol@f1+2
  8992  07BA  160A  118A  26E3  120A  118A  	fcall	___fttol
  8993  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  8994  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  8995  07C1  0833               	movf	?___fttol+1,w
  8996  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  8997  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  8998  07C4  01DF               	clrf	(_pwm+1)^(0+128)
  8999  07C5  07DF               	addwf	(_pwm+1)^(0+128),f
  9000  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  9001  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  9002  07C8  0832               	movf	?___fttol,w
  9003  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  9004  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  9005  07CB  01DE               	clrf	_pwm^(0+128)
  9006  07CC  07DE               	addwf	_pwm^(0+128),f
  9007                           
  9008                           ;main.c: 362: PWM_DutyCycle2(pwm);
  9009  07CD  085F               	movf	(_pwm+1)^(0+128),w
  9010  07CE  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  9011  07CF  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  9012  07D0  085E               	movf	_pwm^(0+128),w
  9013  07D1  01F0               	clrf	i1PWM_DutyCycle2@valor
  9014  07D2  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  9015  07D3  160A  118A  21D7  120A  118A  	fcall	i1_PWM_DutyCycle2
  9016                           
  9017                           ;main.c: 365: PORTBbits.RB6 = 0;
  9018  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  9019  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  9020  07DA  1306               	bcf	6,6	;volatile
  9021  07DB                     i1l3877:	
  9022                           
  9023                           ;main.c: 366: }
  9024                           ;main.c: 369: INTCONbits.T0IF = 0;
  9025  07DB  110B               	bcf	11,2	;volatile
  9026  07DC                     i1l3879:	
  9027                           
  9028                           ;main.c: 370: }
  9029                           ;main.c: 373: if (PIR1bits.TMR1IF) {
  9030  07DC  180C               	btfsc	12,0	;volatile
  9031                           
  9032                           ;main.c: 378: PIR1bits.TMR1IF = 0;
  9033  07DD  100C               	bcf	12,0	;volatile
  9034  07DE  0867               	movf	??_ISR+5,w
  9035  07DF  00FF               	movwf	127
  9036  07E0  0866               	movf	??_ISR+4,w
  9037  07E1  008A               	movwf	10
  9038  07E2  0865               	movf	??_ISR+3,w
  9039  07E3  0084               	movwf	4
  9040  07E4  0E64               	swapf	(??_ISR+2)^0,w
  9041  07E5  0083               	movwf	3
  9042  07E6  0EFE               	swapf	126,f
  9043  07E7  0E7E               	swapf	126,w
  9044  07E8  0009               	retfie
  9045  07E9                     L18:	
  9046  07E9                     __end_of_ISR:	
  9047  07E9  120A  158A  28C8   	ljmp	i1l3745


Data Sizes:
    Strings     40
    Constant    0
    Data        4
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      80
    BANK1            80     40      71
    BANK3            96     26      74
    BANK2            96      0      96

Pointer List with Targets:

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _send->___lwdiv
    _minimo->___awtoft
    _maximo->___awtoft
    ___ftge->___bmul
    ___wmul->___awtoft
    ___lwtoft->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _minimo->___ftge
    _maximo->_minimo
    ___wmul->___fttol
    ___lwtoft->___wmul
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     799
                                             23 BANK3      3     3      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
                             _inicia
                                _res
                                _set
 ---------------------------------------------------------------------------------
 (1) _set                                                  1     1      0       0
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _res                                                  1     1      0       0
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicia                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     514
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     428
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     146
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     108
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 46    46      0   50351
                                             66 BANK0      6     6      0
                                              0 BANK1     40    40      0
                  _USART_ReceiveChar
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                               _send
                             _trapmf
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
                           i1_inicia
                              i1_res
                              i1_set
 ---------------------------------------------------------------------------------
 (4) i1_set                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_res                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_inicia                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _trapmf                                              18     3     15   17597
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     365
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2751
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    6867
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _send                                                 3     3      0     682
                                              8 COMMON     3     3      0
                    _USART_WriteChar
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _minimo                                               6     0      6    2528
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (4) _maximo                                               6     0      6    2272
                                             12 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1928
                                              4 COMMON     6     0      6
                                              0 BANK0      6     6      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1844
                                             32 BANK0      6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                             38 BANK0      4     1      3
                           ___awtoft (ARG)
                           ___ftpack
                            ___fttol (ARG)
                             ___wmul (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     508
                                             18 BANK0     14    10      4
                           ___awtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     560
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2754
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (5) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv
   _inicia
   _res
   _set

 _ISR (ROOT)
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   ___awtoft
     ___ftpack
     _abs (ARG)
   ___bmul
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftge
     ___bmul (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
     _trapmf (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___lwdiv
   ___lwtoft
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___wmul (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
               ___bmul (ARG)
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       ___lwdiv (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___wmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___lwdiv (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _abs
   _maximo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _minimo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
   _send
     _USART_WriteChar
     ___lwdiv
   _trapmf
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set
   i1_inicia
   i1_res
   i1_set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      11      100.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     28      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     14F      12        0.0%
ABS                  0      0     14F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 23 04:37:30 2022

         ?i1_PWM_DutyCycle2 0070                           pc 0002              ___bmul@product 0072  
   __size_of_PWM_DutyCycle1 0021     __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000  
               _SSPSTATbits 0094                          l93 118F                          fsr 0004  
       ___wmul@multiplicand 0042          ??i1_PWM_DutyCycle2 0072                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00D6                ___ftadd@sign 002D  
                       l200 0D77                         l203 0D83                         l182 0D3A  
                       l193 0D5E                         l186 0D45                         l196 0D6A  
                       l189 0D51                         l609 1783                         _PR2 0092  
              __CFG_CPD$OFF 0000                         _ISR 093B                         _abs 0803  
                       _res 136E                         _set 13EF                         _rpm 00E2  
                       fsr0 0004                         _pwm 00DE  __size_of_USART_WriteString 001C  
                       indf 0000                __CFG_FOSC$HS 0000                __CFG_LVP$OFF 0000  
                      ?_ISR 0070                ___ftdiv@cntr 003A                        ISR@a 00B5  
                      ISR@x 00C5                ___ftdiv@sign 003F                        ?_abs 0070  
                      l2201 17F7                        l2413 1419                        l2183 17A4  
                      l2175 1794                        l3151 0D36                        l2193 17DC  
                      l2185 17B4                        l2197 17E9                        l3181 0D92  
                      l3173 0D73                        l3165 0D5A                        l3157 0D41  
                      l2399 138F                        ?_res 0070                        ?_set 0070  
                      STR_1 1006                        u3005 12A1                        u3015 1441  
                      u3025 1280                        u2305 17DD                        u2265 17A8  
                      u2285 17B6                        u2295 17CB                        i1l93 1186  
                      u5807 0D2F                        u5817 0D4D                        _OERR 00C1  
                      u5827 0D66                        u5837 0D7F                        u5847 0D9A  
                      _TMR0 0001                        _TMR1 000E                        abs@a 0070  
                      _main 0CC9                ___ftpack@arg 0070                        _kmph 006A  
              ___ftpack@exp 0073                        _send 15D0                        btemp 007E  
                      ltemp 007E                        start 0012                        ttemp 007E  
                      wtemp 007E           ___bmul@multiplier 0073                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 1170                       ??_ISR 0062  
              ___fttol@exp1 003F                       ??_abs 0072                ___fttol@lval 003B  
                     ??_res 01C0                       ??_set 01C0                 ?_TIMER0_Set 0070  
           __end_of___aldiv 1800                       ?_main 0070                       _EEADR 010D  
           __end_of___ftadd 0EAA                       ?_send 0070               __CFG_WDTE$OFF 0000  
           __end_of___ftdiv 0BF6             __end_of___ftneg 119C             __end_of___ftmul 0CC9  
                     _T1CON 0010             __end_of___fttol 1771             __end_of___lwdiv 136E  
                     i1l110 0FF7                       i1l230 1169                       i1l166 0437  
                     i1l550 12DD                       i1l721 1531                       i1l715 1518  
                     i1l744 0E49                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019                       i1_res 12F6                       i1_set 13AC  
             __CFG_PWRTE$ON 0000               ___awtoft@sign 007D               ___ftpack@sign 0074  
            __CFG_BOREN$OFF 0000                       pclath 000A            __end_of_PWM_Init 12D1  
                     ltemp0 007E                       ltemp1 0082                       ltemp2 0086  
                     ltemp3 0080                       ttemp0 007E                       ttemp1 0081  
                     ttemp2 0084                       ttemp3 0087                       ttemp4 007F  
                     status 0003                       wtemp0 007E                       wtemp1 0080  
                     wtemp2 0082                       wtemp3 0084                       wtemp4 0086  
                     wtemp5 0088                       wtemp6 007F            __end_ofi1_inicia 1189  
               ?_USART_Init 01CF       i1TIMER0_Set@contagens 0070             __initialization 0015  
          _velocidadeSetada 006E                __end_of_main 0DA1                __end_of_send 1657  
                    ??_main 01D7               ___fttol@sign1 003A                      ??_send 0078  
              ?_TIMER0_Init 0070                      ?i1_res 0070                      ?i1_set 0070  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1L 0015                      _CCPR2L 001B                      _EECON2 018D  
          __end_of___awtoft 126B            __end_of___ftpack 154A                      i1l2131 14EA  
                    i1l2135 14F1                      i1l2311 0BD0                      i1l2303 0BB1  
                    i1l2145 151D                      i1l2137 14FD                      i1l2163 11F3  
                    i1l2147 1527                      i1l2139 1502                      i1l2323 14AA  
                    i1l2327 14D3                      i1l2603 07EE                      i1l2283 0B56  
                    i1l2365 135C                      i1l2357 1338                      i1l2607 07F4  
                    i1l2711 174C                      i1l2703 172F                      i1l2359 1346  
                    i1l2471 1632                      i1l2625 1254                      i1l2641 0C24  
                    i1l2713 1757                      i1l2705 173F                      i1l2369 1367  
                    i1l3601 0E90                      i1l2289 0B6C                      i1l2635 0C0E  
                    i1l2715 175A                      i1l2653 0C63                      i1l3541 0DCA  
                    i1l3701 084F                      i1l2719 1768                      i1l2591 12D5  
                    i1l2479 164C                      i1l3551 0DE0                      i1l3623 0F55  
                    i1l2751 13D6                      i1l3711 086E                      i1l2497 11BC  
                    i1l2489 11B0                      i1l2665 0C8B                      i1l2657 0C73  
                    i1l3545 0DD1                      i1l3617 0F23                      i1l2737 1317  
                    i1l3801 02A3                      i1l3571 0E1B                      i1l3563 0DFA  
                    i1l3643 0952                      i1l2669 0C9B                      i1l2685 16FD  
                    i1l3581 0E39                      i1l3573 0E20                      i1l3629 0FDA  
                    i1l3645 0958                      i1l3591 0E6D                      i1l3583 0E45  
                    i1l3575 0E24                      i1l3823 03D4                      i1l3807 02E5  
                    i1l3671 0997                      i1l3569 0E0F                      i1l3841 04ED  
                    i1l3745 08C8                      i1l3587 0E5B                      i1l3819 0349  
                    i1l3771 0084                      i1l3755 0AE8                      i1l3691 0832  
                    i1l3683 081E                      i1l3659 0983                      u220_25 1538  
                    i1l3853 066F                      i1l3829 0416                      i1l3781 0151  
                    i1l3749 0AA6                      i1l3677 09AF                      i1l3863 06F7  
                    i1l3847 05AE                      i1l3775 010F                      i1l3695 083D  
                    i1l3687 0827                      i1l3867 0703                      i1l3859 06B1  
                    i1l3699 084C                      u213_25 14F6                      i1l3797 0218  
                    i1l3877 07DB                      i1l3879 07DC                      u215_25 1511  
                    u312_25 0C30                      u304_25 12DE                      u217_25 1520  
                    u321_25 0C9C                      u313_25 0C42                      u305_25 12E5  
                    u322_25 0CA4                      u331_25 174E                      u316_25 0C74  
                    u260_25 0B90                      u317_25 0C7C                      u325_25 1704  
                    u261_25 0BB2                      u510_25 0E10                      u262_25 0BC3  
                    u342_25 11E8                      u263_25 0BD1                      u328_25 1730  
                    u272_25 133B                      u513_25 0E25                      u266_21 149D  
          __end_of___lwtoft 11D7                      u266_22 149E                      u266_23 14A3  
                    u266_24 14A4                      u274_25 1347                      u275_25 1353  
                    u507_25 0DFB                      u259_25 0B7E                      u268_21 14C6  
                    u268_22 14C7                      u268_23 14CC                      u268_24 14CD  
                    u276_25 135D                      u516_25 0E3A         __size_of_TIMER0_Set 0008  
                    u550_25 08C4                      u560_25 0169                      u552_25 0AE6  
                    u561_25 0176                      u553_25 0AF3                      u562_25 0216  
                    u554_25 0B00                      u571_25 0444                      u555_25 0B0D  
                    u572_25 04F8                      u564_25 02E3                      u556_25 0082  
                    u573_25 0505                      u565_25 02F0                      u549_25 16AB  
                    u574_25 05B9                      u566_25 0347                      u558_25 014F  
                    u575_25 05C6                      u559_25 015C                      u576_25 06AF  
                    u568_25 0414                      u569_25 0435                      u578_25 06FD  
                    _SSPADD 0093                      _SSPBUF 0013                      ___bmul 07EC  
                    ___ftge 1481                   ??___aldiv 01C8                      _rBaixo 0190  
                    ___wmul 12D1                   ??___ftadd 0029              _PWM_DutyCycle1 126B  
            _PWM_DutyCycle2 128C            ?_USART_WriteChar 0070                   ??___ftdiv 0036  
                 ??___ftneg 007E                      _rMedio 0140                   ??___ftmul 0058  
                 ??___fttol 0036                   ??___lwdiv 0074                      _buffer 00C8  
                    _inicia 1189                      _maximo 120E                      _minimo 122C  
     USART_ReceiveChar@byte 0074                      _trapmf 0EAA                      _pulsos 00DC  
     ___ftmul@f3_as_product 005D                      saved_w 007E         __size_of_USART_Init 004B  
             ?i1_TIMER0_Set 0070     __end_of__initialization 004F                  ___ftadd@f1 0023  
                ___ftadd@f2 0026                  ___ftge@ff1 0074                  ___ftge@ff2 0077  
                ___ftdiv@f1 0033                  ___ftdiv@f2 0030                  ___ftdiv@f3 003B  
                ___ftneg@f1 0020                  ___awtoft@c 0078         ___bmul@multiplicand 0070  
    __end_of_PWM_DutyCycle1 128C      __end_of_PWM_DutyCycle2 12AD               __end_ofi1_res 1330  
             __end_ofi1_set 13EF                  ___ftmul@f1 0052                  ___ftmul@f2 0055  
                ___fttol@f1 0032              __pcstackCOMMON 0070                 ISR@checksum 00AD  
              __pidataBANK0 07FD                __pidataBANK1 0801               _erro_anterior 00D8  
             ISR@total_area 00BD                  ___lwtoft@c 0046                   ?_PWM_Init 0070  
                 ?i1_inicia 0070              _OPTION_REGbits 0081                     ??i1_res 0070  
                   ??i1_set 0070                 ISR@reajuste 00A8   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 0068                  __pbssBANK1 00C8  
                __pbssBANK2 0110                  __pbssBANK3 0190                   ISR@rpmAux 00A0  
                   ISR@byte 00AE                     ISR@soma 00B2                     ISR@rule 00C0  
           ?_PWM_DutyCycle1 01C0             ?_PWM_DutyCycle2 01C0                  __pmaintext 0CC9  
                   ?___bmul 0070                     ?___ftge 0074                     ?___wmul 0040  
                __pintentry 0004                ??_TIMER0_Set 01C0                     _CCP1CON 0017  
                   _CCP2CON 001D                     ?_inicia 0070                     ?_maximo 002C  
                   ?_minimo 0026                   ?___awtoft 0078                   ?___ftpack 0070  
                   ?_trapmf 0040                  ??_PWM_Init 01C0                   ?___lwtoft 0046  
                   _ISR$235 00AB                  ??i1_inicia 0070        __size_of_TIMER0_Init 000B  
                   _SSPCON2 0091                  __stringtab 1000          __end_of_TIMER0_Set 1178  
              ??_USART_Init 01D3                     ___aldiv 1771             __size_of___bmul 0011  
           __size_of___ftge 0061                     ___ftadd 0DA1                     ___ftdiv 0B3E  
                   ___ftneg 1192             __size_of___wmul 0025                     ___ftmul 0BF6  
                   ___fttol 16E3                  _erro_atual 00DA                     ___lwdiv 1330  
           __size_of_inicia 0009                  ??___awtoft 007B                  ??___ftpack 0075  
                   _rGrande 0110             __size_of_maximo 001E             __size_of_minimo 001E  
                   __ptext1 13EF                     __ptext2 136E                     __ptext3 1189  
                   __ptext4 1436                     __ptext5 1771                     __ptext6 1170  
                   __ptext7 119C                     __ptext8 12AD                     __ptext9 128C  
                ??___lwtoft 0049             __size_of_trapmf 0156                __size_of_ISR FEAE  
                 _T1CONbits 0010                   _T2CONbits 0012                __size_of_abs 000E  
              __size_of_res 003E                __size_of_set 0047            ___aldiv@dividend 01C4  
        __end_of_USART_Init 1481                     clrloop0 1179        end_of_initialization 004F  
                   maximo@a 002C                     maximo@b 002F                     minimo@a 0026  
                   minimo@b 0029                   _RCSTAbits 0018            ___aldiv@quotient 01CB  
                   psplit$0 1C0037                     psplit$1 370038                     psplit$2 380039  
                   psplit$3 39003A                     psplit$4 3A003B                     psplit$5 3B003C  
                   psplit$6 3C003D                     trapmf@a 0043                     trapmf@b 0046  
                   trapmf@c 0049                     trapmf@d 004C                     trapmf@x 0040  
      __end_ofi1_TIMER0_Set 1168                   _PORTBbits 0006                   _PORTEbits 0009  
          i1_PWM_DutyCycle2 11D7                _contador_rb6 0068         PWM_DutyCycle1@valor 01C0  
       PWM_DutyCycle2@valor 01C0                 _CCP1CONbits 0017                 ___ftdiv@exp 003E  
               _CCP2CONbits 001D                   _TXSTAbits 0098                 ___ftmul@exp 005C  
            __end_of___bmul 07FD              __end_of___ftge 14E2              __end_of___wmul 12F6  
            __end_of_inicia 1192              __end_of_maximo 122C              __end_of_minimo 124A  
            __end_of_trapmf 1000    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 07E9                 __end_of_abs 0811  
               __end_of_res 13AC                 __end_of_set 1436           __size_ofi1_inicia 0009  
          ??_PWM_DutyCycle1 01C2            ??_PWM_DutyCycle2 01C2           _USART_ReceiveChar 11A7  
                  ??___bmul 0071                    ??___ftge 0020          ?_USART_ReceiveChar 0070  
                  ??___wmul 007E                 __pdataBANK0 006E                 __pdataBANK1 00E5  
                  ??_inicia 01C0                send@checksum 0079                    ??_maximo 007E  
                  ??_minimo 007E                    ??_trapmf 007E         ??_USART_ReceiveChar 0073  
         __size_of___awtoft 0021           __size_of___ftpack 0068                   ___latbits 0002  
         __size_of___lwtoft 0018               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 01C0         __end_of__stringdata 102E                    ISR@a_230 00BB  
                  ISR@a_233 00C3                    ISR@a_228 00B7                    ISR@a_229 00B9  
 __end_of_USART_ReceiveChar 11BF                    ISR@delta 00B0                    ISR@index 00AF  
     __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072         TIMER0_Set@contagens 01C0  
                  ?___aldiv 01C0                    ?___ftadd 0023                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0052                    ?___fttol 0032  
                  ?___lwdiv 0070                   __pstrings 1000               ??_TIMER0_Init 01C0  
        USART_Init@BaudRate 01CF              __size_ofi1_res 003A              __size_ofi1_set 0043  
          ___lwdiv@quotient 0075                  pnum$text11 001C                    _ISR$1661 00A2  
                  _ISR$1662 00A5           ??_USART_WriteChar 0070                i1_TIMER0_Set 1162  
              _receiveIndex 00E0             ___aldiv@divisor 01C0           interrupt_function 0004  
           ___aldiv@counter 01C9              ___wmul@product 0044                   clear_ram0 1178  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 11F2                   _tempo_rb6 006C  
                _ADCON0bits 001F                 __stringbase 1005                  _ADCON1bits 009F  
               __stringdata 1006                    _PWM_Init 12AD           ___wmul@multiplier 0040  
                  i1_inicia 1180         __end_of_TIMER0_Init 11A7  __size_of_USART_ReceiveChar 0018  
                _EECON1bits 018C            __size_of___aldiv 008F            __size_of___ftadd 0109  
          __size_of___ftdiv 00B8            __size_of___ftneg 000A            __size_of___ftmul 00D3  
          __size_of___fttol 008E            __size_of___lwdiv 003E                    ___awtoft 124A  
                  ___ftpack 14E2          __end_of__stringtab 1006                    ___lwtoft 11BF  
                 send@index 007A             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 11F2                    __ptext10 126B                    __ptext11 093B  
                  __ptext20 0DA1                    __ptext12 13AC                    __ptext21 15D0  
                  __ptext13 12F6                    __ptext30 0BF6                    __ptext22 1330  
                  __ptext14 1180                    __ptext31 07EC                    __ptext23 122C  
                  __ptext15 1162                    __ptext32 124A                    __ptext24 120E  
                  __ptext16 11D7                    __ptext33 14E2                    __ptext25 1481  
                  __ptext17 0EAA                    __ptext34 11A7                    __ptext26 0803  
                  __ptext18 1192                    __ptext35 11F2                    __ptext27 12D1  
                  __ptext19 0B3E                    __ptext36 1168                    __ptext28 11BF  
                  __ptext29 16E3          ?_USART_WriteString 0070               __size_of_main 00D8  
             __size_of_send 0087         USART_WriteChar@byte 0070         ??_USART_WriteString 0071  
            _receivedBuffer 00D1          pnum$text11_split_1 0037          pnum$text11_split_2 0038  
        pnum$text11_split_3 0039          pnum$text11_split_4 003A          pnum$text11_split_5 003B  
        pnum$text11_split_6 003C          pnum$text11_split_7 003D                    _setpoint 00E5  
               _TIMER0_Init 119C                  _INTCONbits 000B   __end_of_USART_WriteString 120E  
                  intlevel1 0000                 _pilotoAtivo 00E4                   stringcode 1000  
      USART_WriteString@str 0072                  _TIMER0_Set 1170                    trapmf@ua 004F  
           _USART_WriteChar 1168                    stringdir 1000                    stringtab 1000  
              ___aldiv@sign 01CA                 _SSPCON2bits 0091       i1PWM_DutyCycle2@valor 0070  
                _SSPCONbits 0014                  _USART_Init 1436  
