

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Jun 02 00:24:52 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
    51                           	psect	text8_split_2,local,class=CODE,merge=1,delta=2
    52                           	psect	text8_split_3,local,class=CODE,merge=1,delta=2
    53                           	psect	text8_split_4,local,class=CODE,merge=1,delta=2
    54                           	psect	text8_split_5,local,class=CODE,merge=1,delta=2
    55                           	psect	text8_split_6,local,class=CODE,merge=1,delta=2
    56                           	psect	text8_split_7,local,class=CODE,merge=1,delta=2
    57                           	psect	text8_split_8,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  000E                     	;# 
   375  000F                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001D                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  0081                     	;# 
   395  0085                     	;# 
   396  0086                     	;# 
   397  0087                     	;# 
   398  0088                     	;# 
   399  0089                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0094                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001D                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  0081                     	;# 
   575  0085                     	;# 
   576  0086                     	;# 
   577  0087                     	;# 
   578  0088                     	;# 
   579  0089                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  0091                     	;# 
   584  0092                     	;# 
   585  0093                     	;# 
   586  0094                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009C                     	;# 
   590  009D                     	;# 
   591  009E                     	;# 
   592  009F                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  010E                     	;# 
   596  010F                     	;# 
   597  018C                     	;# 
   598  018D                     	;# 
   599                           
   600                           	psect	idataBANK1
   601  0803                     __pidataBANK1:	
   602                           
   603                           ;initializer for _setpoint
   604  0803  3488               	retlw	136
   605  0804  3413               	retlw	19
   606  000E                     _TMR1	set	14
   607  001F                     _ADCON0bits	set	31
   608  001E                     _ADRESH	set	30
   609  0017                     _CCP1CON	set	23
   610  0017                     _CCP1CONbits	set	23
   611  001D                     _CCP2CON	set	29
   612  001D                     _CCP2CONbits	set	29
   613  0015                     _CCPR1L	set	21
   614  001B                     _CCPR2L	set	27
   615  000B                     _INTCONbits	set	11
   616  000C                     _PIR1bits	set	12
   617  000D                     _PIR2bits	set	13
   618  0005                     _PORTA	set	5
   619  0006                     _PORTB	set	6
   620  0006                     _PORTBbits	set	6
   621  0007                     _PORTC	set	7
   622  0008                     _PORTD	set	8
   623  0009                     _PORTE	set	9
   624  0009                     _PORTEbits	set	9
   625  001A                     _RCREG	set	26
   626  0018                     _RCSTAbits	set	24
   627  0013                     _SSPBUF	set	19
   628  0014                     _SSPCONbits	set	20
   629  0010                     _T1CON	set	16
   630  0010                     _T1CONbits	set	16
   631  0012                     _T2CONbits	set	18
   632  0001                     _TMR0	set	1
   633  000F                     _TMR1H	set	15
   634  000E                     _TMR1L	set	14
   635  0019                     _TXREG	set	25
   636  00C1                     _OERR	set	193
   637  009F                     _ADCON1bits	set	159
   638  009E                     _ADRESL	set	158
   639  0081                     _OPTION_REGbits	set	129
   640  008C                     _PIE1bits	set	140
   641  008D                     _PIE2bits	set	141
   642  0092                     _PR2	set	146
   643  0099                     _SPBRG	set	153
   644  0093                     _SSPADD	set	147
   645  0091                     _SSPCON2	set	145
   646  0091                     _SSPCON2bits	set	145
   647  0094                     _SSPSTATbits	set	148
   648  0085                     _TRISA	set	133
   649  0086                     _TRISB	set	134
   650  0087                     _TRISC	set	135
   651  0088                     _TRISD	set	136
   652  0089                     _TRISE	set	137
   653  0098                     _TXSTAbits	set	152
   654  010D                     _EEADR	set	269
   655  010C                     _EEDATA	set	268
   656  018C                     _EECON1bits	set	396
   657  018D                     _EECON2	set	397
   658                           
   659                           	psect	strings
   660  1000                     __pstrings:	
   661  1000                     stringtab:	
   662  1000                     __stringtab:	
   663  1000                     stringcode:	
   664                           ;	String table - string pointers are 1 byte each
   665                           
   666  1000                     stringdir:	
   667  1000  3010               	movlw	high stringdir
   668  1001  008A               	movwf	10
   669  1002  0804               	movf	4,w
   670  1003  0A84               	incf	4,f
   671  1004  0782               	addwf	2,f
   672  1005                     __stringbase:	
   673  1005  3400               	retlw	0
   674  1006                     __end_of__stringtab:	
   675  1006                     __stringdata:	
   676  1006                     STR_1:	
   677  1006  340A               	retlw	10
   678  1007  340D               	retlw	13
   679  1008  3420               	retlw	32	;' '
   680  1009  342D               	retlw	45	;'-'
   681  100A  342D               	retlw	45	;'-'
   682  100B  342D               	retlw	45	;'-'
   683  100C  342D               	retlw	45	;'-'
   684  100D  342D               	retlw	45	;'-'
   685  100E  342D               	retlw	45	;'-'
   686  100F  342D               	retlw	45	;'-'
   687  1010  3420               	retlw	32	;' '
   688  1011  3445               	retlw	69	;'E'
   689  1012  3453               	retlw	83	;'S'
   690  1013  3454               	retlw	84	;'T'
   691  1014  344F               	retlw	79	;'O'
   692  1015  3455               	retlw	85	;'U'
   693  1016  3452               	retlw	82	;'R'
   694  1017  344F               	retlw	79	;'O'
   695  1018  3420               	retlw	32	;' '
   696  1019  3444               	retlw	68	;'D'
   697  101A  3445               	retlw	69	;'E'
   698  101B  3420               	retlw	32	;' '
   699  101C  3450               	retlw	80	;'P'
   700  101D  3449               	retlw	73	;'I'
   701  101E  344C               	retlw	76	;'L'
   702  101F  3448               	retlw	72	;'H'
   703  1020  3441               	retlw	65	;'A'
   704  1021  3420               	retlw	32	;' '
   705  1022  342D               	retlw	45	;'-'
   706  1023  342D               	retlw	45	;'-'
   707  1024  342D               	retlw	45	;'-'
   708  1025  342D               	retlw	45	;'-'
   709  1026  342D               	retlw	45	;'-'
   710  1027  342D               	retlw	45	;'-'
   711  1028  342D               	retlw	45	;'-'
   712  1029  3420               	retlw	32	;' '
   713  102A  340A               	retlw	10
   714  102B  340D               	retlw	13
   715  102C  3420               	retlw	32	;' '
   716  102D  3400               	retlw	0
   717  102E                     __end_of__stringdata:	
   718                           
   719                           ; #config settings
   720  0000                     
   721                           	psect	cinit
   722  0015                     start_initialization:	
   723  0015                     __initialization:	
   724                           
   725                           ; Clear objects allocated to BANK0
   726  0015  01E8               	clrf	__pbssBANK0& (0+127)
   727  0016  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   728  0017  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   729  0018  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   730  0019  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   731  001A  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   732                           
   733                           ; Clear objects allocated to BANK1
   734  001B  1383               	bcf	3,7	;select IRP bank0
   735  001C  30C5               	movlw	low __pbssBANK1
   736  001D  0084               	movwf	4
   737  001E  30D8               	movlw	low (__pbssBANK1+19)
   738  001F  160A  118A  224E  120A  118A  	fcall	clear_ram0
   739                           
   740                           ; Clear objects allocated to BANK3
   741  0024  1783               	bsf	3,7	;select IRP bank2
   742  0025  3090               	movlw	low __pbssBANK3
   743  0026  0084               	movwf	4
   744  0027  30C0               	movlw	low (__pbssBANK3+48)
   745  0028  160A  118A  224E  120A  118A  	fcall	clear_ram0
   746                           
   747                           ; Clear objects allocated to BANK2
   748  002D  3010               	movlw	low __pbssBANK2
   749  002E  0084               	movwf	4
   750  002F  3070               	movlw	low (__pbssBANK2+96)
   751  0030  160A  118A  224E  120A  118A  	fcall	clear_ram0
   752                           
   753                           ; Initialize objects allocated to BANK1
   754  0035  1683               	bsf	3,5	;RP0=1, select bank1
   755  0036  1303               	bcf	3,6	;RP1=0, select bank1
   756  0037  120A  158A  2003  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   757  003C  00D8               	movwf	__pdataBANK1& (0+127)
   758  003D  120A  158A  2004   	fcall	__pidataBANK1+1	;fetch initializer
   759  0040  00D9               	movwf	(__pdataBANK1+1)& (0+127)
   760  0041                     end_of_initialization:	
   761                           ;End of C runtime variable initialization code
   762                           
   763  0041                     __end_of__initialization:	
   764  0041  0183               	clrf	3
   765  0042  160A  118A  2D57   	ljmp	_main	;jump to C main() function
   766                           
   767                           	psect	bssBANK0
   768  0068                     __pbssBANK0:	
   769  0068                     _contador_rb6:	
   770  0068                     	ds	2
   771  006A                     _receiveIndex:	
   772  006A                     	ds	2
   773  006C                     _tempo_rb6:	
   774  006C                     	ds	2
   775                           
   776                           	psect	bssBANK1
   777  00C5                     __pbssBANK1:	
   778  00C5                     _buffer:	
   779  00C5                     	ds	7
   780  00CC                     _contagens_tm0:	
   781  00CC                     	ds	2
   782  00CE                     _erro_anterior:	
   783  00CE                     	ds	2
   784  00D0                     _erro_atual:	
   785  00D0                     	ds	2
   786  00D2                     _pulsos:	
   787  00D2                     	ds	2
   788  00D4                     _pwm:	
   789  00D4                     	ds	2
   790  00D6                     _rpm:	
   791  00D6                     	ds	2
   792                           
   793                           	psect	dataBANK1
   794  00D8                     __pdataBANK1:	
   795  00D8                     _setpoint:	
   796  00D8                     	ds	2
   797                           
   798                           	psect	bssBANK3
   799  0190                     __pbssBANK3:	
   800  0190                     _rBaixo:	
   801  0190                     	ds	48
   802                           
   803                           	psect	bssBANK2
   804  0110                     __pbssBANK2:	
   805  0110                     _rGrande:	
   806  0110                     	ds	48
   807  0140                     _rMedio:	
   808  0140                     	ds	48
   809                           
   810                           	psect	clrtext
   811  124E                     clear_ram0:	
   812                           ;	Called with FSR containing the base address, and
   813                           ;	W with the last address+1
   814                           
   815  124E  0064               	clrwdt	;clear the watchdog before getting into this loop
   816  124F                     clrloop0:	
   817  124F  0180               	clrf	0	;clear RAM location pointed to by FSR
   818  1250  0A84               	incf	4,f	;increment pointer
   819  1251  0604               	xorwf	4,w	;XOR with final address
   820  1252  1903               	btfsc	3,2	;have we reached the end yet?
   821  1253  3400               	retlw	0	;all done for this memory range, return
   822  1254  0604               	xorwf	4,w	;XOR again to restore value
   823  1255  2A4F               	goto	clrloop0	;do the next byte
   824                           
   825                           	psect	cstackBANK3
   826  01C0                     __pcstackBANK3:	
   827  01C0                     ??_TIMER0_Set:	
   828  01C0                     ?_PWM_DutyCycle2:	
   829                           ; 0 bytes @ 0x0
   830                           
   831  01C0                     ??_TIMER0_Init:	
   832                           ; 0 bytes @ 0x0
   833                           
   834  01C0                     ??_PWM_Init:	
   835                           ; 0 bytes @ 0x0
   836                           
   837  01C0                     ?_PWM_DutyCycle1:	
   838                           ; 0 bytes @ 0x0
   839                           
   840  01C0                     ?___aldiv:	
   841                           ; 0 bytes @ 0x0
   842                           
   843  01C0                     TIMER0_Set@contagens:	
   844                           ; 4 bytes @ 0x0
   845                           
   846  01C0                     PWM_DutyCycle1@valor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  01C0                     PWM_DutyCycle2@valor:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  01C0                     ___aldiv@divisor:	
   853                           ; 2 bytes @ 0x0
   854                           
   855                           
   856                           ; 4 bytes @ 0x0
   857  01C0                     	ds	2
   858  01C2                     ??_PWM_DutyCycle2:	
   859  01C2                     ??_PWM_DutyCycle1:	
   860                           ; 0 bytes @ 0x2
   861                           
   862                           
   863                           ; 0 bytes @ 0x2
   864  01C2                     	ds	2
   865  01C4                     ___aldiv@dividend:	
   866                           
   867                           ; 4 bytes @ 0x4
   868  01C4                     	ds	4
   869  01C8                     ??___aldiv:	
   870                           
   871                           ; 0 bytes @ 0x8
   872  01C8                     	ds	1
   873  01C9                     ___aldiv@counter:	
   874                           
   875                           ; 1 bytes @ 0x9
   876  01C9                     	ds	1
   877  01CA                     ___aldiv@sign:	
   878                           
   879                           ; 1 bytes @ 0xA
   880  01CA                     	ds	1
   881  01CB                     ___aldiv@quotient:	
   882                           
   883                           ; 4 bytes @ 0xB
   884  01CB                     	ds	4
   885  01CF                     ?_USART_Init:	
   886  01CF                     USART_Init@BaudRate:	
   887                           ; 0 bytes @ 0xF
   888                           
   889                           
   890                           ; 4 bytes @ 0xF
   891  01CF                     	ds	4
   892  01D3                     ??_USART_Init:	
   893                           
   894                           ; 0 bytes @ 0x13
   895  01D3                     	ds	4
   896  01D7                     ??_main:	
   897                           
   898                           ; 0 bytes @ 0x17
   899  01D7                     	ds	3
   900                           
   901                           	psect	cstackBANK1
   902  00A0                     __pcstackBANK1:	
   903  00A0                     _ISR$1636:	
   904                           
   905                           ; 3 bytes @ 0x0
   906  00A0                     	ds	3
   907  00A3                     _ISR$1637:	
   908                           
   909                           ; 3 bytes @ 0x3
   910  00A3                     	ds	3
   911  00A6                     ISR@reajuste:	
   912                           
   913                           ; 3 bytes @ 0x6
   914  00A6                     	ds	3
   915  00A9                     _ISR$218:	
   916                           
   917                           ; 2 bytes @ 0x9
   918  00A9                     	ds	2
   919  00AB                     ISR@delta:	
   920                           
   921                           ; 2 bytes @ 0xB
   922  00AB                     	ds	2
   923  00AD                     ISR@soma:	
   924                           
   925                           ; 3 bytes @ 0xD
   926  00AD                     	ds	3
   927  00B0                     ISR@a:	
   928                           
   929                           ; 2 bytes @ 0x10
   930  00B0                     	ds	2
   931  00B2                     ISR@a_211:	
   932                           
   933                           ; 2 bytes @ 0x12
   934  00B2                     	ds	2
   935  00B4                     ISR@a_212:	
   936                           
   937                           ; 2 bytes @ 0x14
   938  00B4                     	ds	2
   939  00B6                     ISR@a_213:	
   940                           
   941                           ; 2 bytes @ 0x16
   942  00B6                     	ds	2
   943  00B8                     ISR@total_area:	
   944                           
   945                           ; 3 bytes @ 0x18
   946  00B8                     	ds	3
   947  00BB                     ISR@rule:	
   948                           
   949                           ; 3 bytes @ 0x1B
   950  00BB                     	ds	3
   951  00BE                     ISR@a_216:	
   952                           
   953                           ; 2 bytes @ 0x1E
   954  00BE                     	ds	2
   955  00C0                     ISR@rpmAux:	
   956                           
   957                           ; 2 bytes @ 0x20
   958  00C0                     	ds	2
   959  00C2                     ISR@x:	
   960                           
   961                           ; 3 bytes @ 0x22
   962  00C2                     	ds	3
   963                           
   964                           	psect	cstackCOMMON
   965  0070                     __pcstackCOMMON:	
   966  0070                     ?_TIMER0_Set:	
   967  0070                     ?_USART_WriteChar:	
   968                           ; 0 bytes @ 0x0
   969                           
   970  0070                     ??_USART_WriteChar:	
   971                           ; 0 bytes @ 0x0
   972                           
   973  0070                     ?_TIMER0_Init:	
   974                           ; 0 bytes @ 0x0
   975                           
   976  0070                     ?_PWM_Init:	
   977                           ; 0 bytes @ 0x0
   978                           
   979  0070                     ?_ISR:	
   980                           ; 0 bytes @ 0x0
   981                           
   982  0070                     ?_main:	
   983                           ; 0 bytes @ 0x0
   984                           
   985  0070                     ?_USART_WriteString:	
   986                           ; 0 bytes @ 0x0
   987                           
   988  0070                     ?i1_TIMER0_Set:	
   989                           ; 0 bytes @ 0x0
   990                           
   991  0070                     ??i1_TIMER0_Set:	
   992                           ; 0 bytes @ 0x0
   993                           
   994  0070                     ?i1_PWM_DutyCycle2:	
   995                           ; 0 bytes @ 0x0
   996                           
   997  0070                     ?_USART_ReceiveChar:	
   998                           ; 0 bytes @ 0x0
   999                           
  1000  0070                     ?___bmul:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_abs:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?___awdiv:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009  0070                     ?___awmod:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0070                     ?___lwdiv:	
  1013                           ; 2 bytes @ 0x0
  1014                           
  1015  0070                     ?___ftpack:	
  1016                           ; 2 bytes @ 0x0
  1017                           
  1018  0070                     USART_WriteChar@byte:	
  1019                           ; 3 bytes @ 0x0
  1020                           
  1021  0070                     ___bmul@multiplicand:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     i1TIMER0_Set@contagens:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     abs@a:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ___awdiv@divisor:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0070                     ___awmod@divisor:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0070                     ___lwdiv@divisor:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039  0070                     i1PWM_DutyCycle2@valor:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042  0070                     ___ftpack@arg:	
  1043                           ; 2 bytes @ 0x0
  1044                           
  1045                           
  1046                           ; 3 bytes @ 0x0
  1047  0070                     	ds	1
  1048  0071                     ??_USART_WriteString:	
  1049  0071                     ??___bmul:	
  1050                           ; 0 bytes @ 0x1
  1051                           
  1052                           
  1053                           ; 0 bytes @ 0x1
  1054  0071                     	ds	1
  1055  0072                     ??_abs:	
  1056  0072                     ??i1_PWM_DutyCycle2:	
  1057                           ; 0 bytes @ 0x2
  1058                           
  1059  0072                     USART_WriteString@str:	
  1060                           ; 0 bytes @ 0x2
  1061                           
  1062  0072                     ___bmul@product:	
  1063                           ; 1 bytes @ 0x2
  1064                           
  1065  0072                     ___awdiv@dividend:	
  1066                           ; 1 bytes @ 0x2
  1067                           
  1068  0072                     ___awmod@dividend:	
  1069                           ; 2 bytes @ 0x2
  1070                           
  1071  0072                     ___lwdiv@dividend:	
  1072                           ; 2 bytes @ 0x2
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x2
  1076  0072                     	ds	1
  1077  0073                     ??_USART_ReceiveChar:	
  1078  0073                     ___bmul@multiplier:	
  1079                           ; 0 bytes @ 0x3
  1080                           
  1081  0073                     ___ftpack@exp:	
  1082                           ; 1 bytes @ 0x3
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x3
  1086  0073                     	ds	1
  1087  0074                     ??___awdiv:	
  1088  0074                     ??___awmod:	
  1089                           ; 0 bytes @ 0x4
  1090                           
  1091  0074                     ?___ftge:	
  1092                           ; 0 bytes @ 0x4
  1093                           
  1094  0074                     ??___lwdiv:	
  1095                           ; 1 bit 
  1096                           
  1097  0074                     USART_ReceiveChar@byte:	
  1098                           ; 0 bytes @ 0x4
  1099                           
  1100  0074                     ___ftpack@sign:	
  1101                           ; 1 bytes @ 0x4
  1102                           
  1103  0074                     ___ftge@ff1:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106                           
  1107                           ; 3 bytes @ 0x4
  1108  0074                     	ds	1
  1109  0075                     ??___ftpack:	
  1110  0075                     ___awdiv@counter:	
  1111                           ; 0 bytes @ 0x5
  1112                           
  1113  0075                     ___awmod@counter:	
  1114                           ; 1 bytes @ 0x5
  1115                           
  1116  0075                     ___lwdiv@quotient:	
  1117                           ; 1 bytes @ 0x5
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x5
  1121  0075                     	ds	1
  1122  0076                     ___awdiv@sign:	
  1123  0076                     ___awmod@sign:	
  1124                           ; 1 bytes @ 0x6
  1125                           
  1126                           
  1127                           ; 1 bytes @ 0x6
  1128  0076                     	ds	1
  1129  0077                     ___lwdiv@counter:	
  1130  0077                     ___awdiv@quotient:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133  0077                     ___ftge@ff2:	
  1134                           ; 2 bytes @ 0x7
  1135                           
  1136                           
  1137                           ; 3 bytes @ 0x7
  1138  0077                     	ds	1
  1139  0078                     ?___awtoft:	
  1140  0078                     ___awtoft@c:	
  1141                           ; 3 bytes @ 0x8
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x8
  1145  0078                     	ds	3
  1146  007B                     ??___awtoft:	
  1147                           
  1148                           ; 0 bytes @ 0xB
  1149  007B                     	ds	2
  1150  007D                     ___awtoft@sign:	
  1151                           
  1152                           ; 1 bytes @ 0xD
  1153  007D                     	ds	1
  1154  007E                     ??_maximo:	
  1155  007E                     ??_minimo:	
  1156                           ; 0 bytes @ 0xE
  1157                           
  1158  007E                     ??_trapmf:	
  1159                           ; 0 bytes @ 0xE
  1160                           
  1161  007E                     ??___wmul:	
  1162                           ; 0 bytes @ 0xE
  1163                           
  1164  007E                     ??___ftneg:	
  1165                           ; 0 bytes @ 0xE
  1166                           
  1167                           
  1168                           	psect	cstackBANK0
  1169  0020                     __pcstackBANK0:	
  1170                           ; 0 bytes @ 0xE
  1171                           
  1172  0020                     ??___ftge:	
  1173  0020                     ?___ftneg:	
  1174                           ; 0 bytes @ 0x0
  1175                           
  1176  0020                     ___ftneg@f1:	
  1177                           ; 3 bytes @ 0x0
  1178                           
  1179                           
  1180                           ; 3 bytes @ 0x0
  1181  0020                     	ds	3
  1182  0023                     ?___ftadd:	
  1183  0023                     ___ftadd@f1:	
  1184                           ; 3 bytes @ 0x3
  1185                           
  1186                           
  1187                           ; 3 bytes @ 0x3
  1188  0023                     	ds	3
  1189  0026                     ?_minimo:	
  1190  0026                     minimo@a:	
  1191                           ; 3 bytes @ 0x6
  1192                           
  1193  0026                     ___ftadd@f2:	
  1194                           ; 3 bytes @ 0x6
  1195                           
  1196                           
  1197                           ; 3 bytes @ 0x6
  1198  0026                     	ds	3
  1199  0029                     ??___ftadd:	
  1200  0029                     minimo@b:	
  1201                           ; 0 bytes @ 0x9
  1202                           
  1203                           
  1204                           ; 3 bytes @ 0x9
  1205  0029                     	ds	3
  1206  002C                     ?_maximo:	
  1207  002C                     maximo@a:	
  1208                           ; 3 bytes @ 0xC
  1209                           
  1210                           
  1211                           ; 3 bytes @ 0xC
  1212  002C                     	ds	1
  1213  002D                     ___ftadd@sign:	
  1214                           
  1215                           ; 1 bytes @ 0xD
  1216  002D                     	ds	1
  1217  002E                     ___ftadd@exp2:	
  1218                           
  1219                           ; 1 bytes @ 0xE
  1220  002E                     	ds	1
  1221  002F                     ___ftadd@exp1:	
  1222  002F                     maximo@b:	
  1223                           ; 1 bytes @ 0xF
  1224                           
  1225                           
  1226                           ; 3 bytes @ 0xF
  1227  002F                     	ds	1
  1228  0030                     ?___ftdiv:	
  1229  0030                     ___ftdiv@f2:	
  1230                           ; 3 bytes @ 0x10
  1231                           
  1232                           
  1233                           ; 3 bytes @ 0x10
  1234  0030                     	ds	2
  1235  0032                     ?___fttol:	
  1236  0032                     ___fttol@f1:	
  1237                           ; 4 bytes @ 0x12
  1238                           
  1239                           
  1240                           ; 3 bytes @ 0x12
  1241  0032                     	ds	1
  1242  0033                     ___ftdiv@f1:	
  1243                           
  1244                           ; 3 bytes @ 0x13
  1245  0033                     	ds	3
  1246  0036                     ??___ftdiv:	
  1247  0036                     ??___fttol:	
  1248                           ; 0 bytes @ 0x16
  1249                           
  1250                           
  1251                           ; 0 bytes @ 0x16
  1252  0036                     	ds	4
  1253  003A                     ___ftdiv@cntr:	
  1254  003A                     ___fttol@sign1:	
  1255                           ; 1 bytes @ 0x1A
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x1A
  1259  003A                     	ds	1
  1260  003B                     ___ftdiv@f3:	
  1261  003B                     ___fttol@lval:	
  1262                           ; 3 bytes @ 0x1B
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x1B
  1266  003B                     	ds	3
  1267  003E                     ___ftdiv@exp:	
  1268                           
  1269                           ; 1 bytes @ 0x1E
  1270  003E                     	ds	1
  1271  003F                     ___ftdiv@sign:	
  1272  003F                     ___fttol@exp1:	
  1273                           ; 1 bytes @ 0x1F
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x1F
  1277  003F                     	ds	1
  1278  0040                     ?___wmul:	
  1279  0040                     ?_trapmf:	
  1280                           ; 2 bytes @ 0x20
  1281                           
  1282  0040                     ___wmul@multiplier:	
  1283                           ; 3 bytes @ 0x20
  1284                           
  1285  0040                     trapmf@x:	
  1286                           ; 2 bytes @ 0x20
  1287                           
  1288                           
  1289                           ; 3 bytes @ 0x20
  1290  0040                     	ds	2
  1291  0042                     ___wmul@multiplicand:	
  1292                           
  1293                           ; 2 bytes @ 0x22
  1294  0042                     	ds	1
  1295  0043                     trapmf@a:	
  1296                           
  1297                           ; 3 bytes @ 0x23
  1298  0043                     	ds	1
  1299  0044                     ___wmul@product:	
  1300                           
  1301                           ; 2 bytes @ 0x24
  1302  0044                     	ds	2
  1303  0046                     ?___lwtoft:	
  1304  0046                     ___lwtoft@c:	
  1305                           ; 3 bytes @ 0x26
  1306                           
  1307  0046                     trapmf@b:	
  1308                           ; 2 bytes @ 0x26
  1309                           
  1310                           
  1311                           ; 3 bytes @ 0x26
  1312  0046                     	ds	3
  1313  0049                     ??___lwtoft:	
  1314  0049                     trapmf@c:	
  1315                           ; 0 bytes @ 0x29
  1316                           
  1317                           
  1318                           ; 3 bytes @ 0x29
  1319  0049                     	ds	3
  1320  004C                     trapmf@d:	
  1321                           
  1322                           ; 3 bytes @ 0x2C
  1323  004C                     	ds	3
  1324  004F                     trapmf@ua:	
  1325                           
  1326                           ; 3 bytes @ 0x2F
  1327  004F                     	ds	3
  1328  0052                     ?___ftmul:	
  1329  0052                     ___ftmul@f1:	
  1330                           ; 3 bytes @ 0x32
  1331                           
  1332                           
  1333                           ; 3 bytes @ 0x32
  1334  0052                     	ds	3
  1335  0055                     ___ftmul@f2:	
  1336                           
  1337                           ; 3 bytes @ 0x35
  1338  0055                     	ds	3
  1339  0058                     ??___ftmul:	
  1340                           
  1341                           ; 0 bytes @ 0x38
  1342  0058                     	ds	4
  1343  005C                     ___ftmul@exp:	
  1344                           
  1345                           ; 1 bytes @ 0x3C
  1346  005C                     	ds	1
  1347  005D                     ___ftmul@f3_as_product:	
  1348                           
  1349                           ; 3 bytes @ 0x3D
  1350  005D                     	ds	3
  1351  0060                     ___ftmul@cntr:	
  1352                           
  1353                           ; 1 bytes @ 0x40
  1354  0060                     	ds	1
  1355  0061                     ___ftmul@sign:	
  1356                           
  1357                           ; 1 bytes @ 0x41
  1358  0061                     	ds	1
  1359  0062                     ??_ISR:	
  1360                           
  1361                           ; 0 bytes @ 0x42
  1362  0062                     	ds	6
  1363                           
  1364                           	psect	maintext
  1365  1557                     __pmaintext:	
  1366 ;;
  1367 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1368 ;;
  1369 ;; *************** function _main *****************
  1370 ;; Defined at:
  1371 ;;		line 314 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;		None               void
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 17F/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       0       0       3       0
  1388 ;;      Totals:         0       0       0       3       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels required when called:    6
  1391 ;; This function calls:
  1392 ;;		_PWM_DutyCycle1
  1393 ;;		_PWM_DutyCycle2
  1394 ;;		_PWM_Init
  1395 ;;		_TIMER0_Init
  1396 ;;		_TIMER0_Set
  1397 ;;		_USART_Init
  1398 ;; This function is called by:
  1399 ;;		Startup code after reset
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _main
  1405  1557                     _main:	
  1406                           
  1407                           ;main.c: 316: TRISA = 0b00000001;
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1411  1557  3001               	movlw	1
  1412  1558  1683               	bsf	3,5	;RP0=1, select bank1
  1413  1559  1303               	bcf	3,6	;RP1=0, select bank1
  1414  155A  0085               	movwf	5	;volatile
  1415                           
  1416                           ;main.c: 317: PORTA = 0b00000001;
  1417  155B  3001               	movlw	1
  1418  155C  1283               	bcf	3,5	;RP0=0, select bank0
  1419  155D  1303               	bcf	3,6	;RP1=0, select bank0
  1420  155E  0085               	movwf	5	;volatile
  1421                           
  1422                           ;main.c: 318: TRISB = 0b00000000;
  1423  155F  1683               	bsf	3,5	;RP0=1, select bank1
  1424  1560  1303               	bcf	3,6	;RP1=0, select bank1
  1425  1561  0186               	clrf	6	;volatile
  1426                           
  1427                           ;main.c: 319: PORTB = 0b00000000;
  1428  1562  1283               	bcf	3,5	;RP0=0, select bank0
  1429  1563  1303               	bcf	3,6	;RP1=0, select bank0
  1430  1564  0186               	clrf	6	;volatile
  1431                           
  1432                           ;main.c: 320: TRISC = 0b10000001;
  1433  1565  3081               	movlw	129
  1434  1566  1683               	bsf	3,5	;RP0=1, select bank1
  1435  1567  1303               	bcf	3,6	;RP1=0, select bank1
  1436  1568  0087               	movwf	7	;volatile
  1437                           
  1438                           ;main.c: 321: PORTC = 0b11000000;
  1439  1569  30C0               	movlw	192
  1440  156A  1283               	bcf	3,5	;RP0=0, select bank0
  1441  156B  1303               	bcf	3,6	;RP1=0, select bank0
  1442  156C  0087               	movwf	7	;volatile
  1443                           
  1444                           ;main.c: 322: TRISD = 0b00000000;
  1445  156D  1683               	bsf	3,5	;RP0=1, select bank1
  1446  156E  1303               	bcf	3,6	;RP1=0, select bank1
  1447  156F  0188               	clrf	8	;volatile
  1448                           
  1449                           ;main.c: 323: PORTD = 0b00000000;
  1450  1570  1283               	bcf	3,5	;RP0=0, select bank0
  1451  1571  1303               	bcf	3,6	;RP1=0, select bank0
  1452  1572  0188               	clrf	8	;volatile
  1453                           
  1454                           ;main.c: 324: TRISE = 0b00000000;
  1455  1573  1683               	bsf	3,5	;RP0=1, select bank1
  1456  1574  1303               	bcf	3,6	;RP1=0, select bank1
  1457  1575  0189               	clrf	9	;volatile
  1458                           
  1459                           ;main.c: 325: PORTE = 0b00000000;
  1460  1576  1283               	bcf	3,5	;RP0=0, select bank0
  1461  1577  1303               	bcf	3,6	;RP1=0, select bank0
  1462  1578  0189               	clrf	9	;volatile
  1463                           
  1464                           ;main.c: 328: T1CON = 0x03;
  1465  1579  3003               	movlw	3
  1466  157A  0090               	movwf	16	;volatile
  1467                           
  1468                           ;main.c: 329: TMR1L = 0x00;
  1469  157B  018E               	clrf	14	;volatile
  1470                           
  1471                           ;main.c: 330: TMR1H = 0x00;
  1472  157C  018F               	clrf	15	;volatile
  1473                           
  1474                           ;main.c: 333: USART_Init(115200);
  1475  157D  3000               	movlw	0
  1476  157E  1683               	bsf	3,5	;RP0=1, select bank3
  1477  157F  1703               	bsf	3,6	;RP1=1, select bank3
  1478  1580  00D2               	movwf	(USART_Init@BaudRate+3)^(0+384)
  1479  1581  3001               	movlw	1
  1480  1582  00D1               	movwf	(USART_Init@BaudRate+2)^(0+384)
  1481  1583  30C2               	movlw	194
  1482  1584  00D0               	movwf	(USART_Init@BaudRate+1)^(0+384)
  1483  1585  3000               	movlw	0
  1484  1586  00CF               	movwf	USART_Init@BaudRate^(0+384)
  1485  1587  160A  118A  23F6  160A  118A  	fcall	_USART_Init
  1486                           
  1487                           ;main.c: 334: TIMER0_Init();
  1488  158C  160A  118A  2260  160A  118A  	fcall	_TIMER0_Init
  1489                           
  1490                           ;main.c: 336: PWM_Init();
  1491  1591  160A  118A  236F  160A  118A  	fcall	_PWM_Init
  1492                           
  1493                           ;main.c: 340: INTCONbits.PEIE = 1;
  1494  1596  170B               	bsf	11,6	;volatile
  1495                           
  1496                           ;main.c: 341: INTCONbits.GIE = 1;
  1497  1597  178B               	bsf	11,7	;volatile
  1498                           
  1499                           ;main.c: 344: PWM_DutyCycle1(0);
  1500  1598  3000               	movlw	0
  1501  1599  1683               	bsf	3,5	;RP0=1, select bank3
  1502  159A  1703               	bsf	3,6	;RP1=1, select bank3
  1503  159B  00C0               	movwf	PWM_DutyCycle1@valor^(0+384)
  1504  159C  3000               	movlw	0
  1505  159D  00C1               	movwf	(PWM_DutyCycle1@valor^(0+384)+1)
  1506  159E  160A  118A  234E  160A  118A  	fcall	_PWM_DutyCycle1
  1507                           
  1508                           ;main.c: 345: PWM_DutyCycle2(0);
  1509  15A3  3000               	movlw	0
  1510  15A4  1683               	bsf	3,5	;RP0=1, select bank3
  1511  15A5  1703               	bsf	3,6	;RP1=1, select bank3
  1512  15A6  00C0               	movwf	PWM_DutyCycle2@valor^(0+384)
  1513  15A7  3000               	movlw	0
  1514  15A8  00C1               	movwf	(PWM_DutyCycle2@valor^(0+384)+1)
  1515  15A9  120A  118A  27DE  160A  118A  	fcall	_PWM_DutyCycle2
  1516                           
  1517                           ;main.c: 348: TIMER0_Set(238);
  1518  15AE  30EE               	movlw	238
  1519  15AF  160A  118A  2246  160A  118A  	fcall	_TIMER0_Set
  1520                           
  1521                           ;main.c: 351: _delay((unsigned long)((1000)*(18432000/4000.0)));
  1522  15B4  3018               	movlw	24
  1523  15B5  1683               	bsf	3,5	;RP0=1, select bank3
  1524  15B6  1703               	bsf	3,6	;RP1=1, select bank3
  1525  15B7  00D9               	movwf	(??_main^(0+384)+2)
  1526  15B8  3061               	movlw	97
  1527  15B9  00D8               	movwf	(??_main^(0+384)+1)
  1528  15BA  306E               	movlw	110
  1529  15BB  00D7               	movwf	??_main^(0+384)
  1530  15BC                     u4977:	
  1531  15BC  0BD7               	decfsz	??_main^(0+384),f
  1532  15BD  2DBC               	goto	u4977
  1533  15BE  0BD8               	decfsz	(??_main^(0+384)+1),f
  1534  15BF  2DBC               	goto	u4977
  1535  15C0  0BD9               	decfsz	(??_main^(0+384)+2),f
  1536  15C1  2DBC               	goto	u4977
  1537  15C2  0000               	nop
  1538  15C3                     l3013:	
  1539                           ;main.c: 354: while (1)
  1540                           
  1541                           
  1542                           ;main.c: 355: {
  1543                           ;main.c: 357: _delay((unsigned long)((200)*(18432000/4000.0)));
  1544  15C3  3005               	movlw	5
  1545  15C4  1683               	bsf	3,5	;RP0=1, select bank3
  1546  15C5  1703               	bsf	3,6	;RP1=1, select bank3
  1547  15C6  00D9               	movwf	(??_main^(0+384)+2)
  1548  15C7  30AD               	movlw	173
  1549  15C8  00D8               	movwf	(??_main^(0+384)+1)
  1550  15C9  30E0               	movlw	224
  1551  15CA  00D7               	movwf	??_main^(0+384)
  1552  15CB                     u4987:	
  1553  15CB  0BD7               	decfsz	??_main^(0+384),f
  1554  15CC  2DCB               	goto	u4987
  1555  15CD  0BD8               	decfsz	(??_main^(0+384)+1),f
  1556  15CE  2DCB               	goto	u4987
  1557  15CF  0BD9               	decfsz	(??_main^(0+384)+2),f
  1558  15D0  2DCB               	goto	u4987
  1559  15D1  2DC3               	goto	l3013
  1560  15D2                     __end_of_main:	
  1561                           
  1562                           	psect	text1
  1563  13F6                     __ptext1:	
  1564 ;; *************** function _USART_Init *****************
  1565 ;; Defined at:
  1566 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  BaudRate        4   15[BANK3 ] long 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;		None               void
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       4       0
  1581 ;;      Locals:         0       0       0       0       0
  1582 ;;      Temps:          0       0       0       4       0
  1583 ;;      Totals:         0       0       0       8       0
  1584 ;;Total ram usage:        8 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    5
  1587 ;; This function calls:
  1588 ;;		___aldiv
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _USART_Init
  1596  13F6                     _USART_Init:	
  1597                           
  1598                           ;usart.c: 13: SPBRG = (unsigned char)(18432000 / (16 * BaudRate)) - 1;
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _USART_Init: [wreg+status,2+status,0+pclath+cstack]
  1602  13F6  1683               	bsf	3,5	;RP0=1, select bank3
  1603  13F7  1703               	bsf	3,6	;RP1=1, select bank3
  1604  13F8  084F               	movf	USART_Init@BaudRate^(0+384),w
  1605  13F9  00D3               	movwf	??_USART_Init^(0+384)
  1606  13FA  0850               	movf	(USART_Init@BaudRate+1)^(0+384),w
  1607  13FB  00D4               	movwf	(??_USART_Init^(0+384)+1)
  1608  13FC  0851               	movf	(USART_Init@BaudRate+2)^(0+384),w
  1609  13FD  00D5               	movwf	(??_USART_Init^(0+384)+2)
  1610  13FE  0852               	movf	(USART_Init@BaudRate+3)^(0+384),w
  1611  13FF  00D6               	movwf	(??_USART_Init^(0+384)+3)
  1612  1400  3004               	movlw	4
  1613  1401                     u3635:	
  1614  1401  1003               	clrc
  1615  1402  0DD3               	rlf	??_USART_Init^(0+384),f
  1616  1403  0DD4               	rlf	(??_USART_Init^(0+384)+1),f
  1617  1404  0DD5               	rlf	(??_USART_Init^(0+384)+2),f
  1618  1405  0DD6               	rlf	(??_USART_Init^(0+384)+3),f
  1619  1406  3EFF               	addlw	-1
  1620  1407  1D03               	skipz
  1621  1408  2C01               	goto	u3635
  1622  1409  0856               	movf	(??_USART_Init+3)^(0+384),w
  1623  140A  00C3               	movwf	(___aldiv@divisor+3)^(0+384)
  1624  140B  0855               	movf	(??_USART_Init+2)^(0+384),w
  1625  140C  00C2               	movwf	(___aldiv@divisor+2)^(0+384)
  1626  140D  0854               	movf	(??_USART_Init+1)^(0+384),w
  1627  140E  00C1               	movwf	(___aldiv@divisor+1)^(0+384)
  1628  140F  0853               	movf	??_USART_Init^(0+384),w
  1629  1410  00C0               	movwf	___aldiv@divisor^(0+384)
  1630  1411  3001               	movlw	1
  1631  1412  00C7               	movwf	(___aldiv@dividend+3)^(0+384)
  1632  1413  3019               	movlw	25
  1633  1414  00C6               	movwf	(___aldiv@dividend+2)^(0+384)
  1634  1415  3040               	movlw	64
  1635  1416  00C5               	movwf	(___aldiv@dividend+1)^(0+384)
  1636  1417  3000               	movlw	0
  1637  1418  00C4               	movwf	___aldiv@dividend^(0+384)
  1638  1419  120A  158A  20EE   	fcall	___aldiv
  1639  141C  1683               	bsf	3,5	;RP0=1, select bank3
  1640  141D  1703               	bsf	3,6	;RP1=1, select bank3
  1641  141E  0840               	movf	?___aldiv^(0+384),w
  1642  141F  3EFF               	addlw	255
  1643  1420  1683               	bsf	3,5	;RP0=1, select bank1
  1644  1421  1303               	bcf	3,6	;RP1=0, select bank1
  1645  1422  0099               	movwf	25	;volatile
  1646                           
  1647                           ;usart.c: 16: TXSTAbits.CSRC = 0;
  1648  1423  1398               	bcf	24,7	;volatile
  1649                           
  1650                           ;usart.c: 17: TXSTAbits.TX9 = 0;
  1651  1424  1318               	bcf	24,6	;volatile
  1652                           
  1653                           ;usart.c: 18: TXSTAbits.TXEN = 1;
  1654  1425  1698               	bsf	24,5	;volatile
  1655                           
  1656                           ;usart.c: 19: TXSTAbits.SYNC = 0;
  1657  1426  1218               	bcf	24,4	;volatile
  1658                           
  1659                           ;usart.c: 21: TXSTAbits.BRGH = 1;
  1660  1427  1518               	bsf	24,2	;volatile
  1661                           
  1662                           ;usart.c: 22: TXSTAbits.TRMT = 1;
  1663  1428  1498               	bsf	24,1	;volatile
  1664                           
  1665                           ;usart.c: 23: TXSTAbits.TX9D = 0;
  1666  1429  1018               	bcf	24,0	;volatile
  1667                           
  1668                           ;usart.c: 26: RCSTAbits.SPEN = 1;
  1669  142A  1283               	bcf	3,5	;RP0=0, select bank0
  1670  142B  1303               	bcf	3,6	;RP1=0, select bank0
  1671  142C  1798               	bsf	24,7	;volatile
  1672                           
  1673                           ;usart.c: 27: RCSTAbits.RX9 = 0;
  1674  142D  1318               	bcf	24,6	;volatile
  1675                           
  1676                           ;usart.c: 28: RCSTAbits.SREN = 0;
  1677  142E  1298               	bcf	24,5	;volatile
  1678                           
  1679                           ;usart.c: 29: RCSTAbits.CREN = 1;
  1680  142F  1618               	bsf	24,4	;volatile
  1681                           
  1682                           ;usart.c: 30: RCSTAbits.ADDEN = 0;
  1683  1430  1198               	bcf	24,3	;volatile
  1684                           
  1685                           ;usart.c: 31: RCSTAbits.FERR = 0;
  1686  1431  1118               	bcf	24,2	;volatile
  1687                           
  1688                           ;usart.c: 32: RCSTAbits.OERR = 0;
  1689  1432  1098               	bcf	24,1	;volatile
  1690                           
  1691                           ;usart.c: 33: RCSTAbits.RX9D = 0;
  1692  1433  1018               	bcf	24,0	;volatile
  1693                           
  1694                           ;usart.c: 36: PIE1bits.TXIE = 0;
  1695  1434  1683               	bsf	3,5	;RP0=1, select bank1
  1696  1435  1303               	bcf	3,6	;RP1=0, select bank1
  1697  1436  120C               	bcf	12,4	;volatile
  1698                           
  1699                           ;usart.c: 37: PIR1bits.TXIF = 0;
  1700  1437  1283               	bcf	3,5	;RP0=0, select bank0
  1701  1438  1303               	bcf	3,6	;RP1=0, select bank0
  1702  1439  120C               	bcf	12,4	;volatile
  1703                           
  1704                           ;usart.c: 38: PIE1bits.RCIE = 1;
  1705  143A  1683               	bsf	3,5	;RP0=1, select bank1
  1706  143B  1303               	bcf	3,6	;RP1=0, select bank1
  1707  143C  168C               	bsf	12,5	;volatile
  1708                           
  1709                           ;usart.c: 39: PIR1bits.RCIF = 0;
  1710  143D  1283               	bcf	3,5	;RP0=0, select bank0
  1711  143E  1303               	bcf	3,6	;RP1=0, select bank0
  1712  143F  128C               	bcf	12,5	;volatile
  1713  1440  0008               	return
  1714  1441                     __end_of_USART_Init:	
  1715                           
  1716                           	psect	text2
  1717  08EE                     __ptext2:	
  1718 ;; *************** function ___aldiv *****************
  1719 ;; Defined at:
  1720 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  divisor         4    0[BANK3 ] long 
  1723 ;;  dividend        4    4[BANK3 ] long 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  quotient        4   11[BANK3 ] long 
  1726 ;;  sign            1   10[BANK3 ] unsigned char 
  1727 ;;  counter         1    9[BANK3 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  4    0[BANK3 ] long 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       8       0
  1738 ;;      Locals:         0       0       0       6       0
  1739 ;;      Temps:          0       0       0       1       0
  1740 ;;      Totals:         0       0       0      15       0
  1741 ;;Total ram usage:       15 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    4
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_USART_Init
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function ___aldiv
  1753  08EE                     ___aldiv:	
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1757  08EE  1683               	bsf	3,5	;RP0=1, select bank3
  1758  08EF  1703               	bsf	3,6	;RP1=1, select bank3
  1759  08F0  01CA               	clrf	___aldiv@sign^(0+384)
  1760  08F1  1FC3               	btfss	(___aldiv@divisor+3)^(0+384),7
  1761  08F2  2900               	goto	l541
  1762  08F3  09C0               	comf	___aldiv@divisor^(0+384),f
  1763  08F4  09C1               	comf	(___aldiv@divisor+1)^(0+384),f
  1764  08F5  09C2               	comf	(___aldiv@divisor+2)^(0+384),f
  1765  08F6  09C3               	comf	(___aldiv@divisor+3)^(0+384),f
  1766  08F7  0AC0               	incf	___aldiv@divisor^(0+384),f
  1767  08F8  1903               	skipnz
  1768  08F9  0AC1               	incf	(___aldiv@divisor+1)^(0+384),f
  1769  08FA  1903               	skipnz
  1770  08FB  0AC2               	incf	(___aldiv@divisor+2)^(0+384),f
  1771  08FC  1903               	skipnz
  1772  08FD  0AC3               	incf	(___aldiv@divisor+3)^(0+384),f
  1773  08FE  01CA               	clrf	___aldiv@sign^(0+384)
  1774  08FF  0ACA               	incf	___aldiv@sign^(0+384),f
  1775  0900                     l541:	
  1776  0900  1FC7               	btfss	(___aldiv@dividend+3)^(0+384),7
  1777  0901  2911               	goto	l2869
  1778  0902  09C4               	comf	___aldiv@dividend^(0+384),f
  1779  0903  09C5               	comf	(___aldiv@dividend+1)^(0+384),f
  1780  0904  09C6               	comf	(___aldiv@dividend+2)^(0+384),f
  1781  0905  09C7               	comf	(___aldiv@dividend+3)^(0+384),f
  1782  0906  0AC4               	incf	___aldiv@dividend^(0+384),f
  1783  0907  1903               	skipnz
  1784  0908  0AC5               	incf	(___aldiv@dividend+1)^(0+384),f
  1785  0909  1903               	skipnz
  1786  090A  0AC6               	incf	(___aldiv@dividend+2)^(0+384),f
  1787  090B  1903               	skipnz
  1788  090C  0AC7               	incf	(___aldiv@dividend+3)^(0+384),f
  1789  090D  3001               	movlw	1
  1790  090E  00C8               	movwf	??___aldiv^(0+384)
  1791  090F  0848               	movf	??___aldiv^(0+384),w
  1792  0910  06CA               	xorwf	___aldiv@sign^(0+384),f
  1793  0911                     l2869:	
  1794  0911  3000               	movlw	0
  1795  0912  00CE               	movwf	(___aldiv@quotient+3)^(0+384)
  1796  0913  3000               	movlw	0
  1797  0914  00CD               	movwf	(___aldiv@quotient+2)^(0+384)
  1798  0915  3000               	movlw	0
  1799  0916  00CC               	movwf	(___aldiv@quotient+1)^(0+384)
  1800  0917  3000               	movlw	0
  1801  0918  00CB               	movwf	___aldiv@quotient^(0+384)
  1802  0919  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  1803  091A  0442               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1804  091B  0441               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1805  091C  0440               	iorwf	___aldiv@divisor^(0+384),w
  1806  091D  1903               	skipnz
  1807  091E  2966               	goto	l2891
  1808  091F  01C9               	clrf	___aldiv@counter^(0+384)
  1809  0920  0AC9               	incf	___aldiv@counter^(0+384),f
  1810  0921                     l2877:	
  1811  0921  1BC3               	btfsc	(___aldiv@divisor+3)^(0+384),7
  1812  0922  2931               	goto	l2879
  1813  0923  3001               	movlw	1
  1814  0924  00C8               	movwf	??___aldiv^(0+384)
  1815  0925                     u3555:	
  1816  0925  1003               	clrc
  1817  0926  0DC0               	rlf	___aldiv@divisor^(0+384),f
  1818  0927  0DC1               	rlf	(___aldiv@divisor+1)^(0+384),f
  1819  0928  0DC2               	rlf	(___aldiv@divisor+2)^(0+384),f
  1820  0929  0DC3               	rlf	(___aldiv@divisor+3)^(0+384),f
  1821  092A  0BC8               	decfsz	??___aldiv^(0+384),f
  1822  092B  2925               	goto	u3555
  1823  092C  3001               	movlw	1
  1824  092D  00C8               	movwf	??___aldiv^(0+384)
  1825  092E  0848               	movf	??___aldiv^(0+384),w
  1826  092F  07C9               	addwf	___aldiv@counter^(0+384),f
  1827  0930  2921               	goto	l2877
  1828  0931                     l2879:	
  1829  0931  3001               	movlw	1
  1830  0932  00C8               	movwf	??___aldiv^(0+384)
  1831  0933                     u3575:	
  1832  0933  1003               	clrc
  1833  0934  0DCB               	rlf	___aldiv@quotient^(0+384),f
  1834  0935  0DCC               	rlf	(___aldiv@quotient+1)^(0+384),f
  1835  0936  0DCD               	rlf	(___aldiv@quotient+2)^(0+384),f
  1836  0937  0DCE               	rlf	(___aldiv@quotient+3)^(0+384),f
  1837  0938  0BC8               	decfsz	??___aldiv^(0+384),f
  1838  0939  2933               	goto	u3575
  1839  093A  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  1840  093B  0247               	subwf	(___aldiv@dividend+3)^(0+384),w
  1841  093C  1D03               	skipz
  1842  093D  2948               	goto	u3585
  1843  093E  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  1844  093F  0246               	subwf	(___aldiv@dividend+2)^(0+384),w
  1845  0940  1D03               	skipz
  1846  0941  2948               	goto	u3585
  1847  0942  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  1848  0943  0245               	subwf	(___aldiv@dividend+1)^(0+384),w
  1849  0944  1D03               	skipz
  1850  0945  2948               	goto	u3585
  1851  0946  0840               	movf	___aldiv@divisor^(0+384),w
  1852  0947  0244               	subwf	___aldiv@dividend^(0+384),w
  1853  0948                     u3585:	
  1854  0948  1C03               	skipc
  1855  0949  2959               	goto	l2887
  1856  094A  0840               	movf	___aldiv@divisor^(0+384),w
  1857  094B  02C4               	subwf	___aldiv@dividend^(0+384),f
  1858  094C  0841               	movf	(___aldiv@divisor+1)^(0+384),w
  1859  094D  1C03               	skipc
  1860  094E  0F41               	incfsz	(___aldiv@divisor+1)^(0+384),w
  1861  094F  02C5               	subwf	(___aldiv@dividend+1)^(0+384),f
  1862  0950  0842               	movf	(___aldiv@divisor+2)^(0+384),w
  1863  0951  1C03               	skipc
  1864  0952  0F42               	incfsz	(___aldiv@divisor+2)^(0+384),w
  1865  0953  02C6               	subwf	(___aldiv@dividend+2)^(0+384),f
  1866  0954  0843               	movf	(___aldiv@divisor+3)^(0+384),w
  1867  0955  1C03               	skipc
  1868  0956  0F43               	incfsz	(___aldiv@divisor+3)^(0+384),w
  1869  0957  02C7               	subwf	(___aldiv@dividend+3)^(0+384),f
  1870  0958  144B               	bsf	___aldiv@quotient^(0+384),0
  1871  0959                     l2887:	
  1872  0959  3001               	movlw	1
  1873  095A                     u3595:	
  1874  095A  1003               	clrc
  1875  095B  0CC3               	rrf	(___aldiv@divisor+3)^(0+384),f
  1876  095C  0CC2               	rrf	(___aldiv@divisor+2)^(0+384),f
  1877  095D  0CC1               	rrf	(___aldiv@divisor+1)^(0+384),f
  1878  095E  0CC0               	rrf	___aldiv@divisor^(0+384),f
  1879  095F  3EFF               	addlw	-1
  1880  0960  1D03               	skipz
  1881  0961  295A               	goto	u3595
  1882  0962  3001               	movlw	1
  1883  0963  02C9               	subwf	___aldiv@counter^(0+384),f
  1884  0964  1D03               	btfss	3,2
  1885  0965  2931               	goto	l2879
  1886  0966                     l2891:	
  1887  0966  084A               	movf	___aldiv@sign^(0+384),w
  1888  0967  1903               	btfsc	3,2
  1889  0968  2974               	goto	l2895
  1890  0969  09CB               	comf	___aldiv@quotient^(0+384),f
  1891  096A  09CC               	comf	(___aldiv@quotient+1)^(0+384),f
  1892  096B  09CD               	comf	(___aldiv@quotient+2)^(0+384),f
  1893  096C  09CE               	comf	(___aldiv@quotient+3)^(0+384),f
  1894  096D  0ACB               	incf	___aldiv@quotient^(0+384),f
  1895  096E  1903               	skipnz
  1896  096F  0ACC               	incf	(___aldiv@quotient+1)^(0+384),f
  1897  0970  1903               	skipnz
  1898  0971  0ACD               	incf	(___aldiv@quotient+2)^(0+384),f
  1899  0972  1903               	skipnz
  1900  0973  0ACE               	incf	(___aldiv@quotient+3)^(0+384),f
  1901  0974                     l2895:	
  1902  0974  084E               	movf	(___aldiv@quotient+3)^(0+384),w
  1903  0975  00C3               	movwf	(?___aldiv+3)^(0+384)
  1904  0976  084D               	movf	(___aldiv@quotient+2)^(0+384),w
  1905  0977  00C2               	movwf	(?___aldiv+2)^(0+384)
  1906  0978  084C               	movf	(___aldiv@quotient+1)^(0+384),w
  1907  0979  00C1               	movwf	(?___aldiv+1)^(0+384)
  1908  097A  084B               	movf	___aldiv@quotient^(0+384),w
  1909  097B  00C0               	movwf	?___aldiv^(0+384)
  1910  097C  0008               	return
  1911  097D                     __end_of___aldiv:	
  1912                           
  1913                           	psect	text3
  1914  1246                     __ptext3:	
  1915 ;; *************** function _TIMER0_Set *****************
  1916 ;; Defined at:
  1917 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  contagens       1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  contagens       1    0[BANK3 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         0       0       0       1       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         0       0       0       1       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    4
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _TIMER0_Set
  1947  1246                     _TIMER0_Set:	
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _TIMER0_Set: [wreg]
  1951                           ;TIMER0_Set@contagens stored from wreg
  1952  1246  1683               	bsf	3,5	;RP0=1, select bank3
  1953  1247  1703               	bsf	3,6	;RP1=1, select bank3
  1954  1248  00C0               	movwf	TIMER0_Set@contagens^(0+384)
  1955                           
  1956                           ;timers.c: 22: TMR0 = contagens;
  1957  1249  0840               	movf	TIMER0_Set@contagens^(0+384),w
  1958  124A  1283               	bcf	3,5	;RP0=0, select bank0
  1959  124B  1303               	bcf	3,6	;RP1=0, select bank0
  1960  124C  0081               	movwf	1	;volatile
  1961  124D  0008               	return
  1962  124E                     __end_of_TIMER0_Set:	
  1963                           
  1964                           	psect	text4
  1965  1260                     __ptext4:	
  1966 ;; *************** function _TIMER0_Init *****************
  1967 ;; Defined at:
  1968 ;;		line 6 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;		None               void
  1975 ;; Registers used:
  1976 ;;		None
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    4
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _TIMER0_Init
  1998  1260                     _TIMER0_Init:	
  1999                           
  2000                           ;timers.c: 8: OPTION_REGbits.T0CS = 0;
  2001                           
  2002                           ;incstack = 0
  2003                           ; Regs used in _TIMER0_Init: []
  2004  1260  1683               	bsf	3,5	;RP0=1, select bank1
  2005  1261  1303               	bcf	3,6	;RP1=0, select bank1
  2006  1262  1281               	bcf	1,5	;volatile
  2007                           
  2008                           ;timers.c: 9: OPTION_REGbits.T0SE = 0;
  2009  1263  1201               	bcf	1,4	;volatile
  2010                           
  2011                           ;timers.c: 10: OPTION_REGbits.PSA = 0;
  2012  1264  1181               	bcf	1,3	;volatile
  2013                           
  2014                           ;timers.c: 11: OPTION_REGbits.PS2 = 1;
  2015  1265  1501               	bsf	1,2	;volatile
  2016                           
  2017                           ;timers.c: 12: OPTION_REGbits.PS1 = 1;
  2018  1266  1481               	bsf	1,1	;volatile
  2019                           
  2020                           ;timers.c: 13: OPTION_REGbits.PS0 = 1;
  2021  1267  1401               	bsf	1,0	;volatile
  2022                           
  2023                           ;timers.c: 14: INTCONbits.TMR0IF = 0;
  2024  1268  110B               	bcf	11,2	;volatile
  2025                           
  2026                           ;timers.c: 15: INTCONbits.TMR0IE = 1;
  2027  1269  168B               	bsf	11,5	;volatile
  2028  126A  0008               	return
  2029  126B                     __end_of_TIMER0_Init:	
  2030                           
  2031                           	psect	text5
  2032  136F                     __ptext5:	
  2033 ;; *************** function _PWM_Init *****************
  2034 ;; Defined at:
  2035 ;;		line 5 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         0       0       0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    4
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _PWM_Init
  2065  136F                     _PWM_Init:	
  2066                           
  2067                           ;pwm.c: 14: T2CONbits.T2CKPS1 = 1;
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _PWM_Init: [wreg]
  2071  136F  1283               	bcf	3,5	;RP0=0, select bank0
  2072  1370  1303               	bcf	3,6	;RP1=0, select bank0
  2073  1371  1492               	bsf	18,1	;volatile
  2074                           
  2075                           ;pwm.c: 15: T2CONbits.T2CKPS0 = 0;
  2076  1372  1012               	bcf	18,0	;volatile
  2077                           
  2078                           ;pwm.c: 18: T2CONbits.TOUTPS3 = 0;
  2079  1373  1312               	bcf	18,6	;volatile
  2080                           
  2081                           ;pwm.c: 19: T2CONbits.TOUTPS2 = 0;
  2082  1374  1292               	bcf	18,5	;volatile
  2083                           
  2084                           ;pwm.c: 20: T2CONbits.TOUTPS1 = 0;
  2085  1375  1212               	bcf	18,4	;volatile
  2086                           
  2087                           ;pwm.c: 21: T2CONbits.TOUTPS0 = 0;
  2088  1376  1192               	bcf	18,3	;volatile
  2089                           
  2090                           ;pwm.c: 24: T2CONbits.TMR2ON = 1;
  2091  1377  1512               	bsf	18,2	;volatile
  2092                           
  2093                           ;pwm.c: 27: PR2 = 255;
  2094  1378  30FF               	movlw	255
  2095  1379  1683               	bsf	3,5	;RP0=1, select bank1
  2096  137A  1303               	bcf	3,6	;RP1=0, select bank1
  2097  137B  0092               	movwf	18	;volatile
  2098                           
  2099                           ;pwm.c: 43: CCP1CONbits.CCP1M3 = 1;
  2100  137C  1283               	bcf	3,5	;RP0=0, select bank0
  2101  137D  1303               	bcf	3,6	;RP1=0, select bank0
  2102  137E  1597               	bsf	23,3	;volatile
  2103                           
  2104                           ;pwm.c: 44: CCP1CONbits.CCP1M2 = 1;
  2105  137F  1517               	bsf	23,2	;volatile
  2106                           
  2107                           ;pwm.c: 45: CCP1CONbits.CCP1M1 = 1;
  2108  1380  1497               	bsf	23,1	;volatile
  2109                           
  2110                           ;pwm.c: 46: CCP1CONbits.CCP1M0 = 1;
  2111  1381  1417               	bsf	23,0	;volatile
  2112                           
  2113                           ;pwm.c: 49: PIE1bits.CCP1IE = 1;
  2114  1382  1683               	bsf	3,5	;RP0=1, select bank1
  2115  1383  1303               	bcf	3,6	;RP1=0, select bank1
  2116  1384  150C               	bsf	12,2	;volatile
  2117                           
  2118                           ;pwm.c: 50: PIR1bits.CCP1IF = 0;
  2119  1385  1283               	bcf	3,5	;RP0=0, select bank0
  2120  1386  1303               	bcf	3,6	;RP1=0, select bank0
  2121  1387  110C               	bcf	12,2	;volatile
  2122                           
  2123                           ;pwm.c: 53: CCP2CONbits.CCP2M3 = 1;
  2124  1388  159D               	bsf	29,3	;volatile
  2125                           
  2126                           ;pwm.c: 54: CCP2CONbits.CCP2M2 = 1;
  2127  1389  151D               	bsf	29,2	;volatile
  2128                           
  2129                           ;pwm.c: 55: CCP2CONbits.CCP2M1 = 1;
  2130  138A  149D               	bsf	29,1	;volatile
  2131                           
  2132                           ;pwm.c: 56: CCP2CONbits.CCP2M0 = 1;
  2133  138B  141D               	bsf	29,0	;volatile
  2134                           
  2135                           ;pwm.c: 59: PIE2bits.CCP2IE = 1;
  2136  138C  1683               	bsf	3,5	;RP0=1, select bank1
  2137  138D  1303               	bcf	3,6	;RP1=0, select bank1
  2138  138E  140D               	bsf	13,0	;volatile
  2139                           
  2140                           ;pwm.c: 60: PIR2bits.CCP2IF = 0;
  2141  138F  1283               	bcf	3,5	;RP0=0, select bank0
  2142  1390  1303               	bcf	3,6	;RP1=0, select bank0
  2143  1391  100D               	bcf	13,0	;volatile
  2144  1392  0008               	return
  2145  1393                     __end_of_PWM_Init:	
  2146                           
  2147                           	psect	text6
  2148  07DE                     __ptext6:	
  2149 ;; *************** function _PWM_DutyCycle2 *****************
  2150 ;; Defined at:
  2151 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  valor           2    0[BANK3 ] int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;		None               void
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       0       0       2       0
  2166 ;;      Locals:         0       0       0       0       0
  2167 ;;      Temps:          0       0       0       2       0
  2168 ;;      Totals:         0       0       0       4       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    4
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _PWM_DutyCycle2
  2181  07DE                     _PWM_DutyCycle2:	
  2182                           
  2183                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _PWM_DutyCycle2: [wreg+status,2+status,0]
  2187  07DE  1683               	bsf	3,5	;RP0=1, select bank3
  2188  07DF  1703               	bsf	3,6	;RP1=1, select bank3
  2189  07E0  0841               	movf	(PWM_DutyCycle2@valor+1)^(0+384),w
  2190  07E1  00C3               	movwf	(??_PWM_DutyCycle2^(0+384)+1)
  2191  07E2  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2192  07E3  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2193  07E4  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2194  07E5  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2195  07E6  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2196  07E7  0D43               	rlf	(??_PWM_DutyCycle2^(0+384)+1),w
  2197  07E8  0CC3               	rrf	(??_PWM_DutyCycle2^(0+384)+1),f
  2198  07E9  0CC2               	rrf	??_PWM_DutyCycle2^(0+384),f
  2199  07EA  0842               	movf	??_PWM_DutyCycle2^(0+384),w
  2200  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  2201  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  2202  07ED  009B               	movwf	27	;volatile
  2203                           
  2204                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2205  07EE  1683               	bsf	3,5	;RP0=1, select bank3
  2206  07EF  1703               	bsf	3,6	;RP1=1, select bank3
  2207  07F0  0840               	movf	PWM_DutyCycle2@valor^(0+384),w
  2208  07F1  00C2               	movwf	??_PWM_DutyCycle2^(0+384)
  2209  07F2  3003               	movlw	3
  2210  07F3                     u3625:	
  2211  07F3  1003               	clrc
  2212  07F4  0DC2               	rlf	??_PWM_DutyCycle2^(0+384),f
  2213  07F5  3EFF               	addlw	-1
  2214  07F6  1D03               	skipz
  2215  07F7  2FF3               	goto	u3625
  2216  07F8  1003               	clrc
  2217  07F9  0D42               	rlf	??_PWM_DutyCycle2^(0+384),w
  2218  07FA  380C               	iorlw	12
  2219  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  2220  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  2221  07FD  009D               	movwf	29	;volatile
  2222  07FE  0008               	return
  2223  07FF                     __end_of_PWM_DutyCycle2:	
  2224                           
  2225                           	psect	text7
  2226  134E                     __ptext7:	
  2227 ;; *************** function _PWM_DutyCycle1 *****************
  2228 ;; Defined at:
  2229 ;;		line 64 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  valor           2    0[BANK3 ] int 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       0       0       2       0
  2244 ;;      Locals:         0       0       0       0       0
  2245 ;;      Temps:          0       0       0       2       0
  2246 ;;      Totals:         0       0       0       4       0
  2247 ;;Total ram usage:        4 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _PWM_DutyCycle1
  2259  134E                     _PWM_DutyCycle1:	
  2260                           
  2261                           ;pwm.c: 91: CCPR1L = valor >> 2;
  2262                           
  2263                           ;incstack = 0
  2264                           ; Regs used in _PWM_DutyCycle1: [wreg+status,2+status,0]
  2265  134E  1683               	bsf	3,5	;RP0=1, select bank3
  2266  134F  1703               	bsf	3,6	;RP1=1, select bank3
  2267  1350  0841               	movf	(PWM_DutyCycle1@valor+1)^(0+384),w
  2268  1351  00C3               	movwf	(??_PWM_DutyCycle1^(0+384)+1)
  2269  1352  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2270  1353  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2271  1354  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2272  1355  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2273  1356  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2274  1357  0D43               	rlf	(??_PWM_DutyCycle1^(0+384)+1),w
  2275  1358  0CC3               	rrf	(??_PWM_DutyCycle1^(0+384)+1),f
  2276  1359  0CC2               	rrf	??_PWM_DutyCycle1^(0+384),f
  2277  135A  0842               	movf	??_PWM_DutyCycle1^(0+384),w
  2278  135B  1283               	bcf	3,5	;RP0=0, select bank0
  2279  135C  1303               	bcf	3,6	;RP1=0, select bank0
  2280  135D  0095               	movwf	21	;volatile
  2281                           
  2282                           ;pwm.c: 92: CCP1CON = (valor << 4)|0X0C;
  2283  135E  1683               	bsf	3,5	;RP0=1, select bank3
  2284  135F  1703               	bsf	3,6	;RP1=1, select bank3
  2285  1360  0840               	movf	PWM_DutyCycle1@valor^(0+384),w
  2286  1361  00C2               	movwf	??_PWM_DutyCycle1^(0+384)
  2287  1362  3003               	movlw	3
  2288  1363                     u3645:	
  2289  1363  1003               	clrc
  2290  1364  0DC2               	rlf	??_PWM_DutyCycle1^(0+384),f
  2291  1365  3EFF               	addlw	-1
  2292  1366  1D03               	skipz
  2293  1367  2B63               	goto	u3645
  2294  1368  1003               	clrc
  2295  1369  0D42               	rlf	??_PWM_DutyCycle1^(0+384),w
  2296  136A  380C               	iorlw	12
  2297  136B  1283               	bcf	3,5	;RP0=0, select bank0
  2298  136C  1303               	bcf	3,6	;RP1=0, select bank0
  2299  136D  0097               	movwf	23	;volatile
  2300  136E  0008               	return
  2301  136F                     __end_of_PWM_DutyCycle1:	
  2302                           
  2303                           	psect	text8
  2304  0A16                     __ptext8:	
  2305 ;; *************** function _ISR *****************
  2306 ;; Defined at:
  2307 ;;		line 99 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  a               2   22[BANK1 ] int 
  2312 ;;  a               2   20[BANK1 ] int 
  2313 ;;  a               2   18[BANK1 ] int 
  2314 ;;  a               2   16[BANK1 ] int 
  2315 ;;  a               2   30[BANK1 ] int 
  2316 ;;  x               3   34[BANK1 ] float 
  2317 ;;  rule            3   27[BANK1 ] float 
  2318 ;;  total_area      3   24[BANK1 ] float 
  2319 ;;  soma            3   13[BANK1 ] float 
  2320 ;;  reajuste        3    6[BANK1 ] float 
  2321 ;;  rpmAux          2   32[BANK1 ] int 
  2322 ;;  delta           2   11[BANK1 ] int 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;		None               void
  2325 ;; Registers used:
  2326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       0       0       0       0
  2333 ;;      Locals:         0       0      37       0       0
  2334 ;;      Temps:          0       6       0       0       0
  2335 ;;      Totals:         0       6      37       0       0
  2336 ;;Total ram usage:       43 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    3
  2339 ;; This function calls:
  2340 ;;		_USART_ReceiveChar
  2341 ;;		_USART_WriteChar
  2342 ;;		___awdiv
  2343 ;;		___awmod
  2344 ;;		___awtoft
  2345 ;;		___bmul
  2346 ;;		___ftadd
  2347 ;;		___ftdiv
  2348 ;;		___ftge
  2349 ;;		___ftmul
  2350 ;;		___ftneg
  2351 ;;		___fttol
  2352 ;;		___lwdiv
  2353 ;;		___lwtoft
  2354 ;;		___wmul
  2355 ;;		_abs
  2356 ;;		_maximo
  2357 ;;		_minimo
  2358 ;;		_trapmf
  2359 ;;		i1_PWM_DutyCycle2
  2360 ;;		i1_TIMER0_Set
  2361 ;; This function is called by:
  2362 ;;		Interrupt level 1
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function _ISR
  2368  0A16                     _ISR:	
  2369                           
  2370                           ;main.c: 102: if (PIR1bits.RCIF)
  2371  0A16  1E8C               	btfss	12,5	;volatile
  2372  0A17  2A3F               	goto	i1l3441
  2373                           
  2374                           ;main.c: 103: {
  2375                           ;main.c: 104: setpoint = (USART_ReceiveChar() - 48) * 1000;
  2376  0A18  160A  118A  228A  120A  158A  	fcall	_USART_ReceiveChar
  2377  0A1D  3ED0               	addlw	208
  2378  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0A20  00C0               	movwf	___wmul@multiplier
  2381  0A21  30FF               	movlw	255
  2382  0A22  1803               	skipnc
  2383  0A23  3000               	movlw	0
  2384  0A24  00C1               	movwf	___wmul@multiplier+1
  2385  0A25  30E8               	movlw	232
  2386  0A26  00C2               	movwf	___wmul@multiplicand
  2387  0A27  3003               	movlw	3
  2388  0A28  00C3               	movwf	___wmul@multiplicand+1
  2389  0A29  160A  118A  2393  120A  158A  	fcall	___wmul
  2390  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0A30  0841               	movf	?___wmul+1,w
  2393  0A31  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0A32  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0A33  01D9               	clrf	(_setpoint+1)^(0+128)
  2396  0A34  07D9               	addwf	(_setpoint+1)^(0+128),f
  2397  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0A37  0840               	movf	?___wmul,w
  2400  0A38  1683               	bsf	3,5	;RP0=1, select bank1
  2401  0A39  1303               	bcf	3,6	;RP1=0, select bank1
  2402  0A3A  01D8               	clrf	_setpoint^(0+128)
  2403  0A3B  07D8               	addwf	_setpoint^(0+128),f
  2404                           
  2405                           ;main.c: 106: PIR1bits.RCIF = 0;
  2406  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0A3E  128C               	bcf	12,5	;volatile
  2409  0A3F                     i1l3441:	
  2410                           
  2411                           ;main.c: 107: }
  2412                           ;main.c: 120: if (INTCONbits.T0IF)
  2413  0A3F  120A  118A  1D0B   	btfss	11,2	;volatile
  2414  0A42  2FCE               	goto	i1l3647
  2415                           
  2416                           ;main.c: 121: {
  2417                           ;main.c: 123: TIMER0_Set(238);
  2418  0A43  30EE               	movlw	238
  2419  0A44  160A  118A  2238  120A  158A  	fcall	i1_TIMER0_Set
  2420                           
  2421                           ;main.c: 126: if (contagens_tm0 < 499)
  2422  0A49  3001               	movlw	1
  2423  0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  2424  0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  2425  0A4C  024D               	subwf	(_contagens_tm0+1)^(0+128),w
  2426  0A4D  30F3               	movlw	243
  2427  0A4E  1903               	skipnz
  2428  0A4F  024C               	subwf	_contagens_tm0^(0+128),w
  2429  0A50  1803               	skipnc
  2430  0A51  2A5E               	goto	i1l3451
  2431                           
  2432                           ;main.c: 127: {
  2433                           ;main.c: 129: contagens_tm0++;
  2434  0A52  3001               	movlw	1
  2435  0A53  07CC               	addwf	_contagens_tm0^(0+128),f
  2436  0A54  1803               	skipnc
  2437  0A55  0ACD               	incf	(_contagens_tm0+1)^(0+128),f
  2438  0A56  3000               	movlw	0
  2439  0A57  07CD               	addwf	(_contagens_tm0+1)^(0+128),f
  2440                           
  2441                           ;main.c: 132: PORTBbits.RB6 = 1;
  2442  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0A5A  1706               	bsf	6,6	;volatile
  2445                           
  2446                           ;main.c: 133: }
  2447  0A5B  120A  118A  2FCD   	goto	i1l3645
  2448  0A5E                     i1l3451:	
  2449                           
  2450                           ;main.c: 134: else
  2451                           ;main.c: 135: {
  2452                           ;main.c: 137: contagens_tm0 = 0;
  2453  0A5E  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0A5F  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0A60  01CC               	clrf	_contagens_tm0^(0+128)
  2456  0A61  01CD               	clrf	(_contagens_tm0+1)^(0+128)
  2457                           
  2458                           ;main.c: 140: pulsos = (TMR1H << 8) + TMR1L;
  2459  0A62  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0A63  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0A64  080F               	movf	15,w	;volatile
  2462  0A65  1683               	bsf	3,5	;RP0=1, select bank1
  2463  0A66  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0A67  01D3               	clrf	(_pulsos+1)^(0+128)
  2465  0A68  07D3               	addwf	(_pulsos+1)^(0+128),f
  2466  0A69  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0A6A  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0A6B  080E               	movf	14,w	;volatile
  2469  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  2470  0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  2471  0A6E  01D2               	clrf	_pulsos^(0+128)
  2472  0A6F  07D2               	addwf	_pulsos^(0+128),f
  2473                           
  2474                           ;main.c: 141: rpm = ((pulsos/7)*120);
  2475  0A70  3007               	movlw	7
  2476  0A71  00F0               	movwf	___lwdiv@divisor
  2477  0A72  3000               	movlw	0
  2478  0A73  00F1               	movwf	___lwdiv@divisor+1
  2479  0A74  0853               	movf	(_pulsos+1)^(0+128),w
  2480  0A75  01F3               	clrf	___lwdiv@dividend+1
  2481  0A76  07F3               	addwf	___lwdiv@dividend+1,f
  2482  0A77  0852               	movf	_pulsos^(0+128),w
  2483  0A78  01F2               	clrf	___lwdiv@dividend
  2484  0A79  07F2               	addwf	___lwdiv@dividend,f
  2485  0A7A  160A  118A  23B8  120A  158A  	fcall	___lwdiv
  2486  0A7F  0871               	movf	?___lwdiv+1,w
  2487  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0A82  01C1               	clrf	___wmul@multiplier+1
  2490  0A83  07C1               	addwf	___wmul@multiplier+1,f
  2491  0A84  0870               	movf	?___lwdiv,w
  2492  0A85  01C0               	clrf	___wmul@multiplier
  2493  0A86  07C0               	addwf	___wmul@multiplier,f
  2494  0A87  3078               	movlw	120
  2495  0A88  00C2               	movwf	___wmul@multiplicand
  2496  0A89  3000               	movlw	0
  2497  0A8A  00C3               	movwf	___wmul@multiplicand+1
  2498  0A8B  160A  118A  2393  120A  158A  	fcall	___wmul
  2499  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0A92  0841               	movf	?___wmul+1,w
  2502  0A93  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0A94  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0A95  01D7               	clrf	(_rpm+1)^(0+128)
  2505  0A96  07D7               	addwf	(_rpm+1)^(0+128),f
  2506  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2508  0A99  0840               	movf	?___wmul,w
  2509  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0A9C  01D6               	clrf	_rpm^(0+128)
  2512  0A9D  07D6               	addwf	_rpm^(0+128),f
  2513                           
  2514                           ;main.c: 143: TMR1L = 0x00;
  2515  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  2516  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  2517  0AA0  018E               	clrf	14	;volatile
  2518                           
  2519                           ;main.c: 144: TMR1H = 0x00;
  2520  0AA1  018F               	clrf	15	;volatile
  2521                           
  2522                           ;main.c: 146: int rpmAux = rpm;
  2523  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0AA4  0857               	movf	(_rpm+1)^(0+128),w
  2526  0AA5  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  2527  0AA6  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  2528  0AA7  0856               	movf	_rpm^(0+128),w
  2529  0AA8  01C0               	clrf	ISR@rpmAux^(0+128)
  2530  0AA9  07C0               	addwf	ISR@rpmAux^(0+128),f
  2531                           
  2532                           ;main.c: 147: USART_WriteChar((rpmAux%10)+48);
  2533  0AAA  300A               	movlw	10
  2534  0AAB  00F0               	movwf	___awmod@divisor
  2535  0AAC  3000               	movlw	0
  2536  0AAD  00F1               	movwf	___awmod@divisor+1
  2537  0AAE  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  2538  0AAF  01F3               	clrf	___awmod@dividend+1
  2539  0AB0  07F3               	addwf	___awmod@dividend+1,f
  2540  0AB1  0840               	movf	ISR@rpmAux^(0+128),w
  2541  0AB2  01F2               	clrf	___awmod@dividend
  2542  0AB3  07F2               	addwf	___awmod@dividend,f
  2543  0AB4  160A  118A  2441   	fcall	___awmod
  2544  0AB7  0870               	movf	?___awmod,w
  2545  0AB8  160A  118A  2F72   	ljmp	L10
  2546                           
  2547                           	psect	intentry
  2548  0004                     __pintentry:	
  2549                           ;incstack = 0
  2550                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2551                           
  2552  0004                     interrupt_function:	
  2553  007E                     saved_w	set	btemp
  2554  0004  00FE               	movwf	btemp
  2555  0005  0E03               	swapf	3,w
  2556  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0008  00E4               	movwf	??_ISR+2
  2559  0009  0804               	movf	4,w
  2560  000A  00E5               	movwf	??_ISR+3
  2561  000B  080A               	movf	10,w
  2562  000C  00E6               	movwf	??_ISR+4
  2563  000D  087F               	movf	btemp+1,w
  2564  000E  00E7               	movwf	??_ISR+5
  2565  000F  120A  158A  2A16   	ljmp	_ISR
  2566                           
  2567                           	psect	text9
  2568  1238                     __ptext9:	
  2569 ;; *************** function i1_TIMER0_Set *****************
  2570 ;; Defined at:
  2571 ;;		line 20 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\timers.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  contagens       1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  contagens       1    0[COMMON] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         1       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0
  2588 ;;      Totals:         1       0       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_ISR
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function i1_TIMER0_Set
  2600  1238                     i1_TIMER0_Set:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in i1_TIMER0_Set: [wreg]
  2604                           ;i1TIMER0_Set@contagens stored from wreg
  2605  1238  00F0               	movwf	i1TIMER0_Set@contagens
  2606                           
  2607                           ;timers.c: 22: TMR0 = contagens;
  2608  1239  0870               	movf	i1TIMER0_Set@contagens,w
  2609  123A  1283               	bcf	3,5	;RP0=0, select bank0
  2610  123B  1303               	bcf	3,6	;RP1=0, select bank0
  2611  123C  0081               	movwf	1	;volatile
  2612  123D  0008               	return
  2613  123E                     __end_ofi1_TIMER0_Set:	
  2614                           
  2615                           	psect	text10
  2616  12BA                     __ptext10:	
  2617 ;; *************** function i1_PWM_DutyCycle2 *****************
  2618 ;; Defined at:
  2619 ;;		line 96 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\pwm.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  valor           2    0[COMMON] int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         2       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          2       0       0       0       0
  2636 ;;      Totals:         4       0       0       0       0
  2637 ;;Total ram usage:        4 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_ISR
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function i1_PWM_DutyCycle2
  2648  12BA                     i1_PWM_DutyCycle2:	
  2649                           
  2650                           ;pwm.c: 98: CCPR2L = valor >> 2;
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in i1_PWM_DutyCycle2: [wreg+status,2+status,0]
  2654  12BA  0871               	movf	i1PWM_DutyCycle2@valor+1,w
  2655  12BB  00F3               	movwf	??i1_PWM_DutyCycle2+1
  2656  12BC  0870               	movf	i1PWM_DutyCycle2@valor,w
  2657  12BD  00F2               	movwf	??i1_PWM_DutyCycle2
  2658  12BE  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  2659  12BF  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  2660  12C0  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  2661  12C1  0D73               	rlf	??i1_PWM_DutyCycle2+1,w
  2662  12C2  0CF3               	rrf	??i1_PWM_DutyCycle2+1,f
  2663  12C3  0CF2               	rrf	??i1_PWM_DutyCycle2,f
  2664  12C4  0872               	movf	??i1_PWM_DutyCycle2,w
  2665  12C5  1283               	bcf	3,5	;RP0=0, select bank0
  2666  12C6  1303               	bcf	3,6	;RP1=0, select bank0
  2667  12C7  009B               	movwf	27	;volatile
  2668                           
  2669                           ;pwm.c: 99: CCP2CON = (valor << 4)|0X0C;
  2670  12C8  0870               	movf	i1PWM_DutyCycle2@valor,w
  2671  12C9  00F2               	movwf	??i1_PWM_DutyCycle2
  2672  12CA  3003               	movlw	3
  2673  12CB                     u317_25:	
  2674  12CB  1003               	clrc
  2675  12CC  0DF2               	rlf	??i1_PWM_DutyCycle2,f
  2676  12CD  3EFF               	addlw	-1
  2677  12CE  1D03               	skipz
  2678  12CF  2ACB               	goto	u317_25
  2679  12D0  1003               	clrc
  2680  12D1  0D72               	rlf	??i1_PWM_DutyCycle2,w
  2681  12D2  380C               	iorlw	12
  2682  12D3  009D               	movwf	29	;volatile
  2683  12D4  0008               	return
  2684  12D5                     __end_ofi1_PWM_DutyCycle2:	
  2685                           
  2686                           	psect	text11
  2687  0EAA                     __ptext11:	
  2688 ;; *************** function _trapmf *****************
  2689 ;; Defined at:
  2690 ;;		line 80 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  x               3   32[BANK0 ] float 
  2693 ;;  a               3   35[BANK0 ] float 
  2694 ;;  b               3   38[BANK0 ] float 
  2695 ;;  c               3   41[BANK0 ] float 
  2696 ;;  d               3   44[BANK0 ] float 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  ua              3   47[BANK0 ] float 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  3   32[BANK0 ] float 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0, pclath, cstack
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2708 ;;      Params:         0      15       0       0       0
  2709 ;;      Locals:         0       3       0       0       0
  2710 ;;      Temps:          0       0       0       0       0
  2711 ;;      Totals:         0      18       0       0       0
  2712 ;;Total ram usage:       18 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    2
  2715 ;; This function calls:
  2716 ;;		___ftadd
  2717 ;;		___ftdiv
  2718 ;;		___ftge
  2719 ;;		___ftneg
  2720 ;; This function is called by:
  2721 ;;		_ISR
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _trapmf
  2727  0EAA                     _trapmf:	
  2728                           
  2729                           ;main.c: 82: float ua = 0;
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _trapmf: [wreg+status,2+status,0+pclath+cstack]
  2733  0EAA  3000               	movlw	0
  2734  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0EAD  00CF               	movwf	trapmf@ua
  2737  0EAE  3000               	movlw	0
  2738  0EAF  00D0               	movwf	trapmf@ua+1
  2739  0EB0  3000               	movlw	0
  2740  0EB1  00D1               	movwf	trapmf@ua+2
  2741                           
  2742                           ;main.c: 84: if (x <= a)
  2743  0EB2  0843               	movf	trapmf@a,w
  2744  0EB3  00F4               	movwf	___ftge@ff1
  2745  0EB4  0844               	movf	trapmf@a+1,w
  2746  0EB5  00F5               	movwf	___ftge@ff1+1
  2747  0EB6  0845               	movf	trapmf@a+2,w
  2748  0EB7  00F6               	movwf	___ftge@ff1+2
  2749  0EB8  0840               	movf	trapmf@x,w
  2750  0EB9  00F7               	movwf	___ftge@ff2
  2751  0EBA  0841               	movf	trapmf@x+1,w
  2752  0EBB  00F8               	movwf	___ftge@ff2+1
  2753  0EBC  0842               	movf	trapmf@x+2,w
  2754  0EBD  00F9               	movwf	___ftge@ff2+2
  2755  0EBE  160A  118A  248E  120A  158A  	fcall	___ftge
  2756  0EC3  1803               	btfsc	3,0
  2757  0EC4  2FEF               	goto	L6
  2758                           
  2759                           ;main.c: 86: else if ((a < x) && (x <= b))
  2760                           
  2761                           ;main.c: 85: ua = 0;
  2762  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0EC7  0843               	movf	trapmf@a,w
  2765  0EC8  00F4               	movwf	___ftge@ff1
  2766  0EC9  0844               	movf	trapmf@a+1,w
  2767  0ECA  00F5               	movwf	___ftge@ff1+1
  2768  0ECB  0845               	movf	trapmf@a+2,w
  2769  0ECC  00F6               	movwf	___ftge@ff1+2
  2770  0ECD  0840               	movf	trapmf@x,w
  2771  0ECE  00F7               	movwf	___ftge@ff2
  2772  0ECF  0841               	movf	trapmf@x+1,w
  2773  0ED0  00F8               	movwf	___ftge@ff2+1
  2774  0ED1  0842               	movf	trapmf@x+2,w
  2775  0ED2  00F9               	movwf	___ftge@ff2+2
  2776  0ED3  160A  118A  248E  120A  158A  	fcall	___ftge
  2777  0ED8  1803               	btfsc	3,0
  2778  0ED9  2F23               	goto	i1l3417
  2779  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0EDC  0846               	movf	trapmf@b,w
  2782  0EDD  00F4               	movwf	___ftge@ff1
  2783  0EDE  0847               	movf	trapmf@b+1,w
  2784  0EDF  00F5               	movwf	___ftge@ff1+1
  2785  0EE0  0848               	movf	trapmf@b+2,w
  2786  0EE1  00F6               	movwf	___ftge@ff1+2
  2787  0EE2  0840               	movf	trapmf@x,w
  2788  0EE3  00F7               	movwf	___ftge@ff2
  2789  0EE4  0841               	movf	trapmf@x+1,w
  2790  0EE5  00F8               	movwf	___ftge@ff2+1
  2791  0EE6  0842               	movf	trapmf@x+2,w
  2792  0EE7  00F9               	movwf	___ftge@ff2+2
  2793  0EE8  160A  118A  248E  120A  158A  	fcall	___ftge
  2794  0EED  1C03               	btfss	3,0
  2795  0EEE  2F23               	goto	i1l3417
  2796                           
  2797                           ;main.c: 87: ua = ((x - a) / (b - a));
  2798  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0EF1  0846               	movf	trapmf@b,w
  2801  0EF2  00A3               	movwf	___ftadd@f1
  2802  0EF3  0847               	movf	trapmf@b+1,w
  2803  0EF4  00A4               	movwf	___ftadd@f1+1
  2804  0EF5  0848               	movf	trapmf@b+2,w
  2805  0EF6  00A5               	movwf	___ftadd@f1+2
  2806  0EF7  0843               	movf	trapmf@a,w
  2807  0EF8  00A0               	movwf	___ftneg@f1
  2808  0EF9  0844               	movf	trapmf@a+1,w
  2809  0EFA  00A1               	movwf	___ftneg@f1+1
  2810  0EFB  0845               	movf	trapmf@a+2,w
  2811  0EFC  00A2               	movwf	___ftneg@f1+2
  2812  0EFD  160A  118A  2256  120A  158A  	fcall	___ftneg
  2813  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0F04  0820               	movf	?___ftneg,w
  2816  0F05  00A6               	movwf	___ftadd@f2
  2817  0F06  0821               	movf	?___ftneg+1,w
  2818  0F07  00A7               	movwf	___ftadd@f2+1
  2819  0F08  0822               	movf	?___ftneg+2,w
  2820  0F09  00A8               	movwf	___ftadd@f2+2
  2821  0F0A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  2822  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  2824  0F11  0823               	movf	?___ftadd,w
  2825  0F12  00B0               	movwf	___ftdiv@f2
  2826  0F13  0824               	movf	?___ftadd+1,w
  2827  0F14  00B1               	movwf	___ftdiv@f2+1
  2828  0F15  0825               	movf	?___ftadd+2,w
  2829  0F16  00B2               	movwf	___ftdiv@f2+2
  2830  0F17  0840               	movf	trapmf@x,w
  2831  0F18  00A3               	movwf	___ftadd@f1
  2832  0F19  0841               	movf	trapmf@x+1,w
  2833  0F1A  00A4               	movwf	___ftadd@f1+1
  2834  0F1B  0842               	movf	trapmf@x+2,w
  2835  0F1C  00A5               	movwf	___ftadd@f1+2
  2836  0F1D  0843               	movf	trapmf@a,w
  2837  0F1E  00A0               	movwf	___ftneg@f1
  2838  0F1F  0844               	movf	trapmf@a+1,w
  2839  0F20  00A1               	movwf	___ftneg@f1+1
  2840  0F21  0845               	movf	trapmf@a+2,w
  2841  0F22  2FB2               	goto	L8
  2842  0F23                     i1l3417:	
  2843                           
  2844                           ;main.c: 88: else if ((b <= x) && (x <= c))
  2845  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0F25  0840               	movf	trapmf@x,w
  2848  0F26  00F4               	movwf	___ftge@ff1
  2849  0F27  0841               	movf	trapmf@x+1,w
  2850  0F28  00F5               	movwf	___ftge@ff1+1
  2851  0F29  0842               	movf	trapmf@x+2,w
  2852  0F2A  00F6               	movwf	___ftge@ff1+2
  2853  0F2B  0846               	movf	trapmf@b,w
  2854  0F2C  00F7               	movwf	___ftge@ff2
  2855  0F2D  0847               	movf	trapmf@b+1,w
  2856  0F2E  00F8               	movwf	___ftge@ff2+1
  2857  0F2F  0848               	movf	trapmf@b+2,w
  2858  0F30  00F9               	movwf	___ftge@ff2+2
  2859  0F31  160A  118A  248E  120A  158A  	fcall	___ftge
  2860  0F36  1C03               	btfss	3,0
  2861  0F37  2F55               	goto	i1l3423
  2862  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0F3A  0849               	movf	trapmf@c,w
  2865  0F3B  00F4               	movwf	___ftge@ff1
  2866  0F3C  084A               	movf	trapmf@c+1,w
  2867  0F3D  00F5               	movwf	___ftge@ff1+1
  2868  0F3E  084B               	movf	trapmf@c+2,w
  2869  0F3F  00F6               	movwf	___ftge@ff1+2
  2870  0F40  0840               	movf	trapmf@x,w
  2871  0F41  00F7               	movwf	___ftge@ff2
  2872  0F42  0841               	movf	trapmf@x+1,w
  2873  0F43  00F8               	movwf	___ftge@ff2+1
  2874  0F44  0842               	movf	trapmf@x+2,w
  2875  0F45  00F9               	movwf	___ftge@ff2+2
  2876  0F46  160A  118A  248E  120A  158A  	fcall	___ftge
  2877  0F4B  1C03               	btfss	3,0
  2878  0F4C  2F55               	goto	i1l3423
  2879                           
  2880                           ;main.c: 89: ua = 1;
  2881  0F4D  3000               	movlw	0
  2882  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0F50  00CF               	movwf	trapmf@ua
  2885  0F51  3080               	movlw	128
  2886  0F52  00D0               	movwf	trapmf@ua+1
  2887  0F53  303F               	movlw	63
  2888  0F54  2FF6               	goto	L5
  2889  0F55                     i1l3423:	
  2890                           
  2891                           ;main.c: 90: else if ((c < x) && (x <= d))
  2892  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  2894  0F57  0849               	movf	trapmf@c,w
  2895  0F58  00F4               	movwf	___ftge@ff1
  2896  0F59  084A               	movf	trapmf@c+1,w
  2897  0F5A  00F5               	movwf	___ftge@ff1+1
  2898  0F5B  084B               	movf	trapmf@c+2,w
  2899  0F5C  00F6               	movwf	___ftge@ff1+2
  2900  0F5D  0840               	movf	trapmf@x,w
  2901  0F5E  00F7               	movwf	___ftge@ff2
  2902  0F5F  0841               	movf	trapmf@x+1,w
  2903  0F60  00F8               	movwf	___ftge@ff2+1
  2904  0F61  0842               	movf	trapmf@x+2,w
  2905  0F62  00F9               	movwf	___ftge@ff2+2
  2906  0F63  160A  118A  248E  120A  158A  	fcall	___ftge
  2907  0F68  1803               	btfsc	3,0
  2908  0F69  2FDA               	goto	i1l3429
  2909  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0F6C  084C               	movf	trapmf@d,w
  2912  0F6D  00F4               	movwf	___ftge@ff1
  2913  0F6E  084D               	movf	trapmf@d+1,w
  2914  0F6F  00F5               	movwf	___ftge@ff1+1
  2915  0F70  084E               	movf	trapmf@d+2,w
  2916  0F71  00F6               	movwf	___ftge@ff1+2
  2917  0F72  0840               	movf	trapmf@x,w
  2918  0F73  00F7               	movwf	___ftge@ff2
  2919  0F74  0841               	movf	trapmf@x+1,w
  2920  0F75  00F8               	movwf	___ftge@ff2+1
  2921  0F76  0842               	movf	trapmf@x+2,w
  2922  0F77  00F9               	movwf	___ftge@ff2+2
  2923  0F78  160A  118A  248E  120A  158A  	fcall	___ftge
  2924  0F7D  1C03               	btfss	3,0
  2925  0F7E  2FDA               	goto	i1l3429
  2926                           
  2927                           ;main.c: 91: ua = ((d - x) / (d - c));
  2928  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0F81  084C               	movf	trapmf@d,w
  2931  0F82  00A3               	movwf	___ftadd@f1
  2932  0F83  084D               	movf	trapmf@d+1,w
  2933  0F84  00A4               	movwf	___ftadd@f1+1
  2934  0F85  084E               	movf	trapmf@d+2,w
  2935  0F86  00A5               	movwf	___ftadd@f1+2
  2936  0F87  0849               	movf	trapmf@c,w
  2937  0F88  00A0               	movwf	___ftneg@f1
  2938  0F89  084A               	movf	trapmf@c+1,w
  2939  0F8A  00A1               	movwf	___ftneg@f1+1
  2940  0F8B  084B               	movf	trapmf@c+2,w
  2941  0F8C  00A2               	movwf	___ftneg@f1+2
  2942  0F8D  160A  118A  2256  120A  158A  	fcall	___ftneg
  2943  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0F94  0820               	movf	?___ftneg,w
  2946  0F95  00A6               	movwf	___ftadd@f2
  2947  0F96  0821               	movf	?___ftneg+1,w
  2948  0F97  00A7               	movwf	___ftadd@f2+1
  2949  0F98  0822               	movf	?___ftneg+2,w
  2950  0F99  00A8               	movwf	___ftadd@f2+2
  2951  0F9A  120A  158A  25A1  120A  158A  	fcall	___ftadd
  2952  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0FA1  0823               	movf	?___ftadd,w
  2955  0FA2  00B0               	movwf	___ftdiv@f2
  2956  0FA3  0824               	movf	?___ftadd+1,w
  2957  0FA4  00B1               	movwf	___ftdiv@f2+1
  2958  0FA5  0825               	movf	?___ftadd+2,w
  2959  0FA6  00B2               	movwf	___ftdiv@f2+2
  2960  0FA7  084C               	movf	trapmf@d,w
  2961  0FA8  00A3               	movwf	___ftadd@f1
  2962  0FA9  084D               	movf	trapmf@d+1,w
  2963  0FAA  00A4               	movwf	___ftadd@f1+1
  2964  0FAB  084E               	movf	trapmf@d+2,w
  2965  0FAC  00A5               	movwf	___ftadd@f1+2
  2966  0FAD  0840               	movf	trapmf@x,w
  2967  0FAE  00A0               	movwf	___ftneg@f1
  2968  0FAF  0841               	movf	trapmf@x+1,w
  2969  0FB0  00A1               	movwf	___ftneg@f1+1
  2970  0FB1  0842               	movf	trapmf@x+2,w
  2971  0FB2                     L8:	
  2972  0FB2  00A2               	movwf	___ftneg@f1+2
  2973  0FB3  160A  118A  2256  120A  158A  	fcall	___ftneg
  2974  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0FBA  0820               	movf	?___ftneg,w
  2977  0FBB  00A6               	movwf	___ftadd@f2
  2978  0FBC  0821               	movf	?___ftneg+1,w
  2979  0FBD  00A7               	movwf	___ftadd@f2+1
  2980  0FBE  0822               	movf	?___ftneg+2,w
  2981  0FBF  00A8               	movwf	___ftadd@f2+2
  2982  0FC0  120A  158A  25A1  120A  158A  	fcall	___ftadd
  2983  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0FC7  0823               	movf	?___ftadd,w
  2986  0FC8  00B3               	movwf	___ftdiv@f1
  2987  0FC9  0824               	movf	?___ftadd+1,w
  2988  0FCA  00B4               	movwf	___ftdiv@f1+1
  2989  0FCB  0825               	movf	?___ftadd+2,w
  2990  0FCC  00B5               	movwf	___ftdiv@f1+2
  2991  0FCD  120A  158A  2416  120A  158A  	fcall	___ftdiv
  2992  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  2994  0FD4  0830               	movf	?___ftdiv,w
  2995  0FD5  00CF               	movwf	trapmf@ua
  2996  0FD6  0831               	movf	?___ftdiv+1,w
  2997  0FD7  00D0               	movwf	trapmf@ua+1
  2998  0FD8  0832               	movf	?___ftdiv+2,w
  2999  0FD9  2FF6               	goto	L5
  3000  0FDA                     i1l3429:	
  3001                           
  3002                           ;main.c: 92: else if (x > d)
  3003  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0FDC  084C               	movf	trapmf@d,w
  3006  0FDD  00F4               	movwf	___ftge@ff1
  3007  0FDE  084D               	movf	trapmf@d+1,w
  3008  0FDF  00F5               	movwf	___ftge@ff1+1
  3009  0FE0  084E               	movf	trapmf@d+2,w
  3010  0FE1  00F6               	movwf	___ftge@ff1+2
  3011  0FE2  0840               	movf	trapmf@x,w
  3012  0FE3  00F7               	movwf	___ftge@ff2
  3013  0FE4  0841               	movf	trapmf@x+1,w
  3014  0FE5  00F8               	movwf	___ftge@ff2+1
  3015  0FE6  0842               	movf	trapmf@x+2,w
  3016  0FE7  00F9               	movwf	___ftge@ff2+2
  3017  0FE8  160A  118A  248E  120A  158A  	fcall	___ftge
  3018  0FED  1803               	btfsc	3,0
  3019  0FEE  2FF7               	goto	i1l92
  3020  0FEF                     L6:	
  3021                           
  3022                           ;main.c: 93: ua = 0;
  3023  0FEF  3000               	movlw	0
  3024  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0FF2  00CF               	movwf	trapmf@ua
  3027  0FF3  3000               	movlw	0
  3028  0FF4  00D0               	movwf	trapmf@ua+1
  3029  0FF5  3000               	movlw	0
  3030  0FF6                     L5:	
  3031  0FF6  00D1               	movwf	trapmf@ua+2
  3032  0FF7                     i1l92:	
  3033                           
  3034                           ;main.c: 95: return (ua);
  3035  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0FF9  084F               	movf	trapmf@ua,w
  3038  0FFA  00C0               	movwf	?_trapmf
  3039  0FFB  0850               	movf	trapmf@ua+1,w
  3040  0FFC  00C1               	movwf	?_trapmf+1
  3041  0FFD  0851               	movf	trapmf@ua+2,w
  3042  0FFE  00C2               	movwf	?_trapmf+2
  3043  0FFF  0008               	return
  3044  1000                     __end_of_trapmf:	
  3045                           
  3046                           	psect	text12
  3047  1256                     __ptext12:	
  3048 ;; *************** function ___ftneg *****************
  3049 ;; Defined at:
  3050 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  f1              3    0[BANK0 ] float 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  3    0[BANK0 ] float 
  3057 ;; Registers used:
  3058 ;;		wreg
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         0       3       0       0       0
  3065 ;;      Locals:         0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0
  3067 ;;      Totals:         0       3       0       0       0
  3068 ;;Total ram usage:        3 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; This function calls:
  3071 ;;		Nothing
  3072 ;; This function is called by:
  3073 ;;		_trapmf
  3074 ;;		_ISR
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function ___ftneg
  3080  1256                     ___ftneg:	
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in ___ftneg: [wreg]
  3084  1256  1283               	bcf	3,5	;RP0=0, select bank0
  3085  1257  1303               	bcf	3,6	;RP1=0, select bank0
  3086  1258  0822               	movf	___ftneg@f1+2,w
  3087  1259  0421               	iorwf	___ftneg@f1+1,w
  3088  125A  0420               	iorwf	___ftneg@f1,w
  3089  125B  1903               	skipnz
  3090  125C  0008               	return
  3091  125D  3080               	movlw	128
  3092  125E  06A2               	xorwf	___ftneg@f1+2,f
  3093  125F  0008               	return
  3094  1260                     __end_of___ftneg:	
  3095                           
  3096                           	psect	text13
  3097  0C16                     __ptext13:	
  3098 ;; *************** function ___ftdiv *****************
  3099 ;; Defined at:
  3100 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  f2              3   16[BANK0 ] float 
  3103 ;;  f1              3   19[BANK0 ] float 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  f3              3   27[BANK0 ] float 
  3106 ;;  sign            1   31[BANK0 ] unsigned char 
  3107 ;;  exp             1   30[BANK0 ] unsigned char 
  3108 ;;  cntr            1   26[BANK0 ] unsigned char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  3   16[BANK0 ] float 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       6       0       0       0
  3119 ;;      Locals:         0       6       0       0       0
  3120 ;;      Temps:          0       4       0       0       0
  3121 ;;      Totals:         0      16       0       0       0
  3122 ;;Total ram usage:       16 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    1
  3125 ;; This function calls:
  3126 ;;		___ftpack
  3127 ;; This function is called by:
  3128 ;;		_trapmf
  3129 ;;		_ISR
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           
  3134                           ;psect for function ___ftdiv
  3135  0C16                     ___ftdiv:	
  3136                           
  3137                           ;incstack = 0
  3138                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3139  0C16  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0C17  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0C18  0833               	movf	___ftdiv@f1,w
  3142  0C19  00B6               	movwf	??___ftdiv
  3143  0C1A  0834               	movf	___ftdiv@f1+1,w
  3144  0C1B  00B7               	movwf	??___ftdiv+1
  3145  0C1C  0835               	movf	___ftdiv@f1+2,w
  3146  0C1D  00B8               	movwf	??___ftdiv+2
  3147  0C1E  1003               	clrc
  3148  0C1F  0D37               	rlf	??___ftdiv+1,w
  3149  0C20  0D38               	rlf	??___ftdiv+2,w
  3150  0C21  00B9               	movwf	??___ftdiv+3
  3151  0C22  0839               	movf	??___ftdiv+3,w
  3152  0C23  00BE               	movwf	___ftdiv@exp
  3153  0C24  08BE               	movf	___ftdiv@exp,f
  3154  0C25  1D03               	skipz
  3155  0C26  2C2E               	goto	i1l2139
  3156  0C27  3000               	movlw	0
  3157  0C28  00B0               	movwf	?___ftdiv
  3158  0C29  3000               	movlw	0
  3159  0C2A  00B1               	movwf	?___ftdiv+1
  3160  0C2B  3000               	movlw	0
  3161  0C2C  00B2               	movwf	?___ftdiv+2
  3162  0C2D  0008               	return
  3163  0C2E                     i1l2139:	
  3164  0C2E  0830               	movf	___ftdiv@f2,w
  3165  0C2F  00B6               	movwf	??___ftdiv
  3166  0C30  0831               	movf	___ftdiv@f2+1,w
  3167  0C31  00B7               	movwf	??___ftdiv+1
  3168  0C32  0832               	movf	___ftdiv@f2+2,w
  3169  0C33  00B8               	movwf	??___ftdiv+2
  3170  0C34  1003               	clrc
  3171  0C35  0D37               	rlf	??___ftdiv+1,w
  3172  0C36  0D38               	rlf	??___ftdiv+2,w
  3173  0C37  00B9               	movwf	??___ftdiv+3
  3174  0C38  0839               	movf	??___ftdiv+3,w
  3175  0C39  00BF               	movwf	___ftdiv@sign
  3176  0C3A  08BF               	movf	___ftdiv@sign,f
  3177  0C3B  1D03               	skipz
  3178  0C3C  2C44               	goto	i1l2145
  3179  0C3D  3000               	movlw	0
  3180  0C3E  00B0               	movwf	?___ftdiv
  3181  0C3F  3000               	movlw	0
  3182  0C40  00B1               	movwf	?___ftdiv+1
  3183  0C41  3000               	movlw	0
  3184  0C42  00B2               	movwf	?___ftdiv+2
  3185  0C43  0008               	return
  3186  0C44                     i1l2145:	
  3187  0C44  3000               	movlw	0
  3188  0C45  00BB               	movwf	___ftdiv@f3
  3189  0C46  3000               	movlw	0
  3190  0C47  00BC               	movwf	___ftdiv@f3+1
  3191  0C48  3000               	movlw	0
  3192  0C49  00BD               	movwf	___ftdiv@f3+2
  3193  0C4A  3089               	movlw	137
  3194  0C4B  073F               	addwf	___ftdiv@sign,w
  3195  0C4C  00B6               	movwf	??___ftdiv
  3196  0C4D  0836               	movf	??___ftdiv,w
  3197  0C4E  02BE               	subwf	___ftdiv@exp,f
  3198  0C4F  0833               	movf	___ftdiv@f1,w
  3199  0C50  00B6               	movwf	??___ftdiv
  3200  0C51  0834               	movf	___ftdiv@f1+1,w
  3201  0C52  00B7               	movwf	??___ftdiv+1
  3202  0C53  0835               	movf	___ftdiv@f1+2,w
  3203  0C54  00B8               	movwf	??___ftdiv+2
  3204  0C55  3010               	movlw	16
  3205  0C56                     u233_25:	
  3206  0C56  1003               	clrc
  3207  0C57  0CB8               	rrf	??___ftdiv+2,f
  3208  0C58  0CB7               	rrf	??___ftdiv+1,f
  3209  0C59  0CB6               	rrf	??___ftdiv,f
  3210  0C5A  3EFF               	addlw	-1
  3211  0C5B  1D03               	skipz
  3212  0C5C  2C56               	goto	u233_25
  3213  0C5D  0836               	movf	??___ftdiv,w
  3214  0C5E  00B9               	movwf	??___ftdiv+3
  3215  0C5F  0839               	movf	??___ftdiv+3,w
  3216  0C60  00BF               	movwf	___ftdiv@sign
  3217  0C61  0830               	movf	___ftdiv@f2,w
  3218  0C62  00B6               	movwf	??___ftdiv
  3219  0C63  0831               	movf	___ftdiv@f2+1,w
  3220  0C64  00B7               	movwf	??___ftdiv+1
  3221  0C65  0832               	movf	___ftdiv@f2+2,w
  3222  0C66  00B8               	movwf	??___ftdiv+2
  3223  0C67  3010               	movlw	16
  3224  0C68                     u234_25:	
  3225  0C68  1003               	clrc
  3226  0C69  0CB8               	rrf	??___ftdiv+2,f
  3227  0C6A  0CB7               	rrf	??___ftdiv+1,f
  3228  0C6B  0CB6               	rrf	??___ftdiv,f
  3229  0C6C  3EFF               	addlw	-1
  3230  0C6D  1D03               	skipz
  3231  0C6E  2C68               	goto	u234_25
  3232  0C6F  0836               	movf	??___ftdiv,w
  3233  0C70  00B9               	movwf	??___ftdiv+3
  3234  0C71  0839               	movf	??___ftdiv+3,w
  3235  0C72  06BF               	xorwf	___ftdiv@sign,f
  3236  0C73  3080               	movlw	128
  3237  0C74  00B6               	movwf	??___ftdiv
  3238  0C75  0836               	movf	??___ftdiv,w
  3239  0C76  05BF               	andwf	___ftdiv@sign,f
  3240  0C77  17B4               	bsf	___ftdiv@f1+1,7
  3241  0C78  30FF               	movlw	255
  3242  0C79  05B3               	andwf	___ftdiv@f1,f
  3243  0C7A  30FF               	movlw	255
  3244  0C7B  05B4               	andwf	___ftdiv@f1+1,f
  3245  0C7C  3000               	movlw	0
  3246  0C7D  05B5               	andwf	___ftdiv@f1+2,f
  3247  0C7E  17B1               	bsf	___ftdiv@f2+1,7
  3248  0C7F  30FF               	movlw	255
  3249  0C80  05B0               	andwf	___ftdiv@f2,f
  3250  0C81  30FF               	movlw	255
  3251  0C82  05B1               	andwf	___ftdiv@f2+1,f
  3252  0C83  3000               	movlw	0
  3253  0C84  05B2               	andwf	___ftdiv@f2+2,f
  3254  0C85  3018               	movlw	24
  3255  0C86  00B6               	movwf	??___ftdiv
  3256  0C87  0836               	movf	??___ftdiv,w
  3257  0C88  00BA               	movwf	___ftdiv@cntr
  3258  0C89                     i1l2159:	
  3259  0C89  3001               	movlw	1
  3260  0C8A                     u235_25:	
  3261  0C8A  1003               	clrc
  3262  0C8B  0DBB               	rlf	___ftdiv@f3,f
  3263  0C8C  0DBC               	rlf	___ftdiv@f3+1,f
  3264  0C8D  0DBD               	rlf	___ftdiv@f3+2,f
  3265  0C8E  3EFF               	addlw	-1
  3266  0C8F  1D03               	skipz
  3267  0C90  2C8A               	goto	u235_25
  3268  0C91  0832               	movf	___ftdiv@f2+2,w
  3269  0C92  0235               	subwf	___ftdiv@f1+2,w
  3270  0C93  1D03               	skipz
  3271  0C94  2C9B               	goto	u236_25
  3272  0C95  0831               	movf	___ftdiv@f2+1,w
  3273  0C96  0234               	subwf	___ftdiv@f1+1,w
  3274  0C97  1D03               	skipz
  3275  0C98  2C9B               	goto	u236_25
  3276  0C99  0830               	movf	___ftdiv@f2,w
  3277  0C9A  0233               	subwf	___ftdiv@f1,w
  3278  0C9B                     u236_25:	
  3279  0C9B  1C03               	skipc
  3280  0C9C  2CA8               	goto	i1l2167
  3281  0C9D  0830               	movf	___ftdiv@f2,w
  3282  0C9E  02B3               	subwf	___ftdiv@f1,f
  3283  0C9F  0831               	movf	___ftdiv@f2+1,w
  3284  0CA0  1C03               	skipc
  3285  0CA1  0F31               	incfsz	___ftdiv@f2+1,w
  3286  0CA2  02B4               	subwf	___ftdiv@f1+1,f
  3287  0CA3  0832               	movf	___ftdiv@f2+2,w
  3288  0CA4  1C03               	skipc
  3289  0CA5  0A32               	incf	___ftdiv@f2+2,w
  3290  0CA6  02B5               	subwf	___ftdiv@f1+2,f
  3291  0CA7  143B               	bsf	___ftdiv@f3,0
  3292  0CA8                     i1l2167:	
  3293  0CA8  3001               	movlw	1
  3294  0CA9                     u237_25:	
  3295  0CA9  1003               	clrc
  3296  0CAA  0DB3               	rlf	___ftdiv@f1,f
  3297  0CAB  0DB4               	rlf	___ftdiv@f1+1,f
  3298  0CAC  0DB5               	rlf	___ftdiv@f1+2,f
  3299  0CAD  3EFF               	addlw	-1
  3300  0CAE  1D03               	skipz
  3301  0CAF  2CA9               	goto	u237_25
  3302  0CB0  3001               	movlw	1
  3303  0CB1  02BA               	subwf	___ftdiv@cntr,f
  3304  0CB2  1D03               	btfss	3,2
  3305  0CB3  2C89               	goto	i1l2159
  3306  0CB4  083B               	movf	___ftdiv@f3,w
  3307  0CB5  00F0               	movwf	___ftpack@arg
  3308  0CB6  083C               	movf	___ftdiv@f3+1,w
  3309  0CB7  00F1               	movwf	___ftpack@arg+1
  3310  0CB8  083D               	movf	___ftdiv@f3+2,w
  3311  0CB9  00F2               	movwf	___ftpack@arg+2
  3312  0CBA  083E               	movf	___ftdiv@exp,w
  3313  0CBB  00B6               	movwf	??___ftdiv
  3314  0CBC  0836               	movf	??___ftdiv,w
  3315  0CBD  00F3               	movwf	___ftpack@exp
  3316  0CBE  083F               	movf	___ftdiv@sign,w
  3317  0CBF  00B7               	movwf	??___ftdiv+1
  3318  0CC0  0837               	movf	??___ftdiv+1,w
  3319  0CC1  00F4               	movwf	___ftpack@sign
  3320  0CC2  160A  118A  24EF   	fcall	___ftpack
  3321  0CC5  0870               	movf	?___ftpack,w
  3322  0CC6  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0CC7  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0CC8  00B0               	movwf	?___ftdiv
  3325  0CC9  0871               	movf	?___ftpack+1,w
  3326  0CCA  00B1               	movwf	?___ftdiv+1
  3327  0CCB  0872               	movf	?___ftpack+2,w
  3328  0CCC  00B2               	movwf	?___ftdiv+2
  3329  0CCD  0008               	return
  3330  0CCE                     __end_of___ftdiv:	
  3331                           
  3332                           	psect	text14
  3333  0DA1                     __ptext14:	
  3334 ;; *************** function ___ftadd *****************
  3335 ;; Defined at:
  3336 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  f1              3    3[BANK0 ] float 
  3339 ;;  f2              3    6[BANK0 ] float 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  exp1            1   15[BANK0 ] unsigned char 
  3342 ;;  exp2            1   14[BANK0 ] unsigned char 
  3343 ;;  sign            1   13[BANK0 ] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  3    3[BANK0 ] float 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       6       0       0       0
  3354 ;;      Locals:         0       3       0       0       0
  3355 ;;      Temps:          0       4       0       0       0
  3356 ;;      Totals:         0      13       0       0       0
  3357 ;;Total ram usage:       13 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    1
  3360 ;; This function calls:
  3361 ;;		___ftpack
  3362 ;; This function is called by:
  3363 ;;		_trapmf
  3364 ;;		_ISR
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function ___ftadd
  3370  0DA1                     ___ftadd:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3374  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0DA3  0823               	movf	___ftadd@f1,w
  3377  0DA4  00A9               	movwf	??___ftadd
  3378  0DA5  0824               	movf	___ftadd@f1+1,w
  3379  0DA6  00AA               	movwf	??___ftadd+1
  3380  0DA7  0825               	movf	___ftadd@f1+2,w
  3381  0DA8  00AB               	movwf	??___ftadd+2
  3382  0DA9  1003               	clrc
  3383  0DAA  0D2A               	rlf	??___ftadd+1,w
  3384  0DAB  0D2B               	rlf	??___ftadd+2,w
  3385  0DAC  00AC               	movwf	??___ftadd+3
  3386  0DAD  082C               	movf	??___ftadd+3,w
  3387  0DAE  00AF               	movwf	___ftadd@exp1
  3388  0DAF  0826               	movf	___ftadd@f2,w
  3389  0DB0  00A9               	movwf	??___ftadd
  3390  0DB1  0827               	movf	___ftadd@f2+1,w
  3391  0DB2  00AA               	movwf	??___ftadd+1
  3392  0DB3  0828               	movf	___ftadd@f2+2,w
  3393  0DB4  00AB               	movwf	??___ftadd+2
  3394  0DB5  1003               	clrc
  3395  0DB6  0D2A               	rlf	??___ftadd+1,w
  3396  0DB7  0D2B               	rlf	??___ftadd+2,w
  3397  0DB8  00AC               	movwf	??___ftadd+3
  3398  0DB9  082C               	movf	??___ftadd+3,w
  3399  0DBA  00AE               	movwf	___ftadd@exp2
  3400  0DBB  082F               	movf	___ftadd@exp1,w
  3401  0DBC  1903               	btfsc	3,2
  3402  0DBD  2DCA               	goto	i1l3341
  3403  0DBE  082E               	movf	___ftadd@exp2,w
  3404  0DBF  022F               	subwf	___ftadd@exp1,w
  3405  0DC0  1803               	skipnc
  3406  0DC1  2DD1               	goto	i1l3345
  3407  0DC2  032F               	decf	___ftadd@exp1,w
  3408  0DC3  3AFF               	xorlw	255
  3409  0DC4  072E               	addwf	___ftadd@exp2,w
  3410  0DC5  00A9               	movwf	??___ftadd
  3411  0DC6  3019               	movlw	25
  3412  0DC7  0229               	subwf	??___ftadd,w
  3413  0DC8  1C03               	skipc
  3414  0DC9  2DD1               	goto	i1l3345
  3415  0DCA                     i1l3341:	
  3416  0DCA  0826               	movf	___ftadd@f2,w
  3417  0DCB  00A3               	movwf	?___ftadd
  3418  0DCC  0827               	movf	___ftadd@f2+1,w
  3419  0DCD  00A4               	movwf	?___ftadd+1
  3420  0DCE  0828               	movf	___ftadd@f2+2,w
  3421  0DCF  00A5               	movwf	?___ftadd+2
  3422  0DD0  0008               	return
  3423  0DD1                     i1l3345:	
  3424  0DD1  082E               	movf	___ftadd@exp2,w
  3425  0DD2  1903               	btfsc	3,2
  3426  0DD3  0008               	return
  3427  0DD4  082F               	movf	___ftadd@exp1,w
  3428  0DD5  022E               	subwf	___ftadd@exp2,w
  3429  0DD6  1803               	skipnc
  3430  0DD7  2DE0               	goto	i1l3351
  3431  0DD8  032E               	decf	___ftadd@exp2,w
  3432  0DD9  3AFF               	xorlw	255
  3433  0DDA  072F               	addwf	___ftadd@exp1,w
  3434  0DDB  00A9               	movwf	??___ftadd
  3435  0DDC  3019               	movlw	25
  3436  0DDD  0229               	subwf	??___ftadd,w
  3437  0DDE  1803               	btfsc	3,0
  3438  0DDF  0008               	return
  3439  0DE0                     i1l3351:	
  3440  0DE0  3006               	movlw	6
  3441  0DE1  00A9               	movwf	??___ftadd
  3442  0DE2  0829               	movf	??___ftadd,w
  3443  0DE3  00AD               	movwf	___ftadd@sign
  3444  0DE4  1BA5               	btfsc	___ftadd@f1+2,7
  3445  0DE5  17AD               	bsf	___ftadd@sign,7
  3446  0DE6  1BA8               	btfsc	___ftadd@f2+2,7
  3447  0DE7  172D               	bsf	___ftadd@sign,6
  3448  0DE8  17A4               	bsf	___ftadd@f1+1,7
  3449  0DE9  30FF               	movlw	255
  3450  0DEA  05A3               	andwf	___ftadd@f1,f
  3451  0DEB  30FF               	movlw	255
  3452  0DEC  05A4               	andwf	___ftadd@f1+1,f
  3453  0DED  3000               	movlw	0
  3454  0DEE  05A5               	andwf	___ftadd@f1+2,f
  3455  0DEF  17A7               	bsf	___ftadd@f2+1,7
  3456  0DF0  30FF               	movlw	255
  3457  0DF1  05A6               	andwf	___ftadd@f2,f
  3458  0DF2  30FF               	movlw	255
  3459  0DF3  05A7               	andwf	___ftadd@f2+1,f
  3460  0DF4  3000               	movlw	0
  3461  0DF5  05A8               	andwf	___ftadd@f2+2,f
  3462  0DF6  082E               	movf	___ftadd@exp2,w
  3463  0DF7  022F               	subwf	___ftadd@exp1,w
  3464  0DF8  1803               	skipnc
  3465  0DF9  2E20               	goto	i1l3373
  3466  0DFA                     i1l3363:	
  3467  0DFA  3001               	movlw	1
  3468  0DFB                     u440_25:	
  3469  0DFB  1003               	clrc
  3470  0DFC  0DA6               	rlf	___ftadd@f2,f
  3471  0DFD  0DA7               	rlf	___ftadd@f2+1,f
  3472  0DFE  0DA8               	rlf	___ftadd@f2+2,f
  3473  0DFF  3EFF               	addlw	-1
  3474  0E00  1D03               	skipz
  3475  0E01  2DFB               	goto	u440_25
  3476  0E02  3001               	movlw	1
  3477  0E03  02AE               	subwf	___ftadd@exp2,f
  3478  0E04  082E               	movf	___ftadd@exp2,w
  3479  0E05  062F               	xorwf	___ftadd@exp1,w
  3480  0E06  1903               	skipnz
  3481  0E07  2E1B               	goto	i1l3371
  3482  0E08  3001               	movlw	1
  3483  0E09  02AD               	subwf	___ftadd@sign,f
  3484  0E0A  082D               	movf	___ftadd@sign,w
  3485  0E0B  3907               	andlw	7
  3486  0E0C  1903               	btfsc	3,2
  3487  0E0D  2E1B               	goto	i1l3371
  3488  0E0E  2DFA               	goto	i1l3363
  3489  0E0F                     i1l3369:	
  3490  0E0F  3001               	movlw	1
  3491  0E10                     u443_25:	
  3492  0E10  1003               	clrc
  3493  0E11  0CA5               	rrf	___ftadd@f1+2,f
  3494  0E12  0CA4               	rrf	___ftadd@f1+1,f
  3495  0E13  0CA3               	rrf	___ftadd@f1,f
  3496  0E14  3EFF               	addlw	-1
  3497  0E15  1D03               	skipz
  3498  0E16  2E10               	goto	u443_25
  3499  0E17  3001               	movlw	1
  3500  0E18  00A9               	movwf	??___ftadd
  3501  0E19  0829               	movf	??___ftadd,w
  3502  0E1A  07AF               	addwf	___ftadd@exp1,f
  3503  0E1B                     i1l3371:	
  3504  0E1B  082F               	movf	___ftadd@exp1,w
  3505  0E1C  062E               	xorwf	___ftadd@exp2,w
  3506  0E1D  1903               	btfsc	3,2
  3507  0E1E  2E49               	goto	i1l676
  3508  0E1F  2E0F               	goto	i1l3369
  3509  0E20                     i1l3373:	
  3510  0E20  082F               	movf	___ftadd@exp1,w
  3511  0E21  022E               	subwf	___ftadd@exp2,w
  3512  0E22  1803               	skipnc
  3513  0E23  2E49               	goto	i1l676
  3514  0E24                     i1l3375:	
  3515  0E24  3001               	movlw	1
  3516  0E25                     u446_25:	
  3517  0E25  1003               	clrc
  3518  0E26  0DA3               	rlf	___ftadd@f1,f
  3519  0E27  0DA4               	rlf	___ftadd@f1+1,f
  3520  0E28  0DA5               	rlf	___ftadd@f1+2,f
  3521  0E29  3EFF               	addlw	-1
  3522  0E2A  1D03               	skipz
  3523  0E2B  2E25               	goto	u446_25
  3524  0E2C  3001               	movlw	1
  3525  0E2D  02AF               	subwf	___ftadd@exp1,f
  3526  0E2E  082E               	movf	___ftadd@exp2,w
  3527  0E2F  062F               	xorwf	___ftadd@exp1,w
  3528  0E30  1903               	skipnz
  3529  0E31  2E45               	goto	i1l3383
  3530  0E32  3001               	movlw	1
  3531  0E33  02AD               	subwf	___ftadd@sign,f
  3532  0E34  082D               	movf	___ftadd@sign,w
  3533  0E35  3907               	andlw	7
  3534  0E36  1903               	btfsc	3,2
  3535  0E37  2E45               	goto	i1l3383
  3536  0E38  2E24               	goto	i1l3375
  3537  0E39                     i1l3381:	
  3538  0E39  3001               	movlw	1
  3539  0E3A                     u449_25:	
  3540  0E3A  1003               	clrc
  3541  0E3B  0CA8               	rrf	___ftadd@f2+2,f
  3542  0E3C  0CA7               	rrf	___ftadd@f2+1,f
  3543  0E3D  0CA6               	rrf	___ftadd@f2,f
  3544  0E3E  3EFF               	addlw	-1
  3545  0E3F  1D03               	skipz
  3546  0E40  2E3A               	goto	u449_25
  3547  0E41  3001               	movlw	1
  3548  0E42  00A9               	movwf	??___ftadd
  3549  0E43  0829               	movf	??___ftadd,w
  3550  0E44  07AE               	addwf	___ftadd@exp2,f
  3551  0E45                     i1l3383:	
  3552  0E45  082F               	movf	___ftadd@exp1,w
  3553  0E46  062E               	xorwf	___ftadd@exp2,w
  3554  0E47  1D03               	skipz
  3555  0E48  2E39               	goto	i1l3381
  3556  0E49                     i1l676:	
  3557  0E49  1FAD               	btfss	___ftadd@sign,7
  3558  0E4A  2E5B               	goto	i1l3387
  3559  0E4B  30FF               	movlw	255
  3560  0E4C  06A3               	xorwf	___ftadd@f1,f
  3561  0E4D  30FF               	movlw	255
  3562  0E4E  06A4               	xorwf	___ftadd@f1+1,f
  3563  0E4F  30FF               	movlw	255
  3564  0E50  06A5               	xorwf	___ftadd@f1+2,f
  3565  0E51  3001               	movlw	1
  3566  0E52  07A3               	addwf	___ftadd@f1,f
  3567  0E53  3000               	movlw	0
  3568  0E54  1803               	skipnc
  3569  0E55  3001               	movlw	1
  3570  0E56  07A4               	addwf	___ftadd@f1+1,f
  3571  0E57  3000               	movlw	0
  3572  0E58  1803               	skipnc
  3573  0E59  3001               	movlw	1
  3574  0E5A  07A5               	addwf	___ftadd@f1+2,f
  3575  0E5B                     i1l3387:	
  3576  0E5B  1F2D               	btfss	___ftadd@sign,6
  3577  0E5C  2E6D               	goto	i1l3391
  3578  0E5D  30FF               	movlw	255
  3579  0E5E  06A6               	xorwf	___ftadd@f2,f
  3580  0E5F  30FF               	movlw	255
  3581  0E60  06A7               	xorwf	___ftadd@f2+1,f
  3582  0E61  30FF               	movlw	255
  3583  0E62  06A8               	xorwf	___ftadd@f2+2,f
  3584  0E63  3001               	movlw	1
  3585  0E64  07A6               	addwf	___ftadd@f2,f
  3586  0E65  3000               	movlw	0
  3587  0E66  1803               	skipnc
  3588  0E67  3001               	movlw	1
  3589  0E68  07A7               	addwf	___ftadd@f2+1,f
  3590  0E69  3000               	movlw	0
  3591  0E6A  1803               	skipnc
  3592  0E6B  3001               	movlw	1
  3593  0E6C  07A8               	addwf	___ftadd@f2+2,f
  3594  0E6D                     i1l3391:	
  3595  0E6D  01AD               	clrf	___ftadd@sign
  3596  0E6E  0823               	movf	___ftadd@f1,w
  3597  0E6F  07A6               	addwf	___ftadd@f2,f
  3598  0E70  0824               	movf	___ftadd@f1+1,w
  3599  0E71  1103               	clrz
  3600  0E72  1803               	skipnc
  3601  0E73  0A24               	incf	___ftadd@f1+1,w
  3602  0E74  1D03               	btfss	3,2
  3603  0E75  07A7               	addwf	___ftadd@f2+1,f
  3604  0E76  0825               	movf	___ftadd@f1+2,w
  3605  0E77  1103               	clrz
  3606  0E78  1803               	skipnc
  3607  0E79  0A25               	incf	___ftadd@f1+2,w
  3608  0E7A  1D03               	btfss	3,2
  3609  0E7B  07A8               	addwf	___ftadd@f2+2,f
  3610  0E7C  1FA8               	btfss	___ftadd@f2+2,7
  3611  0E7D  2E90               	goto	i1l3401
  3612  0E7E  30FF               	movlw	255
  3613  0E7F  06A6               	xorwf	___ftadd@f2,f
  3614  0E80  30FF               	movlw	255
  3615  0E81  06A7               	xorwf	___ftadd@f2+1,f
  3616  0E82  30FF               	movlw	255
  3617  0E83  06A8               	xorwf	___ftadd@f2+2,f
  3618  0E84  3001               	movlw	1
  3619  0E85  07A6               	addwf	___ftadd@f2,f
  3620  0E86  3000               	movlw	0
  3621  0E87  1803               	skipnc
  3622  0E88  3001               	movlw	1
  3623  0E89  07A7               	addwf	___ftadd@f2+1,f
  3624  0E8A  3000               	movlw	0
  3625  0E8B  1803               	skipnc
  3626  0E8C  3001               	movlw	1
  3627  0E8D  07A8               	addwf	___ftadd@f2+2,f
  3628  0E8E  01AD               	clrf	___ftadd@sign
  3629  0E8F  0AAD               	incf	___ftadd@sign,f
  3630  0E90                     i1l3401:	
  3631  0E90  0826               	movf	___ftadd@f2,w
  3632  0E91  00F0               	movwf	___ftpack@arg
  3633  0E92  0827               	movf	___ftadd@f2+1,w
  3634  0E93  00F1               	movwf	___ftpack@arg+1
  3635  0E94  0828               	movf	___ftadd@f2+2,w
  3636  0E95  00F2               	movwf	___ftpack@arg+2
  3637  0E96  082F               	movf	___ftadd@exp1,w
  3638  0E97  00A9               	movwf	??___ftadd
  3639  0E98  0829               	movf	??___ftadd,w
  3640  0E99  00F3               	movwf	___ftpack@exp
  3641  0E9A  082D               	movf	___ftadd@sign,w
  3642  0E9B  00AA               	movwf	??___ftadd+1
  3643  0E9C  082A               	movf	??___ftadd+1,w
  3644  0E9D  00F4               	movwf	___ftpack@sign
  3645  0E9E  160A  118A  24EF   	fcall	___ftpack
  3646  0EA1  0870               	movf	?___ftpack,w
  3647  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0EA4  00A3               	movwf	?___ftadd
  3650  0EA5  0871               	movf	?___ftpack+1,w
  3651  0EA6  00A4               	movwf	?___ftadd+1
  3652  0EA7  0872               	movf	?___ftpack+2,w
  3653  0EA8  00A5               	movwf	?___ftadd+2
  3654  0EA9  0008               	return
  3655  0EAA                     __end_of___ftadd:	
  3656                           
  3657                           	psect	text15
  3658  130F                     __ptext15:	
  3659 ;; *************** function _minimo *****************
  3660 ;; Defined at:
  3661 ;;		line 27 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  a               3    6[BANK0 ] float 
  3664 ;;  b               3    9[BANK0 ] float 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  3    6[BANK0 ] float 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, pclath, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       6       0       0       0
  3677 ;;      Locals:         0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0
  3679 ;;      Totals:         0       6       0       0       0
  3680 ;;Total ram usage:        6 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    1
  3683 ;; This function calls:
  3684 ;;		___ftge
  3685 ;; This function is called by:
  3686 ;;		_ISR
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _minimo
  3692  130F                     _minimo:	
  3693                           
  3694                           ;main.c: 29: if (a < b)
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _minimo: [wreg+status,2+status,0+pclath+cstack]
  3698  130F  1283               	bcf	3,5	;RP0=0, select bank0
  3699  1310  1303               	bcf	3,6	;RP1=0, select bank0
  3700  1311  0826               	movf	minimo@a,w
  3701  1312  00F4               	movwf	___ftge@ff1
  3702  1313  0827               	movf	minimo@a+1,w
  3703  1314  00F5               	movwf	___ftge@ff1+1
  3704  1315  0828               	movf	minimo@a+2,w
  3705  1316  00F6               	movwf	___ftge@ff1+2
  3706  1317  0829               	movf	minimo@b,w
  3707  1318  00F7               	movwf	___ftge@ff2
  3708  1319  082A               	movf	minimo@b+1,w
  3709  131A  00F8               	movwf	___ftge@ff2+1
  3710  131B  082B               	movf	minimo@b+2,w
  3711  131C  00F9               	movwf	___ftge@ff2+2
  3712  131D  160A  118A  248E  160A  118A  	fcall	___ftge
  3713  1322  1C03               	btfss	3,0
  3714  1323  0008               	return
  3715                           
  3716                           ;main.c: 32: }
  3717                           ;main.c: 33: return b;
  3718                           
  3719                           ;main.c: 30: {
  3720                           ;main.c: 31: return a;
  3721  1324  1283               	bcf	3,5	;RP0=0, select bank0
  3722  1325  1303               	bcf	3,6	;RP1=0, select bank0
  3723  1326  0829               	movf	minimo@b,w
  3724  1327  00A6               	movwf	?_minimo
  3725  1328  082A               	movf	minimo@b+1,w
  3726  1329  00A7               	movwf	?_minimo+1
  3727  132A  082B               	movf	minimo@b+2,w
  3728  132B  00A8               	movwf	?_minimo+2
  3729  132C  0008               	return
  3730  132D                     __end_of_minimo:	
  3731                           
  3732                           	psect	text16
  3733  12F1                     __ptext16:	
  3734 ;; *************** function _maximo *****************
  3735 ;; Defined at:
  3736 ;;		line 18 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\main.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  a               3   12[BANK0 ] float 
  3739 ;;  b               3   15[BANK0 ] float 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  3   12[BANK0 ] float 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0, pclath, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3751 ;;      Params:         0       6       0       0       0
  3752 ;;      Locals:         0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0
  3754 ;;      Totals:         0       6       0       0       0
  3755 ;;Total ram usage:        6 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    1
  3758 ;; This function calls:
  3759 ;;		___ftge
  3760 ;; This function is called by:
  3761 ;;		_ISR
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           
  3766                           ;psect for function _maximo
  3767  12F1                     _maximo:	
  3768                           
  3769                           ;main.c: 20: if (a > b)
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _maximo: [wreg+status,2+status,0+pclath+cstack]
  3773  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  3774  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  3775  12F3  082F               	movf	maximo@b,w
  3776  12F4  00F4               	movwf	___ftge@ff1
  3777  12F5  0830               	movf	maximo@b+1,w
  3778  12F6  00F5               	movwf	___ftge@ff1+1
  3779  12F7  0831               	movf	maximo@b+2,w
  3780  12F8  00F6               	movwf	___ftge@ff1+2
  3781  12F9  082C               	movf	maximo@a,w
  3782  12FA  00F7               	movwf	___ftge@ff2
  3783  12FB  082D               	movf	maximo@a+1,w
  3784  12FC  00F8               	movwf	___ftge@ff2+1
  3785  12FD  082E               	movf	maximo@a+2,w
  3786  12FE  00F9               	movwf	___ftge@ff2+2
  3787  12FF  160A  118A  248E  160A  118A  	fcall	___ftge
  3788  1304  1C03               	btfss	3,0
  3789  1305  0008               	return
  3790                           
  3791                           ;main.c: 23: }
  3792                           ;main.c: 24: return b;
  3793                           
  3794                           ;main.c: 21: {
  3795                           ;main.c: 22: return a;
  3796  1306  1283               	bcf	3,5	;RP0=0, select bank0
  3797  1307  1303               	bcf	3,6	;RP1=0, select bank0
  3798  1308  082F               	movf	maximo@b,w
  3799  1309  00AC               	movwf	?_maximo
  3800  130A  0830               	movf	maximo@b+1,w
  3801  130B  00AD               	movwf	?_maximo+1
  3802  130C  0831               	movf	maximo@b+2,w
  3803  130D  00AE               	movwf	?_maximo+2
  3804  130E  0008               	return
  3805  130F                     __end_of_maximo:	
  3806                           
  3807                           	psect	text17
  3808  148E                     __ptext17:	
  3809 ;; *************** function ___ftge *****************
  3810 ;; Defined at:
  3811 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  ff1             3    4[COMMON] float 
  3814 ;;  ff2             3    7[COMMON] float 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         6       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          0       6       0       0       0
  3829 ;;      Totals:         6       6       0       0       0
  3830 ;;Total ram usage:       12 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_maximo
  3836 ;;		_minimo
  3837 ;;		_trapmf
  3838 ;;		_ISR
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function ___ftge
  3844  148E                     ___ftge:	
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3848  148E  1FF6               	btfss	___ftge@ff1+2,7
  3849  148F  2CB7               	goto	i1l2179
  3850  1490  3000               	movlw	0
  3851  1491  1283               	bcf	3,5	;RP0=0, select bank0
  3852  1492  1303               	bcf	3,6	;RP1=0, select bank0
  3853  1493  00A0               	movwf	??___ftge
  3854  1494  3000               	movlw	0
  3855  1495  00A1               	movwf	??___ftge+1
  3856  1496  3080               	movlw	128
  3857  1497  00A2               	movwf	??___ftge+2
  3858  1498  0974               	comf	___ftge@ff1,w
  3859  1499  00A3               	movwf	??___ftge+3
  3860  149A  0975               	comf	___ftge@ff1+1,w
  3861  149B  00A4               	movwf	??___ftge+4
  3862  149C  0976               	comf	___ftge@ff1+2,w
  3863  149D  00A5               	movwf	??___ftge+5
  3864  149E  0AA3               	incf	??___ftge+3,f
  3865  149F  1903               	skipnz
  3866  14A0  0AA4               	incf	??___ftge+4,f
  3867  14A1  1903               	skipnz
  3868  14A2  0AA5               	incf	??___ftge+5,f
  3869  14A3  0823               	movf	??___ftge+3,w
  3870  14A4  07A0               	addwf	??___ftge,f
  3871  14A5  0824               	movf	??___ftge+4,w
  3872  14A6  1803               	skipnc
  3873  14A7  0F24               	incfsz	??___ftge+4,w
  3874  14A8  2CAA               	goto	u240_21
  3875  14A9  2CAB               	goto	u240_22
  3876  14AA                     u240_21:	
  3877  14AA  07A1               	addwf	??___ftge+1,f
  3878  14AB                     u240_22:	
  3879  14AB  0825               	movf	??___ftge+5,w
  3880  14AC  1803               	skipnc
  3881  14AD  0F25               	incfsz	??___ftge+5,w
  3882  14AE  2CB0               	goto	u240_23
  3883  14AF  2CB1               	goto	u240_24
  3884  14B0                     u240_23:	
  3885  14B0  07A2               	addwf	??___ftge+2,f
  3886  14B1                     u240_24:	
  3887  14B1  0820               	movf	??___ftge,w
  3888  14B2  00F4               	movwf	___ftge@ff1
  3889  14B3  0821               	movf	??___ftge+1,w
  3890  14B4  00F5               	movwf	___ftge@ff1+1
  3891  14B5  0822               	movf	??___ftge+2,w
  3892  14B6  00F6               	movwf	___ftge@ff1+2
  3893  14B7                     i1l2179:	
  3894  14B7  1FF9               	btfss	___ftge@ff2+2,7
  3895  14B8  2CE0               	goto	i1l2183
  3896  14B9  3000               	movlw	0
  3897  14BA  1283               	bcf	3,5	;RP0=0, select bank0
  3898  14BB  1303               	bcf	3,6	;RP1=0, select bank0
  3899  14BC  00A0               	movwf	??___ftge
  3900  14BD  3000               	movlw	0
  3901  14BE  00A1               	movwf	??___ftge+1
  3902  14BF  3080               	movlw	128
  3903  14C0  00A2               	movwf	??___ftge+2
  3904  14C1  0977               	comf	___ftge@ff2,w
  3905  14C2  00A3               	movwf	??___ftge+3
  3906  14C3  0978               	comf	___ftge@ff2+1,w
  3907  14C4  00A4               	movwf	??___ftge+4
  3908  14C5  0979               	comf	___ftge@ff2+2,w
  3909  14C6  00A5               	movwf	??___ftge+5
  3910  14C7  0AA3               	incf	??___ftge+3,f
  3911  14C8  1903               	skipnz
  3912  14C9  0AA4               	incf	??___ftge+4,f
  3913  14CA  1903               	skipnz
  3914  14CB  0AA5               	incf	??___ftge+5,f
  3915  14CC  0823               	movf	??___ftge+3,w
  3916  14CD  07A0               	addwf	??___ftge,f
  3917  14CE  0824               	movf	??___ftge+4,w
  3918  14CF  1803               	skipnc
  3919  14D0  0F24               	incfsz	??___ftge+4,w
  3920  14D1  2CD3               	goto	u242_21
  3921  14D2  2CD4               	goto	u242_22
  3922  14D3                     u242_21:	
  3923  14D3  07A1               	addwf	??___ftge+1,f
  3924  14D4                     u242_22:	
  3925  14D4  0825               	movf	??___ftge+5,w
  3926  14D5  1803               	skipnc
  3927  14D6  0F25               	incfsz	??___ftge+5,w
  3928  14D7  2CD9               	goto	u242_23
  3929  14D8  2CDA               	goto	u242_24
  3930  14D9                     u242_23:	
  3931  14D9  07A2               	addwf	??___ftge+2,f
  3932  14DA                     u242_24:	
  3933  14DA  0820               	movf	??___ftge,w
  3934  14DB  00F7               	movwf	___ftge@ff2
  3935  14DC  0821               	movf	??___ftge+1,w
  3936  14DD  00F8               	movwf	___ftge@ff2+1
  3937  14DE  0822               	movf	??___ftge+2,w
  3938  14DF  00F9               	movwf	___ftge@ff2+2
  3939  14E0                     i1l2183:	
  3940  14E0  3080               	movlw	128
  3941  14E1  06F6               	xorwf	___ftge@ff1+2,f
  3942  14E2  3080               	movlw	128
  3943  14E3  06F9               	xorwf	___ftge@ff2+2,f
  3944  14E4  0879               	movf	___ftge@ff2+2,w
  3945  14E5  0276               	subwf	___ftge@ff1+2,w
  3946  14E6  1D03               	skipz
  3947  14E7  0008               	return
  3948  14E8  0878               	movf	___ftge@ff2+1,w
  3949  14E9  0275               	subwf	___ftge@ff1+1,w
  3950  14EA  1D03               	skipz
  3951  14EB  0008               	return
  3952  14EC  0877               	movf	___ftge@ff2,w
  3953  14ED  0274               	subwf	___ftge@ff1,w
  3954  14EE  0008               	return
  3955  14EF                     __end_of___ftge:	
  3956                           
  3957                           	psect	text18
  3958  126B                     __ptext18:	
  3959 ;; *************** function _abs *****************
  3960 ;; Defined at:
  3961 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  a               2    0[COMMON] int 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  2    0[COMMON] int 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         2       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          2       0       0       0       0
  3978 ;;      Totals:         4       0       0       0       0
  3979 ;;Total ram usage:        4 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_ISR
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _abs
  3990  126B                     _abs:	
  3991                           
  3992                           ;incstack = 0
  3993                           ; Regs used in _abs: [wreg+status,2+status,0]
  3994  126B  1FF1               	btfss	abs@a+1,7
  3995  126C  0008               	return
  3996  126D  0970               	comf	abs@a,w
  3997  126E  00F2               	movwf	??_abs
  3998  126F  0971               	comf	abs@a+1,w
  3999  1270  00F3               	movwf	??_abs+1
  4000  1271  0AF2               	incf	??_abs,f
  4001  1272  1903               	skipnz
  4002  1273  0AF3               	incf	??_abs+1,f
  4003  1274  0872               	movf	??_abs,w
  4004  1275  00F0               	movwf	?_abs
  4005  1276  0873               	movf	??_abs+1,w
  4006  1277  00F1               	movwf	?_abs+1
  4007  1278  0008               	return
  4008  1279                     __end_of_abs:	
  4009                           
  4010                           	psect	text19
  4011  1393                     __ptext19:	
  4012 ;; *************** function ___wmul *****************
  4013 ;; Defined at:
  4014 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  multiplier      2   32[BANK0 ] unsigned int 
  4017 ;;  multiplicand    2   34[BANK0 ] unsigned int 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  product         2   36[BANK0 ] unsigned int 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  2   32[BANK0 ] unsigned int 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4029 ;;      Params:         0       4       0       0       0
  4030 ;;      Locals:         0       2       0       0       0
  4031 ;;      Temps:          0       0       0       0       0
  4032 ;;      Totals:         0       6       0       0       0
  4033 ;;Total ram usage:        6 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_ISR
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           
  4043                           ;psect for function ___wmul
  4044  1393                     ___wmul:	
  4045                           
  4046                           ;incstack = 0
  4047                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4048  1393  1283               	bcf	3,5	;RP0=0, select bank0
  4049  1394  1303               	bcf	3,6	;RP1=0, select bank0
  4050  1395  01C4               	clrf	___wmul@product
  4051  1396  01C5               	clrf	___wmul@product+1
  4052  1397                     i1l2357:	
  4053  1397  1C40               	btfss	___wmul@multiplier,0
  4054  1398  2B9F               	goto	i1l482
  4055  1399  0842               	movf	___wmul@multiplicand,w
  4056  139A  07C4               	addwf	___wmul@product,f
  4057  139B  1803               	skipnc
  4058  139C  0AC5               	incf	___wmul@product+1,f
  4059  139D  0843               	movf	___wmul@multiplicand+1,w
  4060  139E  07C5               	addwf	___wmul@product+1,f
  4061  139F                     i1l482:	
  4062  139F  3001               	movlw	1
  4063  13A0                     u261_25:	
  4064  13A0  1003               	clrc
  4065  13A1  0DC2               	rlf	___wmul@multiplicand,f
  4066  13A2  0DC3               	rlf	___wmul@multiplicand+1,f
  4067  13A3  3EFF               	addlw	-1
  4068  13A4  1D03               	skipz
  4069  13A5  2BA0               	goto	u261_25
  4070  13A6  3001               	movlw	1
  4071  13A7                     u262_25:	
  4072  13A7  1003               	clrc
  4073  13A8  0CC1               	rrf	___wmul@multiplier+1,f
  4074  13A9  0CC0               	rrf	___wmul@multiplier,f
  4075  13AA  3EFF               	addlw	-1
  4076  13AB  1D03               	skipz
  4077  13AC  2BA7               	goto	u262_25
  4078  13AD  0841               	movf	___wmul@multiplier+1,w
  4079  13AE  0440               	iorwf	___wmul@multiplier,w
  4080  13AF  1D03               	skipz
  4081  13B0  2B97               	goto	i1l2357
  4082  13B1  0845               	movf	___wmul@product+1,w
  4083  13B2  01C1               	clrf	?___wmul+1
  4084  13B3  07C1               	addwf	?___wmul+1,f
  4085  13B4  0844               	movf	___wmul@product,w
  4086  13B5  01C0               	clrf	?___wmul
  4087  13B6  07C0               	addwf	?___wmul,f
  4088  13B7  0008               	return
  4089  13B8                     __end_of___wmul:	
  4090                           
  4091                           	psect	text20
  4092  12A2                     __ptext20:	
  4093 ;; *************** function ___lwtoft *****************
  4094 ;; Defined at:
  4095 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  c               2   38[BANK0 ] unsigned int 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  3   38[BANK0 ] float 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, pclath, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4109 ;;      Params:         0       3       0       0       0
  4110 ;;      Locals:         0       0       0       0       0
  4111 ;;      Temps:          0       1       0       0       0
  4112 ;;      Totals:         0       4       0       0       0
  4113 ;;Total ram usage:        4 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    1
  4116 ;; This function calls:
  4117 ;;		___ftpack
  4118 ;; This function is called by:
  4119 ;;		_ISR
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           
  4124                           ;psect for function ___lwtoft
  4125  12A2                     ___lwtoft:	
  4126                           
  4127                           ;incstack = 0
  4128                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4129  12A2  1283               	bcf	3,5	;RP0=0, select bank0
  4130  12A3  1303               	bcf	3,6	;RP1=0, select bank0
  4131  12A4  0846               	movf	___lwtoft@c,w
  4132  12A5  00F0               	movwf	___ftpack@arg
  4133  12A6  0847               	movf	___lwtoft@c+1,w
  4134  12A7  00F1               	movwf	___ftpack@arg+1
  4135  12A8  01F2               	clrf	___ftpack@arg+2
  4136  12A9  308E               	movlw	142
  4137  12AA  00C9               	movwf	??___lwtoft
  4138  12AB  0849               	movf	??___lwtoft,w
  4139  12AC  00F3               	movwf	___ftpack@exp
  4140  12AD  01F4               	clrf	___ftpack@sign
  4141  12AE  160A  118A  24EF   	fcall	___ftpack
  4142  12B1  0870               	movf	?___ftpack,w
  4143  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  4144  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  4145  12B4  00C6               	movwf	?___lwtoft
  4146  12B5  0871               	movf	?___ftpack+1,w
  4147  12B6  00C7               	movwf	?___lwtoft+1
  4148  12B7  0872               	movf	?___ftpack+2,w
  4149  12B8  00C8               	movwf	?___lwtoft+2
  4150  12B9  0008               	return
  4151  12BA                     __end_of___lwtoft:	
  4152                           
  4153                           	psect	text21
  4154  13B8                     __ptext21:	
  4155 ;; *************** function ___lwdiv *****************
  4156 ;; Defined at:
  4157 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  divisor         2    0[COMMON] unsigned int 
  4160 ;;  dividend        2    2[COMMON] unsigned int 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  quotient        2    5[COMMON] unsigned int 
  4163 ;;  counter         1    7[COMMON] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2    0[COMMON] unsigned int 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         4       0       0       0       0
  4174 ;;      Locals:         3       0       0       0       0
  4175 ;;      Temps:          1       0       0       0       0
  4176 ;;      Totals:         8       0       0       0       0
  4177 ;;Total ram usage:        8 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_ISR
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function ___lwdiv
  4188  13B8                     ___lwdiv:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4192  13B8  01F5               	clrf	___lwdiv@quotient
  4193  13B9  01F6               	clrf	___lwdiv@quotient+1
  4194  13BA  0871               	movf	___lwdiv@divisor+1,w
  4195  13BB  0470               	iorwf	___lwdiv@divisor,w
  4196  13BC  1903               	skipnz
  4197  13BD  2BEF               	goto	i1l2593
  4198  13BE  01F7               	clrf	___lwdiv@counter
  4199  13BF  0AF7               	incf	___lwdiv@counter,f
  4200  13C0                     i1l2581:	
  4201  13C0  1BF1               	btfsc	___lwdiv@divisor+1,7
  4202  13C1  2BCE               	goto	i1l2583
  4203  13C2  3001               	movlw	1
  4204  13C3                     u311_25:	
  4205  13C3  1003               	clrc
  4206  13C4  0DF0               	rlf	___lwdiv@divisor,f
  4207  13C5  0DF1               	rlf	___lwdiv@divisor+1,f
  4208  13C6  3EFF               	addlw	-1
  4209  13C7  1D03               	skipz
  4210  13C8  2BC3               	goto	u311_25
  4211  13C9  3001               	movlw	1
  4212  13CA  00F4               	movwf	??___lwdiv
  4213  13CB  0874               	movf	??___lwdiv,w
  4214  13CC  07F7               	addwf	___lwdiv@counter,f
  4215  13CD  2BC0               	goto	i1l2581
  4216  13CE                     i1l2583:	
  4217  13CE  3001               	movlw	1
  4218  13CF                     u313_25:	
  4219  13CF  1003               	clrc
  4220  13D0  0DF5               	rlf	___lwdiv@quotient,f
  4221  13D1  0DF6               	rlf	___lwdiv@quotient+1,f
  4222  13D2  3EFF               	addlw	-1
  4223  13D3  1D03               	skipz
  4224  13D4  2BCF               	goto	u313_25
  4225  13D5  0871               	movf	___lwdiv@divisor+1,w
  4226  13D6  0273               	subwf	___lwdiv@dividend+1,w
  4227  13D7  1D03               	skipz
  4228  13D8  2BDB               	goto	u314_25
  4229  13D9  0870               	movf	___lwdiv@divisor,w
  4230  13DA  0272               	subwf	___lwdiv@dividend,w
  4231  13DB                     u314_25:	
  4232  13DB  1C03               	skipc
  4233  13DC  2BE4               	goto	i1l2589
  4234  13DD  0870               	movf	___lwdiv@divisor,w
  4235  13DE  02F2               	subwf	___lwdiv@dividend,f
  4236  13DF  0871               	movf	___lwdiv@divisor+1,w
  4237  13E0  1C03               	skipc
  4238  13E1  03F3               	decf	___lwdiv@dividend+1,f
  4239  13E2  02F3               	subwf	___lwdiv@dividend+1,f
  4240  13E3  1475               	bsf	___lwdiv@quotient,0
  4241  13E4                     i1l2589:	
  4242  13E4  3001               	movlw	1
  4243  13E5                     u315_25:	
  4244  13E5  1003               	clrc
  4245  13E6  0CF1               	rrf	___lwdiv@divisor+1,f
  4246  13E7  0CF0               	rrf	___lwdiv@divisor,f
  4247  13E8  3EFF               	addlw	-1
  4248  13E9  1D03               	skipz
  4249  13EA  2BE5               	goto	u315_25
  4250  13EB  3001               	movlw	1
  4251  13EC  02F7               	subwf	___lwdiv@counter,f
  4252  13ED  1D03               	btfss	3,2
  4253  13EE  2BCE               	goto	i1l2583
  4254  13EF                     i1l2593:	
  4255  13EF  0876               	movf	___lwdiv@quotient+1,w
  4256  13F0  01F1               	clrf	?___lwdiv+1
  4257  13F1  07F1               	addwf	?___lwdiv+1,f
  4258  13F2  0875               	movf	___lwdiv@quotient,w
  4259  13F3  01F0               	clrf	?___lwdiv
  4260  13F4  07F0               	addwf	?___lwdiv,f
  4261  13F5  0008               	return
  4262  13F6                     __end_of___lwdiv:	
  4263                           
  4264                           	psect	text22
  4265  0860                     __ptext22:	
  4266 ;; *************** function ___fttol *****************
  4267 ;; Defined at:
  4268 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  f1              3   18[BANK0 ] float 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  lval            4   27[BANK0 ] unsigned long 
  4273 ;;  exp1            1   31[BANK0 ] unsigned char 
  4274 ;;  sign1           1   26[BANK0 ] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  4   18[BANK0 ] long 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4284 ;;      Params:         0       4       0       0       0
  4285 ;;      Locals:         0       6       0       0       0
  4286 ;;      Temps:          0       4       0       0       0
  4287 ;;      Totals:         0      14       0       0       0
  4288 ;;Total ram usage:       14 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_ISR
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function ___fttol
  4299  0860                     ___fttol:	
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4303  0860  1283               	bcf	3,5	;RP0=0, select bank0
  4304  0861  1303               	bcf	3,6	;RP1=0, select bank0
  4305  0862  0832               	movf	___fttol@f1,w
  4306  0863  00B6               	movwf	??___fttol
  4307  0864  0833               	movf	___fttol@f1+1,w
  4308  0865  00B7               	movwf	??___fttol+1
  4309  0866  0834               	movf	___fttol@f1+2,w
  4310  0867  00B8               	movwf	??___fttol+2
  4311  0868  1003               	clrc
  4312  0869  0D37               	rlf	??___fttol+1,w
  4313  086A  0D38               	rlf	??___fttol+2,w
  4314  086B  00B9               	movwf	??___fttol+3
  4315  086C  0839               	movf	??___fttol+3,w
  4316  086D  00BF               	movwf	___fttol@exp1
  4317  086E  08BF               	movf	___fttol@exp1,f
  4318  086F  1D03               	skipz
  4319  0870  287A               	goto	i1l2533
  4320  0871  3000               	movlw	0
  4321  0872  00B5               	movwf	?___fttol+3
  4322  0873  3000               	movlw	0
  4323  0874  00B4               	movwf	?___fttol+2
  4324  0875  3000               	movlw	0
  4325  0876  00B3               	movwf	?___fttol+1
  4326  0877  3000               	movlw	0
  4327  0878  00B2               	movwf	?___fttol
  4328  0879  0008               	return
  4329  087A                     i1l2533:	
  4330  087A  0832               	movf	___fttol@f1,w
  4331  087B  00B6               	movwf	??___fttol
  4332  087C  0833               	movf	___fttol@f1+1,w
  4333  087D  00B7               	movwf	??___fttol+1
  4334  087E  0834               	movf	___fttol@f1+2,w
  4335  087F  00B8               	movwf	??___fttol+2
  4336  0880  3017               	movlw	23
  4337  0881                     u301_25:	
  4338  0881  1003               	clrc
  4339  0882  0CB8               	rrf	??___fttol+2,f
  4340  0883  0CB7               	rrf	??___fttol+1,f
  4341  0884  0CB6               	rrf	??___fttol,f
  4342  0885  3EFF               	addlw	-1
  4343  0886  1D03               	skipz
  4344  0887  2881               	goto	u301_25
  4345  0888  0836               	movf	??___fttol,w
  4346  0889  00B9               	movwf	??___fttol+3
  4347  088A  0839               	movf	??___fttol+3,w
  4348  088B  00BA               	movwf	___fttol@sign1
  4349  088C  17B3               	bsf	___fttol@f1+1,7
  4350  088D  30FF               	movlw	255
  4351  088E  05B2               	andwf	___fttol@f1,f
  4352  088F  30FF               	movlw	255
  4353  0890  05B3               	andwf	___fttol@f1+1,f
  4354  0891  3000               	movlw	0
  4355  0892  05B4               	andwf	___fttol@f1+2,f
  4356  0893  0832               	movf	___fttol@f1,w
  4357  0894  00BB               	movwf	___fttol@lval
  4358  0895  0833               	movf	___fttol@f1+1,w
  4359  0896  00BC               	movwf	___fttol@lval+1
  4360  0897  0834               	movf	___fttol@f1+2,w
  4361  0898  00BD               	movwf	___fttol@lval+2
  4362  0899  01BE               	clrf	___fttol@lval+3
  4363  089A  308E               	movlw	142
  4364  089B  02BF               	subwf	___fttol@exp1,f
  4365  089C  1FBF               	btfss	___fttol@exp1,7
  4366  089D  28BC               	goto	i1l2553
  4367  089E  083F               	movf	___fttol@exp1,w
  4368  089F  3A80               	xorlw	128
  4369  08A0  3E8F               	addlw	143
  4370  08A1  1803               	skipnc
  4371  08A2  28AC               	goto	i1l2551
  4372  08A3  3000               	movlw	0
  4373  08A4  00B5               	movwf	?___fttol+3
  4374  08A5  3000               	movlw	0
  4375  08A6  00B4               	movwf	?___fttol+2
  4376  08A7  3000               	movlw	0
  4377  08A8  00B3               	movwf	?___fttol+1
  4378  08A9  3000               	movlw	0
  4379  08AA  00B2               	movwf	?___fttol
  4380  08AB  0008               	return
  4381  08AC                     i1l2551:	
  4382  08AC  3001               	movlw	1
  4383  08AD                     u304_25:	
  4384  08AD  1003               	clrc
  4385  08AE  0CBE               	rrf	___fttol@lval+3,f
  4386  08AF  0CBD               	rrf	___fttol@lval+2,f
  4387  08B0  0CBC               	rrf	___fttol@lval+1,f
  4388  08B1  0CBB               	rrf	___fttol@lval,f
  4389  08B2  3EFF               	addlw	-1
  4390  08B3  1D03               	skipz
  4391  08B4  28AD               	goto	u304_25
  4392  08B5  3001               	movlw	1
  4393  08B6  00B6               	movwf	??___fttol
  4394  08B7  0836               	movf	??___fttol,w
  4395  08B8  07BF               	addwf	___fttol@exp1,f
  4396  08B9  1903               	btfsc	3,2
  4397  08BA  28D7               	goto	i1l2563
  4398  08BB  28AC               	goto	i1l2551
  4399  08BC                     i1l2553:	
  4400  08BC  3018               	movlw	24
  4401  08BD  023F               	subwf	___fttol@exp1,w
  4402  08BE  1C03               	skipc
  4403  08BF  28D4               	goto	i1l2561
  4404  08C0  3000               	movlw	0
  4405  08C1  00B5               	movwf	?___fttol+3
  4406  08C2  3000               	movlw	0
  4407  08C3  00B4               	movwf	?___fttol+2
  4408  08C4  3000               	movlw	0
  4409  08C5  00B3               	movwf	?___fttol+1
  4410  08C6  3000               	movlw	0
  4411  08C7  00B2               	movwf	?___fttol
  4412  08C8  0008               	return
  4413  08C9                     i1l2559:	
  4414  08C9  3001               	movlw	1
  4415  08CA  00B6               	movwf	??___fttol
  4416  08CB                     u307_25:	
  4417  08CB  1003               	clrc
  4418  08CC  0DBB               	rlf	___fttol@lval,f
  4419  08CD  0DBC               	rlf	___fttol@lval+1,f
  4420  08CE  0DBD               	rlf	___fttol@lval+2,f
  4421  08CF  0DBE               	rlf	___fttol@lval+3,f
  4422  08D0  0BB6               	decfsz	??___fttol,f
  4423  08D1  28CB               	goto	u307_25
  4424  08D2  3001               	movlw	1
  4425  08D3  02BF               	subwf	___fttol@exp1,f
  4426  08D4                     i1l2561:	
  4427  08D4  08BF               	movf	___fttol@exp1,f
  4428  08D5  1D03               	skipz
  4429  08D6  28C9               	goto	i1l2559
  4430  08D7                     i1l2563:	
  4431  08D7  083A               	movf	___fttol@sign1,w
  4432  08D8  1903               	btfsc	3,2
  4433  08D9  28E5               	goto	i1l2567
  4434  08DA  09BB               	comf	___fttol@lval,f
  4435  08DB  09BC               	comf	___fttol@lval+1,f
  4436  08DC  09BD               	comf	___fttol@lval+2,f
  4437  08DD  09BE               	comf	___fttol@lval+3,f
  4438  08DE  0ABB               	incf	___fttol@lval,f
  4439  08DF  1903               	skipnz
  4440  08E0  0ABC               	incf	___fttol@lval+1,f
  4441  08E1  1903               	skipnz
  4442  08E2  0ABD               	incf	___fttol@lval+2,f
  4443  08E3  1903               	skipnz
  4444  08E4  0ABE               	incf	___fttol@lval+3,f
  4445  08E5                     i1l2567:	
  4446  08E5  083E               	movf	___fttol@lval+3,w
  4447  08E6  00B5               	movwf	?___fttol+3
  4448  08E7  083D               	movf	___fttol@lval+2,w
  4449  08E8  00B4               	movwf	?___fttol+2
  4450  08E9  083C               	movf	___fttol@lval+1,w
  4451  08EA  00B3               	movwf	?___fttol+1
  4452  08EB  083B               	movf	___fttol@lval,w
  4453  08EC  00B2               	movwf	?___fttol
  4454  08ED  0008               	return
  4455  08EE                     __end_of___fttol:	
  4456                           
  4457                           	psect	text23
  4458  0CCE                     __ptext23:	
  4459 ;; *************** function ___ftmul *****************
  4460 ;; Defined at:
  4461 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  f1              3   50[BANK0 ] float 
  4464 ;;  f2              3   53[BANK0 ] float 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  f3_as_produc    3   61[BANK0 ] unsigned um
  4467 ;;  sign            1   65[BANK0 ] unsigned char 
  4468 ;;  cntr            1   64[BANK0 ] unsigned char 
  4469 ;;  exp             1   60[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  3   50[BANK0 ] float 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4479 ;;      Params:         0       6       0       0       0
  4480 ;;      Locals:         0       6       0       0       0
  4481 ;;      Temps:          0       4       0       0       0
  4482 ;;      Totals:         0      16       0       0       0
  4483 ;;Total ram usage:       16 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    1
  4486 ;; This function calls:
  4487 ;;		___ftpack
  4488 ;; This function is called by:
  4489 ;;		_ISR
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function ___ftmul
  4495  0CCE                     ___ftmul:	
  4496                           
  4497                           ;incstack = 0
  4498                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4499  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0CD0  0852               	movf	___ftmul@f1,w
  4502  0CD1  00D8               	movwf	??___ftmul
  4503  0CD2  0853               	movf	___ftmul@f1+1,w
  4504  0CD3  00D9               	movwf	??___ftmul+1
  4505  0CD4  0854               	movf	___ftmul@f1+2,w
  4506  0CD5  00DA               	movwf	??___ftmul+2
  4507  0CD6  1003               	clrc
  4508  0CD7  0D59               	rlf	??___ftmul+1,w
  4509  0CD8  0D5A               	rlf	??___ftmul+2,w
  4510  0CD9  00DB               	movwf	??___ftmul+3
  4511  0CDA  085B               	movf	??___ftmul+3,w
  4512  0CDB  00DC               	movwf	___ftmul@exp
  4513  0CDC  08DC               	movf	___ftmul@exp,f
  4514  0CDD  1D03               	skipz
  4515  0CDE  2CE6               	goto	i1l2483
  4516  0CDF  3000               	movlw	0
  4517  0CE0  00D2               	movwf	?___ftmul
  4518  0CE1  3000               	movlw	0
  4519  0CE2  00D3               	movwf	?___ftmul+1
  4520  0CE3  3000               	movlw	0
  4521  0CE4  00D4               	movwf	?___ftmul+2
  4522  0CE5  0008               	return
  4523  0CE6                     i1l2483:	
  4524  0CE6  0855               	movf	___ftmul@f2,w
  4525  0CE7  00D8               	movwf	??___ftmul
  4526  0CE8  0856               	movf	___ftmul@f2+1,w
  4527  0CE9  00D9               	movwf	??___ftmul+1
  4528  0CEA  0857               	movf	___ftmul@f2+2,w
  4529  0CEB  00DA               	movwf	??___ftmul+2
  4530  0CEC  1003               	clrc
  4531  0CED  0D59               	rlf	??___ftmul+1,w
  4532  0CEE  0D5A               	rlf	??___ftmul+2,w
  4533  0CEF  00DB               	movwf	??___ftmul+3
  4534  0CF0  085B               	movf	??___ftmul+3,w
  4535  0CF1  00E1               	movwf	___ftmul@sign
  4536  0CF2  08E1               	movf	___ftmul@sign,f
  4537  0CF3  1D03               	skipz
  4538  0CF4  2CFC               	goto	i1l2489
  4539  0CF5  3000               	movlw	0
  4540  0CF6  00D2               	movwf	?___ftmul
  4541  0CF7  3000               	movlw	0
  4542  0CF8  00D3               	movwf	?___ftmul+1
  4543  0CF9  3000               	movlw	0
  4544  0CFA  00D4               	movwf	?___ftmul+2
  4545  0CFB  0008               	return
  4546  0CFC                     i1l2489:	
  4547  0CFC  0861               	movf	___ftmul@sign,w
  4548  0CFD  3E7B               	addlw	123
  4549  0CFE  00D8               	movwf	??___ftmul
  4550  0CFF  0858               	movf	??___ftmul,w
  4551  0D00  07DC               	addwf	___ftmul@exp,f
  4552  0D01  0852               	movf	___ftmul@f1,w
  4553  0D02  00D8               	movwf	??___ftmul
  4554  0D03  0853               	movf	___ftmul@f1+1,w
  4555  0D04  00D9               	movwf	??___ftmul+1
  4556  0D05  0854               	movf	___ftmul@f1+2,w
  4557  0D06  00DA               	movwf	??___ftmul+2
  4558  0D07  3010               	movlw	16
  4559  0D08                     u288_25:	
  4560  0D08  1003               	clrc
  4561  0D09  0CDA               	rrf	??___ftmul+2,f
  4562  0D0A  0CD9               	rrf	??___ftmul+1,f
  4563  0D0B  0CD8               	rrf	??___ftmul,f
  4564  0D0C  3EFF               	addlw	-1
  4565  0D0D  1D03               	skipz
  4566  0D0E  2D08               	goto	u288_25
  4567  0D0F  0858               	movf	??___ftmul,w
  4568  0D10  00DB               	movwf	??___ftmul+3
  4569  0D11  085B               	movf	??___ftmul+3,w
  4570  0D12  00E1               	movwf	___ftmul@sign
  4571  0D13  0855               	movf	___ftmul@f2,w
  4572  0D14  00D8               	movwf	??___ftmul
  4573  0D15  0856               	movf	___ftmul@f2+1,w
  4574  0D16  00D9               	movwf	??___ftmul+1
  4575  0D17  0857               	movf	___ftmul@f2+2,w
  4576  0D18  00DA               	movwf	??___ftmul+2
  4577  0D19  3010               	movlw	16
  4578  0D1A                     u289_25:	
  4579  0D1A  1003               	clrc
  4580  0D1B  0CDA               	rrf	??___ftmul+2,f
  4581  0D1C  0CD9               	rrf	??___ftmul+1,f
  4582  0D1D  0CD8               	rrf	??___ftmul,f
  4583  0D1E  3EFF               	addlw	-1
  4584  0D1F  1D03               	skipz
  4585  0D20  2D1A               	goto	u289_25
  4586  0D21  0858               	movf	??___ftmul,w
  4587  0D22  00DB               	movwf	??___ftmul+3
  4588  0D23  085B               	movf	??___ftmul+3,w
  4589  0D24  06E1               	xorwf	___ftmul@sign,f
  4590  0D25  3080               	movlw	128
  4591  0D26  00D8               	movwf	??___ftmul
  4592  0D27  0858               	movf	??___ftmul,w
  4593  0D28  05E1               	andwf	___ftmul@sign,f
  4594  0D29  17D3               	bsf	___ftmul@f1+1,7
  4595  0D2A  17D6               	bsf	___ftmul@f2+1,7
  4596  0D2B  30FF               	movlw	255
  4597  0D2C  05D5               	andwf	___ftmul@f2,f
  4598  0D2D  30FF               	movlw	255
  4599  0D2E  05D6               	andwf	___ftmul@f2+1,f
  4600  0D2F  3000               	movlw	0
  4601  0D30  05D7               	andwf	___ftmul@f2+2,f
  4602  0D31  3000               	movlw	0
  4603  0D32  00DD               	movwf	___ftmul@f3_as_product
  4604  0D33  3000               	movlw	0
  4605  0D34  00DE               	movwf	___ftmul@f3_as_product+1
  4606  0D35  3000               	movlw	0
  4607  0D36  00DF               	movwf	___ftmul@f3_as_product+2
  4608  0D37  3007               	movlw	7
  4609  0D38  00D8               	movwf	??___ftmul
  4610  0D39  0858               	movf	??___ftmul,w
  4611  0D3A  00E0               	movwf	___ftmul@cntr
  4612  0D3B                     i1l2501:	
  4613  0D3B  1C52               	btfss	___ftmul@f1,0
  4614  0D3C  2D4B               	goto	i1l2505
  4615  0D3D  0855               	movf	___ftmul@f2,w
  4616  0D3E  07DD               	addwf	___ftmul@f3_as_product,f
  4617  0D3F  0856               	movf	___ftmul@f2+1,w
  4618  0D40  1103               	clrz
  4619  0D41  1803               	skipnc
  4620  0D42  0A56               	incf	___ftmul@f2+1,w
  4621  0D43  1D03               	btfss	3,2
  4622  0D44  07DE               	addwf	___ftmul@f3_as_product+1,f
  4623  0D45  0857               	movf	___ftmul@f2+2,w
  4624  0D46  1103               	clrz
  4625  0D47  1803               	skipnc
  4626  0D48  0A57               	incf	___ftmul@f2+2,w
  4627  0D49  1D03               	btfss	3,2
  4628  0D4A  07DF               	addwf	___ftmul@f3_as_product+2,f
  4629  0D4B                     i1l2505:	
  4630  0D4B  3001               	movlw	1
  4631  0D4C                     u292_25:	
  4632  0D4C  1003               	clrc
  4633  0D4D  0CD4               	rrf	___ftmul@f1+2,f
  4634  0D4E  0CD3               	rrf	___ftmul@f1+1,f
  4635  0D4F  0CD2               	rrf	___ftmul@f1,f
  4636  0D50  3EFF               	addlw	-1
  4637  0D51  1D03               	skipz
  4638  0D52  2D4C               	goto	u292_25
  4639  0D53  3001               	movlw	1
  4640  0D54                     u293_25:	
  4641  0D54  1003               	clrc
  4642  0D55  0DD5               	rlf	___ftmul@f2,f
  4643  0D56  0DD6               	rlf	___ftmul@f2+1,f
  4644  0D57  0DD7               	rlf	___ftmul@f2+2,f
  4645  0D58  3EFF               	addlw	-1
  4646  0D59  1D03               	skipz
  4647  0D5A  2D54               	goto	u293_25
  4648  0D5B  3001               	movlw	1
  4649  0D5C  02E0               	subwf	___ftmul@cntr,f
  4650  0D5D  1D03               	btfss	3,2
  4651  0D5E  2D3B               	goto	i1l2501
  4652  0D5F  3009               	movlw	9
  4653  0D60  00D8               	movwf	??___ftmul
  4654  0D61  0858               	movf	??___ftmul,w
  4655  0D62  00E0               	movwf	___ftmul@cntr
  4656  0D63                     i1l2513:	
  4657  0D63  1C52               	btfss	___ftmul@f1,0
  4658  0D64  2D73               	goto	i1l2517
  4659  0D65  0855               	movf	___ftmul@f2,w
  4660  0D66  07DD               	addwf	___ftmul@f3_as_product,f
  4661  0D67  0856               	movf	___ftmul@f2+1,w
  4662  0D68  1103               	clrz
  4663  0D69  1803               	skipnc
  4664  0D6A  0A56               	incf	___ftmul@f2+1,w
  4665  0D6B  1D03               	btfss	3,2
  4666  0D6C  07DE               	addwf	___ftmul@f3_as_product+1,f
  4667  0D6D  0857               	movf	___ftmul@f2+2,w
  4668  0D6E  1103               	clrz
  4669  0D6F  1803               	skipnc
  4670  0D70  0A57               	incf	___ftmul@f2+2,w
  4671  0D71  1D03               	btfss	3,2
  4672  0D72  07DF               	addwf	___ftmul@f3_as_product+2,f
  4673  0D73                     i1l2517:	
  4674  0D73  3001               	movlw	1
  4675  0D74                     u297_25:	
  4676  0D74  1003               	clrc
  4677  0D75  0CD4               	rrf	___ftmul@f1+2,f
  4678  0D76  0CD3               	rrf	___ftmul@f1+1,f
  4679  0D77  0CD2               	rrf	___ftmul@f1,f
  4680  0D78  3EFF               	addlw	-1
  4681  0D79  1D03               	skipz
  4682  0D7A  2D74               	goto	u297_25
  4683  0D7B  3001               	movlw	1
  4684  0D7C                     u298_25:	
  4685  0D7C  1003               	clrc
  4686  0D7D  0CDF               	rrf	___ftmul@f3_as_product+2,f
  4687  0D7E  0CDE               	rrf	___ftmul@f3_as_product+1,f
  4688  0D7F  0CDD               	rrf	___ftmul@f3_as_product,f
  4689  0D80  3EFF               	addlw	-1
  4690  0D81  1D03               	skipz
  4691  0D82  2D7C               	goto	u298_25
  4692  0D83  3001               	movlw	1
  4693  0D84  02E0               	subwf	___ftmul@cntr,f
  4694  0D85  1D03               	btfss	3,2
  4695  0D86  2D63               	goto	i1l2513
  4696  0D87  085D               	movf	___ftmul@f3_as_product,w
  4697  0D88  00F0               	movwf	___ftpack@arg
  4698  0D89  085E               	movf	___ftmul@f3_as_product+1,w
  4699  0D8A  00F1               	movwf	___ftpack@arg+1
  4700  0D8B  085F               	movf	___ftmul@f3_as_product+2,w
  4701  0D8C  00F2               	movwf	___ftpack@arg+2
  4702  0D8D  085C               	movf	___ftmul@exp,w
  4703  0D8E  00D8               	movwf	??___ftmul
  4704  0D8F  0858               	movf	??___ftmul,w
  4705  0D90  00F3               	movwf	___ftpack@exp
  4706  0D91  0861               	movf	___ftmul@sign,w
  4707  0D92  00D9               	movwf	??___ftmul+1
  4708  0D93  0859               	movf	??___ftmul+1,w
  4709  0D94  00F4               	movwf	___ftpack@sign
  4710  0D95  160A  118A  24EF   	fcall	___ftpack
  4711  0D98  0870               	movf	?___ftpack,w
  4712  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  4714  0D9B  00D2               	movwf	?___ftmul
  4715  0D9C  0871               	movf	?___ftpack+1,w
  4716  0D9D  00D3               	movwf	?___ftmul+1
  4717  0D9E  0872               	movf	?___ftpack+2,w
  4718  0D9F  00D4               	movwf	?___ftmul+2
  4719  0DA0  0008               	return
  4720  0DA1                     __end_of___ftmul:	
  4721                           
  4722                           	psect	text24
  4723  1279                     __ptext24:	
  4724 ;; *************** function ___bmul *****************
  4725 ;; Defined at:
  4726 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  multiplier      1    wreg     unsigned char 
  4729 ;;  multiplicand    1    0[COMMON] unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  multiplier      1    3[COMMON] unsigned char 
  4732 ;;  product         1    2[COMMON] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      unsigned char 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         1       0       0       0       0
  4743 ;;      Locals:         2       0       0       0       0
  4744 ;;      Temps:          1       0       0       0       0
  4745 ;;      Totals:         4       0       0       0       0
  4746 ;;Total ram usage:        4 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_ISR
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function ___bmul
  4757  1279                     ___bmul:	
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4761                           ;___bmul@multiplier stored from wreg
  4762  1279  00F3               	movwf	___bmul@multiplier
  4763  127A  01F2               	clrf	___bmul@product
  4764  127B                     i1l2369:	
  4765  127B  1C73               	btfss	___bmul@multiplier,0
  4766  127C  2A81               	goto	i1l2373
  4767  127D  0870               	movf	___bmul@multiplicand,w
  4768  127E  00F1               	movwf	??___bmul
  4769  127F  0871               	movf	??___bmul,w
  4770  1280  07F2               	addwf	___bmul@product,f
  4771  1281                     i1l2373:	
  4772  1281  1003               	clrc
  4773  1282  0DF0               	rlf	___bmul@multiplicand,f
  4774  1283  1003               	clrc
  4775  1284  0CF3               	rrf	___bmul@multiplier,f
  4776  1285  08F3               	movf	___bmul@multiplier,f
  4777  1286  1D03               	skipz
  4778  1287  2A7B               	goto	i1l2369
  4779  1288  0872               	movf	___bmul@product,w
  4780  1289  0008               	return
  4781  128A                     __end_of___bmul:	
  4782                           
  4783                           	psect	text25
  4784  132D                     __ptext25:	
  4785 ;; *************** function ___awtoft *****************
  4786 ;; Defined at:
  4787 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  c               2    8[COMMON] int 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  sign            1   13[COMMON] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  3    8[COMMON] float 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, pclath, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4801 ;;      Params:         3       0       0       0       0
  4802 ;;      Locals:         1       0       0       0       0
  4803 ;;      Temps:          2       0       0       0       0
  4804 ;;      Totals:         6       0       0       0       0
  4805 ;;Total ram usage:        6 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    1
  4808 ;; This function calls:
  4809 ;;		___ftpack
  4810 ;; This function is called by:
  4811 ;;		_ISR
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function ___awtoft
  4817  132D                     ___awtoft:	
  4818                           
  4819                           ;incstack = 0
  4820                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4821  132D  01FD               	clrf	___awtoft@sign
  4822  132E  1FF9               	btfss	___awtoft@c+1,7
  4823  132F  2B37               	goto	i1l2473
  4824  1330  09F8               	comf	___awtoft@c,f
  4825  1331  09F9               	comf	___awtoft@c+1,f
  4826  1332  0AF8               	incf	___awtoft@c,f
  4827  1333  1903               	skipnz
  4828  1334  0AF9               	incf	___awtoft@c+1,f
  4829  1335  01FD               	clrf	___awtoft@sign
  4830  1336  0AFD               	incf	___awtoft@sign,f
  4831  1337                     i1l2473:	
  4832  1337  0878               	movf	___awtoft@c,w
  4833  1338  00F0               	movwf	___ftpack@arg
  4834  1339  0879               	movf	___awtoft@c+1,w
  4835  133A  00F1               	movwf	___ftpack@arg+1
  4836  133B  01F2               	clrf	___ftpack@arg+2
  4837  133C  308E               	movlw	142
  4838  133D  00FB               	movwf	??___awtoft
  4839  133E  087B               	movf	??___awtoft,w
  4840  133F  00F3               	movwf	___ftpack@exp
  4841  1340  087D               	movf	___awtoft@sign,w
  4842  1341  00FC               	movwf	??___awtoft+1
  4843  1342  087C               	movf	??___awtoft+1,w
  4844  1343  00F4               	movwf	___ftpack@sign
  4845  1344  160A  118A  24EF   	fcall	___ftpack
  4846  1347  0870               	movf	?___ftpack,w
  4847  1348  00F8               	movwf	?___awtoft
  4848  1349  0871               	movf	?___ftpack+1,w
  4849  134A  00F9               	movwf	?___awtoft+1
  4850  134B  0872               	movf	?___ftpack+2,w
  4851  134C  00FA               	movwf	?___awtoft+2
  4852  134D  0008               	return
  4853  134E                     __end_of___awtoft:	
  4854                           
  4855                           	psect	text26
  4856  14EF                     __ptext26:	
  4857 ;; *************** function ___ftpack *****************
  4858 ;; Defined at:
  4859 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  arg             3    0[COMMON] unsigned um
  4862 ;;  exp             1    3[COMMON] unsigned char 
  4863 ;;  sign            1    4[COMMON] unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  3    0[COMMON] float 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4875 ;;      Params:         5       0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0
  4877 ;;      Temps:          3       0       0       0       0
  4878 ;;      Totals:         8       0       0       0       0
  4879 ;;Total ram usage:        8 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		___awtoft
  4885 ;;		___ftadd
  4886 ;;		___ftdiv
  4887 ;;		___ftmul
  4888 ;;		___lwtoft
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function ___ftpack
  4894  14EF                     ___ftpack:	
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4898  14EF  0873               	movf	___ftpack@exp,w
  4899  14F0  1903               	btfsc	3,2
  4900  14F1  2CF7               	goto	i1l1987
  4901  14F2  0872               	movf	___ftpack@arg+2,w
  4902  14F3  0471               	iorwf	___ftpack@arg+1,w
  4903  14F4  0470               	iorwf	___ftpack@arg,w
  4904  14F5  1D03               	skipz
  4905  14F6  2D0A               	goto	i1l1993
  4906  14F7                     i1l1987:	
  4907  14F7  3000               	movlw	0
  4908  14F8  00F0               	movwf	?___ftpack
  4909  14F9  3000               	movlw	0
  4910  14FA  00F1               	movwf	?___ftpack+1
  4911  14FB  3000               	movlw	0
  4912  14FC  00F2               	movwf	?___ftpack+2
  4913  14FD  0008               	return
  4914  14FE                     i1l1991:	
  4915  14FE  3001               	movlw	1
  4916  14FF  00F5               	movwf	??___ftpack
  4917  1500  0875               	movf	??___ftpack,w
  4918  1501  07F3               	addwf	___ftpack@exp,f
  4919  1502  3001               	movlw	1
  4920  1503                     u187_25:	
  4921  1503  1003               	clrc
  4922  1504  0CF2               	rrf	___ftpack@arg+2,f
  4923  1505  0CF1               	rrf	___ftpack@arg+1,f
  4924  1506  0CF0               	rrf	___ftpack@arg,f
  4925  1507  3EFF               	addlw	-1
  4926  1508  1D03               	skipz
  4927  1509  2D03               	goto	u187_25
  4928  150A                     i1l1993:	
  4929  150A  30FE               	movlw	254
  4930  150B  0572               	andwf	___ftpack@arg+2,w
  4931  150C  1903               	btfsc	3,2
  4932  150D  2D25               	goto	i1l647
  4933  150E  2CFE               	goto	i1l1991
  4934  150F                     i1l1995:	
  4935  150F  3001               	movlw	1
  4936  1510  00F5               	movwf	??___ftpack
  4937  1511  0875               	movf	??___ftpack,w
  4938  1512  07F3               	addwf	___ftpack@exp,f
  4939  1513  3001               	movlw	1
  4940  1514  07F0               	addwf	___ftpack@arg,f
  4941  1515  3000               	movlw	0
  4942  1516  1803               	skipnc
  4943  1517  3001               	movlw	1
  4944  1518  07F1               	addwf	___ftpack@arg+1,f
  4945  1519  3000               	movlw	0
  4946  151A  1803               	skipnc
  4947  151B  3001               	movlw	1
  4948  151C  07F2               	addwf	___ftpack@arg+2,f
  4949  151D  3001               	movlw	1
  4950  151E                     u189_25:	
  4951  151E  1003               	clrc
  4952  151F  0CF2               	rrf	___ftpack@arg+2,f
  4953  1520  0CF1               	rrf	___ftpack@arg+1,f
  4954  1521  0CF0               	rrf	___ftpack@arg,f
  4955  1522  3EFF               	addlw	-1
  4956  1523  1D03               	skipz
  4957  1524  2D1E               	goto	u189_25
  4958  1525                     i1l647:	
  4959  1525  30FF               	movlw	255
  4960  1526  0572               	andwf	___ftpack@arg+2,w
  4961  1527  1903               	btfsc	3,2
  4962  1528  2D34               	goto	i1l2003
  4963  1529  2D0F               	goto	i1l1995
  4964  152A                     i1l2001:	
  4965  152A  3001               	movlw	1
  4966  152B  02F3               	subwf	___ftpack@exp,f
  4967  152C  3001               	movlw	1
  4968  152D                     u191_25:	
  4969  152D  1003               	clrc
  4970  152E  0DF0               	rlf	___ftpack@arg,f
  4971  152F  0DF1               	rlf	___ftpack@arg+1,f
  4972  1530  0DF2               	rlf	___ftpack@arg+2,f
  4973  1531  3EFF               	addlw	-1
  4974  1532  1D03               	skipz
  4975  1533  2D2D               	goto	u191_25
  4976  1534                     i1l2003:	
  4977  1534  1FF1               	btfss	___ftpack@arg+1,7
  4978  1535  2D2A               	goto	i1l2001
  4979  1536  1873               	btfsc	___ftpack@exp,0
  4980  1537  2D3E               	goto	i1l653
  4981  1538  30FF               	movlw	255
  4982  1539  05F0               	andwf	___ftpack@arg,f
  4983  153A  307F               	movlw	127
  4984  153B  05F1               	andwf	___ftpack@arg+1,f
  4985  153C  30FF               	movlw	255
  4986  153D  05F2               	andwf	___ftpack@arg+2,f
  4987  153E                     i1l653:	
  4988  153E  1003               	clrc
  4989  153F  0CF3               	rrf	___ftpack@exp,f
  4990  1540  0873               	movf	___ftpack@exp,w
  4991  1541  00F5               	movwf	??___ftpack
  4992  1542  01F6               	clrf	??___ftpack+1
  4993  1543  01F7               	clrf	??___ftpack+2
  4994  1544  3010               	movlw	16
  4995  1545                     u194_25:	
  4996  1545  1003               	clrc
  4997  1546  0DF5               	rlf	??___ftpack,f
  4998  1547  0DF6               	rlf	??___ftpack+1,f
  4999  1548  0DF7               	rlf	??___ftpack+2,f
  5000  1549  3EFF               	addlw	-1
  5001  154A  1D03               	skipz
  5002  154B  2D45               	goto	u194_25
  5003  154C  0875               	movf	??___ftpack,w
  5004  154D  04F0               	iorwf	___ftpack@arg,f
  5005  154E  0876               	movf	??___ftpack+1,w
  5006  154F  04F1               	iorwf	___ftpack@arg+1,f
  5007  1550  0877               	movf	??___ftpack+2,w
  5008  1551  04F2               	iorwf	___ftpack@arg+2,f
  5009  1552  0874               	movf	___ftpack@sign,w
  5010  1553  1903               	btfsc	3,2
  5011  1554  0008               	return
  5012  1555  17F2               	bsf	___ftpack@arg+2,7
  5013  1556  0008               	return
  5014  1557                     __end_of___ftpack:	
  5015                           
  5016                           	psect	text27
  5017  1441                     __ptext27:	
  5018 ;; *************** function ___awmod *****************
  5019 ;; Defined at:
  5020 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  divisor         2    0[COMMON] int 
  5023 ;;  dividend        2    2[COMMON] int 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  sign            1    6[COMMON] unsigned char 
  5026 ;;  counter         1    5[COMMON] unsigned char 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  2    0[COMMON] int 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5036 ;;      Params:         4       0       0       0       0
  5037 ;;      Locals:         2       0       0       0       0
  5038 ;;      Temps:          1       0       0       0       0
  5039 ;;      Totals:         7       0       0       0       0
  5040 ;;Total ram usage:        7 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_ISR
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           
  5050                           ;psect for function ___awmod
  5051  1441                     ___awmod:	
  5052                           
  5053                           ;incstack = 0
  5054                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5055  1441  01F6               	clrf	___awmod@sign
  5056  1442  1FF3               	btfss	___awmod@dividend+1,7
  5057  1443  2C4B               	goto	i1l2435
  5058  1444  09F2               	comf	___awmod@dividend,f
  5059  1445  09F3               	comf	___awmod@dividend+1,f
  5060  1446  0AF2               	incf	___awmod@dividend,f
  5061  1447  1903               	skipnz
  5062  1448  0AF3               	incf	___awmod@dividend+1,f
  5063  1449  01F6               	clrf	___awmod@sign
  5064  144A  0AF6               	incf	___awmod@sign,f
  5065  144B                     i1l2435:	
  5066  144B  1FF1               	btfss	___awmod@divisor+1,7
  5067  144C  2C52               	goto	i1l2439
  5068  144D  09F0               	comf	___awmod@divisor,f
  5069  144E  09F1               	comf	___awmod@divisor+1,f
  5070  144F  0AF0               	incf	___awmod@divisor,f
  5071  1450  1903               	skipnz
  5072  1451  0AF1               	incf	___awmod@divisor+1,f
  5073  1452                     i1l2439:	
  5074  1452  0871               	movf	___awmod@divisor+1,w
  5075  1453  0470               	iorwf	___awmod@divisor,w
  5076  1454  1903               	skipnz
  5077  1455  2C7F               	goto	i1l2457
  5078  1456  01F5               	clrf	___awmod@counter
  5079  1457  0AF5               	incf	___awmod@counter,f
  5080  1458                     i1l2447:	
  5081  1458  1BF1               	btfsc	___awmod@divisor+1,7
  5082  1459  2C66               	goto	i1l2449
  5083  145A  3001               	movlw	1
  5084  145B                     u279_25:	
  5085  145B  1003               	clrc
  5086  145C  0DF0               	rlf	___awmod@divisor,f
  5087  145D  0DF1               	rlf	___awmod@divisor+1,f
  5088  145E  3EFF               	addlw	-1
  5089  145F  1D03               	skipz
  5090  1460  2C5B               	goto	u279_25
  5091  1461  3001               	movlw	1
  5092  1462  00F4               	movwf	??___awmod
  5093  1463  0874               	movf	??___awmod,w
  5094  1464  07F5               	addwf	___awmod@counter,f
  5095  1465  2C58               	goto	i1l2447
  5096  1466                     i1l2449:	
  5097  1466  0871               	movf	___awmod@divisor+1,w
  5098  1467  0273               	subwf	___awmod@dividend+1,w
  5099  1468  1D03               	skipz
  5100  1469  2C6C               	goto	u281_25
  5101  146A  0870               	movf	___awmod@divisor,w
  5102  146B  0272               	subwf	___awmod@dividend,w
  5103  146C                     u281_25:	
  5104  146C  1C03               	skipc
  5105  146D  2C74               	goto	i1l2453
  5106  146E  0870               	movf	___awmod@divisor,w
  5107  146F  02F2               	subwf	___awmod@dividend,f
  5108  1470  0871               	movf	___awmod@divisor+1,w
  5109  1471  1C03               	skipc
  5110  1472  03F3               	decf	___awmod@dividend+1,f
  5111  1473  02F3               	subwf	___awmod@dividend+1,f
  5112  1474                     i1l2453:	
  5113  1474  3001               	movlw	1
  5114  1475                     u282_25:	
  5115  1475  1003               	clrc
  5116  1476  0CF1               	rrf	___awmod@divisor+1,f
  5117  1477  0CF0               	rrf	___awmod@divisor,f
  5118  1478  3EFF               	addlw	-1
  5119  1479  1D03               	skipz
  5120  147A  2C75               	goto	u282_25
  5121  147B  3001               	movlw	1
  5122  147C  02F5               	subwf	___awmod@counter,f
  5123  147D  1D03               	btfss	3,2
  5124  147E  2C66               	goto	i1l2449
  5125  147F                     i1l2457:	
  5126  147F  0876               	movf	___awmod@sign,w
  5127  1480  1903               	btfsc	3,2
  5128  1481  2C87               	goto	i1l2461
  5129  1482  09F2               	comf	___awmod@dividend,f
  5130  1483  09F3               	comf	___awmod@dividend+1,f
  5131  1484  0AF2               	incf	___awmod@dividend,f
  5132  1485  1903               	skipnz
  5133  1486  0AF3               	incf	___awmod@dividend+1,f
  5134  1487                     i1l2461:	
  5135  1487  0873               	movf	___awmod@dividend+1,w
  5136  1488  01F1               	clrf	?___awmod+1
  5137  1489  07F1               	addwf	?___awmod+1,f
  5138  148A  0872               	movf	___awmod@dividend,w
  5139  148B  01F0               	clrf	?___awmod
  5140  148C  07F0               	addwf	?___awmod,f
  5141  148D  0008               	return
  5142  148E                     __end_of___awmod:	
  5143                           
  5144                           	psect	text28
  5145  0805                     __ptext28:	
  5146 ;; *************** function ___awdiv *****************
  5147 ;; Defined at:
  5148 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  divisor         2    0[COMMON] int 
  5151 ;;  dividend        2    2[COMMON] int 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;  quotient        2    7[COMMON] int 
  5154 ;;  sign            1    6[COMMON] unsigned char 
  5155 ;;  counter         1    5[COMMON] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  2    0[COMMON] int 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5165 ;;      Params:         4       0       0       0       0
  5166 ;;      Locals:         4       0       0       0       0
  5167 ;;      Temps:          1       0       0       0       0
  5168 ;;      Totals:         9       0       0       0       0
  5169 ;;Total ram usage:        9 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_ISR
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function ___awdiv
  5180  0805                     ___awdiv:	
  5181                           
  5182                           ;incstack = 0
  5183                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5184  0805  01F6               	clrf	___awdiv@sign
  5185  0806  1FF1               	btfss	___awdiv@divisor+1,7
  5186  0807  280F               	goto	i1l2391
  5187  0808  09F0               	comf	___awdiv@divisor,f
  5188  0809  09F1               	comf	___awdiv@divisor+1,f
  5189  080A  0AF0               	incf	___awdiv@divisor,f
  5190  080B  1903               	skipnz
  5191  080C  0AF1               	incf	___awdiv@divisor+1,f
  5192  080D  01F6               	clrf	___awdiv@sign
  5193  080E  0AF6               	incf	___awdiv@sign,f
  5194  080F                     i1l2391:	
  5195  080F  1FF3               	btfss	___awdiv@dividend+1,7
  5196  0810  281A               	goto	i1l2397
  5197  0811  09F2               	comf	___awdiv@dividend,f
  5198  0812  09F3               	comf	___awdiv@dividend+1,f
  5199  0813  0AF2               	incf	___awdiv@dividend,f
  5200  0814  1903               	skipnz
  5201  0815  0AF3               	incf	___awdiv@dividend+1,f
  5202  0816  3001               	movlw	1
  5203  0817  00F4               	movwf	??___awdiv
  5204  0818  0874               	movf	??___awdiv,w
  5205  0819  06F6               	xorwf	___awdiv@sign,f
  5206  081A                     i1l2397:	
  5207  081A  01F7               	clrf	___awdiv@quotient
  5208  081B  01F8               	clrf	___awdiv@quotient+1
  5209  081C  0871               	movf	___awdiv@divisor+1,w
  5210  081D  0470               	iorwf	___awdiv@divisor,w
  5211  081E  1903               	skipnz
  5212  081F  2851               	goto	i1l2419
  5213  0820  01F5               	clrf	___awdiv@counter
  5214  0821  0AF5               	incf	___awdiv@counter,f
  5215  0822                     i1l2407:	
  5216  0822  1BF1               	btfsc	___awdiv@divisor+1,7
  5217  0823  2830               	goto	i1l2409
  5218  0824  3001               	movlw	1
  5219  0825                     u269_25:	
  5220  0825  1003               	clrc
  5221  0826  0DF0               	rlf	___awdiv@divisor,f
  5222  0827  0DF1               	rlf	___awdiv@divisor+1,f
  5223  0828  3EFF               	addlw	-1
  5224  0829  1D03               	skipz
  5225  082A  2825               	goto	u269_25
  5226  082B  3001               	movlw	1
  5227  082C  00F4               	movwf	??___awdiv
  5228  082D  0874               	movf	??___awdiv,w
  5229  082E  07F5               	addwf	___awdiv@counter,f
  5230  082F  2822               	goto	i1l2407
  5231  0830                     i1l2409:	
  5232  0830  3001               	movlw	1
  5233  0831                     u271_25:	
  5234  0831  1003               	clrc
  5235  0832  0DF7               	rlf	___awdiv@quotient,f
  5236  0833  0DF8               	rlf	___awdiv@quotient+1,f
  5237  0834  3EFF               	addlw	-1
  5238  0835  1D03               	skipz
  5239  0836  2831               	goto	u271_25
  5240  0837  0871               	movf	___awdiv@divisor+1,w
  5241  0838  0273               	subwf	___awdiv@dividend+1,w
  5242  0839  1D03               	skipz
  5243  083A  283D               	goto	u272_25
  5244  083B  0870               	movf	___awdiv@divisor,w
  5245  083C  0272               	subwf	___awdiv@dividend,w
  5246  083D                     u272_25:	
  5247  083D  1C03               	skipc
  5248  083E  2846               	goto	i1l2415
  5249  083F  0870               	movf	___awdiv@divisor,w
  5250  0840  02F2               	subwf	___awdiv@dividend,f
  5251  0841  0871               	movf	___awdiv@divisor+1,w
  5252  0842  1C03               	skipc
  5253  0843  03F3               	decf	___awdiv@dividend+1,f
  5254  0844  02F3               	subwf	___awdiv@dividend+1,f
  5255  0845  1477               	bsf	___awdiv@quotient,0
  5256  0846                     i1l2415:	
  5257  0846  3001               	movlw	1
  5258  0847                     u273_25:	
  5259  0847  1003               	clrc
  5260  0848  0CF1               	rrf	___awdiv@divisor+1,f
  5261  0849  0CF0               	rrf	___awdiv@divisor,f
  5262  084A  3EFF               	addlw	-1
  5263  084B  1D03               	skipz
  5264  084C  2847               	goto	u273_25
  5265  084D  3001               	movlw	1
  5266  084E  02F5               	subwf	___awdiv@counter,f
  5267  084F  1D03               	btfss	3,2
  5268  0850  2830               	goto	i1l2409
  5269  0851                     i1l2419:	
  5270  0851  0876               	movf	___awdiv@sign,w
  5271  0852  1903               	btfsc	3,2
  5272  0853  2859               	goto	i1l2423
  5273  0854  09F7               	comf	___awdiv@quotient,f
  5274  0855  09F8               	comf	___awdiv@quotient+1,f
  5275  0856  0AF7               	incf	___awdiv@quotient,f
  5276  0857  1903               	skipnz
  5277  0858  0AF8               	incf	___awdiv@quotient+1,f
  5278  0859                     i1l2423:	
  5279  0859  0878               	movf	___awdiv@quotient+1,w
  5280  085A  01F1               	clrf	?___awdiv+1
  5281  085B  07F1               	addwf	?___awdiv+1,f
  5282  085C  0877               	movf	___awdiv@quotient,w
  5283  085D  01F0               	clrf	?___awdiv
  5284  085E  07F0               	addwf	?___awdiv,f
  5285  085F  0008               	return
  5286  0860                     __end_of___awdiv:	
  5287                           
  5288                           	psect	text29
  5289  128A                     __ptext29:	
  5290 ;; *************** function _USART_ReceiveChar *****************
  5291 ;; Defined at:
  5292 ;;		line 63 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  byte            1    4[COMMON] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      unsigned char 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5306 ;;      Params:         0       0       0       0       0
  5307 ;;      Locals:         1       0       0       0       0
  5308 ;;      Temps:          1       0       0       0       0
  5309 ;;      Totals:         2       0       0       0       0
  5310 ;;Total ram usage:        2 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    2
  5313 ;; This function calls:
  5314 ;;		_USART_WriteString
  5315 ;; This function is called by:
  5316 ;;		_ISR
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           
  5321                           ;psect for function _USART_ReceiveChar
  5322  128A                     _USART_ReceiveChar:	
  5323                           
  5324                           ;usart.c: 65: unsigned char byte;
  5325                           ;usart.c: 67: if (!OERR)
  5326                           
  5327                           ;incstack = 0
  5328                           ; Regs used in _USART_ReceiveChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5329  128A  1283               	bcf	3,5	;RP0=0, select bank0
  5330  128B  1303               	bcf	3,6	;RP1=0, select bank0
  5331  128C  1898               	btfsc	24,1	;volatile
  5332  128D  2A93               	goto	i1l2255
  5333                           
  5334                           ;usart.c: 68: {
  5335                           ;usart.c: 69: byte = RCREG;
  5336  128E  081A               	movf	26,w	;volatile
  5337  128F  00F3               	movwf	??_USART_ReceiveChar
  5338  1290  0873               	movf	??_USART_ReceiveChar,w
  5339  1291  00F4               	movwf	USART_ReceiveChar@byte
  5340  1292  2A9F               	goto	i1l2263
  5341  1293                     i1l2255:	
  5342                           ;usart.c: 71: }
  5343                           
  5344                           ;usart.c: 70: PIR1bits.RCIF = 0;
  5345                           
  5346                           
  5347                           ;usart.c: 72: else
  5348                           ;usart.c: 73: {
  5349                           ;usart.c: 74: USART_WriteString("\n\r ------- ESTOURO DE PILHA ------- \n\r ");
  5350  1293  3001               	movlw	(STR_1-__stringbase)& (0+255)
  5351  1294  160A  118A  22D5   	fcall	_USART_WriteString
  5352                           
  5353                           ;usart.c: 76: RCSTAbits.CREN = 0;
  5354  1297  1283               	bcf	3,5	;RP0=0, select bank0
  5355  1298  1303               	bcf	3,6	;RP1=0, select bank0
  5356  1299  1218               	bcf	24,4	;volatile
  5357                           
  5358                           ;usart.c: 77: byte = RCREG;
  5359  129A  081A               	movf	26,w	;volatile
  5360  129B  00F3               	movwf	??_USART_ReceiveChar
  5361  129C  0873               	movf	??_USART_ReceiveChar,w
  5362  129D  00F4               	movwf	USART_ReceiveChar@byte
  5363                           
  5364                           ;usart.c: 78: RCSTAbits.CREN = 1;
  5365  129E  1618               	bsf	24,4	;volatile
  5366  129F                     i1l2263:	
  5367                           
  5368                           ;usart.c: 79: PIR1bits.RCIF = 0;
  5369  129F  128C               	bcf	12,5	;volatile
  5370                           
  5371                           ;usart.c: 80: }
  5372                           ;usart.c: 82: return(byte);
  5373  12A0  0874               	movf	USART_ReceiveChar@byte,w
  5374  12A1  0008               	return
  5375  12A2                     __end_of_USART_ReceiveChar:	
  5376                           
  5377                           	psect	text30
  5378  12D5                     __ptext30:	
  5379 ;; *************** function _USART_WriteString *****************
  5380 ;; Defined at:
  5381 ;;		line 52 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  str             1    wreg     PTR const unsigned char 
  5384 ;;		 -> STR_1(40), 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  str             1    2[COMMON] PTR const unsigned char 
  5387 ;;		 -> STR_1(40), 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;		None               void
  5390 ;; Registers used:
  5391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5397 ;;      Params:         0       0       0       0       0
  5398 ;;      Locals:         1       0       0       0       0
  5399 ;;      Temps:          1       0       0       0       0
  5400 ;;      Totals:         2       0       0       0       0
  5401 ;;Total ram usage:        2 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    1
  5404 ;; This function calls:
  5405 ;;		_USART_WriteChar
  5406 ;; This function is called by:
  5407 ;;		_USART_ReceiveChar
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           
  5412                           ;psect for function _USART_WriteString
  5413  12D5                     _USART_WriteString:	
  5414                           
  5415                           ;incstack = 0
  5416                           ; Regs used in _USART_WriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5417                           ;USART_WriteString@str stored from wreg
  5418  12D5  00F2               	movwf	USART_WriteString@str
  5419  12D6                     i1l2019:	
  5420                           ;usart.c: 54: while(*str != '\0')
  5421                           
  5422  12D6  0872               	movf	USART_WriteString@str,w
  5423  12D7  0084               	movwf	4
  5424  12D8  160A  118A  2000  160A  118A  	fcall	stringdir
  5425  12DD  3800               	iorlw	0
  5426  12DE  1903               	btfsc	3,2
  5427  12DF  0008               	return
  5428                           
  5429                           ;usart.c: 55: {
  5430                           ;usart.c: 56: USART_WriteChar(*str);
  5431  12E0  0872               	movf	USART_WriteString@str,w
  5432  12E1  0084               	movwf	4
  5433  12E2  160A  118A  2000  160A  118A  	fcall	stringdir
  5434  12E7  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5435                           
  5436                           ;usart.c: 57: str++;
  5437  12EC  3001               	movlw	1
  5438  12ED  00F1               	movwf	??_USART_WriteString
  5439  12EE  0871               	movf	??_USART_WriteString,w
  5440  12EF  07F2               	addwf	USART_WriteString@str,f
  5441  12F0  2AD6               	goto	i1l2019
  5442  12F1                     __end_of_USART_WriteString:	
  5443                           
  5444                           	psect	text31
  5445  123E                     __ptext31:	
  5446 ;; *************** function _USART_WriteChar *****************
  5447 ;; Defined at:
  5448 ;;		line 44 in file "C:\Users\filip\programs\FuzzySI\firmware - Copia\usart.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  byte            1    wreg     unsigned char 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  byte            1    0[COMMON] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;		None               void
  5455 ;; Registers used:
  5456 ;;		wreg
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5462 ;;      Params:         0       0       0       0       0
  5463 ;;      Locals:         1       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0
  5465 ;;      Totals:         1       0       0       0       0
  5466 ;;Total ram usage:        1 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_ISR
  5472 ;;		_USART_WriteString
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function _USART_WriteChar
  5478  123E                     _USART_WriteChar:	
  5479                           
  5480                           ;incstack = 0
  5481                           ; Regs used in _USART_WriteChar: [wreg]
  5482                           ;USART_WriteChar@byte stored from wreg
  5483  123E  00F0               	movwf	USART_WriteChar@byte
  5484  123F                     i1l162:	
  5485                           ;usart.c: 46: while(!PIR1bits.TXIF);
  5486                           
  5487  123F  1283               	bcf	3,5	;RP0=0, select bank0
  5488  1240  1303               	bcf	3,6	;RP1=0, select bank0
  5489  1241  1E0C               	btfss	12,4	;volatile
  5490  1242  2A3F               	goto	i1l162
  5491                           
  5492                           ;usart.c: 47: TXREG = byte;
  5493  1243  0870               	movf	USART_WriteChar@byte,w
  5494  1244  0099               	movwf	25	;volatile
  5495  1245  0008               	return
  5496  1246                     __end_of_USART_WriteChar:	
  5497  007E                     btemp	set	126	;btemp
  5498  007E                     wtemp	set	126
  5499  007E                     wtemp0	set	126
  5500  0080                     wtemp1	set	128
  5501  0082                     wtemp2	set	130
  5502  0084                     wtemp3	set	132
  5503  0086                     wtemp4	set	134
  5504  0088                     wtemp5	set	136
  5505  007F                     wtemp6	set	127
  5506  007E                     ttemp	set	126
  5507  007E                     ttemp0	set	126
  5508  0081                     ttemp1	set	129
  5509  0084                     ttemp2	set	132
  5510  0087                     ttemp3	set	135
  5511  007F                     ttemp4	set	127
  5512  007E                     ltemp	set	126
  5513  007E                     ltemp0	set	126
  5514  0082                     ltemp1	set	130
  5515  0086                     ltemp2	set	134
  5516  0080                     ltemp3	set	128
  5517                           
  5518                           	psect	text8_split_1
  5519  1772                     L10:	
  5520  1772  3E30               	addlw	48
  5521  1773  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5522                           
  5523                           ;main.c: 148: rpmAux /=10;
  5524  1778  300A               	movlw	10
  5525  1779  00F0               	movwf	___awdiv@divisor
  5526  177A  3000               	movlw	0
  5527  177B  00F1               	movwf	___awdiv@divisor+1
  5528  177C  1683               	bsf	3,5	;RP0=1, select bank1
  5529  177D  1303               	bcf	3,6	;RP1=0, select bank1
  5530  177E  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5531  177F  01F3               	clrf	___awdiv@dividend+1
  5532  1780  07F3               	addwf	___awdiv@dividend+1,f
  5533  1781  0840               	movf	ISR@rpmAux^(0+128),w
  5534  1782  01F2               	clrf	___awdiv@dividend
  5535  1783  07F2               	addwf	___awdiv@dividend,f
  5536  1784  120A  158A  2005  160A  118A  	fcall	___awdiv
  5537  1789  0871               	movf	?___awdiv+1,w
  5538  178A  1683               	bsf	3,5	;RP0=1, select bank1
  5539  178B  1303               	bcf	3,6	;RP1=0, select bank1
  5540  178C  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5541  178D  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5542  178E  0870               	movf	?___awdiv,w
  5543  178F  01C0               	clrf	ISR@rpmAux^(0+128)
  5544  1790  07C0               	addwf	ISR@rpmAux^(0+128),f
  5545                           
  5546                           ;main.c: 149: USART_WriteChar((rpmAux%10)+48);
  5547  1791  300A               	movlw	10
  5548  1792  00F0               	movwf	___awmod@divisor
  5549  1793  3000               	movlw	0
  5550  1794  00F1               	movwf	___awmod@divisor+1
  5551  1795  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5552  1796  01F3               	clrf	___awmod@dividend+1
  5553  1797  07F3               	addwf	___awmod@dividend+1,f
  5554  1798  0840               	movf	ISR@rpmAux^(0+128),w
  5555  1799  01F2               	clrf	___awmod@dividend
  5556  179A  07F2               	addwf	___awmod@dividend,f
  5557  179B  160A  118A  2441  160A  118A  	fcall	___awmod
  5558  17A0  0870               	movf	?___awmod,w
  5559  17A1  3E30               	addlw	48
  5560  17A2  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5561                           
  5562                           ;main.c: 150: rpmAux /=10;
  5563  17A7  300A               	movlw	10
  5564  17A8  00F0               	movwf	___awdiv@divisor
  5565  17A9  3000               	movlw	0
  5566  17AA  00F1               	movwf	___awdiv@divisor+1
  5567  17AB  1683               	bsf	3,5	;RP0=1, select bank1
  5568  17AC  1303               	bcf	3,6	;RP1=0, select bank1
  5569  17AD  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5570  17AE  01F3               	clrf	___awdiv@dividend+1
  5571  17AF  07F3               	addwf	___awdiv@dividend+1,f
  5572  17B0  0840               	movf	ISR@rpmAux^(0+128),w
  5573  17B1  01F2               	clrf	___awdiv@dividend
  5574  17B2  07F2               	addwf	___awdiv@dividend,f
  5575  17B3  120A  158A  2005  160A  118A  	fcall	___awdiv
  5576  17B8  0871               	movf	?___awdiv+1,w
  5577  17B9  1683               	bsf	3,5	;RP0=1, select bank1
  5578  17BA  1303               	bcf	3,6	;RP1=0, select bank1
  5579  17BB  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5580  17BC  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5581  17BD  0870               	movf	?___awdiv,w
  5582  17BE  01C0               	clrf	ISR@rpmAux^(0+128)
  5583  17BF  07C0               	addwf	ISR@rpmAux^(0+128),f
  5584                           
  5585                           ;main.c: 151: USART_WriteChar((rpmAux%10)+48);
  5586  17C0  300A               	movlw	10
  5587  17C1  00F0               	movwf	___awmod@divisor
  5588  17C2  3000               	movlw	0
  5589  17C3  00F1               	movwf	___awmod@divisor+1
  5590  17C4  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5591  17C5  01F3               	clrf	___awmod@dividend+1
  5592  17C6  07F3               	addwf	___awmod@dividend+1,f
  5593  17C7  0840               	movf	ISR@rpmAux^(0+128),w
  5594  17C8  01F2               	clrf	___awmod@dividend
  5595  17C9  07F2               	addwf	___awmod@dividend,f
  5596  17CA  160A  118A  2441  160A  118A  	fcall	___awmod
  5597  17CF  0870               	movf	?___awmod,w
  5598  17D0  3E30               	addlw	48
  5599  17D1  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5600                           
  5601                           ;main.c: 152: rpmAux /=10;
  5602  17D6  300A               	movlw	10
  5603  17D7  00F0               	movwf	___awdiv@divisor
  5604  17D8  3000               	movlw	0
  5605  17D9  00F1               	movwf	___awdiv@divisor+1
  5606  17DA  1683               	bsf	3,5	;RP0=1, select bank1
  5607  17DB  1303               	bcf	3,6	;RP1=0, select bank1
  5608  17DC  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5609  17DD  01F3               	clrf	___awdiv@dividend+1
  5610  17DE  07F3               	addwf	___awdiv@dividend+1,f
  5611  17DF  0840               	movf	ISR@rpmAux^(0+128),w
  5612  17E0  01F2               	clrf	___awdiv@dividend
  5613  17E1  07F2               	addwf	___awdiv@dividend,f
  5614  17E2  120A  158A  2005  160A  118A  	fcall	___awdiv
  5615  17E7  0871               	movf	?___awdiv+1,w
  5616  17E8  1683               	bsf	3,5	;RP0=1, select bank1
  5617  17E9  1303               	bcf	3,6	;RP1=0, select bank1
  5618  17EA  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5619  17EB  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5620  17EC  0870               	movf	?___awdiv,w
  5621  17ED  01C0               	clrf	ISR@rpmAux^(0+128)
  5622  17EE  07C0               	addwf	ISR@rpmAux^(0+128),f
  5623                           
  5624                           ;main.c: 153: USART_WriteChar((rpmAux%10)+48);
  5625  17EF  300A               	movlw	10
  5626  17F0  00F0               	movwf	___awmod@divisor
  5627  17F1  3000               	movlw	0
  5628  17F2  00F1               	movwf	___awmod@divisor+1
  5629  17F3  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5630  17F4  01F3               	clrf	___awmod@dividend+1
  5631  17F5  07F3               	addwf	___awmod@dividend+1,f
  5632  17F6  0840               	movf	ISR@rpmAux^(0+128),w
  5633  17F7  01F2               	clrf	___awmod@dividend
  5634  17F8  07F2               	addwf	___awmod@dividend,f
  5635  17F9  160A  118A  2441   	fcall	___awmod
  5636  17FC  0870               	movf	?___awmod,w
  5637  17FD  160A  118A  2EE4   	ljmp	L11
  5638                           
  5639                           	psect	text8_split_2
  5640  16E4                     L11:	
  5641  16E4  3E30               	addlw	48
  5642  16E5  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5643                           
  5644                           ;main.c: 154: rpmAux /=10;
  5645  16EA  300A               	movlw	10
  5646  16EB  00F0               	movwf	___awdiv@divisor
  5647  16EC  3000               	movlw	0
  5648  16ED  00F1               	movwf	___awdiv@divisor+1
  5649  16EE  1683               	bsf	3,5	;RP0=1, select bank1
  5650  16EF  1303               	bcf	3,6	;RP1=0, select bank1
  5651  16F0  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5652  16F1  01F3               	clrf	___awdiv@dividend+1
  5653  16F2  07F3               	addwf	___awdiv@dividend+1,f
  5654  16F3  0840               	movf	ISR@rpmAux^(0+128),w
  5655  16F4  01F2               	clrf	___awdiv@dividend
  5656  16F5  07F2               	addwf	___awdiv@dividend,f
  5657  16F6  120A  158A  2005  160A  118A  	fcall	___awdiv
  5658  16FB  0871               	movf	?___awdiv+1,w
  5659  16FC  1683               	bsf	3,5	;RP0=1, select bank1
  5660  16FD  1303               	bcf	3,6	;RP1=0, select bank1
  5661  16FE  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5662  16FF  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5663  1700  0870               	movf	?___awdiv,w
  5664  1701  01C0               	clrf	ISR@rpmAux^(0+128)
  5665  1702  07C0               	addwf	ISR@rpmAux^(0+128),f
  5666                           
  5667                           ;main.c: 155: USART_WriteChar((rpmAux%10)+48);
  5668  1703  300A               	movlw	10
  5669  1704  00F0               	movwf	___awmod@divisor
  5670  1705  3000               	movlw	0
  5671  1706  00F1               	movwf	___awmod@divisor+1
  5672  1707  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5673  1708  01F3               	clrf	___awmod@dividend+1
  5674  1709  07F3               	addwf	___awmod@dividend+1,f
  5675  170A  0840               	movf	ISR@rpmAux^(0+128),w
  5676  170B  01F2               	clrf	___awmod@dividend
  5677  170C  07F2               	addwf	___awmod@dividend,f
  5678  170D  160A  118A  2441  160A  118A  	fcall	___awmod
  5679  1712  0870               	movf	?___awmod,w
  5680  1713  3E30               	addlw	48
  5681  1714  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5682                           
  5683                           ;main.c: 156: rpmAux /=10;
  5684  1719  300A               	movlw	10
  5685  171A  00F0               	movwf	___awdiv@divisor
  5686  171B  3000               	movlw	0
  5687  171C  00F1               	movwf	___awdiv@divisor+1
  5688  171D  1683               	bsf	3,5	;RP0=1, select bank1
  5689  171E  1303               	bcf	3,6	;RP1=0, select bank1
  5690  171F  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5691  1720  01F3               	clrf	___awdiv@dividend+1
  5692  1721  07F3               	addwf	___awdiv@dividend+1,f
  5693  1722  0840               	movf	ISR@rpmAux^(0+128),w
  5694  1723  01F2               	clrf	___awdiv@dividend
  5695  1724  07F2               	addwf	___awdiv@dividend,f
  5696  1725  120A  158A  2005  160A  118A  	fcall	___awdiv
  5697  172A  0871               	movf	?___awdiv+1,w
  5698  172B  1683               	bsf	3,5	;RP0=1, select bank1
  5699  172C  1303               	bcf	3,6	;RP1=0, select bank1
  5700  172D  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5701  172E  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5702  172F  0870               	movf	?___awdiv,w
  5703  1730  01C0               	clrf	ISR@rpmAux^(0+128)
  5704  1731  07C0               	addwf	ISR@rpmAux^(0+128),f
  5705                           
  5706                           ;main.c: 157: USART_WriteChar((rpmAux%10)+48);
  5707  1732  300A               	movlw	10
  5708  1733  00F0               	movwf	___awmod@divisor
  5709  1734  3000               	movlw	0
  5710  1735  00F1               	movwf	___awmod@divisor+1
  5711  1736  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5712  1737  01F3               	clrf	___awmod@dividend+1
  5713  1738  07F3               	addwf	___awmod@dividend+1,f
  5714  1739  0840               	movf	ISR@rpmAux^(0+128),w
  5715  173A  01F2               	clrf	___awmod@dividend
  5716  173B  07F2               	addwf	___awmod@dividend,f
  5717  173C  160A  118A  2441  160A  118A  	fcall	___awmod
  5718  1741  0870               	movf	?___awmod,w
  5719  1742  3E30               	addlw	48
  5720  1743  160A  118A  223E  160A  118A  	fcall	_USART_WriteChar
  5721                           
  5722                           ;main.c: 158: rpmAux /=10;
  5723  1748  300A               	movlw	10
  5724  1749  00F0               	movwf	___awdiv@divisor
  5725  174A  3000               	movlw	0
  5726  174B  00F1               	movwf	___awdiv@divisor+1
  5727  174C  1683               	bsf	3,5	;RP0=1, select bank1
  5728  174D  1303               	bcf	3,6	;RP1=0, select bank1
  5729  174E  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5730  174F  01F3               	clrf	___awdiv@dividend+1
  5731  1750  07F3               	addwf	___awdiv@dividend+1,f
  5732  1751  0840               	movf	ISR@rpmAux^(0+128),w
  5733  1752  01F2               	clrf	___awdiv@dividend
  5734  1753  07F2               	addwf	___awdiv@dividend,f
  5735  1754  120A  158A  2005  160A  118A  	fcall	___awdiv
  5736  1759  0871               	movf	?___awdiv+1,w
  5737  175A  1683               	bsf	3,5	;RP0=1, select bank1
  5738  175B  1303               	bcf	3,6	;RP1=0, select bank1
  5739  175C  01C1               	clrf	(ISR@rpmAux+1)^(0+128)
  5740  175D  07C1               	addwf	(ISR@rpmAux+1)^(0+128),f
  5741  175E  0870               	movf	?___awdiv,w
  5742  175F  01C0               	clrf	ISR@rpmAux^(0+128)
  5743  1760  07C0               	addwf	ISR@rpmAux^(0+128),f
  5744                           
  5745                           ;main.c: 159: USART_WriteChar((rpmAux%10)+48);
  5746  1761  300A               	movlw	10
  5747  1762  00F0               	movwf	___awmod@divisor
  5748  1763  3000               	movlw	0
  5749  1764  00F1               	movwf	___awmod@divisor+1
  5750  1765  0841               	movf	(ISR@rpmAux+1)^(0+128),w
  5751  1766  01F3               	clrf	___awmod@dividend+1
  5752  1767  07F3               	addwf	___awmod@dividend+1,f
  5753  1768  0840               	movf	ISR@rpmAux^(0+128),w
  5754  1769  01F2               	clrf	___awmod@dividend
  5755  176A  07F2               	addwf	___awmod@dividend,f
  5756  176B  160A  118A  2441   	fcall	___awmod
  5757  176E  0870               	movf	?___awmod,w
  5758  176F  120A  158A  2ABB   	ljmp	L12
  5759                           
  5760                           	psect	text8_split_3
  5761  0ABB                     L12:	
  5762  0ABB  3E30               	addlw	48
  5763  0ABC  160A  118A  223E  120A  158A  	fcall	_USART_WriteChar
  5764                           
  5765                           ;main.c: 160: USART_WriteChar('\n');
  5766  0AC1  300A               	movlw	10
  5767  0AC2  160A  118A  223E  120A  158A  	fcall	_USART_WriteChar
  5768                           
  5769                           ;main.c: 162: erro_anterior = erro_atual;
  5770  0AC7  1683               	bsf	3,5	;RP0=1, select bank1
  5771  0AC8  1303               	bcf	3,6	;RP1=0, select bank1
  5772  0AC9  0851               	movf	(_erro_atual+1)^(0+128),w
  5773  0ACA  01CF               	clrf	(_erro_anterior+1)^(0+128)
  5774  0ACB  07CF               	addwf	(_erro_anterior+1)^(0+128),f
  5775  0ACC  0850               	movf	_erro_atual^(0+128),w
  5776  0ACD  01CE               	clrf	_erro_anterior^(0+128)
  5777  0ACE  07CE               	addwf	_erro_anterior^(0+128),f
  5778                           
  5779                           ;main.c: 163: erro_atual = minimo(abs(setpoint - rpm), 2000);
  5780  0ACF  3000               	movlw	0
  5781  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  5782  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  5783  0AD2  00A9               	movwf	minimo@b
  5784  0AD3  30FA               	movlw	250
  5785  0AD4  00AA               	movwf	minimo@b+1
  5786  0AD5  3044               	movlw	68
  5787  0AD6  00AB               	movwf	minimo@b+2
  5788  0AD7  1683               	bsf	3,5	;RP0=1, select bank1
  5789  0AD8  1303               	bcf	3,6	;RP1=0, select bank1
  5790  0AD9  0956               	comf	_rpm^(0+128),w
  5791  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5792  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5793  0ADC  00E2               	movwf	??_ISR
  5794  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  5795  0ADE  1303               	bcf	3,6	;RP1=0, select bank1
  5796  0ADF  0957               	comf	(_rpm+1)^(0+128),w
  5797  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  5799  0AE2  00E3               	movwf	??_ISR+1
  5800  0AE3  0AE2               	incf	??_ISR,f
  5801  0AE4  1903               	skipnz
  5802  0AE5  0AE3               	incf	??_ISR+1,f
  5803  0AE6  1683               	bsf	3,5	;RP0=1, select bank1
  5804  0AE7  1303               	bcf	3,6	;RP1=0, select bank1
  5805  0AE8  0858               	movf	_setpoint^(0+128),w
  5806  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  5807  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  5808  0AEB  0762               	addwf	??_ISR,w
  5809  0AEC  00F0               	movwf	abs@a
  5810  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  5811  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  5812  0AEF  0859               	movf	(_setpoint+1)^(0+128),w
  5813  0AF0  1803               	skipnc
  5814  0AF1  0A59               	incf	(_setpoint+1)^(0+128),w
  5815  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0AF4  0763               	addwf	??_ISR+1,w
  5818  0AF5  00F1               	movwf	abs@a+1
  5819  0AF6  160A  118A  226B  120A  158A  	fcall	_abs
  5820  0AFB  0871               	movf	?_abs+1,w
  5821  0AFC  01F9               	clrf	___awtoft@c+1
  5822  0AFD  07F9               	addwf	___awtoft@c+1,f
  5823  0AFE  0870               	movf	?_abs,w
  5824  0AFF  01F8               	clrf	___awtoft@c
  5825  0B00  07F8               	addwf	___awtoft@c,f
  5826  0B01  160A  118A  232D  120A  158A  	fcall	___awtoft
  5827  0B06  0878               	movf	?___awtoft,w
  5828  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5830  0B09  00A6               	movwf	minimo@a
  5831  0B0A  0879               	movf	?___awtoft+1,w
  5832  0B0B  00A7               	movwf	minimo@a+1
  5833  0B0C  087A               	movf	?___awtoft+2,w
  5834  0B0D  00A8               	movwf	minimo@a+2
  5835  0B0E  160A  118A  230F  120A  158A  	fcall	_minimo
  5836  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5837  0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5838  0B15  0826               	movf	?_minimo,w
  5839  0B16  00B2               	movwf	___fttol@f1
  5840  0B17  0827               	movf	?_minimo+1,w
  5841  0B18  00B3               	movwf	___fttol@f1+1
  5842  0B19  0828               	movf	?_minimo+2,w
  5843  0B1A  00B4               	movwf	___fttol@f1+2
  5844  0B1B  120A  158A  2060  120A  158A  	fcall	___fttol
  5845  0B20  1283               	bcf	3,5	;RP0=0, select bank0
  5846  0B21  1303               	bcf	3,6	;RP1=0, select bank0
  5847  0B22  0833               	movf	?___fttol+1,w
  5848  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  5849  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  5850  0B25  01D1               	clrf	(_erro_atual+1)^(0+128)
  5851  0B26  07D1               	addwf	(_erro_atual+1)^(0+128),f
  5852  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  5853  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  5854  0B29  0832               	movf	?___fttol,w
  5855  0B2A  1683               	bsf	3,5	;RP0=1, select bank1
  5856  0B2B  1303               	bcf	3,6	;RP1=0, select bank1
  5857  0B2C  01D0               	clrf	_erro_atual^(0+128)
  5858  0B2D  07D0               	addwf	_erro_atual^(0+128),f
  5859                           
  5860                           ;main.c: 164: int delta = maximo(minimo(abs(erro_atual - erro_anterior), 1000), 1);
  5861  0B2E  3000               	movlw	0
  5862  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0B31  00AF               	movwf	maximo@b
  5865  0B32  3080               	movlw	128
  5866  0B33  00B0               	movwf	maximo@b+1
  5867  0B34  303F               	movlw	63
  5868  0B35  00B1               	movwf	maximo@b+2
  5869  0B36  3000               	movlw	0
  5870  0B37  00A9               	movwf	minimo@b
  5871  0B38  307A               	movlw	122
  5872  0B39  00AA               	movwf	minimo@b+1
  5873  0B3A  3044               	movlw	68
  5874  0B3B  00AB               	movwf	minimo@b+2
  5875  0B3C  1683               	bsf	3,5	;RP0=1, select bank1
  5876  0B3D  1303               	bcf	3,6	;RP1=0, select bank1
  5877  0B3E  094E               	comf	_erro_anterior^(0+128),w
  5878  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  5879  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  5880  0B41  00E2               	movwf	??_ISR
  5881  0B42  1683               	bsf	3,5	;RP0=1, select bank1
  5882  0B43  1303               	bcf	3,6	;RP1=0, select bank1
  5883  0B44  094F               	comf	(_erro_anterior+1)^(0+128),w
  5884  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5885  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5886  0B47  00E3               	movwf	??_ISR+1
  5887  0B48  0AE2               	incf	??_ISR,f
  5888  0B49  1903               	skipnz
  5889  0B4A  0AE3               	incf	??_ISR+1,f
  5890  0B4B  1683               	bsf	3,5	;RP0=1, select bank1
  5891  0B4C  1303               	bcf	3,6	;RP1=0, select bank1
  5892  0B4D  0850               	movf	_erro_atual^(0+128),w
  5893  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  5894  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  5895  0B50  0762               	addwf	??_ISR,w
  5896  0B51  00F0               	movwf	abs@a
  5897  0B52  1683               	bsf	3,5	;RP0=1, select bank1
  5898  0B53  1303               	bcf	3,6	;RP1=0, select bank1
  5899  0B54  0851               	movf	(_erro_atual+1)^(0+128),w
  5900  0B55  1803               	skipnc
  5901  0B56  0A51               	incf	(_erro_atual+1)^(0+128),w
  5902  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  5903  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  5904  0B59  0763               	addwf	??_ISR+1,w
  5905  0B5A  00F1               	movwf	abs@a+1
  5906  0B5B  160A  118A  226B   	fcall	_abs
  5907  0B5E  0871               	movf	?_abs+1,w
  5908  0B5F  160A  118A  2E58   	ljmp	L13
  5909                           
  5910                           	psect	text8_split_4
  5911  1658                     L13:	
  5912  1658  01F9               	clrf	___awtoft@c+1
  5913  1659  07F9               	addwf	___awtoft@c+1,f
  5914  165A  0870               	movf	?_abs,w
  5915  165B  01F8               	clrf	___awtoft@c
  5916  165C  07F8               	addwf	___awtoft@c,f
  5917  165D  160A  118A  232D  160A  118A  	fcall	___awtoft
  5918  1662  0878               	movf	?___awtoft,w
  5919  1663  1283               	bcf	3,5	;RP0=0, select bank0
  5920  1664  1303               	bcf	3,6	;RP1=0, select bank0
  5921  1665  00A6               	movwf	minimo@a
  5922  1666  0879               	movf	?___awtoft+1,w
  5923  1667  00A7               	movwf	minimo@a+1
  5924  1668  087A               	movf	?___awtoft+2,w
  5925  1669  00A8               	movwf	minimo@a+2
  5926  166A  160A  118A  230F  160A  118A  	fcall	_minimo
  5927  166F  1283               	bcf	3,5	;RP0=0, select bank0
  5928  1670  1303               	bcf	3,6	;RP1=0, select bank0
  5929  1671  0826               	movf	?_minimo,w
  5930  1672  00AC               	movwf	maximo@a
  5931  1673  0827               	movf	?_minimo+1,w
  5932  1674  00AD               	movwf	maximo@a+1
  5933  1675  0828               	movf	?_minimo+2,w
  5934  1676  00AE               	movwf	maximo@a+2
  5935  1677  160A  118A  22F1  160A  118A  	fcall	_maximo
  5936  167C  1283               	bcf	3,5	;RP0=0, select bank0
  5937  167D  1303               	bcf	3,6	;RP1=0, select bank0
  5938  167E  082C               	movf	?_maximo,w
  5939  167F  00B2               	movwf	___fttol@f1
  5940  1680  082D               	movf	?_maximo+1,w
  5941  1681  00B3               	movwf	___fttol@f1+1
  5942  1682  082E               	movf	?_maximo+2,w
  5943  1683  00B4               	movwf	___fttol@f1+2
  5944  1684  120A  158A  2060  160A  118A  	fcall	___fttol
  5945  1689  1283               	bcf	3,5	;RP0=0, select bank0
  5946  168A  1303               	bcf	3,6	;RP1=0, select bank0
  5947  168B  0833               	movf	?___fttol+1,w
  5948  168C  1683               	bsf	3,5	;RP0=1, select bank1
  5949  168D  1303               	bcf	3,6	;RP1=0, select bank1
  5950  168E  01AC               	clrf	(ISR@delta+1)^(0+128)
  5951  168F  07AC               	addwf	(ISR@delta+1)^(0+128),f
  5952  1690  1283               	bcf	3,5	;RP0=0, select bank0
  5953  1691  1303               	bcf	3,6	;RP1=0, select bank0
  5954  1692  0832               	movf	?___fttol,w
  5955  1693  1683               	bsf	3,5	;RP0=1, select bank1
  5956  1694  1303               	bcf	3,6	;RP1=0, select bank1
  5957  1695  01AB               	clrf	ISR@delta^(0+128)
  5958  1696  07AB               	addwf	ISR@delta^(0+128),f
  5959                           
  5960                           ;main.c: 165: float x = 0;
  5961  1697  3000               	movlw	0
  5962  1698  00C2               	movwf	ISR@x^(0+128)
  5963  1699  3000               	movlw	0
  5964  169A  00C3               	movwf	(ISR@x+1)^(0+128)
  5965  169B  3000               	movlw	0
  5966  169C  00C4               	movwf	(ISR@x+2)^(0+128)
  5967                           
  5968                           ;main.c: 166: float rule = 0;
  5969  169D  3000               	movlw	0
  5970  169E  00BB               	movwf	ISR@rule^(0+128)
  5971  169F  3000               	movlw	0
  5972  16A0  00BC               	movwf	(ISR@rule+1)^(0+128)
  5973  16A1  3000               	movlw	0
  5974  16A2  00BD               	movwf	(ISR@rule+2)^(0+128)
  5975                           
  5976                           ;main.c: 169: if (erro_atual <= 100)
  5977  16A3  0851               	movf	(_erro_atual+1)^(0+128),w
  5978  16A4  3A80               	xorlw	128
  5979  16A5  00FF               	movwf	127
  5980  16A6  3080               	movlw	128
  5981  16A7  027F               	subwf	127,w
  5982  16A8  1D03               	skipz
  5983  16A9  2EAC               	goto	u466_25
  5984  16AA  3065               	movlw	101
  5985  16AB  0250               	subwf	_erro_atual^(0+128),w
  5986  16AC                     u466_25:	
  5987  16AC  120A  158A  1803   	skipnc
  5988  16AF  2BC0               	goto	i1l3523
  5989                           
  5990                           ;main.c: 170: {
  5991                           ;main.c: 173: rule = trapmf(erro_atual, -1, 0, 1, 100);
  5992  16B0  1683               	bsf	3,5	;RP0=1, select bank1
  5993  16B1  1303               	bcf	3,6	;RP1=0, select bank1
  5994  16B2  0851               	movf	(_erro_atual+1)^(0+128),w
  5995  16B3  01F9               	clrf	___awtoft@c+1
  5996  16B4  07F9               	addwf	___awtoft@c+1,f
  5997  16B5  0850               	movf	_erro_atual^(0+128),w
  5998  16B6  01F8               	clrf	___awtoft@c
  5999  16B7  07F8               	addwf	___awtoft@c,f
  6000  16B8  160A  118A  232D  160A  118A  	fcall	___awtoft
  6001  16BD  0878               	movf	?___awtoft,w
  6002  16BE  1283               	bcf	3,5	;RP0=0, select bank0
  6003  16BF  1303               	bcf	3,6	;RP1=0, select bank0
  6004  16C0  00C0               	movwf	trapmf@x
  6005  16C1  0879               	movf	?___awtoft+1,w
  6006  16C2  00C1               	movwf	trapmf@x+1
  6007  16C3  087A               	movf	?___awtoft+2,w
  6008  16C4  00C2               	movwf	trapmf@x+2
  6009  16C5  3000               	movlw	0
  6010  16C6  00C3               	movwf	trapmf@a
  6011  16C7  3080               	movlw	128
  6012  16C8  00C4               	movwf	trapmf@a+1
  6013  16C9  30BF               	movlw	191
  6014  16CA  00C5               	movwf	trapmf@a+2
  6015  16CB  3000               	movlw	0
  6016  16CC  00C6               	movwf	trapmf@b
  6017  16CD  3000               	movlw	0
  6018  16CE  00C7               	movwf	trapmf@b+1
  6019  16CF  3000               	movlw	0
  6020  16D0  00C8               	movwf	trapmf@b+2
  6021  16D1  3000               	movlw	0
  6022  16D2  00C9               	movwf	trapmf@c
  6023  16D3  3080               	movlw	128
  6024  16D4  00CA               	movwf	trapmf@c+1
  6025  16D5  303F               	movlw	63
  6026  16D6  00CB               	movwf	trapmf@c+2
  6027  16D7  3000               	movlw	0
  6028  16D8  00CC               	movwf	trapmf@d
  6029  16D9  30C8               	movlw	200
  6030  16DA  00CD               	movwf	trapmf@d+1
  6031  16DB  3042               	movlw	66
  6032  16DC  00CE               	movwf	trapmf@d+2
  6033  16DD  120A  158A  26AA   	fcall	_trapmf
  6034  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  6035  16E1  120A  158A  297D   	ljmp	L14
  6036                           
  6037                           	psect	text8_split_5
  6038  097D                     L14:	
  6039  097D  1303               	bcf	3,6	;RP1=0, select bank0
  6040  097E  0840               	movf	?_trapmf,w
  6041  097F  1683               	bsf	3,5	;RP0=1, select bank1
  6042  0980  1303               	bcf	3,6	;RP1=0, select bank1
  6043  0981  00BB               	movwf	ISR@rule^(0+128)
  6044  0982  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0983  1303               	bcf	3,6	;RP1=0, select bank0
  6046  0984  0841               	movf	?_trapmf+1,w
  6047  0985  1683               	bsf	3,5	;RP0=1, select bank1
  6048  0986  1303               	bcf	3,6	;RP1=0, select bank1
  6049  0987  00BC               	movwf	(ISR@rule+1)^(0+128)
  6050  0988  1283               	bcf	3,5	;RP0=0, select bank0
  6051  0989  1303               	bcf	3,6	;RP1=0, select bank0
  6052  098A  0842               	movf	?_trapmf+2,w
  6053  098B  1683               	bsf	3,5	;RP0=1, select bank1
  6054  098C  1303               	bcf	3,6	;RP1=0, select bank1
  6055  098D  00BD               	movwf	(ISR@rule+2)^(0+128)
  6056                           
  6057                           ;main.c: 175: x = 0;
  6058  098E  3000               	movlw	0
  6059  098F  00C2               	movwf	ISR@x^(0+128)
  6060  0990  3000               	movlw	0
  6061  0991  00C3               	movwf	(ISR@x+1)^(0+128)
  6062  0992  3000               	movlw	0
  6063  0993  00C4               	movwf	(ISR@x+2)^(0+128)
  6064                           
  6065                           ;main.c: 176: for (int a = 0; a <= 15; a++)
  6066  0994  01B0               	clrf	ISR@a^(0+128)
  6067  0995  01B1               	clrf	(ISR@a+1)^(0+128)
  6068  0996  0831               	movf	(ISR@a+1)^(0+128),w
  6069  0997  3A80               	xorlw	128
  6070  0998  00FF               	movwf	127
  6071  0999  3080               	movlw	128
  6072  099A  027F               	subwf	127,w
  6073  099B  1D03               	skipz
  6074  099C  299F               	goto	u467_25
  6075  099D  3010               	movlw	16
  6076  099E  0230               	subwf	ISR@a^(0+128),w
  6077  099F                     u467_25:	
  6078  099F  120A  158A  1803   	btfsc	3,0
  6079  09A2  2BC0               	goto	i1l3523
  6080  09A3                     i1l3513:	
  6081                           
  6082                           ;main.c: 177: {
  6083                           ;main.c: 178: rBaixo[a] = trapmf(x, -1, 0, 0, 5);
  6084  09A3  3003               	movlw	3
  6085  09A4  1283               	bcf	3,5	;RP0=0, select bank0
  6086  09A5  1303               	bcf	3,6	;RP1=0, select bank0
  6087  09A6  00E2               	movwf	??_ISR
  6088  09A7  0862               	movf	??_ISR,w
  6089  09A8  00F0               	movwf	___bmul@multiplicand
  6090  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  6091  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  6092  09AB  0830               	movf	ISR@a^(0+128),w
  6093  09AC  160A  118A  2279  120A  158A  	fcall	___bmul
  6094  09B1  3E90               	addlw	_rBaixo& (0+255)
  6095  09B2  0084               	movwf	4
  6096  09B3  1683               	bsf	3,5	;RP0=1, select bank1
  6097  09B4  1303               	bcf	3,6	;RP1=0, select bank1
  6098  09B5  0842               	movf	ISR@x^(0+128),w
  6099  09B6  1283               	bcf	3,5	;RP0=0, select bank0
  6100  09B7  1303               	bcf	3,6	;RP1=0, select bank0
  6101  09B8  00C0               	movwf	trapmf@x
  6102  09B9  1683               	bsf	3,5	;RP0=1, select bank1
  6103  09BA  1303               	bcf	3,6	;RP1=0, select bank1
  6104  09BB  0843               	movf	(ISR@x+1)^(0+128),w
  6105  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  6106  09BD  1303               	bcf	3,6	;RP1=0, select bank0
  6107  09BE  00C1               	movwf	trapmf@x+1
  6108  09BF  1683               	bsf	3,5	;RP0=1, select bank1
  6109  09C0  1303               	bcf	3,6	;RP1=0, select bank1
  6110  09C1  0844               	movf	(ISR@x+2)^(0+128),w
  6111  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  6112  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  6113  09C4  00C2               	movwf	trapmf@x+2
  6114  09C5  3000               	movlw	0
  6115  09C6  00C3               	movwf	trapmf@a
  6116  09C7  3080               	movlw	128
  6117  09C8  00C4               	movwf	trapmf@a+1
  6118  09C9  30BF               	movlw	191
  6119  09CA  00C5               	movwf	trapmf@a+2
  6120  09CB  3000               	movlw	0
  6121  09CC  00C6               	movwf	trapmf@b
  6122  09CD  3000               	movlw	0
  6123  09CE  00C7               	movwf	trapmf@b+1
  6124  09CF  3000               	movlw	0
  6125  09D0  00C8               	movwf	trapmf@b+2
  6126  09D1  3000               	movlw	0
  6127  09D2  00C9               	movwf	trapmf@c
  6128  09D3  3000               	movlw	0
  6129  09D4  00CA               	movwf	trapmf@c+1
  6130  09D5  3000               	movlw	0
  6131  09D6  00CB               	movwf	trapmf@c+2
  6132  09D7  3000               	movlw	0
  6133  09D8  00CC               	movwf	trapmf@d
  6134  09D9  30A0               	movlw	160
  6135  09DA  00CD               	movwf	trapmf@d+1
  6136  09DB  3040               	movlw	64
  6137  09DC  00CE               	movwf	trapmf@d+2
  6138  09DD  120A  158A  26AA  120A  158A  	fcall	_trapmf
  6139  09E2  1283               	bcf	3,5	;RP0=0, select bank0
  6140  09E3  1303               	bcf	3,6	;RP1=0, select bank0
  6141  09E4  0840               	movf	?_trapmf,w
  6142  09E5  1783               	bsf	3,7	;select IRP bank3
  6143  09E6  0080               	movwf	0
  6144  09E7  0A84               	incf	4,f
  6145  09E8  0841               	movf	?_trapmf+1,w
  6146  09E9  0080               	movwf	0
  6147  09EA  0A84               	incf	4,f
  6148  09EB  0842               	movf	?_trapmf+2,w
  6149  09EC  0080               	movwf	0
  6150                           
  6151                           ;main.c: 179: if (rBaixo[a] >= rule)
  6152  09ED  3003               	movlw	3
  6153  09EE  00E2               	movwf	??_ISR
  6154  09EF  0862               	movf	??_ISR,w
  6155  09F0  00F0               	movwf	___bmul@multiplicand
  6156  09F1  1683               	bsf	3,5	;RP0=1, select bank1
  6157  09F2  1303               	bcf	3,6	;RP1=0, select bank1
  6158  09F3  0830               	movf	ISR@a^(0+128),w
  6159  09F4  160A  118A  2279  120A  158A  	fcall	___bmul
  6160  09F9  3E90               	addlw	_rBaixo& (0+255)
  6161  09FA  0084               	movwf	4
  6162  09FB  1783               	bsf	3,7	;select IRP bank3
  6163  09FC  0800               	movf	0,w
  6164  09FD  00F4               	movwf	___ftge@ff1
  6165  09FE  0A84               	incf	4,f
  6166  09FF  0800               	movf	0,w
  6167  0A00  00F5               	movwf	___ftge@ff1+1
  6168  0A01  0A84               	incf	4,f
  6169  0A02  0800               	movf	0,w
  6170  0A03  00F6               	movwf	___ftge@ff1+2
  6171  0A04  1683               	bsf	3,5	;RP0=1, select bank1
  6172  0A05  1303               	bcf	3,6	;RP1=0, select bank1
  6173  0A06  083B               	movf	ISR@rule^(0+128),w
  6174  0A07  00F7               	movwf	___ftge@ff2
  6175  0A08  083C               	movf	(ISR@rule+1)^(0+128),w
  6176  0A09  00F8               	movwf	___ftge@ff2+1
  6177  0A0A  083D               	movf	(ISR@rule+2)^(0+128),w
  6178  0A0B  00F9               	movwf	___ftge@ff2+2
  6179  0A0C  160A  118A  248E  120A  158A  	fcall	___ftge
  6180  0A11  1C03               	btfss	3,0
  6181  0A12  2A13               	ljmp	L17
  6182  0A13                     L17:	
  6183  0A13  120A  158A  2B62   	ljmp	L15
  6184                           
  6185                           	psect	text8_split_6
  6186  0B62                     L15:	
  6187  0B62  2B7E               	goto	i1l3517
  6188                           
  6189                           ;main.c: 180: {
  6190                           ;main.c: 181: rBaixo[a] = rule;
  6191  0B63  3003               	movlw	3
  6192  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  6193  0B65  1303               	bcf	3,6	;RP1=0, select bank0
  6194  0B66  00E2               	movwf	??_ISR
  6195  0B67  0862               	movf	??_ISR,w
  6196  0B68  00F0               	movwf	___bmul@multiplicand
  6197  0B69  1683               	bsf	3,5	;RP0=1, select bank1
  6198  0B6A  1303               	bcf	3,6	;RP1=0, select bank1
  6199  0B6B  0830               	movf	ISR@a^(0+128),w
  6200  0B6C  160A  118A  2279  120A  158A  	fcall	___bmul
  6201  0B71  3E90               	addlw	_rBaixo& (0+255)
  6202  0B72  0084               	movwf	4
  6203  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  6204  0B74  1303               	bcf	3,6	;RP1=0, select bank1
  6205  0B75  083B               	movf	ISR@rule^(0+128),w
  6206  0B76  1783               	bsf	3,7	;select IRP bank3
  6207  0B77  0080               	movwf	0
  6208  0B78  0A84               	incf	4,f
  6209  0B79  083C               	movf	(ISR@rule+1)^(0+128),w
  6210  0B7A  0080               	movwf	0
  6211  0B7B  0A84               	incf	4,f
  6212  0B7C  083D               	movf	(ISR@rule+2)^(0+128),w
  6213  0B7D  0080               	movwf	0
  6214  0B7E                     i1l3517:	
  6215                           
  6216                           ;main.c: 182: }
  6217                           ;main.c: 184: x += 1;
  6218  0B7E  3000               	movlw	0
  6219  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  6220  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  6221  0B81  00A3               	movwf	___ftadd@f1
  6222  0B82  3080               	movlw	128
  6223  0B83  00A4               	movwf	___ftadd@f1+1
  6224  0B84  303F               	movlw	63
  6225  0B85  00A5               	movwf	___ftadd@f1+2
  6226  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  6227  0B87  1303               	bcf	3,6	;RP1=0, select bank1
  6228  0B88  0842               	movf	ISR@x^(0+128),w
  6229  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  6230  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  6231  0B8B  00A6               	movwf	___ftadd@f2
  6232  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  6233  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  6234  0B8E  0843               	movf	(ISR@x+1)^(0+128),w
  6235  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  6237  0B91  00A7               	movwf	___ftadd@f2+1
  6238  0B92  1683               	bsf	3,5	;RP0=1, select bank1
  6239  0B93  1303               	bcf	3,6	;RP1=0, select bank1
  6240  0B94  0844               	movf	(ISR@x+2)^(0+128),w
  6241  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  6242  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  6243  0B97  00A8               	movwf	___ftadd@f2+2
  6244  0B98  120A  158A  25A1  120A  158A  	fcall	___ftadd
  6245  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  6246  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  6247  0B9F  0823               	movf	?___ftadd,w
  6248  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  6249  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  6250  0BA2  00C2               	movwf	ISR@x^(0+128)
  6251  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  6252  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  6253  0BA5  0824               	movf	?___ftadd+1,w
  6254  0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  6255  0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  6256  0BA8  00C3               	movwf	(ISR@x+1)^(0+128)
  6257  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  6259  0BAB  0825               	movf	?___ftadd+2,w
  6260  0BAC  1683               	bsf	3,5	;RP0=1, select bank1
  6261  0BAD  1303               	bcf	3,6	;RP1=0, select bank1
  6262  0BAE  00C4               	movwf	(ISR@x+2)^(0+128)
  6263  0BAF  3001               	movlw	1
  6264  0BB0  07B0               	addwf	ISR@a^(0+128),f
  6265  0BB1  1803               	skipnc
  6266  0BB2  0AB1               	incf	(ISR@a+1)^(0+128),f
  6267  0BB3  3000               	movlw	0
  6268  0BB4  07B1               	addwf	(ISR@a+1)^(0+128),f
  6269  0BB5  0831               	movf	(ISR@a+1)^(0+128),w
  6270  0BB6  3A80               	xorlw	128
  6271  0BB7  00FF               	movwf	127
  6272  0BB8  3080               	movlw	128
  6273  0BB9  027F               	subwf	127,w
  6274  0BBA  1D03               	skipz
  6275  0BBB  2BBE               	goto	u469_25
  6276  0BBC  3010               	movlw	16
  6277  0BBD  0230               	subwf	ISR@a^(0+128),w
  6278  0BBE                     u469_25:	
  6279  0BBE  1C03               	skipc
  6280  0BBF  2C10               	goto	L21
  6281  0BC0                     i1l3523:	
  6282                           
  6283                           ;main.c: 185: }
  6284                           ;main.c: 186: }
  6285                           ;main.c: 189: if (erro_atual >= 100 && erro_atual <= 1001 && delta <= 200)
  6286  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  6287  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  6288  0BC2  0851               	movf	(_erro_atual+1)^(0+128),w
  6289  0BC3  3A80               	xorlw	128
  6290  0BC4  00FF               	movwf	127
  6291  0BC5  3080               	movlw	128
  6292  0BC6  027F               	subwf	127,w
  6293  0BC7  1D03               	skipz
  6294  0BC8  2BCB               	goto	u470_25
  6295  0BC9  3064               	movlw	100
  6296  0BCA  0250               	subwf	_erro_atual^(0+128),w
  6297  0BCB                     u470_25:	
  6298  0BCB  1C03               	skipc
  6299  0BCC  2C13               	goto	L23
  6300  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  6301  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  6302  0BCF  0851               	movf	(_erro_atual+1)^(0+128),w
  6303  0BD0  3A80               	xorlw	128
  6304  0BD1  00FF               	movwf	127
  6305  0BD2  3083               	movlw	131
  6306  0BD3  027F               	subwf	127,w
  6307  0BD4  1D03               	skipz
  6308  0BD5  2BD8               	goto	u471_25
  6309  0BD6  30EA               	movlw	234
  6310  0BD7  0250               	subwf	_erro_atual^(0+128),w
  6311  0BD8                     u471_25:	
  6312  0BD8  1803               	skipnc
  6313  0BD9  2C13               	goto	L23
  6314  0BDA  1683               	bsf	3,5	;RP0=1, select bank1
  6315  0BDB  1303               	bcf	3,6	;RP1=0, select bank1
  6316  0BDC  082C               	movf	(ISR@delta+1)^(0+128),w
  6317  0BDD  3A80               	xorlw	128
  6318  0BDE  00FF               	movwf	127
  6319  0BDF  3080               	movlw	128
  6320  0BE0  027F               	subwf	127,w
  6321  0BE1  1D03               	skipz
  6322  0BE2  2BE5               	goto	u472_25
  6323  0BE3  30C9               	movlw	201
  6324  0BE4  022B               	subwf	ISR@delta^(0+128),w
  6325  0BE5                     u472_25:	
  6326  0BE5  1803               	skipnc
  6327  0BE6  2C13               	goto	L23
  6328                           
  6329                           ;main.c: 190: {
  6330                           ;main.c: 192: rule = trapmf(erro_atual, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 
      +                          1, 200));
  6331  0BE7  3000               	movlw	0
  6332  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  6333  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  6334  0BEA  00CC               	movwf	trapmf@d
  6335  0BEB  3048               	movlw	72
  6336  0BEC  00CD               	movwf	trapmf@d+1
  6337  0BED  3043               	movlw	67
  6338  0BEE  00CE               	movwf	trapmf@d+2
  6339  0BEF  3000               	movlw	0
  6340  0BF0  00C9               	movwf	trapmf@c
  6341  0BF1  3080               	movlw	128
  6342  0BF2  00CA               	movwf	trapmf@c+1
  6343  0BF3  303F               	movlw	63
  6344  0BF4  00CB               	movwf	trapmf@c+2
  6345  0BF5  3000               	movlw	0
  6346  0BF6  00C6               	movwf	trapmf@b
  6347  0BF7  3000               	movlw	0
  6348  0BF8  00C7               	movwf	trapmf@b+1
  6349  0BF9  3000               	movlw	0
  6350  0BFA  00C8               	movwf	trapmf@b+2
  6351  0BFB  3000               	movlw	0
  6352  0BFC  00C3               	movwf	trapmf@a
  6353  0BFD  3080               	movlw	128
  6354  0BFE  00C4               	movwf	trapmf@a+1
  6355  0BFF  30BF               	movlw	191
  6356  0C00  00C5               	movwf	trapmf@a+2
  6357  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  6358  0C02  1303               	bcf	3,6	;RP1=0, select bank1
  6359  0C03  082C               	movf	(ISR@delta+1)^(0+128),w
  6360  0C04  01F9               	clrf	___awtoft@c+1
  6361  0C05  07F9               	addwf	___awtoft@c+1,f
  6362  0C06  082B               	movf	ISR@delta^(0+128),w
  6363  0C07  01F8               	clrf	___awtoft@c
  6364  0C08  07F8               	addwf	___awtoft@c,f
  6365  0C09  160A  118A  232D   	fcall	___awtoft
  6366  0C0C  0878               	movf	?___awtoft,w
  6367  0C0D  160A  118A  2DD2   	ljmp	L19
  6368  0C10                     L21:	
  6369  0C10  120A  118A  2FDB   	ljmp	L18
  6370  0C13                     L23:	
  6371  0C13  120A  118A  2943   	ljmp	i1l3549
  6372                           
  6373                           	psect	text8_split_7
  6374  15D2                     L19:	
  6375  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  6376  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  6377  15D4  00C0               	movwf	trapmf@x
  6378  15D5  0879               	movf	?___awtoft+1,w
  6379  15D6  00C1               	movwf	trapmf@x+1
  6380  15D7  087A               	movf	?___awtoft+2,w
  6381  15D8  00C2               	movwf	trapmf@x+2
  6382  15D9  120A  158A  26AA  160A  118A  	fcall	_trapmf
  6383  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  6384  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  6385  15E0  0840               	movf	?_trapmf,w
  6386  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  6387  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  6388  15E3  00A0               	movwf	_ISR$1636^(0+128)
  6389  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  6390  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  6391  15E6  0841               	movf	?_trapmf+1,w
  6392  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  6393  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  6394  15E9  00A1               	movwf	(_ISR$1636+1)^(0+128)
  6395  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  6396  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  6397  15EC  0842               	movf	?_trapmf+2,w
  6398  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  6399  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  6400  15EF  00A2               	movwf	(_ISR$1636+2)^(0+128)
  6401                           
  6402                           ;main.c: 190: {
  6403                           ;main.c: 192: rule = trapmf(erro_atual, 50, 800, 800, 1550) * (1 - trapmf(delta, -1, 0, 
      +                          1, 200));
  6404  15F0  30C0               	movlw	192
  6405  15F1  1283               	bcf	3,5	;RP0=0, select bank0
  6406  15F2  1303               	bcf	3,6	;RP1=0, select bank0
  6407  15F3  00CC               	movwf	trapmf@d
  6408  15F4  30C1               	movlw	193
  6409  15F5  00CD               	movwf	trapmf@d+1
  6410  15F6  3044               	movlw	68
  6411  15F7  00CE               	movwf	trapmf@d+2
  6412  15F8  3000               	movlw	0
  6413  15F9  00C9               	movwf	trapmf@c
  6414  15FA  3048               	movlw	72
  6415  15FB  00CA               	movwf	trapmf@c+1
  6416  15FC  3044               	movlw	68
  6417  15FD  00CB               	movwf	trapmf@c+2
  6418  15FE  3000               	movlw	0
  6419  15FF  00C6               	movwf	trapmf@b
  6420  1600  3048               	movlw	72
  6421  1601  00C7               	movwf	trapmf@b+1
  6422  1602  3044               	movlw	68
  6423  1603  00C8               	movwf	trapmf@b+2
  6424  1604  3000               	movlw	0
  6425  1605  00C3               	movwf	trapmf@a
  6426  1606  3048               	movlw	72
  6427  1607  00C4               	movwf	trapmf@a+1
  6428  1608  3042               	movlw	66
  6429  1609  00C5               	movwf	trapmf@a+2
  6430  160A  1683               	bsf	3,5	;RP0=1, select bank1
  6431  160B  1303               	bcf	3,6	;RP1=0, select bank1
  6432  160C  0851               	movf	(_erro_atual+1)^(0+128),w
  6433  160D  01F9               	clrf	___awtoft@c+1
  6434  160E  07F9               	addwf	___awtoft@c+1,f
  6435  160F  0850               	movf	_erro_atual^(0+128),w
  6436  1610  01F8               	clrf	___awtoft@c
  6437  1611  07F8               	addwf	___awtoft@c,f
  6438  1612  160A  118A  232D  160A  118A  	fcall	___awtoft
  6439  1617  0878               	movf	?___awtoft,w
  6440  1618  1283               	bcf	3,5	;RP0=0, select bank0
  6441  1619  1303               	bcf	3,6	;RP1=0, select bank0
  6442  161A  00C0               	movwf	trapmf@x
  6443  161B  0879               	movf	?___awtoft+1,w
  6444  161C  00C1               	movwf	trapmf@x+1
  6445  161D  087A               	movf	?___awtoft+2,w
  6446  161E  00C2               	movwf	trapmf@x+2
  6447  161F  120A  158A  26AA  160A  118A  	fcall	_trapmf
  6448  1624  1283               	bcf	3,5	;RP0=0, select bank0
  6449  1625  1303               	bcf	3,6	;RP1=0, select bank0
  6450  1626  0840               	movf	?_trapmf,w
  6451  1627  00D2               	movwf	___ftmul@f1
  6452  1628  0841               	movf	?_trapmf+1,w
  6453  1629  00D3               	movwf	___ftmul@f1+1
  6454  162A  0842               	movf	?_trapmf+2,w
  6455  162B  00D4               	movwf	___ftmul@f1+2
  6456  162C  3000               	movlw	0
  6457  162D  00A3               	movwf	___ftadd@f1
  6458  162E  3080               	movlw	128
  6459  162F  00A4               	movwf	___ftadd@f1+1
  6460  1630  303F               	movlw	63
  6461  1631  00A5               	movwf	___ftadd@f1+2
  6462  1632  1683               	bsf	3,5	;RP0=1, select bank1
  6463  1633  1303               	bcf	3,6	;RP1=0, select bank1
  6464  1634  0820               	movf	_ISR$1636^(0+128),w
  6465  1635  1283               	bcf	3,5	;RP0=0, select bank0
  6466  1636  1303               	bcf	3,6	;RP1=0, select bank0
  6467  1637  00A0               	movwf	___ftneg@f1
  6468  1638  1683               	bsf	3,5	;RP0=1, select bank1
  6469  1639  1303               	bcf	3,6	;RP1=0, select bank1
  6470  163A  0821               	movf	(_ISR$1636+1)^(0+128),w
  6471  163B  1283               	bcf	3,5	;RP0=0, select bank0
  6472  163C  1303               	bcf	3,6	;RP1=0, select bank0
  6473  163D  00A1               	movwf	___ftneg@f1+1
  6474  163E  1683               	bsf	3,5	;RP0=1, select bank1
  6475  163F  1303               	bcf	3,6	;RP1=0, select bank1
  6476  1640  0822               	movf	(_ISR$1636+2)^(0+128),w
  6477  1641  1283               	bcf	3,5	;RP0=0, select bank0
  6478  1642  1303               	bcf	3,6	;RP1=0, select bank0
  6479  1643  00A2               	movwf	___ftneg@f1+2
  6480  1644  160A  118A  2256  160A  118A  	fcall	___ftneg
  6481  1649  1283               	bcf	3,5	;RP0=0, select bank0
  6482  164A  1303               	bcf	3,6	;RP1=0, select bank0
  6483  164B  0820               	movf	?___ftneg,w
  6484  164C  00A6               	movwf	___ftadd@f2
  6485  164D  0821               	movf	?___ftneg+1,w
  6486  164E  00A7               	movwf	___ftadd@f2+1
  6487  164F  0822               	movf	?___ftneg+2,w
  6488  1650  00A8               	movwf	___ftadd@f2+2
  6489  1651  120A  158A  25A1   	fcall	___ftadd
  6490  1654  1283               	bcf	3,5	;RP0=0, select bank0
  6491  1655  120A  118A  2845   	ljmp	L24
  6492                           
  6493                           	psect	text8_split_8
  6494  0045                     L24:	
  6495  0045  1303               	bcf	3,6	;RP1=0, select bank0
  6496  0046  0823               	movf	?___ftadd,w
  6497  0047  00D5               	movwf	___ftmul@f2
  6498  0048  0824               	movf	?___ftadd+1,w
  6499  0049  00D6               	movwf	___ftmul@f2+1
  6500  004A  0825               	movf	?___ftadd+2,w
  6501  004B  00D7               	movwf	___ftmul@f2+2
  6502  004C  120A  158A  24CE  120A  118A  	fcall	___ftmul
  6503  0051  1283               	bcf	3,5	;RP0=0, select bank0
  6504  0052  1303               	bcf	3,6	;RP1=0, select bank0
  6505  0053  0852               	movf	?___ftmul,w
  6506  0054  1683               	bsf	3,5	;RP0=1, select bank1
  6507  0055  1303               	bcf	3,6	;RP1=0, select bank1
  6508  0056  00BB               	movwf	ISR@rule^(0+128)
  6509  0057  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0058  1303               	bcf	3,6	;RP1=0, select bank0
  6511  0059  0853               	movf	?___ftmul+1,w
  6512  005A  1683               	bsf	3,5	;RP0=1, select bank1
  6513  005B  1303               	bcf	3,6	;RP1=0, select bank1
  6514  005C  00BC               	movwf	(ISR@rule+1)^(0+128)
  6515  005D  1283               	bcf	3,5	;RP0=0, select bank0
  6516  005E  1303               	bcf	3,6	;RP1=0, select bank0
  6517  005F  0854               	movf	?___ftmul+2,w
  6518  0060  1683               	bsf	3,5	;RP0=1, select bank1
  6519  0061  1303               	bcf	3,6	;RP1=0, select bank1
  6520  0062  00BD               	movwf	(ISR@rule+2)^(0+128)
  6521                           
  6522                           ;main.c: 194: x = 0;
  6523  0063  3000               	movlw	0
  6524  0064  00C2               	movwf	ISR@x^(0+128)
  6525  0065  3000               	movlw	0
  6526  0066  00C3               	movwf	(ISR@x+1)^(0+128)
  6527  0067  3000               	movlw	0
  6528  0068  00C4               	movwf	(ISR@x+2)^(0+128)
  6529                           
  6530                           ;main.c: 195: for (int a = 0; a <= 15; a++)
  6531  0069  01B2               	clrf	ISR@a_211^(0+128)
  6532  006A  01B3               	clrf	(ISR@a_211+1)^(0+128)
  6533  006B  0833               	movf	(ISR@a_211+1)^(0+128),w
  6534  006C  3A80               	xorlw	128
  6535  006D  00FF               	movwf	127
  6536  006E  3080               	movlw	128
  6537  006F  027F               	subwf	127,w
  6538  0070  1D03               	skipz
  6539  0071  2874               	goto	u473_25
  6540  0072  3010               	movlw	16
  6541  0073  0232               	subwf	ISR@a_211^(0+128),w
  6542  0074                     u473_25:	
  6543  0074  1803               	btfsc	3,0
  6544  0075  2943               	goto	i1l3549
  6545  0076                     i1l3539:	
  6546                           
  6547                           ;main.c: 196: {
  6548                           ;main.c: 198: rBaixo[a] = trapmf(x, 2, 5, 5, 10);
  6549  0076  3003               	movlw	3
  6550  0077  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0078  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0079  00E2               	movwf	??_ISR
  6553  007A  0862               	movf	??_ISR,w
  6554  007B  00F0               	movwf	___bmul@multiplicand
  6555  007C  1683               	bsf	3,5	;RP0=1, select bank1
  6556  007D  1303               	bcf	3,6	;RP1=0, select bank1
  6557  007E  0832               	movf	ISR@a_211^(0+128),w
  6558  007F  160A  118A  2279  120A  118A  	fcall	___bmul
  6559  0084  3E90               	addlw	_rBaixo& (0+255)
  6560  0085  0084               	movwf	4
  6561  0086  1683               	bsf	3,5	;RP0=1, select bank1
  6562  0087  1303               	bcf	3,6	;RP1=0, select bank1
  6563  0088  0842               	movf	ISR@x^(0+128),w
  6564  0089  1283               	bcf	3,5	;RP0=0, select bank0
  6565  008A  1303               	bcf	3,6	;RP1=0, select bank0
  6566  008B  00C0               	movwf	trapmf@x
  6567  008C  1683               	bsf	3,5	;RP0=1, select bank1
  6568  008D  1303               	bcf	3,6	;RP1=0, select bank1
  6569  008E  0843               	movf	(ISR@x+1)^(0+128),w
  6570  008F  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0090  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0091  00C1               	movwf	trapmf@x+1
  6573  0092  1683               	bsf	3,5	;RP0=1, select bank1
  6574  0093  1303               	bcf	3,6	;RP1=0, select bank1
  6575  0094  0844               	movf	(ISR@x+2)^(0+128),w
  6576  0095  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0096  1303               	bcf	3,6	;RP1=0, select bank0
  6578  0097  00C2               	movwf	trapmf@x+2
  6579  0098  3000               	movlw	0
  6580  0099  00C3               	movwf	trapmf@a
  6581  009A  3000               	movlw	0
  6582  009B  00C4               	movwf	trapmf@a+1
  6583  009C  3040               	movlw	64
  6584  009D  00C5               	movwf	trapmf@a+2
  6585  009E  3000               	movlw	0
  6586  009F  00C6               	movwf	trapmf@b
  6587  00A0  30A0               	movlw	160
  6588  00A1  00C7               	movwf	trapmf@b+1
  6589  00A2  3040               	movlw	64
  6590  00A3  00C8               	movwf	trapmf@b+2
  6591  00A4  3000               	movlw	0
  6592  00A5  00C9               	movwf	trapmf@c
  6593  00A6  30A0               	movlw	160
  6594  00A7  00CA               	movwf	trapmf@c+1
  6595  00A8  3040               	movlw	64
  6596  00A9  00CB               	movwf	trapmf@c+2
  6597  00AA  3000               	movlw	0
  6598  00AB  00CC               	movwf	trapmf@d
  6599  00AC  3020               	movlw	32
  6600  00AD  00CD               	movwf	trapmf@d+1
  6601  00AE  3041               	movlw	65
  6602  00AF  00CE               	movwf	trapmf@d+2
  6603  00B0  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6604  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  6605  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  6606  00B7  0840               	movf	?_trapmf,w
  6607  00B8  1783               	bsf	3,7	;select IRP bank3
  6608  00B9  0080               	movwf	0
  6609  00BA  0A84               	incf	4,f
  6610  00BB  0841               	movf	?_trapmf+1,w
  6611  00BC  0080               	movwf	0
  6612  00BD  0A84               	incf	4,f
  6613  00BE  0842               	movf	?_trapmf+2,w
  6614  00BF  0080               	movwf	0
  6615                           
  6616                           ;main.c: 199: if (rBaixo[a] >= rule)
  6617  00C0  3003               	movlw	3
  6618  00C1  00E2               	movwf	??_ISR
  6619  00C2  0862               	movf	??_ISR,w
  6620  00C3  00F0               	movwf	___bmul@multiplicand
  6621  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  6622  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  6623  00C6  0832               	movf	ISR@a_211^(0+128),w
  6624  00C7  160A  118A  2279  120A  118A  	fcall	___bmul
  6625  00CC  3E90               	addlw	_rBaixo& (0+255)
  6626  00CD  0084               	movwf	4
  6627  00CE  1783               	bsf	3,7	;select IRP bank3
  6628  00CF  0800               	movf	0,w
  6629  00D0  00F4               	movwf	___ftge@ff1
  6630  00D1  0A84               	incf	4,f
  6631  00D2  0800               	movf	0,w
  6632  00D3  00F5               	movwf	___ftge@ff1+1
  6633  00D4  0A84               	incf	4,f
  6634  00D5  0800               	movf	0,w
  6635  00D6  00F6               	movwf	___ftge@ff1+2
  6636  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  6637  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  6638  00D9  083B               	movf	ISR@rule^(0+128),w
  6639  00DA  00F7               	movwf	___ftge@ff2
  6640  00DB  083C               	movf	(ISR@rule+1)^(0+128),w
  6641  00DC  00F8               	movwf	___ftge@ff2+1
  6642  00DD  083D               	movf	(ISR@rule+2)^(0+128),w
  6643  00DE  00F9               	movwf	___ftge@ff2+2
  6644  00DF  160A  118A  248E  120A  118A  	fcall	___ftge
  6645  00E4  1C03               	btfss	3,0
  6646  00E5  2901               	goto	i1l3543
  6647                           
  6648                           ;main.c: 200: {
  6649                           ;main.c: 201: rBaixo[a] = rule;
  6650  00E6  3003               	movlw	3
  6651  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  6652  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  6653  00E9  00E2               	movwf	??_ISR
  6654  00EA  0862               	movf	??_ISR,w
  6655  00EB  00F0               	movwf	___bmul@multiplicand
  6656  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  6657  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  6658  00EE  0832               	movf	ISR@a_211^(0+128),w
  6659  00EF  160A  118A  2279  120A  118A  	fcall	___bmul
  6660  00F4  3E90               	addlw	_rBaixo& (0+255)
  6661  00F5  0084               	movwf	4
  6662  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  6663  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  6664  00F8  083B               	movf	ISR@rule^(0+128),w
  6665  00F9  1783               	bsf	3,7	;select IRP bank3
  6666  00FA  0080               	movwf	0
  6667  00FB  0A84               	incf	4,f
  6668  00FC  083C               	movf	(ISR@rule+1)^(0+128),w
  6669  00FD  0080               	movwf	0
  6670  00FE  0A84               	incf	4,f
  6671  00FF  083D               	movf	(ISR@rule+2)^(0+128),w
  6672  0100  0080               	movwf	0
  6673  0101                     i1l3543:	
  6674                           
  6675                           ;main.c: 202: }
  6676                           ;main.c: 204: x += 1;
  6677  0101  3000               	movlw	0
  6678  0102  1283               	bcf	3,5	;RP0=0, select bank0
  6679  0103  1303               	bcf	3,6	;RP1=0, select bank0
  6680  0104  00A3               	movwf	___ftadd@f1
  6681  0105  3080               	movlw	128
  6682  0106  00A4               	movwf	___ftadd@f1+1
  6683  0107  303F               	movlw	63
  6684  0108  00A5               	movwf	___ftadd@f1+2
  6685  0109  1683               	bsf	3,5	;RP0=1, select bank1
  6686  010A  1303               	bcf	3,6	;RP1=0, select bank1
  6687  010B  0842               	movf	ISR@x^(0+128),w
  6688  010C  1283               	bcf	3,5	;RP0=0, select bank0
  6689  010D  1303               	bcf	3,6	;RP1=0, select bank0
  6690  010E  00A6               	movwf	___ftadd@f2
  6691  010F  1683               	bsf	3,5	;RP0=1, select bank1
  6692  0110  1303               	bcf	3,6	;RP1=0, select bank1
  6693  0111  0843               	movf	(ISR@x+1)^(0+128),w
  6694  0112  1283               	bcf	3,5	;RP0=0, select bank0
  6695  0113  1303               	bcf	3,6	;RP1=0, select bank0
  6696  0114  00A7               	movwf	___ftadd@f2+1
  6697  0115  1683               	bsf	3,5	;RP0=1, select bank1
  6698  0116  1303               	bcf	3,6	;RP1=0, select bank1
  6699  0117  0844               	movf	(ISR@x+2)^(0+128),w
  6700  0118  1283               	bcf	3,5	;RP0=0, select bank0
  6701  0119  1303               	bcf	3,6	;RP1=0, select bank0
  6702  011A  00A8               	movwf	___ftadd@f2+2
  6703  011B  120A  158A  25A1  120A  118A  	fcall	___ftadd
  6704  0120  1283               	bcf	3,5	;RP0=0, select bank0
  6705  0121  1303               	bcf	3,6	;RP1=0, select bank0
  6706  0122  0823               	movf	?___ftadd,w
  6707  0123  1683               	bsf	3,5	;RP0=1, select bank1
  6708  0124  1303               	bcf	3,6	;RP1=0, select bank1
  6709  0125  00C2               	movwf	ISR@x^(0+128)
  6710  0126  1283               	bcf	3,5	;RP0=0, select bank0
  6711  0127  1303               	bcf	3,6	;RP1=0, select bank0
  6712  0128  0824               	movf	?___ftadd+1,w
  6713  0129  1683               	bsf	3,5	;RP0=1, select bank1
  6714  012A  1303               	bcf	3,6	;RP1=0, select bank1
  6715  012B  00C3               	movwf	(ISR@x+1)^(0+128)
  6716  012C  1283               	bcf	3,5	;RP0=0, select bank0
  6717  012D  1303               	bcf	3,6	;RP1=0, select bank0
  6718  012E  0825               	movf	?___ftadd+2,w
  6719  012F  1683               	bsf	3,5	;RP0=1, select bank1
  6720  0130  1303               	bcf	3,6	;RP1=0, select bank1
  6721  0131  00C4               	movwf	(ISR@x+2)^(0+128)
  6722  0132  3001               	movlw	1
  6723  0133  07B2               	addwf	ISR@a_211^(0+128),f
  6724  0134  1803               	skipnc
  6725  0135  0AB3               	incf	(ISR@a_211+1)^(0+128),f
  6726  0136  3000               	movlw	0
  6727  0137  07B3               	addwf	(ISR@a_211+1)^(0+128),f
  6728  0138  0833               	movf	(ISR@a_211+1)^(0+128),w
  6729  0139  3A80               	xorlw	128
  6730  013A  00FF               	movwf	127
  6731  013B  3080               	movlw	128
  6732  013C  027F               	subwf	127,w
  6733  013D  1D03               	skipz
  6734  013E  2941               	goto	u475_25
  6735  013F  3010               	movlw	16
  6736  0140  0232               	subwf	ISR@a_211^(0+128),w
  6737  0141                     u475_25:	
  6738  0141  1C03               	skipc
  6739  0142  2876               	goto	i1l3539
  6740  0143                     i1l3549:	
  6741                           
  6742                           ;main.c: 205: }
  6743                           ;main.c: 206: }
  6744                           ;main.c: 209: if (erro_atual >= 100 && erro_atual <= 1001 && delta >= 201)
  6745  0143  1683               	bsf	3,5	;RP0=1, select bank1
  6746  0144  1303               	bcf	3,6	;RP1=0, select bank1
  6747  0145  0851               	movf	(_erro_atual+1)^(0+128),w
  6748  0146  3A80               	xorlw	128
  6749  0147  00FF               	movwf	127
  6750  0148  3080               	movlw	128
  6751  0149  027F               	subwf	127,w
  6752  014A  1D03               	skipz
  6753  014B  294E               	goto	u476_25
  6754  014C  3064               	movlw	100
  6755  014D  0250               	subwf	_erro_atual^(0+128),w
  6756  014E                     u476_25:	
  6757  014E  1C03               	skipc
  6758  014F  2AD7               	goto	i1l3575
  6759  0150  1683               	bsf	3,5	;RP0=1, select bank1
  6760  0151  1303               	bcf	3,6	;RP1=0, select bank1
  6761  0152  0851               	movf	(_erro_atual+1)^(0+128),w
  6762  0153  3A80               	xorlw	128
  6763  0154  00FF               	movwf	127
  6764  0155  3083               	movlw	131
  6765  0156  027F               	subwf	127,w
  6766  0157  1D03               	skipz
  6767  0158  295B               	goto	u477_25
  6768  0159  30EA               	movlw	234
  6769  015A  0250               	subwf	_erro_atual^(0+128),w
  6770  015B                     u477_25:	
  6771  015B  1803               	skipnc
  6772  015C  2AD7               	goto	i1l3575
  6773  015D  1683               	bsf	3,5	;RP0=1, select bank1
  6774  015E  1303               	bcf	3,6	;RP1=0, select bank1
  6775  015F  082C               	movf	(ISR@delta+1)^(0+128),w
  6776  0160  3A80               	xorlw	128
  6777  0161  00FF               	movwf	127
  6778  0162  3080               	movlw	128
  6779  0163  027F               	subwf	127,w
  6780  0164  1D03               	skipz
  6781  0165  2968               	goto	u478_25
  6782  0166  30C9               	movlw	201
  6783  0167  022B               	subwf	ISR@delta^(0+128),w
  6784  0168                     u478_25:	
  6785  0168  1C03               	skipc
  6786  0169  2AD7               	goto	i1l3575
  6787                           
  6788                           ;main.c: 210: {
  6789                           ;main.c: 212: rule = trapmf(erro_atual, 50, 800, 800, 1550) * trapmf(delta, 200, 500, 20
      +                          00, 2001);
  6790  016A  3020               	movlw	32
  6791  016B  1283               	bcf	3,5	;RP0=0, select bank0
  6792  016C  1303               	bcf	3,6	;RP1=0, select bank0
  6793  016D  00CC               	movwf	trapmf@d
  6794  016E  30FA               	movlw	250
  6795  016F  00CD               	movwf	trapmf@d+1
  6796  0170  3044               	movlw	68
  6797  0171  00CE               	movwf	trapmf@d+2
  6798  0172  3000               	movlw	0
  6799  0173  00C9               	movwf	trapmf@c
  6800  0174  30FA               	movlw	250
  6801  0175  00CA               	movwf	trapmf@c+1
  6802  0176  3044               	movlw	68
  6803  0177  00CB               	movwf	trapmf@c+2
  6804  0178  3000               	movlw	0
  6805  0179  00C6               	movwf	trapmf@b
  6806  017A  30FA               	movlw	250
  6807  017B  00C7               	movwf	trapmf@b+1
  6808  017C  3043               	movlw	67
  6809  017D  00C8               	movwf	trapmf@b+2
  6810  017E  3000               	movlw	0
  6811  017F  00C3               	movwf	trapmf@a
  6812  0180  3048               	movlw	72
  6813  0181  00C4               	movwf	trapmf@a+1
  6814  0182  3043               	movlw	67
  6815  0183  00C5               	movwf	trapmf@a+2
  6816  0184  1683               	bsf	3,5	;RP0=1, select bank1
  6817  0185  1303               	bcf	3,6	;RP1=0, select bank1
  6818  0186  082C               	movf	(ISR@delta+1)^(0+128),w
  6819  0187  01F9               	clrf	___awtoft@c+1
  6820  0188  07F9               	addwf	___awtoft@c+1,f
  6821  0189  082B               	movf	ISR@delta^(0+128),w
  6822  018A  01F8               	clrf	___awtoft@c
  6823  018B  07F8               	addwf	___awtoft@c,f
  6824  018C  160A  118A  232D  120A  118A  	fcall	___awtoft
  6825  0191  0878               	movf	?___awtoft,w
  6826  0192  1283               	bcf	3,5	;RP0=0, select bank0
  6827  0193  1303               	bcf	3,6	;RP1=0, select bank0
  6828  0194  00C0               	movwf	trapmf@x
  6829  0195  0879               	movf	?___awtoft+1,w
  6830  0196  00C1               	movwf	trapmf@x+1
  6831  0197  087A               	movf	?___awtoft+2,w
  6832  0198  00C2               	movwf	trapmf@x+2
  6833  0199  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6834  019E  1283               	bcf	3,5	;RP0=0, select bank0
  6835  019F  1303               	bcf	3,6	;RP1=0, select bank0
  6836  01A0  0840               	movf	?_trapmf,w
  6837  01A1  00D2               	movwf	___ftmul@f1
  6838  01A2  0841               	movf	?_trapmf+1,w
  6839  01A3  00D3               	movwf	___ftmul@f1+1
  6840  01A4  0842               	movf	?_trapmf+2,w
  6841  01A5  00D4               	movwf	___ftmul@f1+2
  6842  01A6  30C0               	movlw	192
  6843  01A7  00CC               	movwf	trapmf@d
  6844  01A8  30C1               	movlw	193
  6845  01A9  00CD               	movwf	trapmf@d+1
  6846  01AA  3044               	movlw	68
  6847  01AB  00CE               	movwf	trapmf@d+2
  6848  01AC  3000               	movlw	0
  6849  01AD  00C9               	movwf	trapmf@c
  6850  01AE  3048               	movlw	72
  6851  01AF  00CA               	movwf	trapmf@c+1
  6852  01B0  3044               	movlw	68
  6853  01B1  00CB               	movwf	trapmf@c+2
  6854  01B2  3000               	movlw	0
  6855  01B3  00C6               	movwf	trapmf@b
  6856  01B4  3048               	movlw	72
  6857  01B5  00C7               	movwf	trapmf@b+1
  6858  01B6  3044               	movlw	68
  6859  01B7  00C8               	movwf	trapmf@b+2
  6860  01B8  3000               	movlw	0
  6861  01B9  00C3               	movwf	trapmf@a
  6862  01BA  3048               	movlw	72
  6863  01BB  00C4               	movwf	trapmf@a+1
  6864  01BC  3042               	movlw	66
  6865  01BD  00C5               	movwf	trapmf@a+2
  6866  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  6867  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  6868  01C0  0851               	movf	(_erro_atual+1)^(0+128),w
  6869  01C1  01F9               	clrf	___awtoft@c+1
  6870  01C2  07F9               	addwf	___awtoft@c+1,f
  6871  01C3  0850               	movf	_erro_atual^(0+128),w
  6872  01C4  01F8               	clrf	___awtoft@c
  6873  01C5  07F8               	addwf	___awtoft@c,f
  6874  01C6  160A  118A  232D  120A  118A  	fcall	___awtoft
  6875  01CB  0878               	movf	?___awtoft,w
  6876  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  6877  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  6878  01CE  00C0               	movwf	trapmf@x
  6879  01CF  0879               	movf	?___awtoft+1,w
  6880  01D0  00C1               	movwf	trapmf@x+1
  6881  01D1  087A               	movf	?___awtoft+2,w
  6882  01D2  00C2               	movwf	trapmf@x+2
  6883  01D3  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6884  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  6885  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  6886  01DA  0840               	movf	?_trapmf,w
  6887  01DB  00D5               	movwf	___ftmul@f2
  6888  01DC  0841               	movf	?_trapmf+1,w
  6889  01DD  00D6               	movwf	___ftmul@f2+1
  6890  01DE  0842               	movf	?_trapmf+2,w
  6891  01DF  00D7               	movwf	___ftmul@f2+2
  6892  01E0  120A  158A  24CE  120A  118A  	fcall	___ftmul
  6893  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  6894  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  6895  01E7  0852               	movf	?___ftmul,w
  6896  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  6897  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  6898  01EA  00BB               	movwf	ISR@rule^(0+128)
  6899  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  6900  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  6901  01ED  0853               	movf	?___ftmul+1,w
  6902  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  6903  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  6904  01F0  00BC               	movwf	(ISR@rule+1)^(0+128)
  6905  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  6906  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  6907  01F3  0854               	movf	?___ftmul+2,w
  6908  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  6909  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  6910  01F6  00BD               	movwf	(ISR@rule+2)^(0+128)
  6911                           
  6912                           ;main.c: 214: x = 0;
  6913  01F7  3000               	movlw	0
  6914  01F8  00C2               	movwf	ISR@x^(0+128)
  6915  01F9  3000               	movlw	0
  6916  01FA  00C3               	movwf	(ISR@x+1)^(0+128)
  6917  01FB  3000               	movlw	0
  6918  01FC  00C4               	movwf	(ISR@x+2)^(0+128)
  6919                           
  6920                           ;main.c: 215: for (int a = 0; a <= 15; a++)
  6921  01FD  01B4               	clrf	ISR@a_212^(0+128)
  6922  01FE  01B5               	clrf	(ISR@a_212+1)^(0+128)
  6923  01FF  0835               	movf	(ISR@a_212+1)^(0+128),w
  6924  0200  3A80               	xorlw	128
  6925  0201  00FF               	movwf	127
  6926  0202  3080               	movlw	128
  6927  0203  027F               	subwf	127,w
  6928  0204  1D03               	skipz
  6929  0205  2A08               	goto	u479_25
  6930  0206  3010               	movlw	16
  6931  0207  0234               	subwf	ISR@a_212^(0+128),w
  6932  0208                     u479_25:	
  6933  0208  1803               	btfsc	3,0
  6934  0209  2AD7               	goto	i1l3575
  6935  020A                     i1l3565:	
  6936                           
  6937                           ;main.c: 216: {
  6938                           ;main.c: 217: rMedio[a] = trapmf(x, 2, 5, 5, 10);
  6939  020A  3003               	movlw	3
  6940  020B  1283               	bcf	3,5	;RP0=0, select bank0
  6941  020C  1303               	bcf	3,6	;RP1=0, select bank0
  6942  020D  00E2               	movwf	??_ISR
  6943  020E  0862               	movf	??_ISR,w
  6944  020F  00F0               	movwf	___bmul@multiplicand
  6945  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6946  0211  1303               	bcf	3,6	;RP1=0, select bank1
  6947  0212  0834               	movf	ISR@a_212^(0+128),w
  6948  0213  160A  118A  2279  120A  118A  	fcall	___bmul
  6949  0218  3E40               	addlw	_rMedio& (0+255)
  6950  0219  0084               	movwf	4
  6951  021A  1683               	bsf	3,5	;RP0=1, select bank1
  6952  021B  1303               	bcf	3,6	;RP1=0, select bank1
  6953  021C  0842               	movf	ISR@x^(0+128),w
  6954  021D  1283               	bcf	3,5	;RP0=0, select bank0
  6955  021E  1303               	bcf	3,6	;RP1=0, select bank0
  6956  021F  00C0               	movwf	trapmf@x
  6957  0220  1683               	bsf	3,5	;RP0=1, select bank1
  6958  0221  1303               	bcf	3,6	;RP1=0, select bank1
  6959  0222  0843               	movf	(ISR@x+1)^(0+128),w
  6960  0223  1283               	bcf	3,5	;RP0=0, select bank0
  6961  0224  1303               	bcf	3,6	;RP1=0, select bank0
  6962  0225  00C1               	movwf	trapmf@x+1
  6963  0226  1683               	bsf	3,5	;RP0=1, select bank1
  6964  0227  1303               	bcf	3,6	;RP1=0, select bank1
  6965  0228  0844               	movf	(ISR@x+2)^(0+128),w
  6966  0229  1283               	bcf	3,5	;RP0=0, select bank0
  6967  022A  1303               	bcf	3,6	;RP1=0, select bank0
  6968  022B  00C2               	movwf	trapmf@x+2
  6969  022C  3000               	movlw	0
  6970  022D  00C3               	movwf	trapmf@a
  6971  022E  3000               	movlw	0
  6972  022F  00C4               	movwf	trapmf@a+1
  6973  0230  3040               	movlw	64
  6974  0231  00C5               	movwf	trapmf@a+2
  6975  0232  3000               	movlw	0
  6976  0233  00C6               	movwf	trapmf@b
  6977  0234  30A0               	movlw	160
  6978  0235  00C7               	movwf	trapmf@b+1
  6979  0236  3040               	movlw	64
  6980  0237  00C8               	movwf	trapmf@b+2
  6981  0238  3000               	movlw	0
  6982  0239  00C9               	movwf	trapmf@c
  6983  023A  30A0               	movlw	160
  6984  023B  00CA               	movwf	trapmf@c+1
  6985  023C  3040               	movlw	64
  6986  023D  00CB               	movwf	trapmf@c+2
  6987  023E  3000               	movlw	0
  6988  023F  00CC               	movwf	trapmf@d
  6989  0240  3020               	movlw	32
  6990  0241  00CD               	movwf	trapmf@d+1
  6991  0242  3041               	movlw	65
  6992  0243  00CE               	movwf	trapmf@d+2
  6993  0244  120A  158A  26AA  120A  118A  	fcall	_trapmf
  6994  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6995  024A  1303               	bcf	3,6	;RP1=0, select bank0
  6996  024B  0840               	movf	?_trapmf,w
  6997  024C  1783               	bsf	3,7	;select IRP bank2
  6998  024D  0080               	movwf	0
  6999  024E  0A84               	incf	4,f
  7000  024F  0841               	movf	?_trapmf+1,w
  7001  0250  0080               	movwf	0
  7002  0251  0A84               	incf	4,f
  7003  0252  0842               	movf	?_trapmf+2,w
  7004  0253  0080               	movwf	0
  7005                           
  7006                           ;main.c: 219: if (rMedio[a] >= rule)
  7007  0254  3003               	movlw	3
  7008  0255  00E2               	movwf	??_ISR
  7009  0256  0862               	movf	??_ISR,w
  7010  0257  00F0               	movwf	___bmul@multiplicand
  7011  0258  1683               	bsf	3,5	;RP0=1, select bank1
  7012  0259  1303               	bcf	3,6	;RP1=0, select bank1
  7013  025A  0834               	movf	ISR@a_212^(0+128),w
  7014  025B  160A  118A  2279  120A  118A  	fcall	___bmul
  7015  0260  3E40               	addlw	_rMedio& (0+255)
  7016  0261  0084               	movwf	4
  7017  0262  1783               	bsf	3,7	;select IRP bank2
  7018  0263  0800               	movf	0,w
  7019  0264  00F4               	movwf	___ftge@ff1
  7020  0265  0A84               	incf	4,f
  7021  0266  0800               	movf	0,w
  7022  0267  00F5               	movwf	___ftge@ff1+1
  7023  0268  0A84               	incf	4,f
  7024  0269  0800               	movf	0,w
  7025  026A  00F6               	movwf	___ftge@ff1+2
  7026  026B  1683               	bsf	3,5	;RP0=1, select bank1
  7027  026C  1303               	bcf	3,6	;RP1=0, select bank1
  7028  026D  083B               	movf	ISR@rule^(0+128),w
  7029  026E  00F7               	movwf	___ftge@ff2
  7030  026F  083C               	movf	(ISR@rule+1)^(0+128),w
  7031  0270  00F8               	movwf	___ftge@ff2+1
  7032  0271  083D               	movf	(ISR@rule+2)^(0+128),w
  7033  0272  00F9               	movwf	___ftge@ff2+2
  7034  0273  160A  118A  248E  120A  118A  	fcall	___ftge
  7035  0278  1C03               	btfss	3,0
  7036  0279  2A95               	goto	i1l3569
  7037                           
  7038                           ;main.c: 220: {
  7039                           ;main.c: 221: rMedio[a] = rule;
  7040  027A  3003               	movlw	3
  7041  027B  1283               	bcf	3,5	;RP0=0, select bank0
  7042  027C  1303               	bcf	3,6	;RP1=0, select bank0
  7043  027D  00E2               	movwf	??_ISR
  7044  027E  0862               	movf	??_ISR,w
  7045  027F  00F0               	movwf	___bmul@multiplicand
  7046  0280  1683               	bsf	3,5	;RP0=1, select bank1
  7047  0281  1303               	bcf	3,6	;RP1=0, select bank1
  7048  0282  0834               	movf	ISR@a_212^(0+128),w
  7049  0283  160A  118A  2279  120A  118A  	fcall	___bmul
  7050  0288  3E40               	addlw	_rMedio& (0+255)
  7051  0289  0084               	movwf	4
  7052  028A  1683               	bsf	3,5	;RP0=1, select bank1
  7053  028B  1303               	bcf	3,6	;RP1=0, select bank1
  7054  028C  083B               	movf	ISR@rule^(0+128),w
  7055  028D  1783               	bsf	3,7	;select IRP bank2
  7056  028E  0080               	movwf	0
  7057  028F  0A84               	incf	4,f
  7058  0290  083C               	movf	(ISR@rule+1)^(0+128),w
  7059  0291  0080               	movwf	0
  7060  0292  0A84               	incf	4,f
  7061  0293  083D               	movf	(ISR@rule+2)^(0+128),w
  7062  0294  0080               	movwf	0
  7063  0295                     i1l3569:	
  7064                           
  7065                           ;main.c: 222: }
  7066                           ;main.c: 224: x += 1;
  7067  0295  3000               	movlw	0
  7068  0296  1283               	bcf	3,5	;RP0=0, select bank0
  7069  0297  1303               	bcf	3,6	;RP1=0, select bank0
  7070  0298  00A3               	movwf	___ftadd@f1
  7071  0299  3080               	movlw	128
  7072  029A  00A4               	movwf	___ftadd@f1+1
  7073  029B  303F               	movlw	63
  7074  029C  00A5               	movwf	___ftadd@f1+2
  7075  029D  1683               	bsf	3,5	;RP0=1, select bank1
  7076  029E  1303               	bcf	3,6	;RP1=0, select bank1
  7077  029F  0842               	movf	ISR@x^(0+128),w
  7078  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  7079  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  7080  02A2  00A6               	movwf	___ftadd@f2
  7081  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  7082  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  7083  02A5  0843               	movf	(ISR@x+1)^(0+128),w
  7084  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  7085  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  7086  02A8  00A7               	movwf	___ftadd@f2+1
  7087  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  7088  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  7089  02AB  0844               	movf	(ISR@x+2)^(0+128),w
  7090  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  7091  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  7092  02AE  00A8               	movwf	___ftadd@f2+2
  7093  02AF  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7094  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  7095  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  7096  02B6  0823               	movf	?___ftadd,w
  7097  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  7098  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  7099  02B9  00C2               	movwf	ISR@x^(0+128)
  7100  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  7101  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  7102  02BC  0824               	movf	?___ftadd+1,w
  7103  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  7104  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  7105  02BF  00C3               	movwf	(ISR@x+1)^(0+128)
  7106  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  7107  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  7108  02C2  0825               	movf	?___ftadd+2,w
  7109  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  7110  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  7111  02C5  00C4               	movwf	(ISR@x+2)^(0+128)
  7112  02C6  3001               	movlw	1
  7113  02C7  07B4               	addwf	ISR@a_212^(0+128),f
  7114  02C8  1803               	skipnc
  7115  02C9  0AB5               	incf	(ISR@a_212+1)^(0+128),f
  7116  02CA  3000               	movlw	0
  7117  02CB  07B5               	addwf	(ISR@a_212+1)^(0+128),f
  7118  02CC  0835               	movf	(ISR@a_212+1)^(0+128),w
  7119  02CD  3A80               	xorlw	128
  7120  02CE  00FF               	movwf	127
  7121  02CF  3080               	movlw	128
  7122  02D0  027F               	subwf	127,w
  7123  02D1  1D03               	skipz
  7124  02D2  2AD5               	goto	u481_25
  7125  02D3  3010               	movlw	16
  7126  02D4  0234               	subwf	ISR@a_212^(0+128),w
  7127  02D5                     u481_25:	
  7128  02D5  1C03               	skipc
  7129  02D6  2A0A               	goto	i1l3565
  7130  02D7                     i1l3575:	
  7131                           
  7132                           ;main.c: 225: }
  7133                           ;main.c: 226: }
  7134                           ;main.c: 229: if (erro_atual >= 1001)
  7135  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  7136  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  7137  02D9  0851               	movf	(_erro_atual+1)^(0+128),w
  7138  02DA  3A80               	xorlw	128
  7139  02DB  00FF               	movwf	127
  7140  02DC  3083               	movlw	131
  7141  02DD  027F               	subwf	127,w
  7142  02DE  1D03               	skipz
  7143  02DF  2AE2               	goto	u482_25
  7144  02E0  30E9               	movlw	233
  7145  02E1  0250               	subwf	_erro_atual^(0+128),w
  7146  02E2                     u482_25:	
  7147  02E2  1C03               	skipc
  7148  02E3  2C08               	goto	i1l3597
  7149                           
  7150                           ;main.c: 230: {
  7151                           ;main.c: 232: rule = trapmf(erro_atual, 1001, 1500, 2000, 2001);
  7152  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  7153  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  7154  02E6  0851               	movf	(_erro_atual+1)^(0+128),w
  7155  02E7  01F9               	clrf	___awtoft@c+1
  7156  02E8  07F9               	addwf	___awtoft@c+1,f
  7157  02E9  0850               	movf	_erro_atual^(0+128),w
  7158  02EA  01F8               	clrf	___awtoft@c
  7159  02EB  07F8               	addwf	___awtoft@c,f
  7160  02EC  160A  118A  232D  120A  118A  	fcall	___awtoft
  7161  02F1  0878               	movf	?___awtoft,w
  7162  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  7163  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  7164  02F4  00C0               	movwf	trapmf@x
  7165  02F5  0879               	movf	?___awtoft+1,w
  7166  02F6  00C1               	movwf	trapmf@x+1
  7167  02F7  087A               	movf	?___awtoft+2,w
  7168  02F8  00C2               	movwf	trapmf@x+2
  7169  02F9  3040               	movlw	64
  7170  02FA  00C3               	movwf	trapmf@a
  7171  02FB  307A               	movlw	122
  7172  02FC  00C4               	movwf	trapmf@a+1
  7173  02FD  3044               	movlw	68
  7174  02FE  00C5               	movwf	trapmf@a+2
  7175  02FF  3080               	movlw	128
  7176  0300  00C6               	movwf	trapmf@b
  7177  0301  30BB               	movlw	187
  7178  0302  00C7               	movwf	trapmf@b+1
  7179  0303  3044               	movlw	68
  7180  0304  00C8               	movwf	trapmf@b+2
  7181  0305  3000               	movlw	0
  7182  0306  00C9               	movwf	trapmf@c
  7183  0307  30FA               	movlw	250
  7184  0308  00CA               	movwf	trapmf@c+1
  7185  0309  3044               	movlw	68
  7186  030A  00CB               	movwf	trapmf@c+2
  7187  030B  3020               	movlw	32
  7188  030C  00CC               	movwf	trapmf@d
  7189  030D  30FA               	movlw	250
  7190  030E  00CD               	movwf	trapmf@d+1
  7191  030F  3044               	movlw	68
  7192  0310  00CE               	movwf	trapmf@d+2
  7193  0311  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7194  0316  1283               	bcf	3,5	;RP0=0, select bank0
  7195  0317  1303               	bcf	3,6	;RP1=0, select bank0
  7196  0318  0840               	movf	?_trapmf,w
  7197  0319  1683               	bsf	3,5	;RP0=1, select bank1
  7198  031A  1303               	bcf	3,6	;RP1=0, select bank1
  7199  031B  00BB               	movwf	ISR@rule^(0+128)
  7200  031C  1283               	bcf	3,5	;RP0=0, select bank0
  7201  031D  1303               	bcf	3,6	;RP1=0, select bank0
  7202  031E  0841               	movf	?_trapmf+1,w
  7203  031F  1683               	bsf	3,5	;RP0=1, select bank1
  7204  0320  1303               	bcf	3,6	;RP1=0, select bank1
  7205  0321  00BC               	movwf	(ISR@rule+1)^(0+128)
  7206  0322  1283               	bcf	3,5	;RP0=0, select bank0
  7207  0323  1303               	bcf	3,6	;RP1=0, select bank0
  7208  0324  0842               	movf	?_trapmf+2,w
  7209  0325  1683               	bsf	3,5	;RP0=1, select bank1
  7210  0326  1303               	bcf	3,6	;RP1=0, select bank1
  7211  0327  00BD               	movwf	(ISR@rule+2)^(0+128)
  7212                           
  7213                           ;main.c: 234: x = 0;
  7214  0328  3000               	movlw	0
  7215  0329  00C2               	movwf	ISR@x^(0+128)
  7216  032A  3000               	movlw	0
  7217  032B  00C3               	movwf	(ISR@x+1)^(0+128)
  7218  032C  3000               	movlw	0
  7219  032D  00C4               	movwf	(ISR@x+2)^(0+128)
  7220                           
  7221                           ;main.c: 235: for (int a = 0; a <= 15; a++)
  7222  032E  01B6               	clrf	ISR@a_213^(0+128)
  7223  032F  01B7               	clrf	(ISR@a_213+1)^(0+128)
  7224  0330  0837               	movf	(ISR@a_213+1)^(0+128),w
  7225  0331  3A80               	xorlw	128
  7226  0332  00FF               	movwf	127
  7227  0333  3080               	movlw	128
  7228  0334  027F               	subwf	127,w
  7229  0335  1D03               	skipz
  7230  0336  2B39               	goto	u483_25
  7231  0337  3010               	movlw	16
  7232  0338  0236               	subwf	ISR@a_213^(0+128),w
  7233  0339                     u483_25:	
  7234  0339  1803               	btfsc	3,0
  7235  033A  2C08               	goto	i1l3597
  7236  033B                     i1l3587:	
  7237                           
  7238                           ;main.c: 236: {
  7239                           ;main.c: 237: rGrande[a] = trapmf(x, 5, 10, 15, 16);
  7240  033B  3003               	movlw	3
  7241  033C  1283               	bcf	3,5	;RP0=0, select bank0
  7242  033D  1303               	bcf	3,6	;RP1=0, select bank0
  7243  033E  00E2               	movwf	??_ISR
  7244  033F  0862               	movf	??_ISR,w
  7245  0340  00F0               	movwf	___bmul@multiplicand
  7246  0341  1683               	bsf	3,5	;RP0=1, select bank1
  7247  0342  1303               	bcf	3,6	;RP1=0, select bank1
  7248  0343  0836               	movf	ISR@a_213^(0+128),w
  7249  0344  160A  118A  2279  120A  118A  	fcall	___bmul
  7250  0349  3E10               	addlw	_rGrande& (0+255)
  7251  034A  0084               	movwf	4
  7252  034B  1683               	bsf	3,5	;RP0=1, select bank1
  7253  034C  1303               	bcf	3,6	;RP1=0, select bank1
  7254  034D  0842               	movf	ISR@x^(0+128),w
  7255  034E  1283               	bcf	3,5	;RP0=0, select bank0
  7256  034F  1303               	bcf	3,6	;RP1=0, select bank0
  7257  0350  00C0               	movwf	trapmf@x
  7258  0351  1683               	bsf	3,5	;RP0=1, select bank1
  7259  0352  1303               	bcf	3,6	;RP1=0, select bank1
  7260  0353  0843               	movf	(ISR@x+1)^(0+128),w
  7261  0354  1283               	bcf	3,5	;RP0=0, select bank0
  7262  0355  1303               	bcf	3,6	;RP1=0, select bank0
  7263  0356  00C1               	movwf	trapmf@x+1
  7264  0357  1683               	bsf	3,5	;RP0=1, select bank1
  7265  0358  1303               	bcf	3,6	;RP1=0, select bank1
  7266  0359  0844               	movf	(ISR@x+2)^(0+128),w
  7267  035A  1283               	bcf	3,5	;RP0=0, select bank0
  7268  035B  1303               	bcf	3,6	;RP1=0, select bank0
  7269  035C  00C2               	movwf	trapmf@x+2
  7270  035D  3000               	movlw	0
  7271  035E  00C3               	movwf	trapmf@a
  7272  035F  30A0               	movlw	160
  7273  0360  00C4               	movwf	trapmf@a+1
  7274  0361  3040               	movlw	64
  7275  0362  00C5               	movwf	trapmf@a+2
  7276  0363  3000               	movlw	0
  7277  0364  00C6               	movwf	trapmf@b
  7278  0365  3020               	movlw	32
  7279  0366  00C7               	movwf	trapmf@b+1
  7280  0367  3041               	movlw	65
  7281  0368  00C8               	movwf	trapmf@b+2
  7282  0369  3000               	movlw	0
  7283  036A  00C9               	movwf	trapmf@c
  7284  036B  3070               	movlw	112
  7285  036C  00CA               	movwf	trapmf@c+1
  7286  036D  3041               	movlw	65
  7287  036E  00CB               	movwf	trapmf@c+2
  7288  036F  3000               	movlw	0
  7289  0370  00CC               	movwf	trapmf@d
  7290  0371  3080               	movlw	128
  7291  0372  00CD               	movwf	trapmf@d+1
  7292  0373  3041               	movlw	65
  7293  0374  00CE               	movwf	trapmf@d+2
  7294  0375  120A  158A  26AA  120A  118A  	fcall	_trapmf
  7295  037A  1283               	bcf	3,5	;RP0=0, select bank0
  7296  037B  1303               	bcf	3,6	;RP1=0, select bank0
  7297  037C  0840               	movf	?_trapmf,w
  7298  037D  1783               	bsf	3,7	;select IRP bank2
  7299  037E  0080               	movwf	0
  7300  037F  0A84               	incf	4,f
  7301  0380  0841               	movf	?_trapmf+1,w
  7302  0381  0080               	movwf	0
  7303  0382  0A84               	incf	4,f
  7304  0383  0842               	movf	?_trapmf+2,w
  7305  0384  0080               	movwf	0
  7306                           
  7307                           ;main.c: 239: if (rGrande[a] >= rule)
  7308  0385  3003               	movlw	3
  7309  0386  00E2               	movwf	??_ISR
  7310  0387  0862               	movf	??_ISR,w
  7311  0388  00F0               	movwf	___bmul@multiplicand
  7312  0389  1683               	bsf	3,5	;RP0=1, select bank1
  7313  038A  1303               	bcf	3,6	;RP1=0, select bank1
  7314  038B  0836               	movf	ISR@a_213^(0+128),w
  7315  038C  160A  118A  2279  120A  118A  	fcall	___bmul
  7316  0391  3E10               	addlw	_rGrande& (0+255)
  7317  0392  0084               	movwf	4
  7318  0393  1783               	bsf	3,7	;select IRP bank2
  7319  0394  0800               	movf	0,w
  7320  0395  00F4               	movwf	___ftge@ff1
  7321  0396  0A84               	incf	4,f
  7322  0397  0800               	movf	0,w
  7323  0398  00F5               	movwf	___ftge@ff1+1
  7324  0399  0A84               	incf	4,f
  7325  039A  0800               	movf	0,w
  7326  039B  00F6               	movwf	___ftge@ff1+2
  7327  039C  1683               	bsf	3,5	;RP0=1, select bank1
  7328  039D  1303               	bcf	3,6	;RP1=0, select bank1
  7329  039E  083B               	movf	ISR@rule^(0+128),w
  7330  039F  00F7               	movwf	___ftge@ff2
  7331  03A0  083C               	movf	(ISR@rule+1)^(0+128),w
  7332  03A1  00F8               	movwf	___ftge@ff2+1
  7333  03A2  083D               	movf	(ISR@rule+2)^(0+128),w
  7334  03A3  00F9               	movwf	___ftge@ff2+2
  7335  03A4  160A  118A  248E  120A  118A  	fcall	___ftge
  7336  03A9  1C03               	btfss	3,0
  7337  03AA  2BC6               	goto	i1l3591
  7338                           
  7339                           ;main.c: 240: {
  7340                           ;main.c: 241: rGrande[a] = rule;
  7341  03AB  3003               	movlw	3
  7342  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  7343  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  7344  03AE  00E2               	movwf	??_ISR
  7345  03AF  0862               	movf	??_ISR,w
  7346  03B0  00F0               	movwf	___bmul@multiplicand
  7347  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  7348  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  7349  03B3  0836               	movf	ISR@a_213^(0+128),w
  7350  03B4  160A  118A  2279  120A  118A  	fcall	___bmul
  7351  03B9  3E10               	addlw	_rGrande& (0+255)
  7352  03BA  0084               	movwf	4
  7353  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  7354  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  7355  03BD  083B               	movf	ISR@rule^(0+128),w
  7356  03BE  1783               	bsf	3,7	;select IRP bank2
  7357  03BF  0080               	movwf	0
  7358  03C0  0A84               	incf	4,f
  7359  03C1  083C               	movf	(ISR@rule+1)^(0+128),w
  7360  03C2  0080               	movwf	0
  7361  03C3  0A84               	incf	4,f
  7362  03C4  083D               	movf	(ISR@rule+2)^(0+128),w
  7363  03C5  0080               	movwf	0
  7364  03C6                     i1l3591:	
  7365                           
  7366                           ;main.c: 242: }
  7367                           ;main.c: 244: x += 1;
  7368  03C6  3000               	movlw	0
  7369  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  7370  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  7371  03C9  00A3               	movwf	___ftadd@f1
  7372  03CA  3080               	movlw	128
  7373  03CB  00A4               	movwf	___ftadd@f1+1
  7374  03CC  303F               	movlw	63
  7375  03CD  00A5               	movwf	___ftadd@f1+2
  7376  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  7377  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  7378  03D0  0842               	movf	ISR@x^(0+128),w
  7379  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  7380  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  7381  03D3  00A6               	movwf	___ftadd@f2
  7382  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  7383  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  7384  03D6  0843               	movf	(ISR@x+1)^(0+128),w
  7385  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  7386  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  7387  03D9  00A7               	movwf	___ftadd@f2+1
  7388  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  7389  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  7390  03DC  0844               	movf	(ISR@x+2)^(0+128),w
  7391  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  7392  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  7393  03DF  00A8               	movwf	___ftadd@f2+2
  7394  03E0  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7395  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  7396  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  7397  03E7  0823               	movf	?___ftadd,w
  7398  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  7399  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  7400  03EA  00C2               	movwf	ISR@x^(0+128)
  7401  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  7402  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  7403  03ED  0824               	movf	?___ftadd+1,w
  7404  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  7405  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  7406  03F0  00C3               	movwf	(ISR@x+1)^(0+128)
  7407  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  7408  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  7409  03F3  0825               	movf	?___ftadd+2,w
  7410  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  7411  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  7412  03F6  00C4               	movwf	(ISR@x+2)^(0+128)
  7413  03F7  3001               	movlw	1
  7414  03F8  07B6               	addwf	ISR@a_213^(0+128),f
  7415  03F9  1803               	skipnc
  7416  03FA  0AB7               	incf	(ISR@a_213+1)^(0+128),f
  7417  03FB  3000               	movlw	0
  7418  03FC  07B7               	addwf	(ISR@a_213+1)^(0+128),f
  7419  03FD  0837               	movf	(ISR@a_213+1)^(0+128),w
  7420  03FE  3A80               	xorlw	128
  7421  03FF  00FF               	movwf	127
  7422  0400  3080               	movlw	128
  7423  0401  027F               	subwf	127,w
  7424  0402  1D03               	skipz
  7425  0403  2C06               	goto	u485_25
  7426  0404  3010               	movlw	16
  7427  0405  0236               	subwf	ISR@a_213^(0+128),w
  7428  0406                     u485_25:	
  7429  0406  1C03               	skipc
  7430  0407  2B3B               	goto	i1l3587
  7431  0408                     i1l3597:	
  7432                           
  7433                           ;main.c: 245: }
  7434                           ;main.c: 246: }
  7435                           ;main.c: 249: x = 0;
  7436  0408  3000               	movlw	0
  7437  0409  1683               	bsf	3,5	;RP0=1, select bank1
  7438  040A  1303               	bcf	3,6	;RP1=0, select bank1
  7439  040B  00C2               	movwf	ISR@x^(0+128)
  7440  040C  3000               	movlw	0
  7441  040D  00C3               	movwf	(ISR@x+1)^(0+128)
  7442  040E  3000               	movlw	0
  7443  040F  00C4               	movwf	(ISR@x+2)^(0+128)
  7444                           
  7445                           ;main.c: 250: float total_area = 0;
  7446  0410  3000               	movlw	0
  7447  0411  00B8               	movwf	ISR@total_area^(0+128)
  7448  0412  3000               	movlw	0
  7449  0413  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7450  0414  3000               	movlw	0
  7451  0415  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7452                           
  7453                           ;main.c: 251: float soma = 0;
  7454  0416  3000               	movlw	0
  7455  0417  00AD               	movwf	ISR@soma^(0+128)
  7456  0418  3000               	movlw	0
  7457  0419  00AE               	movwf	(ISR@soma+1)^(0+128)
  7458  041A  3000               	movlw	0
  7459  041B  00AF               	movwf	(ISR@soma+2)^(0+128)
  7460                           
  7461                           ;main.c: 252: for (int a = 0; a <= 15; a++)
  7462  041C  01BE               	clrf	ISR@a_216^(0+128)
  7463  041D  01BF               	clrf	(ISR@a_216+1)^(0+128)
  7464  041E  083F               	movf	(ISR@a_216+1)^(0+128),w
  7465  041F  3A80               	xorlw	128
  7466  0420  00FF               	movwf	127
  7467  0421  3080               	movlw	128
  7468  0422  027F               	subwf	127,w
  7469  0423  1D03               	skipz
  7470  0424  2C27               	goto	u486_25
  7471  0425  3010               	movlw	16
  7472  0426  023E               	subwf	ISR@a_216^(0+128),w
  7473  0427                     u486_25:	
  7474  0427  1803               	btfsc	3,0
  7475  0428  2EA3               	goto	i1l3627
  7476  0429                     i1l123:	
  7477                           
  7478                           ;main.c: 253: {
  7479                           ;main.c: 254: if (a >= 0 && a <= 5)
  7480  0429  1683               	bsf	3,5	;RP0=1, select bank1
  7481  042A  1303               	bcf	3,6	;RP1=0, select bank1
  7482  042B  1BBF               	btfsc	(ISR@a_216+1)^(0+128),7
  7483  042C  2CDF               	goto	i1l3609
  7484  042D  083F               	movf	(ISR@a_216+1)^(0+128),w
  7485  042E  3A80               	xorlw	128
  7486  042F  00FF               	movwf	127
  7487  0430  3080               	movlw	128
  7488  0431  027F               	subwf	127,w
  7489  0432  1D03               	skipz
  7490  0433  2C36               	goto	u488_25
  7491  0434  3006               	movlw	6
  7492  0435  023E               	subwf	ISR@a_216^(0+128),w
  7493  0436                     u488_25:	
  7494  0436  1803               	skipnc
  7495  0437  2CDF               	goto	i1l3609
  7496                           
  7497                           ;main.c: 255: {
  7498                           ;main.c: 256: total_area += rBaixo[a];
  7499  0438  3003               	movlw	3
  7500  0439  1283               	bcf	3,5	;RP0=0, select bank0
  7501  043A  1303               	bcf	3,6	;RP1=0, select bank0
  7502  043B  00E2               	movwf	??_ISR
  7503  043C  0862               	movf	??_ISR,w
  7504  043D  00F0               	movwf	___bmul@multiplicand
  7505  043E  1683               	bsf	3,5	;RP0=1, select bank1
  7506  043F  1303               	bcf	3,6	;RP1=0, select bank1
  7507  0440  083E               	movf	ISR@a_216^(0+128),w
  7508  0441  160A  118A  2279  120A  118A  	fcall	___bmul
  7509  0446  3E90               	addlw	_rBaixo& (0+255)
  7510  0447  0084               	movwf	4
  7511  0448  1783               	bsf	3,7	;select IRP bank3
  7512  0449  0800               	movf	0,w
  7513  044A  1283               	bcf	3,5	;RP0=0, select bank0
  7514  044B  1303               	bcf	3,6	;RP1=0, select bank0
  7515  044C  00A3               	movwf	___ftadd@f1
  7516  044D  0A84               	incf	4,f
  7517  044E  0800               	movf	0,w
  7518  044F  00A4               	movwf	___ftadd@f1+1
  7519  0450  0A84               	incf	4,f
  7520  0451  0800               	movf	0,w
  7521  0452  00A5               	movwf	___ftadd@f1+2
  7522  0453  1683               	bsf	3,5	;RP0=1, select bank1
  7523  0454  1303               	bcf	3,6	;RP1=0, select bank1
  7524  0455  0838               	movf	ISR@total_area^(0+128),w
  7525  0456  1283               	bcf	3,5	;RP0=0, select bank0
  7526  0457  1303               	bcf	3,6	;RP1=0, select bank0
  7527  0458  00A6               	movwf	___ftadd@f2
  7528  0459  1683               	bsf	3,5	;RP0=1, select bank1
  7529  045A  1303               	bcf	3,6	;RP1=0, select bank1
  7530  045B  0839               	movf	(ISR@total_area+1)^(0+128),w
  7531  045C  1283               	bcf	3,5	;RP0=0, select bank0
  7532  045D  1303               	bcf	3,6	;RP1=0, select bank0
  7533  045E  00A7               	movwf	___ftadd@f2+1
  7534  045F  1683               	bsf	3,5	;RP0=1, select bank1
  7535  0460  1303               	bcf	3,6	;RP1=0, select bank1
  7536  0461  083A               	movf	(ISR@total_area+2)^(0+128),w
  7537  0462  1283               	bcf	3,5	;RP0=0, select bank0
  7538  0463  1303               	bcf	3,6	;RP1=0, select bank0
  7539  0464  00A8               	movwf	___ftadd@f2+2
  7540  0465  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7541  046A  1283               	bcf	3,5	;RP0=0, select bank0
  7542  046B  1303               	bcf	3,6	;RP1=0, select bank0
  7543  046C  0823               	movf	?___ftadd,w
  7544  046D  1683               	bsf	3,5	;RP0=1, select bank1
  7545  046E  1303               	bcf	3,6	;RP1=0, select bank1
  7546  046F  00B8               	movwf	ISR@total_area^(0+128)
  7547  0470  1283               	bcf	3,5	;RP0=0, select bank0
  7548  0471  1303               	bcf	3,6	;RP1=0, select bank0
  7549  0472  0824               	movf	?___ftadd+1,w
  7550  0473  1683               	bsf	3,5	;RP0=1, select bank1
  7551  0474  1303               	bcf	3,6	;RP1=0, select bank1
  7552  0475  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7553  0476  1283               	bcf	3,5	;RP0=0, select bank0
  7554  0477  1303               	bcf	3,6	;RP1=0, select bank0
  7555  0478  0825               	movf	?___ftadd+2,w
  7556  0479  1683               	bsf	3,5	;RP0=1, select bank1
  7557  047A  1303               	bcf	3,6	;RP1=0, select bank1
  7558  047B  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7559                           
  7560                           ;main.c: 257: soma += (x * rBaixo[a]);
  7561  047C  3003               	movlw	3
  7562  047D  1283               	bcf	3,5	;RP0=0, select bank0
  7563  047E  1303               	bcf	3,6	;RP1=0, select bank0
  7564  047F  00E2               	movwf	??_ISR
  7565  0480  0862               	movf	??_ISR,w
  7566  0481  00F0               	movwf	___bmul@multiplicand
  7567  0482  1683               	bsf	3,5	;RP0=1, select bank1
  7568  0483  1303               	bcf	3,6	;RP1=0, select bank1
  7569  0484  083E               	movf	ISR@a_216^(0+128),w
  7570  0485  160A  118A  2279  120A  118A  	fcall	___bmul
  7571  048A  3E90               	addlw	_rBaixo& (0+255)
  7572  048B  0084               	movwf	4
  7573  048C  1783               	bsf	3,7	;select IRP bank3
  7574  048D  0800               	movf	0,w
  7575  048E  1283               	bcf	3,5	;RP0=0, select bank0
  7576  048F  1303               	bcf	3,6	;RP1=0, select bank0
  7577  0490  00D5               	movwf	___ftmul@f2
  7578  0491  0A84               	incf	4,f
  7579  0492  0800               	movf	0,w
  7580  0493  00D6               	movwf	___ftmul@f2+1
  7581  0494  0A84               	incf	4,f
  7582  0495  0800               	movf	0,w
  7583  0496  00D7               	movwf	___ftmul@f2+2
  7584  0497  1683               	bsf	3,5	;RP0=1, select bank1
  7585  0498  1303               	bcf	3,6	;RP1=0, select bank1
  7586  0499  0842               	movf	ISR@x^(0+128),w
  7587  049A  1283               	bcf	3,5	;RP0=0, select bank0
  7588  049B  1303               	bcf	3,6	;RP1=0, select bank0
  7589  049C  00D2               	movwf	___ftmul@f1
  7590  049D  1683               	bsf	3,5	;RP0=1, select bank1
  7591  049E  1303               	bcf	3,6	;RP1=0, select bank1
  7592  049F  0843               	movf	(ISR@x+1)^(0+128),w
  7593  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  7594  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  7595  04A2  00D3               	movwf	___ftmul@f1+1
  7596  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  7597  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  7598  04A5  0844               	movf	(ISR@x+2)^(0+128),w
  7599  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  7600  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  7601  04A8  00D4               	movwf	___ftmul@f1+2
  7602  04A9  120A  158A  24CE  120A  118A  	fcall	___ftmul
  7603  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  7604  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  7605  04B0  0852               	movf	?___ftmul,w
  7606  04B1  00A3               	movwf	___ftadd@f1
  7607  04B2  0853               	movf	?___ftmul+1,w
  7608  04B3  00A4               	movwf	___ftadd@f1+1
  7609  04B4  0854               	movf	?___ftmul+2,w
  7610  04B5  00A5               	movwf	___ftadd@f1+2
  7611  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  7612  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  7613  04B8  082D               	movf	ISR@soma^(0+128),w
  7614  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  7615  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  7616  04BB  00A6               	movwf	___ftadd@f2
  7617  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  7618  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  7619  04BE  082E               	movf	(ISR@soma+1)^(0+128),w
  7620  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  7621  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  7622  04C1  00A7               	movwf	___ftadd@f2+1
  7623  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  7624  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  7625  04C4  082F               	movf	(ISR@soma+2)^(0+128),w
  7626  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  7627  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  7628  04C7  00A8               	movwf	___ftadd@f2+2
  7629  04C8  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7630  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  7631  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  7632  04CF  0823               	movf	?___ftadd,w
  7633  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  7634  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  7635  04D2  00AD               	movwf	ISR@soma^(0+128)
  7636  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  7637  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  7638  04D5  0824               	movf	?___ftadd+1,w
  7639  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  7640  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  7641  04D8  00AE               	movwf	(ISR@soma+1)^(0+128)
  7642  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  7643  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  7644  04DB  0825               	movf	?___ftadd+2,w
  7645  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  7646  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  7647  04DE  00AF               	movwf	(ISR@soma+2)^(0+128)
  7648  04DF                     i1l3609:	
  7649                           
  7650                           ;main.c: 258: }
  7651                           ;main.c: 260: if (a >= 5 && a <= 10)
  7652  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  7653  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  7654  04E1  083F               	movf	(ISR@a_216+1)^(0+128),w
  7655  04E2  3A80               	xorlw	128
  7656  04E3  00FF               	movwf	127
  7657  04E4  3080               	movlw	128
  7658  04E5  027F               	subwf	127,w
  7659  04E6  1D03               	skipz
  7660  04E7  2CEA               	goto	u489_25
  7661  04E8  3005               	movlw	5
  7662  04E9  023E               	subwf	ISR@a_216^(0+128),w
  7663  04EA                     u489_25:	
  7664  04EA  1C03               	skipc
  7665  04EB  2DA0               	goto	i1l3615
  7666  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  7667  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  7668  04EE  083F               	movf	(ISR@a_216+1)^(0+128),w
  7669  04EF  3A80               	xorlw	128
  7670  04F0  00FF               	movwf	127
  7671  04F1  3080               	movlw	128
  7672  04F2  027F               	subwf	127,w
  7673  04F3  1D03               	skipz
  7674  04F4  2CF7               	goto	u490_25
  7675  04F5  300B               	movlw	11
  7676  04F6  023E               	subwf	ISR@a_216^(0+128),w
  7677  04F7                     u490_25:	
  7678  04F7  1803               	skipnc
  7679  04F8  2DA0               	goto	i1l3615
  7680                           
  7681                           ;main.c: 261: {
  7682                           ;main.c: 262: total_area += rMedio[a];
  7683  04F9  3003               	movlw	3
  7684  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  7685  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  7686  04FC  00E2               	movwf	??_ISR
  7687  04FD  0862               	movf	??_ISR,w
  7688  04FE  00F0               	movwf	___bmul@multiplicand
  7689  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  7690  0500  1303               	bcf	3,6	;RP1=0, select bank1
  7691  0501  083E               	movf	ISR@a_216^(0+128),w
  7692  0502  160A  118A  2279  120A  118A  	fcall	___bmul
  7693  0507  3E40               	addlw	_rMedio& (0+255)
  7694  0508  0084               	movwf	4
  7695  0509  1783               	bsf	3,7	;select IRP bank2
  7696  050A  0800               	movf	0,w
  7697  050B  1283               	bcf	3,5	;RP0=0, select bank0
  7698  050C  1303               	bcf	3,6	;RP1=0, select bank0
  7699  050D  00A3               	movwf	___ftadd@f1
  7700  050E  0A84               	incf	4,f
  7701  050F  0800               	movf	0,w
  7702  0510  00A4               	movwf	___ftadd@f1+1
  7703  0511  0A84               	incf	4,f
  7704  0512  0800               	movf	0,w
  7705  0513  00A5               	movwf	___ftadd@f1+2
  7706  0514  1683               	bsf	3,5	;RP0=1, select bank1
  7707  0515  1303               	bcf	3,6	;RP1=0, select bank1
  7708  0516  0838               	movf	ISR@total_area^(0+128),w
  7709  0517  1283               	bcf	3,5	;RP0=0, select bank0
  7710  0518  1303               	bcf	3,6	;RP1=0, select bank0
  7711  0519  00A6               	movwf	___ftadd@f2
  7712  051A  1683               	bsf	3,5	;RP0=1, select bank1
  7713  051B  1303               	bcf	3,6	;RP1=0, select bank1
  7714  051C  0839               	movf	(ISR@total_area+1)^(0+128),w
  7715  051D  1283               	bcf	3,5	;RP0=0, select bank0
  7716  051E  1303               	bcf	3,6	;RP1=0, select bank0
  7717  051F  00A7               	movwf	___ftadd@f2+1
  7718  0520  1683               	bsf	3,5	;RP0=1, select bank1
  7719  0521  1303               	bcf	3,6	;RP1=0, select bank1
  7720  0522  083A               	movf	(ISR@total_area+2)^(0+128),w
  7721  0523  1283               	bcf	3,5	;RP0=0, select bank0
  7722  0524  1303               	bcf	3,6	;RP1=0, select bank0
  7723  0525  00A8               	movwf	___ftadd@f2+2
  7724  0526  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7725  052B  1283               	bcf	3,5	;RP0=0, select bank0
  7726  052C  1303               	bcf	3,6	;RP1=0, select bank0
  7727  052D  0823               	movf	?___ftadd,w
  7728  052E  1683               	bsf	3,5	;RP0=1, select bank1
  7729  052F  1303               	bcf	3,6	;RP1=0, select bank1
  7730  0530  00B8               	movwf	ISR@total_area^(0+128)
  7731  0531  1283               	bcf	3,5	;RP0=0, select bank0
  7732  0532  1303               	bcf	3,6	;RP1=0, select bank0
  7733  0533  0824               	movf	?___ftadd+1,w
  7734  0534  1683               	bsf	3,5	;RP0=1, select bank1
  7735  0535  1303               	bcf	3,6	;RP1=0, select bank1
  7736  0536  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7737  0537  1283               	bcf	3,5	;RP0=0, select bank0
  7738  0538  1303               	bcf	3,6	;RP1=0, select bank0
  7739  0539  0825               	movf	?___ftadd+2,w
  7740  053A  1683               	bsf	3,5	;RP0=1, select bank1
  7741  053B  1303               	bcf	3,6	;RP1=0, select bank1
  7742  053C  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7743                           
  7744                           ;main.c: 263: soma += (x * rMedio[a]);
  7745  053D  3003               	movlw	3
  7746  053E  1283               	bcf	3,5	;RP0=0, select bank0
  7747  053F  1303               	bcf	3,6	;RP1=0, select bank0
  7748  0540  00E2               	movwf	??_ISR
  7749  0541  0862               	movf	??_ISR,w
  7750  0542  00F0               	movwf	___bmul@multiplicand
  7751  0543  1683               	bsf	3,5	;RP0=1, select bank1
  7752  0544  1303               	bcf	3,6	;RP1=0, select bank1
  7753  0545  083E               	movf	ISR@a_216^(0+128),w
  7754  0546  160A  118A  2279  120A  118A  	fcall	___bmul
  7755  054B  3E40               	addlw	_rMedio& (0+255)
  7756  054C  0084               	movwf	4
  7757  054D  1783               	bsf	3,7	;select IRP bank2
  7758  054E  0800               	movf	0,w
  7759  054F  1283               	bcf	3,5	;RP0=0, select bank0
  7760  0550  1303               	bcf	3,6	;RP1=0, select bank0
  7761  0551  00D5               	movwf	___ftmul@f2
  7762  0552  0A84               	incf	4,f
  7763  0553  0800               	movf	0,w
  7764  0554  00D6               	movwf	___ftmul@f2+1
  7765  0555  0A84               	incf	4,f
  7766  0556  0800               	movf	0,w
  7767  0557  00D7               	movwf	___ftmul@f2+2
  7768  0558  1683               	bsf	3,5	;RP0=1, select bank1
  7769  0559  1303               	bcf	3,6	;RP1=0, select bank1
  7770  055A  0842               	movf	ISR@x^(0+128),w
  7771  055B  1283               	bcf	3,5	;RP0=0, select bank0
  7772  055C  1303               	bcf	3,6	;RP1=0, select bank0
  7773  055D  00D2               	movwf	___ftmul@f1
  7774  055E  1683               	bsf	3,5	;RP0=1, select bank1
  7775  055F  1303               	bcf	3,6	;RP1=0, select bank1
  7776  0560  0843               	movf	(ISR@x+1)^(0+128),w
  7777  0561  1283               	bcf	3,5	;RP0=0, select bank0
  7778  0562  1303               	bcf	3,6	;RP1=0, select bank0
  7779  0563  00D3               	movwf	___ftmul@f1+1
  7780  0564  1683               	bsf	3,5	;RP0=1, select bank1
  7781  0565  1303               	bcf	3,6	;RP1=0, select bank1
  7782  0566  0844               	movf	(ISR@x+2)^(0+128),w
  7783  0567  1283               	bcf	3,5	;RP0=0, select bank0
  7784  0568  1303               	bcf	3,6	;RP1=0, select bank0
  7785  0569  00D4               	movwf	___ftmul@f1+2
  7786  056A  120A  158A  24CE  120A  118A  	fcall	___ftmul
  7787  056F  1283               	bcf	3,5	;RP0=0, select bank0
  7788  0570  1303               	bcf	3,6	;RP1=0, select bank0
  7789  0571  0852               	movf	?___ftmul,w
  7790  0572  00A3               	movwf	___ftadd@f1
  7791  0573  0853               	movf	?___ftmul+1,w
  7792  0574  00A4               	movwf	___ftadd@f1+1
  7793  0575  0854               	movf	?___ftmul+2,w
  7794  0576  00A5               	movwf	___ftadd@f1+2
  7795  0577  1683               	bsf	3,5	;RP0=1, select bank1
  7796  0578  1303               	bcf	3,6	;RP1=0, select bank1
  7797  0579  082D               	movf	ISR@soma^(0+128),w
  7798  057A  1283               	bcf	3,5	;RP0=0, select bank0
  7799  057B  1303               	bcf	3,6	;RP1=0, select bank0
  7800  057C  00A6               	movwf	___ftadd@f2
  7801  057D  1683               	bsf	3,5	;RP0=1, select bank1
  7802  057E  1303               	bcf	3,6	;RP1=0, select bank1
  7803  057F  082E               	movf	(ISR@soma+1)^(0+128),w
  7804  0580  1283               	bcf	3,5	;RP0=0, select bank0
  7805  0581  1303               	bcf	3,6	;RP1=0, select bank0
  7806  0582  00A7               	movwf	___ftadd@f2+1
  7807  0583  1683               	bsf	3,5	;RP0=1, select bank1
  7808  0584  1303               	bcf	3,6	;RP1=0, select bank1
  7809  0585  082F               	movf	(ISR@soma+2)^(0+128),w
  7810  0586  1283               	bcf	3,5	;RP0=0, select bank0
  7811  0587  1303               	bcf	3,6	;RP1=0, select bank0
  7812  0588  00A8               	movwf	___ftadd@f2+2
  7813  0589  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7814  058E  1283               	bcf	3,5	;RP0=0, select bank0
  7815  058F  1303               	bcf	3,6	;RP1=0, select bank0
  7816  0590  0823               	movf	?___ftadd,w
  7817  0591  1683               	bsf	3,5	;RP0=1, select bank1
  7818  0592  1303               	bcf	3,6	;RP1=0, select bank1
  7819  0593  00AD               	movwf	ISR@soma^(0+128)
  7820  0594  1283               	bcf	3,5	;RP0=0, select bank0
  7821  0595  1303               	bcf	3,6	;RP1=0, select bank0
  7822  0596  0824               	movf	?___ftadd+1,w
  7823  0597  1683               	bsf	3,5	;RP0=1, select bank1
  7824  0598  1303               	bcf	3,6	;RP1=0, select bank1
  7825  0599  00AE               	movwf	(ISR@soma+1)^(0+128)
  7826  059A  1283               	bcf	3,5	;RP0=0, select bank0
  7827  059B  1303               	bcf	3,6	;RP1=0, select bank0
  7828  059C  0825               	movf	?___ftadd+2,w
  7829  059D  1683               	bsf	3,5	;RP0=1, select bank1
  7830  059E  1303               	bcf	3,6	;RP1=0, select bank1
  7831  059F  00AF               	movwf	(ISR@soma+2)^(0+128)
  7832  05A0                     i1l3615:	
  7833                           
  7834                           ;main.c: 264: }
  7835                           ;main.c: 266: if (a >= 10 && a <= 15)
  7836  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  7837  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  7838  05A2  083F               	movf	(ISR@a_216+1)^(0+128),w
  7839  05A3  3A80               	xorlw	128
  7840  05A4  00FF               	movwf	127
  7841  05A5  3080               	movlw	128
  7842  05A6  027F               	subwf	127,w
  7843  05A7  1D03               	skipz
  7844  05A8  2DAB               	goto	u491_25
  7845  05A9  300A               	movlw	10
  7846  05AA  023E               	subwf	ISR@a_216^(0+128),w
  7847  05AB                     u491_25:	
  7848  05AB  1C03               	skipc
  7849  05AC  2E61               	goto	i1l3621
  7850  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  7851  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  7852  05AF  083F               	movf	(ISR@a_216+1)^(0+128),w
  7853  05B0  3A80               	xorlw	128
  7854  05B1  00FF               	movwf	127
  7855  05B2  3080               	movlw	128
  7856  05B3  027F               	subwf	127,w
  7857  05B4  1D03               	skipz
  7858  05B5  2DB8               	goto	u492_25
  7859  05B6  3010               	movlw	16
  7860  05B7  023E               	subwf	ISR@a_216^(0+128),w
  7861  05B8                     u492_25:	
  7862  05B8  1803               	skipnc
  7863  05B9  2E61               	goto	i1l3621
  7864                           
  7865                           ;main.c: 267: {
  7866                           ;main.c: 268: total_area += rGrande[a];
  7867  05BA  3003               	movlw	3
  7868  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  7869  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  7870  05BD  00E2               	movwf	??_ISR
  7871  05BE  0862               	movf	??_ISR,w
  7872  05BF  00F0               	movwf	___bmul@multiplicand
  7873  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  7874  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  7875  05C2  083E               	movf	ISR@a_216^(0+128),w
  7876  05C3  160A  118A  2279  120A  118A  	fcall	___bmul
  7877  05C8  3E10               	addlw	_rGrande& (0+255)
  7878  05C9  0084               	movwf	4
  7879  05CA  1783               	bsf	3,7	;select IRP bank2
  7880  05CB  0800               	movf	0,w
  7881  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  7882  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  7883  05CE  00A3               	movwf	___ftadd@f1
  7884  05CF  0A84               	incf	4,f
  7885  05D0  0800               	movf	0,w
  7886  05D1  00A4               	movwf	___ftadd@f1+1
  7887  05D2  0A84               	incf	4,f
  7888  05D3  0800               	movf	0,w
  7889  05D4  00A5               	movwf	___ftadd@f1+2
  7890  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  7891  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  7892  05D7  0838               	movf	ISR@total_area^(0+128),w
  7893  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  7894  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  7895  05DA  00A6               	movwf	___ftadd@f2
  7896  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  7897  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  7898  05DD  0839               	movf	(ISR@total_area+1)^(0+128),w
  7899  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  7900  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  7901  05E0  00A7               	movwf	___ftadd@f2+1
  7902  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  7903  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  7904  05E3  083A               	movf	(ISR@total_area+2)^(0+128),w
  7905  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  7906  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  7907  05E6  00A8               	movwf	___ftadd@f2+2
  7908  05E7  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7909  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  7910  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  7911  05EE  0823               	movf	?___ftadd,w
  7912  05EF  1683               	bsf	3,5	;RP0=1, select bank1
  7913  05F0  1303               	bcf	3,6	;RP1=0, select bank1
  7914  05F1  00B8               	movwf	ISR@total_area^(0+128)
  7915  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  7916  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  7917  05F4  0824               	movf	?___ftadd+1,w
  7918  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  7919  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  7920  05F7  00B9               	movwf	(ISR@total_area+1)^(0+128)
  7921  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  7922  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  7923  05FA  0825               	movf	?___ftadd+2,w
  7924  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  7925  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  7926  05FD  00BA               	movwf	(ISR@total_area+2)^(0+128)
  7927                           
  7928                           ;main.c: 269: soma += (x * rGrande[a]);
  7929  05FE  3003               	movlw	3
  7930  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  7931  0600  1303               	bcf	3,6	;RP1=0, select bank0
  7932  0601  00E2               	movwf	??_ISR
  7933  0602  0862               	movf	??_ISR,w
  7934  0603  00F0               	movwf	___bmul@multiplicand
  7935  0604  1683               	bsf	3,5	;RP0=1, select bank1
  7936  0605  1303               	bcf	3,6	;RP1=0, select bank1
  7937  0606  083E               	movf	ISR@a_216^(0+128),w
  7938  0607  160A  118A  2279  120A  118A  	fcall	___bmul
  7939  060C  3E10               	addlw	_rGrande& (0+255)
  7940  060D  0084               	movwf	4
  7941  060E  1783               	bsf	3,7	;select IRP bank2
  7942  060F  0800               	movf	0,w
  7943  0610  1283               	bcf	3,5	;RP0=0, select bank0
  7944  0611  1303               	bcf	3,6	;RP1=0, select bank0
  7945  0612  00D5               	movwf	___ftmul@f2
  7946  0613  0A84               	incf	4,f
  7947  0614  0800               	movf	0,w
  7948  0615  00D6               	movwf	___ftmul@f2+1
  7949  0616  0A84               	incf	4,f
  7950  0617  0800               	movf	0,w
  7951  0618  00D7               	movwf	___ftmul@f2+2
  7952  0619  1683               	bsf	3,5	;RP0=1, select bank1
  7953  061A  1303               	bcf	3,6	;RP1=0, select bank1
  7954  061B  0842               	movf	ISR@x^(0+128),w
  7955  061C  1283               	bcf	3,5	;RP0=0, select bank0
  7956  061D  1303               	bcf	3,6	;RP1=0, select bank0
  7957  061E  00D2               	movwf	___ftmul@f1
  7958  061F  1683               	bsf	3,5	;RP0=1, select bank1
  7959  0620  1303               	bcf	3,6	;RP1=0, select bank1
  7960  0621  0843               	movf	(ISR@x+1)^(0+128),w
  7961  0622  1283               	bcf	3,5	;RP0=0, select bank0
  7962  0623  1303               	bcf	3,6	;RP1=0, select bank0
  7963  0624  00D3               	movwf	___ftmul@f1+1
  7964  0625  1683               	bsf	3,5	;RP0=1, select bank1
  7965  0626  1303               	bcf	3,6	;RP1=0, select bank1
  7966  0627  0844               	movf	(ISR@x+2)^(0+128),w
  7967  0628  1283               	bcf	3,5	;RP0=0, select bank0
  7968  0629  1303               	bcf	3,6	;RP1=0, select bank0
  7969  062A  00D4               	movwf	___ftmul@f1+2
  7970  062B  120A  158A  24CE  120A  118A  	fcall	___ftmul
  7971  0630  1283               	bcf	3,5	;RP0=0, select bank0
  7972  0631  1303               	bcf	3,6	;RP1=0, select bank0
  7973  0632  0852               	movf	?___ftmul,w
  7974  0633  00A3               	movwf	___ftadd@f1
  7975  0634  0853               	movf	?___ftmul+1,w
  7976  0635  00A4               	movwf	___ftadd@f1+1
  7977  0636  0854               	movf	?___ftmul+2,w
  7978  0637  00A5               	movwf	___ftadd@f1+2
  7979  0638  1683               	bsf	3,5	;RP0=1, select bank1
  7980  0639  1303               	bcf	3,6	;RP1=0, select bank1
  7981  063A  082D               	movf	ISR@soma^(0+128),w
  7982  063B  1283               	bcf	3,5	;RP0=0, select bank0
  7983  063C  1303               	bcf	3,6	;RP1=0, select bank0
  7984  063D  00A6               	movwf	___ftadd@f2
  7985  063E  1683               	bsf	3,5	;RP0=1, select bank1
  7986  063F  1303               	bcf	3,6	;RP1=0, select bank1
  7987  0640  082E               	movf	(ISR@soma+1)^(0+128),w
  7988  0641  1283               	bcf	3,5	;RP0=0, select bank0
  7989  0642  1303               	bcf	3,6	;RP1=0, select bank0
  7990  0643  00A7               	movwf	___ftadd@f2+1
  7991  0644  1683               	bsf	3,5	;RP0=1, select bank1
  7992  0645  1303               	bcf	3,6	;RP1=0, select bank1
  7993  0646  082F               	movf	(ISR@soma+2)^(0+128),w
  7994  0647  1283               	bcf	3,5	;RP0=0, select bank0
  7995  0648  1303               	bcf	3,6	;RP1=0, select bank0
  7996  0649  00A8               	movwf	___ftadd@f2+2
  7997  064A  120A  158A  25A1  120A  118A  	fcall	___ftadd
  7998  064F  1283               	bcf	3,5	;RP0=0, select bank0
  7999  0650  1303               	bcf	3,6	;RP1=0, select bank0
  8000  0651  0823               	movf	?___ftadd,w
  8001  0652  1683               	bsf	3,5	;RP0=1, select bank1
  8002  0653  1303               	bcf	3,6	;RP1=0, select bank1
  8003  0654  00AD               	movwf	ISR@soma^(0+128)
  8004  0655  1283               	bcf	3,5	;RP0=0, select bank0
  8005  0656  1303               	bcf	3,6	;RP1=0, select bank0
  8006  0657  0824               	movf	?___ftadd+1,w
  8007  0658  1683               	bsf	3,5	;RP0=1, select bank1
  8008  0659  1303               	bcf	3,6	;RP1=0, select bank1
  8009  065A  00AE               	movwf	(ISR@soma+1)^(0+128)
  8010  065B  1283               	bcf	3,5	;RP0=0, select bank0
  8011  065C  1303               	bcf	3,6	;RP1=0, select bank0
  8012  065D  0825               	movf	?___ftadd+2,w
  8013  065E  1683               	bsf	3,5	;RP0=1, select bank1
  8014  065F  1303               	bcf	3,6	;RP1=0, select bank1
  8015  0660  00AF               	movwf	(ISR@soma+2)^(0+128)
  8016  0661                     i1l3621:	
  8017                           
  8018                           ;main.c: 270: }
  8019                           ;main.c: 271: x += 1;
  8020  0661  3000               	movlw	0
  8021  0662  1283               	bcf	3,5	;RP0=0, select bank0
  8022  0663  1303               	bcf	3,6	;RP1=0, select bank0
  8023  0664  00A3               	movwf	___ftadd@f1
  8024  0665  3080               	movlw	128
  8025  0666  00A4               	movwf	___ftadd@f1+1
  8026  0667  303F               	movlw	63
  8027  0668  00A5               	movwf	___ftadd@f1+2
  8028  0669  1683               	bsf	3,5	;RP0=1, select bank1
  8029  066A  1303               	bcf	3,6	;RP1=0, select bank1
  8030  066B  0842               	movf	ISR@x^(0+128),w
  8031  066C  1283               	bcf	3,5	;RP0=0, select bank0
  8032  066D  1303               	bcf	3,6	;RP1=0, select bank0
  8033  066E  00A6               	movwf	___ftadd@f2
  8034  066F  1683               	bsf	3,5	;RP0=1, select bank1
  8035  0670  1303               	bcf	3,6	;RP1=0, select bank1
  8036  0671  0843               	movf	(ISR@x+1)^(0+128),w
  8037  0672  1283               	bcf	3,5	;RP0=0, select bank0
  8038  0673  1303               	bcf	3,6	;RP1=0, select bank0
  8039  0674  00A7               	movwf	___ftadd@f2+1
  8040  0675  1683               	bsf	3,5	;RP0=1, select bank1
  8041  0676  1303               	bcf	3,6	;RP1=0, select bank1
  8042  0677  0844               	movf	(ISR@x+2)^(0+128),w
  8043  0678  1283               	bcf	3,5	;RP0=0, select bank0
  8044  0679  1303               	bcf	3,6	;RP1=0, select bank0
  8045  067A  00A8               	movwf	___ftadd@f2+2
  8046  067B  120A  158A  25A1  120A  118A  	fcall	___ftadd
  8047  0680  1283               	bcf	3,5	;RP0=0, select bank0
  8048  0681  1303               	bcf	3,6	;RP1=0, select bank0
  8049  0682  0823               	movf	?___ftadd,w
  8050  0683  1683               	bsf	3,5	;RP0=1, select bank1
  8051  0684  1303               	bcf	3,6	;RP1=0, select bank1
  8052  0685  00C2               	movwf	ISR@x^(0+128)
  8053  0686  1283               	bcf	3,5	;RP0=0, select bank0
  8054  0687  1303               	bcf	3,6	;RP1=0, select bank0
  8055  0688  0824               	movf	?___ftadd+1,w
  8056  0689  1683               	bsf	3,5	;RP0=1, select bank1
  8057  068A  1303               	bcf	3,6	;RP1=0, select bank1
  8058  068B  00C3               	movwf	(ISR@x+1)^(0+128)
  8059  068C  1283               	bcf	3,5	;RP0=0, select bank0
  8060  068D  1303               	bcf	3,6	;RP1=0, select bank0
  8061  068E  0825               	movf	?___ftadd+2,w
  8062  068F  1683               	bsf	3,5	;RP0=1, select bank1
  8063  0690  1303               	bcf	3,6	;RP1=0, select bank1
  8064  0691  00C4               	movwf	(ISR@x+2)^(0+128)
  8065  0692  3001               	movlw	1
  8066  0693  07BE               	addwf	ISR@a_216^(0+128),f
  8067  0694  1803               	skipnc
  8068  0695  0ABF               	incf	(ISR@a_216+1)^(0+128),f
  8069  0696  3000               	movlw	0
  8070  0697  07BF               	addwf	(ISR@a_216+1)^(0+128),f
  8071  0698  083F               	movf	(ISR@a_216+1)^(0+128),w
  8072  0699  3A80               	xorlw	128
  8073  069A  00FF               	movwf	127
  8074  069B  3080               	movlw	128
  8075  069C  027F               	subwf	127,w
  8076  069D  1D03               	skipz
  8077  069E  2EA1               	goto	u493_25
  8078  069F  3010               	movlw	16
  8079  06A0  023E               	subwf	ISR@a_216^(0+128),w
  8080  06A1                     u493_25:	
  8081  06A1  1C03               	skipc
  8082  06A2  2C29               	goto	i1l123
  8083  06A3                     i1l3627:	
  8084                           
  8085                           ;main.c: 272: }
  8086                           ;main.c: 275: float reajuste = 0;
  8087  06A3  3000               	movlw	0
  8088  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  8089  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  8090  06A6  00A6               	movwf	ISR@reajuste^(0+128)
  8091  06A7  3000               	movlw	0
  8092  06A8  00A7               	movwf	(ISR@reajuste+1)^(0+128)
  8093  06A9  3000               	movlw	0
  8094  06AA  00A8               	movwf	(ISR@reajuste+2)^(0+128)
  8095                           
  8096                           ;main.c: 276: if (total_area != 0)
  8097  06AB  083A               	movf	(ISR@total_area+2)^(0+128),w
  8098  06AC  0439               	iorwf	(ISR@total_area+1)^(0+128),w
  8099  06AD  0438               	iorwf	ISR@total_area^(0+128),w
  8100  06AE  1903               	skipnz
  8101  06AF  2EE9               	goto	i1l3631
  8102                           
  8103                           ;main.c: 277: {
  8104                           ;main.c: 278: reajuste = soma / total_area;
  8105  06B0  0838               	movf	ISR@total_area^(0+128),w
  8106  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  8107  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  8108  06B3  00B0               	movwf	___ftdiv@f2
  8109  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  8110  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  8111  06B6  0839               	movf	(ISR@total_area+1)^(0+128),w
  8112  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  8113  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  8114  06B9  00B1               	movwf	___ftdiv@f2+1
  8115  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  8116  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  8117  06BC  083A               	movf	(ISR@total_area+2)^(0+128),w
  8118  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  8119  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  8120  06BF  00B2               	movwf	___ftdiv@f2+2
  8121  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  8122  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  8123  06C2  082D               	movf	ISR@soma^(0+128),w
  8124  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  8125  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  8126  06C5  00B3               	movwf	___ftdiv@f1
  8127  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  8128  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  8129  06C8  082E               	movf	(ISR@soma+1)^(0+128),w
  8130  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  8131  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  8132  06CB  00B4               	movwf	___ftdiv@f1+1
  8133  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  8134  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  8135  06CE  082F               	movf	(ISR@soma+2)^(0+128),w
  8136  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  8137  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  8138  06D1  00B5               	movwf	___ftdiv@f1+2
  8139  06D2  120A  158A  2416  120A  118A  	fcall	___ftdiv
  8140  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  8141  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  8142  06D9  0830               	movf	?___ftdiv,w
  8143  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  8144  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  8145  06DC  00A6               	movwf	ISR@reajuste^(0+128)
  8146  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  8147  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  8148  06DF  0831               	movf	?___ftdiv+1,w
  8149  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  8150  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  8151  06E2  00A7               	movwf	(ISR@reajuste+1)^(0+128)
  8152  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  8153  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  8154  06E5  0832               	movf	?___ftdiv+2,w
  8155  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  8156  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  8157  06E8  00A8               	movwf	(ISR@reajuste+2)^(0+128)
  8158  06E9                     i1l3631:	
  8159                           
  8160                           ;main.c: 279: }
  8161                           ;main.c: 282: pwm = maximo(minimo(pwm + ((int)minimo(reajuste, erro_atual)) * (setpoint 
      +                          > rpm ? 1 : -1), 1023), 0);
  8162  06E9  0859               	movf	(_setpoint+1)^(0+128),w
  8163  06EA  0257               	subwf	(_rpm+1)^(0+128),w
  8164  06EB  1D03               	skipz
  8165  06EC  2EEF               	goto	u495_25
  8166  06ED  0858               	movf	_setpoint^(0+128),w
  8167  06EE  0256               	subwf	_rpm^(0+128),w
  8168  06EF                     u495_25:	
  8169  06EF  1C03               	skipc
  8170  06F0  2EF5               	goto	i1l3635
  8171  06F1  30FF               	movlw	255
  8172  06F2  00A9               	movwf	_ISR$218^(0+128)
  8173  06F3  30FF               	movlw	255
  8174  06F4  2EF8               	goto	L1
  8175  06F5                     i1l3635:	
  8176  06F5  3001               	movlw	1
  8177  06F6  00A9               	movwf	_ISR$218^(0+128)
  8178  06F7  3000               	movlw	0
  8179  06F8                     L1:	
  8180  06F8  00AA               	movwf	(_ISR$218^(0+128)+1)
  8181  06F9  082A               	movf	(_ISR$218+1)^(0+128),w
  8182  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  8183  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  8184  06FC  01C3               	clrf	___wmul@multiplicand+1
  8185  06FD  07C3               	addwf	___wmul@multiplicand+1,f
  8186  06FE  1683               	bsf	3,5	;RP0=1, select bank1
  8187  06FF  1303               	bcf	3,6	;RP1=0, select bank1
  8188  0700  0829               	movf	_ISR$218^(0+128),w
  8189  0701  1283               	bcf	3,5	;RP0=0, select bank0
  8190  0702  1303               	bcf	3,6	;RP1=0, select bank0
  8191  0703  01C2               	clrf	___wmul@multiplicand
  8192  0704  07C2               	addwf	___wmul@multiplicand,f
  8193  0705  1683               	bsf	3,5	;RP0=1, select bank1
  8194  0706  1303               	bcf	3,6	;RP1=0, select bank1
  8195  0707  0851               	movf	(_erro_atual+1)^(0+128),w
  8196  0708  01F9               	clrf	___awtoft@c+1
  8197  0709  07F9               	addwf	___awtoft@c+1,f
  8198  070A  0850               	movf	_erro_atual^(0+128),w
  8199  070B  01F8               	clrf	___awtoft@c
  8200  070C  07F8               	addwf	___awtoft@c,f
  8201  070D  160A  118A  232D  120A  118A  	fcall	___awtoft
  8202  0712  0878               	movf	?___awtoft,w
  8203  0713  1283               	bcf	3,5	;RP0=0, select bank0
  8204  0714  1303               	bcf	3,6	;RP1=0, select bank0
  8205  0715  00A9               	movwf	minimo@b
  8206  0716  0879               	movf	?___awtoft+1,w
  8207  0717  00AA               	movwf	minimo@b+1
  8208  0718  087A               	movf	?___awtoft+2,w
  8209  0719  00AB               	movwf	minimo@b+2
  8210  071A  1683               	bsf	3,5	;RP0=1, select bank1
  8211  071B  1303               	bcf	3,6	;RP1=0, select bank1
  8212  071C  0826               	movf	ISR@reajuste^(0+128),w
  8213  071D  1283               	bcf	3,5	;RP0=0, select bank0
  8214  071E  1303               	bcf	3,6	;RP1=0, select bank0
  8215  071F  00A6               	movwf	minimo@a
  8216  0720  1683               	bsf	3,5	;RP0=1, select bank1
  8217  0721  1303               	bcf	3,6	;RP1=0, select bank1
  8218  0722  0827               	movf	(ISR@reajuste+1)^(0+128),w
  8219  0723  1283               	bcf	3,5	;RP0=0, select bank0
  8220  0724  1303               	bcf	3,6	;RP1=0, select bank0
  8221  0725  00A7               	movwf	minimo@a+1
  8222  0726  1683               	bsf	3,5	;RP0=1, select bank1
  8223  0727  1303               	bcf	3,6	;RP1=0, select bank1
  8224  0728  0828               	movf	(ISR@reajuste+2)^(0+128),w
  8225  0729  1283               	bcf	3,5	;RP0=0, select bank0
  8226  072A  1303               	bcf	3,6	;RP1=0, select bank0
  8227  072B  00A8               	movwf	minimo@a+2
  8228  072C  160A  118A  230F  120A  118A  	fcall	_minimo
  8229  0731  1283               	bcf	3,5	;RP0=0, select bank0
  8230  0732  1303               	bcf	3,6	;RP1=0, select bank0
  8231  0733  0826               	movf	?_minimo,w
  8232  0734  00B2               	movwf	___fttol@f1
  8233  0735  0827               	movf	?_minimo+1,w
  8234  0736  00B3               	movwf	___fttol@f1+1
  8235  0737  0828               	movf	?_minimo+2,w
  8236  0738  00B4               	movwf	___fttol@f1+2
  8237  0739  120A  158A  2060  120A  118A  	fcall	___fttol
  8238  073E  1283               	bcf	3,5	;RP0=0, select bank0
  8239  073F  1303               	bcf	3,6	;RP1=0, select bank0
  8240  0740  0833               	movf	?___fttol+1,w
  8241  0741  01C1               	clrf	___wmul@multiplier+1
  8242  0742  07C1               	addwf	___wmul@multiplier+1,f
  8243  0743  0832               	movf	?___fttol,w
  8244  0744  01C0               	clrf	___wmul@multiplier
  8245  0745  07C0               	addwf	___wmul@multiplier,f
  8246  0746  160A  118A  2393  120A  118A  	fcall	___wmul
  8247  074B  1683               	bsf	3,5	;RP0=1, select bank1
  8248  074C  1303               	bcf	3,6	;RP1=0, select bank1
  8249  074D  0854               	movf	_pwm^(0+128),w
  8250  074E  1283               	bcf	3,5	;RP0=0, select bank0
  8251  074F  1303               	bcf	3,6	;RP1=0, select bank0
  8252  0750  0740               	addwf	?___wmul,w
  8253  0751  00C6               	movwf	___lwtoft@c
  8254  0752  1683               	bsf	3,5	;RP0=1, select bank1
  8255  0753  1303               	bcf	3,6	;RP1=0, select bank1
  8256  0754  0855               	movf	(_pwm+1)^(0+128),w
  8257  0755  1803               	skipnc
  8258  0756  0A55               	incf	(_pwm+1)^(0+128),w
  8259  0757  1283               	bcf	3,5	;RP0=0, select bank0
  8260  0758  1303               	bcf	3,6	;RP1=0, select bank0
  8261  0759  0741               	addwf	?___wmul+1,w
  8262  075A  00C7               	movwf	___lwtoft@c+1
  8263  075B  160A  118A  22A2  120A  118A  	fcall	___lwtoft
  8264  0760  1283               	bcf	3,5	;RP0=0, select bank0
  8265  0761  1303               	bcf	3,6	;RP1=0, select bank0
  8266  0762  0846               	movf	?___lwtoft,w
  8267  0763  1683               	bsf	3,5	;RP0=1, select bank1
  8268  0764  1303               	bcf	3,6	;RP1=0, select bank1
  8269  0765  00A3               	movwf	_ISR$1637^(0+128)
  8270  0766  1283               	bcf	3,5	;RP0=0, select bank0
  8271  0767  1303               	bcf	3,6	;RP1=0, select bank0
  8272  0768  0847               	movf	?___lwtoft+1,w
  8273  0769  1683               	bsf	3,5	;RP0=1, select bank1
  8274  076A  1303               	bcf	3,6	;RP1=0, select bank1
  8275  076B  00A4               	movwf	(_ISR$1637+1)^(0+128)
  8276  076C  1283               	bcf	3,5	;RP0=0, select bank0
  8277  076D  1303               	bcf	3,6	;RP1=0, select bank0
  8278  076E  0848               	movf	?___lwtoft+2,w
  8279  076F  1683               	bsf	3,5	;RP0=1, select bank1
  8280  0770  1303               	bcf	3,6	;RP1=0, select bank1
  8281  0771  00A5               	movwf	(_ISR$1637+2)^(0+128)
  8282  0772  3000               	movlw	0
  8283  0773  1283               	bcf	3,5	;RP0=0, select bank0
  8284  0774  1303               	bcf	3,6	;RP1=0, select bank0
  8285  0775  00AF               	movwf	maximo@b
  8286  0776  3000               	movlw	0
  8287  0777  00B0               	movwf	maximo@b+1
  8288  0778  3000               	movlw	0
  8289  0779  00B1               	movwf	maximo@b+2
  8290  077A  30C0               	movlw	192
  8291  077B  00A9               	movwf	minimo@b
  8292  077C  307F               	movlw	127
  8293  077D  00AA               	movwf	minimo@b+1
  8294  077E  3044               	movlw	68
  8295  077F  00AB               	movwf	minimo@b+2
  8296  0780  1683               	bsf	3,5	;RP0=1, select bank1
  8297  0781  1303               	bcf	3,6	;RP1=0, select bank1
  8298  0782  0823               	movf	_ISR$1637^(0+128),w
  8299  0783  1283               	bcf	3,5	;RP0=0, select bank0
  8300  0784  1303               	bcf	3,6	;RP1=0, select bank0
  8301  0785  00A6               	movwf	minimo@a
  8302  0786  1683               	bsf	3,5	;RP0=1, select bank1
  8303  0787  1303               	bcf	3,6	;RP1=0, select bank1
  8304  0788  0824               	movf	(_ISR$1637+1)^(0+128),w
  8305  0789  1283               	bcf	3,5	;RP0=0, select bank0
  8306  078A  1303               	bcf	3,6	;RP1=0, select bank0
  8307  078B  00A7               	movwf	minimo@a+1
  8308  078C  1683               	bsf	3,5	;RP0=1, select bank1
  8309  078D  1303               	bcf	3,6	;RP1=0, select bank1
  8310  078E  0825               	movf	(_ISR$1637+2)^(0+128),w
  8311  078F  1283               	bcf	3,5	;RP0=0, select bank0
  8312  0790  1303               	bcf	3,6	;RP1=0, select bank0
  8313  0791  00A8               	movwf	minimo@a+2
  8314  0792  160A  118A  230F  120A  118A  	fcall	_minimo
  8315  0797  1283               	bcf	3,5	;RP0=0, select bank0
  8316  0798  1303               	bcf	3,6	;RP1=0, select bank0
  8317  0799  0826               	movf	?_minimo,w
  8318  079A  00AC               	movwf	maximo@a
  8319  079B  0827               	movf	?_minimo+1,w
  8320  079C  00AD               	movwf	maximo@a+1
  8321  079D  0828               	movf	?_minimo+2,w
  8322  079E  00AE               	movwf	maximo@a+2
  8323  079F  160A  118A  22F1  120A  118A  	fcall	_maximo
  8324  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  8325  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  8326  07A6  082C               	movf	?_maximo,w
  8327  07A7  00B2               	movwf	___fttol@f1
  8328  07A8  082D               	movf	?_maximo+1,w
  8329  07A9  00B3               	movwf	___fttol@f1+1
  8330  07AA  082E               	movf	?_maximo+2,w
  8331  07AB  00B4               	movwf	___fttol@f1+2
  8332  07AC  120A  158A  2060  120A  118A  	fcall	___fttol
  8333  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  8334  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  8335  07B3  0833               	movf	?___fttol+1,w
  8336  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  8337  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  8338  07B6  01D5               	clrf	(_pwm+1)^(0+128)
  8339  07B7  07D5               	addwf	(_pwm+1)^(0+128),f
  8340  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  8341  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  8342  07BA  0832               	movf	?___fttol,w
  8343  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  8344  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  8345  07BD  01D4               	clrf	_pwm^(0+128)
  8346  07BE  07D4               	addwf	_pwm^(0+128),f
  8347                           
  8348                           ;main.c: 284: PWM_DutyCycle2(pwm);
  8349  07BF  0855               	movf	(_pwm+1)^(0+128),w
  8350  07C0  01F1               	clrf	i1PWM_DutyCycle2@valor+1
  8351  07C1  07F1               	addwf	i1PWM_DutyCycle2@valor+1,f
  8352  07C2  0854               	movf	_pwm^(0+128),w
  8353  07C3  01F0               	clrf	i1PWM_DutyCycle2@valor
  8354  07C4  07F0               	addwf	i1PWM_DutyCycle2@valor,f
  8355  07C5  160A  118A  22BA  120A  118A  	fcall	i1_PWM_DutyCycle2
  8356                           
  8357                           ;main.c: 287: PORTBbits.RB6 = 0;
  8358  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  8359  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  8360  07CC  1306               	bcf	6,6	;volatile
  8361  07CD                     i1l3645:	
  8362                           
  8363                           ;main.c: 288: }
  8364                           ;main.c: 291: INTCONbits.T0IF = 0;
  8365  07CD  110B               	bcf	11,2	;volatile
  8366  07CE                     i1l3647:	
  8367                           
  8368                           ;main.c: 292: }
  8369                           ;main.c: 295: if (PIR1bits.TMR1IF)
  8370  07CE  180C               	btfsc	12,0	;volatile
  8371                           
  8372                           ;main.c: 296: {
  8373                           ;main.c: 300: PIR1bits.TMR1IF = 0;
  8374  07CF  100C               	bcf	12,0	;volatile
  8375  07D0  0867               	movf	??_ISR+5,w
  8376  07D1  00FF               	movwf	127
  8377  07D2  0866               	movf	??_ISR+4,w
  8378  07D3  008A               	movwf	10
  8379  07D4  0865               	movf	??_ISR+3,w
  8380  07D5  0084               	movwf	4
  8381  07D6  0E64               	swapf	(??_ISR+2)^0,w
  8382  07D7  0083               	movwf	3
  8383  07D8  0EFE               	swapf	126,f
  8384  07D9  0E7E               	swapf	126,w
  8385  07DA  0009               	retfie
  8386  07DB                     L18:	
  8387  07DB                     __end_of_ISR:	
  8388  07DB  120A  158A  29A3   	ljmp	i1l3513


Data Sizes:
    Strings     40
    Constant    0
    Data        2
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      78
    BANK1            80     37      58
    BANK3            96     26      74
    BANK2            96      0      96

Pointer List with Targets:

    USART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _trapmf->___awtoft
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    _minimo->___awtoft
    _maximo->___awtoft
    ___ftge->___bmul
    ___wmul->___awtoft
    ___lwtoft->___awtoft
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USART_ReceiveChar->_USART_WriteString
    _USART_WriteString->_USART_WriteChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->___ftmul
    _trapmf->___ftdiv
    ___ftdiv->___ftadd
    ___ftadd->___ftneg
    _minimo->___ftge
    _maximo->_minimo
    ___wmul->___fttol
    ___lwtoft->___wmul
    ___fttol->_maximo
    ___ftmul->_trapmf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1058
                                             23 BANK3      3     3      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                           _PWM_Init
                        _TIMER0_Init
                         _TIMER0_Set
                         _USART_Init
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     707
                                             15 BANK3      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     599
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Set                                           1     1      0      31
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle2                                       4     2      2     181
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_DutyCycle1                                       4     2      2     139
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 43    43      0   51995
                                             66 BANK0      6     6      0
                                              0 BANK1     37    37      0
                  _USART_ReceiveChar
                    _USART_WriteChar
                            ___awdiv
                            ___awmod
                           ___awtoft
                             ___bmul
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                                _abs
                             _maximo
                             _minimo
                             _trapmf
                   i1_PWM_DutyCycle2
                       i1_TIMER0_Set
 ---------------------------------------------------------------------------------
 (4) i1_TIMER0_Set                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) i1_PWM_DutyCycle2                                     4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _trapmf                                              18     3     15   17597
                                             32 BANK0     18     3     15
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     365
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2751
                                             16 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             13     7      6    6867
                                              3 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) _minimo                                               6     0      6    2528
                                              6 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (4) _maximo                                               6     0      6    2272
                                             12 BANK0      6     0      6
                           ___awtoft (ARG)
                             ___ftge
                                _abs (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                              12     6      6    1928
                                              4 COMMON     6     0      6
                                              0 BANK0      6     6      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1844
                                             32 BANK0      6     2      4
                  _USART_ReceiveChar (ARG)
                           ___awtoft (ARG)
                            ___fttol (ARG)
                            ___lwdiv (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    2173
                                             38 BANK0      4     1      3
                           ___awtoft (ARG)
                           ___ftpack
                            ___fttol (ARG)
                             ___wmul (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     508
                                             18 BANK0     14    10      4
                           ___awtoft (ARG)
                                _abs (ARG)
                             _maximo (ARG)
                             _minimo (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    3053
                                             50 BANK0     16    10      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _trapmf (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     560
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2754
                                              8 COMMON     6     3      3
                           ___ftpack
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2087
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1192
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1068
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _USART_ReceiveChar                                    2     2      0     121
                                              3 COMMON     2     2      0
                  _USART_WriteString
 ---------------------------------------------------------------------------------
 (5) _USART_WriteString                                    2     2      0      97
                                              1 COMMON     2     2      0
                    _USART_WriteChar
 ---------------------------------------------------------------------------------
 (4) _USART_WriteChar                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_DutyCycle1
   _PWM_DutyCycle2
   _PWM_Init
   _TIMER0_Init
   _TIMER0_Set
   _USART_Init
     ___aldiv

 _ISR (ROOT)
   _USART_ReceiveChar
     _USART_WriteString
       _USART_WriteChar
   _USART_WriteChar
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
     _abs (ARG)
   ___bmul
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
   ___ftge
     ___bmul (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___bmul (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
     ___ftpack (ARG)
     _trapmf (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___bmul (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___lwdiv
   ___lwtoft
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___wmul (ARG)
       _USART_ReceiveChar (ARG)
         _USART_WriteString
           _USART_WriteChar
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         _abs (ARG)
         _maximo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
           _minimo (ARG)
             ___awtoft (ARG)
               ___ftpack
               _abs (ARG)
             ___ftge (ARG)
               ___bmul (ARG)
             _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       ___lwdiv (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   ___wmul
     _USART_ReceiveChar (ARG)
       _USART_WriteString
         _USART_WriteChar
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___fttol (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       _abs (ARG)
       _maximo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
         _minimo (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
           ___ftge (ARG)
             ___bmul (ARG)
           _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     ___lwdiv (ARG)
     _maximo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
       _minimo (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___ftge (ARG)
           ___bmul (ARG)
         _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _abs
   _maximo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
     _minimo (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___ftge (ARG)
         ___bmul (ARG)
       _abs (ARG)
   _minimo
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     _abs (ARG)
   _trapmf
     ___awtoft (ARG)
       ___ftpack
       _abs (ARG)
     ___ftadd (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
       ___bmul (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
         ___bmul (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
             _abs (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
           _abs (ARG)
       ___ftpack (ARG)
     ___ftge (ARG)
       ___bmul (ARG)
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
         _abs (ARG)
   i1_PWM_DutyCycle2
   i1_TIMER0_Set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     1A      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      60      11      100.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     25      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     140      12        0.0%
ABS                  0      0     140       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Jun 02 00:24:52 2022

         ?i1_PWM_DutyCycle2 0070                           pc 0002              ___bmul@product 0072  
   __size_of_PWM_DutyCycle1 0021     __size_of_PWM_DutyCycle2 0021                 __CFG_CP$OFF 0000  
               _SSPSTATbits 0094                ___awdiv@sign 0076                          fsr 0004  
       ___wmul@multiplicand 0042          ??i1_PWM_DutyCycle2 0072                ___ftadd@exp1 002F  
              ___ftadd@exp2 002E               _contagens_tm0 00CC                ___ftadd@sign 002D  
                       l541 0900                         _PR2 0092                __CFG_CPD$OFF 0000  
                       _ISR 0A16                         _abs 126B                         _rpm 00D6  
                       fsr0 0004                         _pwm 00D4  __size_of_USART_WriteString 001C  
                       indf 0000                ___awmod@sign 0076                __CFG_FOSC$HS 0000  
              __CFG_LVP$OFF 0000                        ?_ISR 0070                ___ftdiv@cntr 003A  
                      ISR@a 00B0                        ISR@x 00C2                ___ftdiv@sign 003F  
                      ?_abs 0070                        l3013 15C3                        l2891 0966  
                      l2877 0921                        l2869 0911                        l2895 0974  
                      l2887 0959                        l2879 0931                        STR_1 1006  
                      u3625 07F3                        u3555 0925                        u3635 1401  
                      u3645 1363                        u3575 0933                        u3585 0948  
                      u3595 095A                        i1l92 0FF7                        _OERR 00C1  
                      u4977 15BC                        u4987 15CB                        _TMR0 0001  
                      _TMR1 000E                        abs@a 0070                        _main 1557  
              ___ftpack@arg 0070                ___ftpack@exp 0073                        btemp 007E  
                      ltemp 007E                        start 0012                        ttemp 007E  
                      wtemp 007E           ___bmul@multiplier 0073                ___ftmul@cntr 0060  
              ___ftmul@sign 0061     __end_of_USART_WriteChar 1246                       ??_ISR 0062  
              ___fttol@exp1 003F                       ??_abs 0072                ___fttol@lval 003B  
               ?_TIMER0_Set 0070             __end_of___aldiv 097D                       ?_main 0070  
           __end_of___awdiv 0860                       _EEADR 010D             __end_of___ftadd 0EAA  
             __CFG_WDTE$OFF 0000             __end_of___awmod 148E             __end_of___ftdiv 0CCE  
           __end_of___ftneg 1260             __end_of___ftmul 0DA1             ___awdiv@divisor 0070  
                     _T1CON 0010             __end_of___fttol 08EE             __end_of___lwdiv 13F6  
                     i1l123 0429                       i1l162 123F                       i1l482 139F  
                     i1l653 153E                       i1l647 1525                       i1l676 0E49  
           ___awdiv@counter 0075                       _RCREG 001A                       _TMR1H 000F  
                     _TMR1L 000E                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019               __CFG_PWRTE$ON 0000               ___awtoft@sign 007D  
             ___ftpack@sign 0074              __CFG_BOREN$OFF 0000                       pclath 000A  
          __end_of_PWM_Init 1393                       ltemp0 007E                       ltemp1 0082  
                     ltemp2 0086                       ltemp3 0080                       ttemp0 007E  
                     ttemp1 0081                       ttemp2 0084                       ttemp3 0087  
                     ttemp4 007F                       status 0003                       wtemp0 007E  
                     wtemp1 0080                       wtemp2 0082                       wtemp3 0084  
                     wtemp4 0086                       wtemp5 0088                       wtemp6 007F  
               ?_USART_Init 01CF       i1TIMER0_Set@contagens 0070             __initialization 0015  
              __end_of_main 15D2                      ??_main 01D7               ___fttol@sign1 003A  
              ?_TIMER0_Init 0070                      _ADRESH 001E                      _ADRESL 009E  
                    _EEDATA 010C                      _CCPR1L 0015                      _CCPR2L 001B  
                    _EECON2 018D            ___awdiv@dividend 0072            __end_of___awtoft 134E  
          __end_of___ftpack 1557                      i1l2001 152A                      i1l2003 1534  
                    i1l2019 12D6                      i1l2145 0C44                      i1l2139 0C2E  
                    i1l2501 0D3B                      i1l2263 129F                      i1l2255 1293  
                    i1l2423 0859                      i1l2415 0846                      i1l2407 0822  
                    i1l2183 14E0                      i1l2167 0CA8                      i1l2159 0C89  
                    i1l2409 0830                      i1l2513 0D63                      i1l2505 0D4B  
                    i1l3401 0E90                      i1l2419 0851                      i1l2435 144B  
                    i1l2179 14B7                      i1l2461 1487                      i1l2453 1474  
                    i1l2373 1281                      i1l2517 0D73                      i1l2533 087A  
                    i1l2357 1397                      i1l3341 0DCA                      i1l2391 080F  
                    i1l2447 1458                      i1l2439 1452                      i1l2551 08AC  
                    i1l3351 0DE0                      i1l3423 0F55                      i1l2449 1466  
                    i1l2457 147F                      i1l2473 1337                      i1l2369 127B  
                    i1l2561 08D4                      i1l2553 08BC                      i1l3345 0DD1  
                    i1l3417 0F23                      i1l3513 09A3                      i1l3441 0A3F  
                    i1l2483 0CE6                      i1l2563 08D7                      i1l3371 0E1B  
                    i1l3363 0DFA                      i1l3523 0BC0                      i1l3451 0A5E  
                    i1l2397 081A                      i1l2581 13C0                      i1l3381 0E39  
                    i1l3373 0E20                      i1l3429 0FDA                      i1l3621 0661  
                    i1l3517 0B7E                      i1l2567 08E5                      i1l2559 08C9  
                    i1l2583 13CE                      i1l3391 0E6D                      i1l3383 0E45  
                    i1l3375 0E24                      i1l3631 06E9                      i1l3615 05A0  
                    i1l3543 0101                      i1l2489 0CFC                      i1l2593 13EF  
                    i1l3369 0E0F                      i1l3609 04DF                      i1l3387 0E5B  
                    i1l3635 06F5                      i1l3627 06A3                      i1l3539 0076  
                    i1l2589 13E4                      i1l3565 020A                      i1l3549 0143  
                    i1l3645 07CD                      i1l1991 14FE                      i1l3591 03C6  
                    i1l3575 02D7                      i1l3647 07CE                      i1l1993 150A  
                    i1l3569 0295                      i1l1995 150F                      i1l1987 14F7  
                    i1l3587 033B                      i1l3597 0408                      u301_25 0881  
                    u311_25 13C3                      u240_21 14AA                      u240_22 14AB  
                    u240_23 14B0                      u240_24 14B1                      u304_25 08AD  
                    u313_25 13CF                      u233_25 0C56                      u242_21 14D3  
                    u242_22 14D4                      u242_23 14D9                      u242_24 14DA  
                    u314_25 13DB                      u234_25 0C68                      u307_25 08CB  
                    u315_25 13E5                      u235_25 0C8A                      u236_25 0C9B  
                    u261_25 13A0                      u237_25 0CA9                      u317_25 12CB  
                    u262_25 13A7                      u271_25 0831                      u191_25 152D  
                    u272_25 083D                      u440_25 0DFB                      u273_25 0847  
                    u281_25 146C            __end_of___lwtoft 12BA                      u282_25 1475  
                    u194_25 1545                      u187_25 1503                      u443_25 0E10  
                    u292_25 0D4C                      u269_25 0825                      u189_25 151E  
                    u293_25 0D54         __size_of_TIMER0_Set 0008                      u446_25 0E25  
                    u470_25 0BCB                      u279_25 145B                      u471_25 0BD8  
                    u288_25 0D08                      u472_25 0BE5                      u297_25 0D74  
                    u289_25 0D1A                      u449_25 0E3A                      u481_25 02D5  
                    u473_25 0074                      u298_25 0D7C                      u490_25 04F7  
                    u482_25 02E2                      u466_25 16AC                      u491_25 05AB  
                    u483_25 0339                      u475_25 0141                      u467_25 099F  
                    u492_25 05B8                      u476_25 014E                      u493_25 06A1  
                    u485_25 0406                      u477_25 015B                      u469_25 0BBE  
                    u486_25 0427                      u478_25 0168                      u495_25 06EF  
                    u479_25 0208                      u488_25 0436                      u489_25 04EA  
                    _SSPADD 0093                      _SSPBUF 0013                      ___bmul 1279  
                    ___ftge 148E                   ??___aldiv 01C8                      _rBaixo 0190  
                    ___wmul 1393                   ??___awdiv 0074                   ??___ftadd 0029  
            _PWM_DutyCycle1 134E              _PWM_DutyCycle2 07DE                   ??___awmod 0074  
          ?_USART_WriteChar 0070                   ??___ftdiv 0036                   ??___ftneg 007E  
                    _rMedio 0140                   ??___ftmul 0058                   ??___fttol 0036  
                 ??___lwdiv 0074                      _buffer 00C5                      _maximo 12F1  
                    _minimo 130F            ___awdiv@quotient 0077             ___awmod@divisor 0070  
     USART_ReceiveChar@byte 0074             ___awmod@counter 0075                      _trapmf 0EAA  
                    _pulsos 00D2       ___ftmul@f3_as_product 005D                      saved_w 007E  
       __size_of_USART_Init 004B               ?i1_TIMER0_Set 0070     __end_of__initialization 0041  
                ___ftadd@f1 0023                  ___ftadd@f2 0026                  ___ftge@ff1 0074  
                ___ftge@ff2 0077                  ___ftdiv@f1 0033                  ___ftdiv@f2 0030  
                ___ftdiv@f3 003B                  ___ftneg@f1 0020                  ___awtoft@c 0078  
       ___bmul@multiplicand 0070      __end_of_PWM_DutyCycle1 136F      __end_of_PWM_DutyCycle2 07FF  
                ___ftmul@f1 0052                  ___ftmul@f2 0055                  ___fttol@f1 0032  
            __pcstackCOMMON 0070                __pidataBANK1 0803               _erro_anterior 00CE  
             ISR@total_area 00B8                  ___lwtoft@c 0046                   ?_PWM_Init 0070  
            _OPTION_REGbits 0081                 ISR@reajuste 00A6   __size_ofi1_PWM_DutyCycle2 001B  
            ??i1_TIMER0_Set 0070                  __pbssBANK0 0068                  __pbssBANK1 00C5  
                __pbssBANK2 0110                  __pbssBANK3 0190                   ISR@rpmAux 00C0  
                   ISR@soma 00AD                     ISR@rule 00BB             ?_PWM_DutyCycle1 01C0  
           ?_PWM_DutyCycle2 01C0                  __pmaintext 1557                     ?___bmul 0070  
                   ?___ftge 0074                     ?___wmul 0040                  __pintentry 0004  
              ??_TIMER0_Set 01C0                     _CCP1CON 0017                     _CCP2CON 001D  
                   ?_maximo 002C                     ?_minimo 0026                   ?___awtoft 0078  
                 ?___ftpack 0070                     ?_trapmf 0040                  ??_PWM_Init 01C0  
                 ?___lwtoft 0046                     _ISR$218 00A9        __size_of_TIMER0_Init 000B  
                   _SSPCON2 0091                  __stringtab 1000          __end_of_TIMER0_Set 124E  
              ??_USART_Init 01D3                     ___aldiv 08EE             __size_of___bmul 0011  
           __size_of___ftge 0061                     ___awdiv 0805                     ___ftadd 0DA1  
                   ___awmod 1441                     ___ftdiv 0C16                     ___ftneg 1256  
           __size_of___wmul 0025                     ___ftmul 0CCE                     ___fttol 0860  
                _erro_atual 00D0                     ___lwdiv 13B8                  ??___awtoft 007B  
                ??___ftpack 0075                     _rGrande 0110             __size_of_maximo 001E  
           __size_of_minimo 001E                     __ptext1 13F6                     __ptext2 08EE  
                   __ptext3 1246                     __ptext4 1260                     __ptext5 136F  
                   __ptext6 07DE                     __ptext7 134E                     __ptext8 0A16  
                   __ptext9 1238                  ??___lwtoft 0049             __size_of_trapmf 0156  
              __size_of_ISR FDC5                   _T1CONbits 0010                   _T2CONbits 0012  
              __size_of_abs 000E            ___awmod@dividend 0072            ___aldiv@dividend 01C4  
        __end_of_USART_Init 1441                     clrloop0 124F        end_of_initialization 0041  
                   maximo@a 002C                     maximo@b 002F                     minimo@a 0026  
                   minimo@b 0029                   _RCSTAbits 0018            ___aldiv@quotient 01CB  
                   psplit$0 170030                     psplit$1 300031                     psplit$2 310032  
                   psplit$3 320033                     psplit$4 330034                     psplit$5 340035  
                   psplit$6 350036                     psplit$7 360037                     trapmf@a 0043  
                   trapmf@b 0046                     trapmf@c 0049                     trapmf@d 004C  
                   trapmf@x 0040        __end_ofi1_TIMER0_Set 123E                   _PORTBbits 0006  
                 _PORTEbits 0009            i1_PWM_DutyCycle2 12BA                _contador_rb6 0068  
       PWM_DutyCycle1@valor 01C0         PWM_DutyCycle2@valor 01C0                 _CCP1CONbits 0017  
               ___ftdiv@exp 003E                 _CCP2CONbits 001D                   _TXSTAbits 0098  
               ___ftmul@exp 005C              __end_of___bmul 128A              __end_of___ftge 14EF  
            __end_of___wmul 13B8              __end_of_maximo 130F              __end_of_minimo 132D  
            __end_of_trapmf 1000    __size_of_USART_WriteChar 0008           __size_of_PWM_Init 0024  
       start_initialization 0015                 __end_of_ISR 07DB                 __end_of_abs 1279  
         pnum$text8_split_1 0030           pnum$text8_split_2 0031           pnum$text8_split_3 0032  
         pnum$text8_split_4 0033           pnum$text8_split_5 0034           pnum$text8_split_6 0035  
         pnum$text8_split_7 0036           pnum$text8_split_8 0037            ??_PWM_DutyCycle1 01C2  
          ??_PWM_DutyCycle2 01C2           _USART_ReceiveChar 128A                    ??___bmul 0071  
                  ??___ftge 0020          ?_USART_ReceiveChar 0070                    ??___wmul 007E  
               __pdataBANK1 00D8                    ??_maximo 007E                    ??_minimo 007E  
                  ??_trapmf 007E         ??_USART_ReceiveChar 0073           __size_of___awtoft 0021  
         __size_of___ftpack 0068                   ___latbits 0002           __size_of___lwtoft 0018  
             __pcstackBANK0 0020               __pcstackBANK1 00A0               __pcstackBANK3 01C0  
       __end_of__stringdata 102E                    ISR@a_211 00B2                    ISR@a_212 00B4  
                  ISR@a_213 00B6                    ISR@a_216 00BE   __end_of_USART_ReceiveChar 12A2  
                  ISR@delta 00AB       __size_ofi1_TIMER0_Set 0006            ___lwdiv@dividend 0072  
       TIMER0_Set@contagens 01C0                    ?___aldiv 01C0                    ?___awdiv 0070  
                  ?___ftadd 0023                    ?___awmod 0070                    ?___ftdiv 0030  
                  ?___ftneg 0020                    ?___ftmul 0052                    ?___fttol 0032  
                  ?___lwdiv 0070                   __pstrings 1000               ??_TIMER0_Init 01C0  
        USART_Init@BaudRate 01CF            ___lwdiv@quotient 0075                    _ISR$1636 00A0  
                  _ISR$1637 00A3           ??_USART_WriteChar 0070                i1_TIMER0_Set 1238  
              _receiveIndex 006A             ___aldiv@divisor 01C0           interrupt_function 0004  
           ___aldiv@counter 01C9              ___wmul@product 0044                   clear_ram0 124E  
                  _PIE1bits 008C                    _PIE2bits 008D                    _PIR1bits 000C  
                  _PIR2bits 000D    __end_ofi1_PWM_DutyCycle2 12D5                   _tempo_rb6 006C  
                _ADCON0bits 001F                 __stringbase 1005                  _ADCON1bits 009F  
               __stringdata 1006                    _PWM_Init 136F           ___wmul@multiplier 0040  
       __end_of_TIMER0_Init 126B  __size_of_USART_ReceiveChar 0018                  _EECON1bits 018C  
          __size_of___aldiv 008F            __size_of___awdiv 005B            __size_of___ftadd 0109  
          __size_of___awmod 004D            __size_of___ftdiv 00B8            __size_of___ftneg 000A  
          __size_of___ftmul 00D3            __size_of___fttol 008E            __size_of___lwdiv 003E  
                  ___awtoft 132D                    ___ftpack 14EF          __end_of__stringtab 1006  
                  ___lwtoft 12A2             ___lwdiv@divisor 0070             ___lwdiv@counter 0077  
         _USART_WriteString 12D5                    __ptext10 12BA                    __ptext11 0EAA  
                  __ptext20 12A2                    __ptext12 1256                    __ptext21 13B8  
                  __ptext13 0C16                    __ptext30 12D5                    __ptext22 0860  
                  __ptext14 0DA1                    __ptext31 123E                    __ptext23 0CCE  
                  __ptext15 130F                    __ptext24 1279                    __ptext16 12F1  
                  __ptext25 132D                    __ptext17 148E                    __ptext26 14EF  
                  __ptext18 126B                    __ptext27 1441                    __ptext19 1393  
                  __ptext28 0805                    __ptext29 128A          ?_USART_WriteString 0070  
             __size_of_main 007B                   pnum$text8 0017         USART_WriteChar@byte 0070  
       ??_USART_WriteString 0071                    _setpoint 00D8                 _TIMER0_Init 1260  
                _INTCONbits 000B   __end_of_USART_WriteString 12F1                    intlevel1 0000  
                 stringcode 1000        USART_WriteString@str 0072                  _TIMER0_Set 1246  
                  trapmf@ua 004F             _USART_WriteChar 123E                    stringdir 1000  
                  stringtab 1000                ___aldiv@sign 01CA                 _SSPCON2bits 0091  
     i1PWM_DutyCycle2@valor 0070                  _SSPCONbits 0014                  _USART_Init 13F6  
